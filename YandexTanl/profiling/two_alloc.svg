<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (5,393 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2,898 samples, 53.74%)</title><rect x="10.0" y="723.0" width="634.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (27 samples, 0.50%)</title><rect x="10.0" y="707.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (27 samples, 0.50%)</title><rect x="10.0" y="691.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (27 samples, 0.50%)</title><rect x="10.0" y="675.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.50%)</title><rect x="10.0" y="659.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.50%)</title><rect x="10.0" y="643.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (27 samples, 0.50%)</title><rect x="10.0" y="627.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.50%)</title><rect x="10.0" y="611.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (27 samples, 0.50%)</title><rect x="10.0" y="595.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (27 samples, 0.50%)</title><rect x="10.0" y="579.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.50%)</title><rect x="10.0" y="563.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (27 samples, 0.50%)</title><rect x="10.0" y="547.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (27 samples, 0.50%)</title><rect x="10.0" y="531.0" width="5.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,871 samples, 53.24%)</title><rect x="15.9" y="707.0" width="628.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.9" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,871 samples, 53.24%)</title><rect x="15.9" y="691.0" width="628.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.9" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,056 samples, 38.12%)</title><rect x="15.9" y="675.0" width="449.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.9" y="686.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (533 samples, 9.88%)</title><rect x="15.9" y="659.0" width="116.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.9" y="670.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (368 samples, 6.82%)</title><rect x="15.9" y="643.0" width="80.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.9" y="654.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.apply (367 samples, 6.81%)</title><rect x="16.1" y="627.0" width="80.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.1" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (367 samples, 6.81%)</title><rect x="16.1" y="611.0" width="80.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.1" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (367 samples, 6.81%)</title><rect x="16.1" y="595.0" width="80.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="606.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="16.1" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="16.1" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.get$Lambda (3 samples, 0.06%)</title><rect x="16.1" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$182 (3 samples, 0.06%)</title><rect x="16.1" y="531.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.07%)</title><rect x="16.8" y="579.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.07%)</title><rect x="16.8" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.04%)</title><rect x="16.8" y="547.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="19.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="17.2" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="17.2" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="17.2" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.17%)</title><rect x="17.7" y="579.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.17%)</title><rect x="17.7" y="563.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (8 samples, 0.15%)</title><rect x="17.7" y="547.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="20.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (339 samples, 6.29%)</title><rect x="19.6" y="579.0" width="74.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.6" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (339 samples, 6.29%)</title><rect x="19.6" y="563.0" width="74.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.6" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (339 samples, 6.29%)</title><rect x="19.6" y="547.0" width="74.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.6" y="558.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="19.6" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="19.6" y="515.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.get$Lambda (2 samples, 0.04%)</title><rect x="19.6" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$136 (2 samples, 0.04%)</title><rect x="19.6" y="483.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.get$Lambda (3 samples, 0.06%)</title><rect x="20.1" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$168 (3 samples, 0.06%)</title><rect x="20.1" y="483.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="23.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (230 samples, 4.26%)</title><rect x="20.7" y="531.0" width="50.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.7" y="542.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (230 samples, 4.26%)</title><rect x="20.7" y="515.0" width="50.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.7" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (228 samples, 4.23%)</title><rect x="20.7" y="499.0" width="49.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.7" y="510.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.apply (228 samples, 4.23%)</title><rect x="20.7" y="483.0" width="49.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.7" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (228 samples, 4.23%)</title><rect x="20.7" y="467.0" width="49.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.7" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (228 samples, 4.23%)</title><rect x="20.7" y="451.0" width="49.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.7" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.apply (228 samples, 4.23%)</title><rect x="20.7" y="435.0" width="49.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.7" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (228 samples, 4.23%)</title><rect x="20.7" y="419.0" width="49.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.7" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.07%)</title><rect x="20.9" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.07%)</title><rect x="20.9" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (3 samples, 0.06%)</title><rect x="20.9" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="23.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.15%)</title><rect x="21.8" y="403.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.15%)</title><rect x="21.8" y="387.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (5 samples, 0.09%)</title><rect x="21.8" y="371.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="24.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="22.9" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="22.9" y="355.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="22.9" y="339.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="25.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (215 samples, 3.99%)</title><rect x="23.6" y="403.0" width="47.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.6" y="414.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="23.6" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="23.6" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$180/1471231340.get$Lambda (3 samples, 0.06%)</title><rect x="23.6" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$180 (3 samples, 0.06%)</title><rect x="23.6" y="339.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (177 samples, 3.28%)</title><rect x="24.2" y="387.0" width="38.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.2" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (177 samples, 3.28%)</title><rect x="24.2" y="371.0" width="38.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.2" y="382.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.apply (172 samples, 3.19%)</title><rect x="24.2" y="355.0" width="37.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.2" y="366.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (172 samples, 3.19%)</title><rect x="24.2" y="339.0" width="37.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.2" y="350.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="24.4" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="24.4" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.4" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.04%)</title><rect x="24.4" y="291.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="27.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="24.9" y="323.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="27.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.11%)</title><rect x="26.0" y="323.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (3 samples, 0.06%)</title><rect x="26.0" y="307.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="29.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="26.6" y="307.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.06%)</title><rect x="26.6" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.06%)</title><rect x="26.6" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.06%)</title><rect x="26.6" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.06%)</title><rect x="26.6" y="243.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (3 samples, 0.06%)</title><rect x="26.6" y="227.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="29.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (4 samples, 0.07%)</title><rect x="27.3" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.07%)</title><rect x="27.3" y="307.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.04%)</title><rect x="27.3" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.04%)</title><rect x="27.3" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="27.3" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (2 samples, 0.04%)</title><rect x="27.3" y="243.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="30.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.04%)</title><rect x="27.7" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.04%)</title><rect x="27.7" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (154 samples, 2.86%)</title><rect x="28.2" y="323.0" width="33.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.2" y="334.0">jd..</text>
</g>
<g>
<title>java/lang/Long.toString (4 samples, 0.07%)</title><rect x="28.4" y="307.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.4" y="318.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="28.4" y="291.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="31.4" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (12 samples, 0.22%)</title><rect x="29.3" y="307.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (12 samples, 0.22%)</title><rect x="29.3" y="291.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (12 samples, 0.22%)</title><rect x="29.3" y="275.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.3" y="286.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="29.3" y="259.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="32.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="31.9" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="318.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="31.9" y="291.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="302.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="31.9" y="275.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="34.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10 samples, 0.19%)</title><rect x="33.2" y="307.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.2" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.19%)</title><rect x="33.2" y="291.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="36.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.19%)</title><rect x="33.2" y="275.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.2" y="286.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="33.2" y="259.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="36.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.06%)</title><rect x="35.4" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.06%)</title><rect x="35.4" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.4" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.06%)</title><rect x="35.4" y="275.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="38.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (95 samples, 1.76%)</title><rect x="36.3" y="307.0" width="20.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.3" y="318.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (2 samples, 0.04%)</title><rect x="36.3" y="291.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="36.3" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="36.3" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.3" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.get$Lambda (2 samples, 0.04%)</title><rect x="36.3" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.3" y="254.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$193 (2 samples, 0.04%)</title><rect x="36.3" y="227.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="39.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (43 samples, 0.80%)</title><rect x="36.7" y="291.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (28 samples, 0.52%)</title><rect x="36.7" y="275.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (28 samples, 0.52%)</title><rect x="36.7" y="259.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.7" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (28 samples, 0.52%)</title><rect x="36.7" y="243.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (28 samples, 0.52%)</title><rect x="36.7" y="227.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.7" y="238.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.52%)</title><rect x="36.7" y="211.0" width="6.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="39.7" y="222.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.07%)</title><rect x="42.8" y="275.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.07%)</title><rect x="42.8" y="259.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.8" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (4 samples, 0.07%)</title><rect x="42.8" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (4 samples, 0.07%)</title><rect x="42.8" y="227.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="45.8" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (3 samples, 0.06%)</title><rect x="43.7" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.7" y="286.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (2 samples, 0.04%)</title><rect x="43.7" y="259.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="46.7" y="270.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.test (8 samples, 0.15%)</title><rect x="44.4" y="275.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (8 samples, 0.15%)</title><rect x="44.4" y="259.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$91/2013559698.test (8 samples, 0.15%)</title><rect x="44.4" y="243.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (8 samples, 0.15%)</title><rect x="44.4" y="227.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$80/1582071873.test (8 samples, 0.15%)</title><rect x="44.4" y="211.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (8 samples, 0.15%)</title><rect x="44.4" y="195.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/1616974404.test (8 samples, 0.15%)</title><rect x="44.4" y="179.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (8 samples, 0.15%)</title><rect x="44.4" y="163.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.4" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.15%)</title><rect x="44.4" y="147.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.15%)</title><rect x="44.4" y="131.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="44.4" y="115.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="47.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.11%)</title><rect x="44.8" y="115.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.8" y="126.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="44.8" y="99.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="47.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (50 samples, 0.93%)</title><rect x="46.1" y="291.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.1" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (50 samples, 0.93%)</title><rect x="46.1" y="275.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (50 samples, 0.93%)</title><rect x="46.1" y="259.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.1" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.15%)</title><rect x="46.3" y="243.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="49.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="48.3" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="48.3" y="227.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.3" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (3 samples, 0.06%)</title><rect x="48.3" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.3" y="222.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.06%)</title><rect x="48.3" y="195.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="51.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (5 samples, 0.09%)</title><rect x="48.9" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (5 samples, 0.09%)</title><rect x="48.9" y="227.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="51.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (30 samples, 0.56%)</title><rect x="50.0" y="243.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.0" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (30 samples, 0.56%)</title><rect x="50.0" y="227.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.0" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (30 samples, 0.56%)</title><rect x="50.0" y="211.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="50.0" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="50.0" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.0" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (3 samples, 0.06%)</title><rect x="50.0" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.0" y="174.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (3 samples, 0.06%)</title><rect x="50.0" y="147.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="53.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (10 samples, 0.19%)</title><rect x="50.9" y="195.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.9" y="206.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (10 samples, 0.19%)</title><rect x="50.9" y="179.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (6 samples, 0.11%)</title><rect x="50.9" y="163.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.11%)</title><rect x="50.9" y="147.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.11%)</title><rect x="50.9" y="131.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="53.9" y="142.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.07%)</title><rect x="52.2" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.2" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.07%)</title><rect x="52.2" y="147.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="55.2" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.30%)</title><rect x="53.1" y="195.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.1" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.30%)</title><rect x="53.1" y="179.0" width="3.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="56.1" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="56.6" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.6" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.04%)</title><rect x="56.6" y="227.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="59.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (6 samples, 0.11%)</title><rect x="57.0" y="307.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="57.0" y="291.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.11%)</title><rect x="57.0" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (6 samples, 0.11%)</title><rect x="57.0" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="57.0" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.06%)</title><rect x="57.0" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.06%)</title><rect x="57.0" y="211.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="60.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.06%)</title><rect x="57.7" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="60.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.06%)</title><rect x="57.7" y="211.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.7" y="222.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="57.7" y="195.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="60.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (6 samples, 0.11%)</title><rect x="58.4" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (6 samples, 0.11%)</title><rect x="58.4" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="58.4" y="275.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.11%)</title><rect x="58.4" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (6 samples, 0.11%)</title><rect x="58.4" y="243.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="58.4" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.09%)</title><rect x="58.6" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.09%)</title><rect x="58.6" y="195.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.6" y="206.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="58.6" y="179.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="61.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (10 samples, 0.19%)</title><rect x="59.7" y="307.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.7" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="59.7" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="62.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="60.1" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.1" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="60.1" y="275.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="63.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.11%)</title><rect x="60.5" y="291.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.5" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.11%)</title><rect x="60.5" y="275.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="63.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="61.9" y="355.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="61.9" y="339.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="61.9" y="323.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="64.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (6 samples, 0.11%)</title><rect x="63.0" y="387.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="66.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (29 samples, 0.54%)</title><rect x="64.3" y="387.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="64.3" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="64.3" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$171/518686497.get$Lambda (2 samples, 0.04%)</title><rect x="64.3" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$171 (2 samples, 0.04%)</title><rect x="64.3" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="67.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (4 samples, 0.07%)</title><rect x="64.7" y="371.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="67.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (2 samples, 0.04%)</title><rect x="65.6" y="371.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="68.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (2 samples, 0.04%)</title><rect x="66.0" y="371.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="69.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.11%)</title><rect x="66.5" y="371.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.11%)</title><rect x="66.5" y="355.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.11%)</title><rect x="66.5" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.11%)</title><rect x="66.5" y="323.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.11%)</title><rect x="66.5" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.11%)</title><rect x="66.5" y="291.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (6 samples, 0.11%)</title><rect x="66.5" y="275.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.11%)</title><rect x="66.5" y="259.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.11%)</title><rect x="66.5" y="243.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.04%)</title><rect x="66.7" y="227.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="69.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="67.1" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="67.1" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (3 samples, 0.06%)</title><rect x="67.1" y="195.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="70.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (8 samples, 0.15%)</title><rect x="67.8" y="371.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.8" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.07%)</title><rect x="67.8" y="355.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="70.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="68.6" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.6" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="68.6" y="339.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.6" y="350.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="68.6" y="323.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="71.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (5 samples, 0.09%)</title><rect x="69.5" y="371.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="69.5" y="355.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="72.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="70.6" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="70.6" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="70.6" y="467.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="73.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.09%)</title><rect x="71.0" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.09%)</title><rect x="71.0" y="515.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="71.3" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="71.3" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="71.3" y="467.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="74.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (99 samples, 1.84%)</title><rect x="72.1" y="531.0" width="21.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.1" y="542.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="72.1" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="72.1" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/264389024.get$Lambda (3 samples, 0.06%)</title><rect x="72.1" y="483.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$166 (3 samples, 0.06%)</title><rect x="72.1" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="75.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="72.8" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="72.8" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="72.8" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="72.8" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="72.8" y="451.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="75.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.07%)</title><rect x="73.2" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.07%)</title><rect x="73.2" y="499.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="73.2" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="73.2" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="73.2" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (90 samples, 1.67%)</title><rect x="74.1" y="515.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (90 samples, 1.67%)</title><rect x="74.1" y="499.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (7 samples, 0.13%)</title><rect x="74.1" y="483.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="77.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (82 samples, 1.52%)</title><rect x="75.6" y="483.0" width="18.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.6" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList (2 samples, 0.04%)</title><rect x="75.6" y="467.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="78.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="76.1" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="76.1" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$143/1736276502.get$Lambda (2 samples, 0.04%)</title><rect x="76.1" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$143 (2 samples, 0.04%)</title><rect x="76.1" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="79.1" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.06%)</title><rect x="76.5" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.5" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.06%)</title><rect x="76.5" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.5" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.06%)</title><rect x="76.5" y="435.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="79.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (3 samples, 0.06%)</title><rect x="77.2" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="80.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (5 samples, 0.09%)</title><rect x="77.8" y="467.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="80.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (7 samples, 0.13%)</title><rect x="78.9" y="467.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="81.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="80.5" y="467.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="83.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (30 samples, 0.56%)</title><rect x="81.3" y="467.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="81.8" y="451.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="81.8" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$163/1240991028.get$Lambda (3 samples, 0.06%)</title><rect x="81.8" y="419.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$163 (3 samples, 0.06%)</title><rect x="81.8" y="403.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="84.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.get$Lambda (2 samples, 0.04%)</title><rect x="82.4" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$164 (2 samples, 0.04%)</title><rect x="82.4" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="85.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (4 samples, 0.07%)</title><rect x="82.9" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (4 samples, 0.07%)</title><rect x="82.9" y="435.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="85.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (3 samples, 0.06%)</title><rect x="83.7" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="86.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.11%)</title><rect x="84.4" y="451.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="87.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (10 samples, 0.19%)</title><rect x="85.7" y="451.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (4 samples, 0.07%)</title><rect x="85.7" y="435.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="88.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (5 samples, 0.09%)</title><rect x="86.8" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (3 samples, 0.06%)</title><rect x="87.0" y="419.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="90.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (18 samples, 0.33%)</title><rect x="87.9" y="467.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="87.9" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="87.9" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$145/187565277.get$Lambda (2 samples, 0.04%)</title><rect x="87.9" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$$Lambda$145 (2 samples, 0.04%)</title><rect x="87.9" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="90.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (3 samples, 0.06%)</title><rect x="88.3" y="451.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="91.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (2 samples, 0.04%)</title><rect x="89.2" y="451.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="92.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (10 samples, 0.19%)</title><rect x="89.6" y="451.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (2 samples, 0.04%)</title><rect x="89.6" y="435.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="92.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (3 samples, 0.06%)</title><rect x="90.1" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="93.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (3 samples, 0.06%)</title><rect x="90.7" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object (3 samples, 0.06%)</title><rect x="90.7" y="419.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="93.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.04%)</title><rect x="91.4" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (8 samples, 0.15%)</title><rect x="91.8" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1043351526.linkToTargetMethod (3 samples, 0.06%)</title><rect x="91.8" y="451.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="91.8" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.get$Lambda (3 samples, 0.06%)</title><rect x="91.8" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$146 (3 samples, 0.06%)</title><rect x="91.8" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="94.8" y="414.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.09%)</title><rect x="92.5" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.run (5 samples, 0.09%)</title><rect x="92.5" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.09%)</title><rect x="92.5" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.5" y="430.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.09%)</title><rect x="92.5" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.5" y="414.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.07%)</title><rect x="92.7" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.7" y="398.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.07%)</title><rect x="92.7" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.07%)</title><rect x="92.7" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.07%)</title><rect x="92.7" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.7" y="350.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (4 samples, 0.07%)</title><rect x="92.7" y="323.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="95.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (6 samples, 0.11%)</title><rect x="93.8" y="579.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="96.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.11%)</title><rect x="93.8" y="563.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.11%)</title><rect x="93.8" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="96.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.11%)</title><rect x="93.8" y="531.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="96.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (6 samples, 0.11%)</title><rect x="95.1" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (3 samples, 0.06%)</title><rect x="95.1" y="563.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="98.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (3 samples, 0.06%)</title><rect x="95.8" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (3 samples, 0.06%)</title><rect x="95.8" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.8" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="95.8" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.8" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.06%)</title><rect x="95.8" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="95.8" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="95.8" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.06%)</title><rect x="95.8" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.06%)</title><rect x="95.8" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.06%)</title><rect x="95.8" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.06%)</title><rect x="95.8" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.8" y="430.0"></text>
</g>
<g>
<title>java.time.Instant (3 samples, 0.06%)</title><rect x="95.8" y="403.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="98.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (165 samples, 3.06%)</title><rect x="96.4" y="643.0" width="36.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.4" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (165 samples, 3.06%)</title><rect x="96.4" y="627.0" width="36.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.4" y="638.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (152 samples, 2.82%)</title><rect x="96.4" y="611.0" width="33.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.4" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (152 samples, 2.82%)</title><rect x="96.4" y="595.0" width="33.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.4" y="606.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (152 samples, 2.82%)</title><rect x="96.4" y="579.0" width="33.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.4" y="590.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (152 samples, 2.82%)</title><rect x="96.4" y="563.0" width="33.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.4" y="574.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (101 samples, 1.87%)</title><rect x="96.4" y="547.0" width="22.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.4" y="558.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (101 samples, 1.87%)</title><rect x="96.4" y="531.0" width="22.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.4" y="542.0">o..</text>
</g>
<g>
<title>byte[] (101 samples, 1.87%)</title><rect x="96.4" y="515.0" width="22.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="99.4" y="526.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (51 samples, 0.95%)</title><rect x="118.5" y="547.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.5" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (51 samples, 0.95%)</title><rect x="118.5" y="531.0" width="11.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="121.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (13 samples, 0.24%)</title><rect x="129.7" y="611.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (13 samples, 0.24%)</title><rect x="129.7" y="595.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (13 samples, 0.24%)</title><rect x="129.7" y="579.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.24%)</title><rect x="129.7" y="563.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.24%)</title><rect x="129.7" y="547.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="132.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get (1,523 samples, 28.24%)</title><rect x="132.5" y="659.0" width="333.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.5" y="670.0">ru/mail/polis/service/ivanovandrey/BasicFucti..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$put$1 (1,523 samples, 28.24%)</title><rect x="132.5" y="643.0" width="333.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.5" y="654.0">ru/mail/polis/service/ivanovandrey/BasicFucti..</text>
</g>
<g>
<title>java/lang/String.getBytes (75 samples, 1.39%)</title><rect x="132.5" y="627.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (75 samples, 1.39%)</title><rect x="132.5" y="611.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (75 samples, 1.39%)</title><rect x="132.5" y="595.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (75 samples, 1.39%)</title><rect x="132.5" y="579.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.5" y="590.0"></text>
</g>
<g>
<title>byte[] (75 samples, 1.39%)</title><rect x="132.5" y="563.0" width="16.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="135.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (163 samples, 3.02%)</title><rect x="148.9" y="627.0" width="35.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.9" y="638.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (163 samples, 3.02%)</title><rect x="148.9" y="611.0" width="35.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.9" y="622.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (163 samples, 3.02%)</title><rect x="148.9" y="595.0" width="35.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="151.9" y="606.0">jav..</text>
</g>
<g>
<title>one.nio.http.Response (38 samples, 0.70%)</title><rect x="184.6" y="627.0" width="8.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="187.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (145 samples, 2.69%)</title><rect x="192.9" y="627.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.9" y="638.0">on..</text>
</g>
<g>
<title>byte[] (57 samples, 1.06%)</title><rect x="192.9" y="611.0" width="12.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="195.9" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (61 samples, 1.13%)</title><rect x="205.4" y="611.0" width="13.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="208.4" y="622.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.50%)</title><rect x="218.7" y="611.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="221.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsertWithTimestamp (1,102 samples, 20.43%)</title><rect x="224.6" y="627.0" width="241.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.6" y="638.0">ru/mail/polis/dao/RocksDBImpl.up..</text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (215 samples, 3.99%)</title><rect x="224.6" y="611.0" width="47.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.6" y="622.0">ru/m..</text>
</g>
<g>
<title>byte[] (215 samples, 3.99%)</title><rect x="224.6" y="595.0" width="47.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="227.6" y="606.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampData (594 samples, 11.01%)</title><rect x="271.7" y="611.0" width="130.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.7" y="622.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (275 samples, 5.10%)</title><rect x="271.7" y="595.0" width="60.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.7" y="606.0">java/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (275 samples, 5.10%)</title><rect x="271.7" y="579.0" width="60.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.7" y="590.0">java/n..</text>
</g>
<g>
<title>byte[] (275 samples, 5.10%)</title><rect x="271.7" y="563.0" width="60.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="274.7" y="574.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (319 samples, 5.92%)</title><rect x="331.9" y="595.0" width="69.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.9" y="606.0">ru/mail..</text>
</g>
<g>
<title>byte[] (319 samples, 5.92%)</title><rect x="331.9" y="579.0" width="69.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="334.9" y="590.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (262 samples, 4.86%)</title><rect x="401.7" y="611.0" width="57.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.7" y="622.0">ru/mai..</text>
</g>
<g>
<title>byte[] (262 samples, 4.86%)</title><rect x="401.7" y="595.0" width="57.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="404.7" y="606.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.toArrayShifted (31 samples, 0.57%)</title><rect x="459.0" y="611.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (31 samples, 0.57%)</title><rect x="459.0" y="595.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.0" y="606.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.57%)</title><rect x="459.0" y="579.0" width="6.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="462.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (298 samples, 5.53%)</title><rect x="465.8" y="675.0" width="65.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.8" y="686.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (298 samples, 5.53%)</title><rect x="465.8" y="659.0" width="65.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.8" y="670.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (79 samples, 1.46%)</title><rect x="465.8" y="643.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (79 samples, 1.46%)</title><rect x="465.8" y="627.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (79 samples, 1.46%)</title><rect x="465.8" y="611.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (79 samples, 1.46%)</title><rect x="465.8" y="595.0" width="17.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (50 samples, 0.93%)</title><rect x="465.8" y="579.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (50 samples, 0.93%)</title><rect x="465.8" y="563.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (50 samples, 0.93%)</title><rect x="465.8" y="547.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (50 samples, 0.93%)</title><rect x="465.8" y="531.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (36 samples, 0.67%)</title><rect x="465.8" y="515.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.8" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (36 samples, 0.67%)</title><rect x="465.8" y="499.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.8" y="510.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.67%)</title><rect x="465.8" y="483.0" width="7.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="468.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (14 samples, 0.26%)</title><rect x="473.6" y="515.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.6" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (14 samples, 0.26%)</title><rect x="473.6" y="499.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="476.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (29 samples, 0.54%)</title><rect x="476.7" y="579.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (29 samples, 0.54%)</title><rect x="476.7" y="563.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (29 samples, 0.54%)</title><rect x="476.7" y="547.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.54%)</title><rect x="476.7" y="531.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.54%)</title><rect x="476.7" y="515.0" width="6.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="479.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.apply (88 samples, 1.63%)</title><rect x="483.1" y="643.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$sendToReplicas$2 (88 samples, 1.63%)</title><rect x="483.1" y="627.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.formFinalResponse (88 samples, 1.63%)</title><rect x="483.1" y="611.0" width="19.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.1" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (31 samples, 0.57%)</title><rect x="483.1" y="595.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (12 samples, 0.22%)</title><rect x="483.1" y="579.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.1" y="590.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (12 samples, 0.22%)</title><rect x="483.1" y="563.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.1" y="574.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (12 samples, 0.22%)</title><rect x="483.1" y="547.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="486.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (19 samples, 0.35%)</title><rect x="485.7" y="579.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.7" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (19 samples, 0.35%)</title><rect x="485.7" y="563.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="488.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (15 samples, 0.28%)</title><rect x="489.8" y="595.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.28%)</title><rect x="489.8" y="579.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (15 samples, 0.28%)</title><rect x="489.8" y="563.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (8 samples, 0.15%)</title><rect x="489.8" y="547.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (8 samples, 0.15%)</title><rect x="489.8" y="531.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="492.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (7 samples, 0.13%)</title><rect x="491.6" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (7 samples, 0.13%)</title><rect x="491.6" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.6" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.13%)</title><rect x="491.6" y="515.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.6" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.13%)</title><rect x="491.6" y="499.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="494.6" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.20%)</title><rect x="493.1" y="595.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="496.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 0.57%)</title><rect x="495.5" y="595.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.5" y="606.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.30%)</title><rect x="495.5" y="579.0" width="3.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="498.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.17%)</title><rect x="499.0" y="579.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="502.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="501.0" y="579.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="504.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology$$Lambda$133/1116379785.apply (131 samples, 2.43%)</title><rect x="502.3" y="643.0" width="28.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.3" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.lambda$forwardRequest$0 (131 samples, 2.43%)</title><rect x="502.3" y="627.0" width="28.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.3" y="638.0">ru..</text>
</g>
<g>
<title>java/lang/String.valueOf (43 samples, 0.80%)</title><rect x="502.3" y="611.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (43 samples, 0.80%)</title><rect x="502.3" y="595.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.3" y="606.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.43%)</title><rect x="502.3" y="579.0" width="5.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="505.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.37%)</title><rect x="507.3" y="579.0" width="4.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="510.3" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (16 samples, 0.30%)</title><rect x="511.7" y="611.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="514.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (72 samples, 1.34%)</title><rect x="515.2" y="611.0" width="15.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.2" y="622.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.54%)</title><rect x="515.2" y="595.0" width="6.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="518.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.52%)</title><rect x="521.6" y="595.0" width="6.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="524.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.28%)</title><rect x="527.7" y="595.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="530.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (95 samples, 1.76%)</title><rect x="531.0" y="675.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (87 samples, 1.61%)</title><rect x="531.0" y="659.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (87 samples, 1.61%)</title><rect x="531.0" y="643.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (87 samples, 1.61%)</title><rect x="531.0" y="627.0" width="19.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (87 samples, 1.61%)</title><rect x="531.0" y="611.0" width="19.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="534.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 0.15%)</title><rect x="550.0" y="659.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.15%)</title><rect x="550.0" y="643.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.15%)</title><rect x="550.0" y="627.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.15%)</title><rect x="550.0" y="611.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="553.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.run (96 samples, 1.78%)</title><rect x="551.8" y="675.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.8" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (96 samples, 1.78%)</title><rect x="551.8" y="659.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.8" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (96 samples, 1.78%)</title><rect x="551.8" y="643.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.8" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (96 samples, 1.78%)</title><rect x="551.8" y="627.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.8" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (96 samples, 1.78%)</title><rect x="551.8" y="611.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.8" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (96 samples, 1.78%)</title><rect x="551.8" y="595.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (96 samples, 1.78%)</title><rect x="551.8" y="579.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.8" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (96 samples, 1.78%)</title><rect x="551.8" y="563.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (96 samples, 1.78%)</title><rect x="551.8" y="547.0" width="21.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (96 samples, 1.78%)</title><rect x="551.8" y="531.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.8" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (96 samples, 1.78%)</title><rect x="551.8" y="515.0" width="21.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.8" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (89 samples, 1.65%)</title><rect x="551.8" y="499.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (88 samples, 1.63%)</title><rect x="552.0" y="483.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.06%)</title><rect x="552.0" y="467.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="555.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (85 samples, 1.58%)</title><rect x="552.6" y="467.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (85 samples, 1.58%)</title><rect x="552.6" y="451.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (85 samples, 1.58%)</title><rect x="552.6" y="435.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (16 samples, 0.30%)</title><rect x="552.6" y="419.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.09%)</title><rect x="552.6" y="403.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="555.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.apply (11 samples, 0.20%)</title><rect x="553.7" y="403.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (11 samples, 0.20%)</title><rect x="553.7" y="387.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (11 samples, 0.20%)</title><rect x="553.7" y="371.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.7" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.04%)</title><rect x="553.7" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.7" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.04%)</title><rect x="553.7" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.7" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.04%)</title><rect x="553.7" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="556.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (9 samples, 0.17%)</title><rect x="554.2" y="355.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (8 samples, 0.15%)</title><rect x="554.4" y="339.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.15%)</title><rect x="554.4" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.09%)</title><rect x="554.4" y="307.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="557.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="555.5" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="555.5" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="555.5" y="275.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="558.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (69 samples, 1.28%)</title><rect x="556.1" y="419.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (69 samples, 1.28%)</title><rect x="556.1" y="403.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.apply (69 samples, 1.28%)</title><rect x="556.1" y="387.0" width="15.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (69 samples, 1.28%)</title><rect x="556.1" y="371.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (69 samples, 1.28%)</title><rect x="556.1" y="355.0" width="15.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.apply (69 samples, 1.28%)</title><rect x="556.1" y="339.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (69 samples, 1.28%)</title><rect x="556.1" y="323.0" width="15.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.15%)</title><rect x="556.3" y="307.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.15%)</title><rect x="556.3" y="291.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6 samples, 0.11%)</title><rect x="556.3" y="275.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="559.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="557.7" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="557.7" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="557.7" y="243.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="560.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (60 samples, 1.11%)</title><rect x="558.1" y="307.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (25 samples, 0.46%)</title><rect x="558.1" y="291.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (25 samples, 0.46%)</title><rect x="558.1" y="275.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (25 samples, 0.46%)</title><rect x="558.1" y="259.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1949249014.accept (8 samples, 0.15%)</title><rect x="558.1" y="243.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (8 samples, 0.15%)</title><rect x="558.1" y="227.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="561.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (8 samples, 0.15%)</title><rect x="558.1" y="211.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (7 samples, 0.13%)</title><rect x="558.3" y="195.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.13%)</title><rect x="558.3" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.07%)</title><rect x="558.3" y="163.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="561.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="559.2" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.06%)</title><rect x="559.2" y="147.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="559.2" y="131.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="562.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$198/537816286.accept (8 samples, 0.15%)</title><rect x="559.8" y="243.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (8 samples, 0.15%)</title><rect x="559.8" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (8 samples, 0.15%)</title><rect x="559.8" y="211.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (8 samples, 0.15%)</title><rect x="559.8" y="195.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (8 samples, 0.15%)</title><rect x="559.8" y="179.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.15%)</title><rect x="559.8" y="163.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.15%)</title><rect x="559.8" y="147.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.15%)</title><rect x="559.8" y="131.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.15%)</title><rect x="559.8" y="115.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="562.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (8 samples, 0.15%)</title><rect x="559.8" y="99.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (3 samples, 0.06%)</title><rect x="559.8" y="83.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.06%)</title><rect x="559.8" y="67.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.8" y="78.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (3 samples, 0.06%)</title><rect x="559.8" y="51.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="562.8" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.09%)</title><rect x="560.5" y="83.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.09%)</title><rect x="560.5" y="67.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.5" y="78.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.07%)</title><rect x="560.5" y="51.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.5" y="62.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.07%)</title><rect x="560.5" y="35.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="563.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.17%)</title><rect x="561.6" y="243.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.17%)</title><rect x="561.6" y="227.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.17%)</title><rect x="561.6" y="211.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="564.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (35 samples, 0.65%)</title><rect x="563.6" y="291.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (2 samples, 0.04%)</title><rect x="563.6" y="275.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="566.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (3 samples, 0.06%)</title><rect x="564.0" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.06%)</title><rect x="564.0" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="564.0" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="567.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (30 samples, 0.56%)</title><rect x="564.7" y="275.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (14 samples, 0.26%)</title><rect x="564.9" y="259.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.06%)</title><rect x="564.9" y="243.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.9" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (3 samples, 0.06%)</title><rect x="564.9" y="227.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="567.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (3 samples, 0.06%)</title><rect x="565.5" y="243.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="568.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (8 samples, 0.15%)</title><rect x="566.2" y="243.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (3 samples, 0.06%)</title><rect x="566.4" y="227.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="569.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.06%)</title><rect x="567.3" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.04%)</title><rect x="567.5" y="211.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="570.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (15 samples, 0.28%)</title><rect x="567.9" y="259.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="567.9" y="243.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="570.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.15%)</title><rect x="568.4" y="243.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.4" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.15%)</title><rect x="568.4" y="227.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.4" y="238.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.15%)</title><rect x="568.4" y="211.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="571.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.09%)</title><rect x="570.1" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.1" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.09%)</title><rect x="570.1" y="227.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.09%)</title><rect x="570.1" y="211.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.09%)</title><rect x="570.1" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.09%)</title><rect x="570.1" y="179.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.1" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.09%)</title><rect x="570.1" y="163.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="573.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (7 samples, 0.13%)</title><rect x="571.2" y="499.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (7 samples, 0.13%)</title><rect x="571.2" y="483.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (7 samples, 0.13%)</title><rect x="571.2" y="467.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (7 samples, 0.13%)</title><rect x="571.2" y="451.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (7 samples, 0.13%)</title><rect x="571.2" y="435.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.2" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.13%)</title><rect x="571.2" y="419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.2" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.04%)</title><rect x="571.2" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.2" y="414.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (2 samples, 0.04%)</title><rect x="571.2" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="574.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (5 samples, 0.09%)</title><rect x="571.7" y="403.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.7" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (5 samples, 0.09%)</title><rect x="571.7" y="387.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="574.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (326 samples, 6.04%)</title><rect x="572.8" y="675.0" width="71.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.8" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (326 samples, 6.04%)</title><rect x="572.8" y="659.0" width="71.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.8" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (240 samples, 4.45%)</title><rect x="572.8" y="643.0" width="52.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.8" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (240 samples, 4.45%)</title><rect x="572.8" y="627.0" width="52.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.8" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (240 samples, 4.45%)</title><rect x="572.8" y="611.0" width="52.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.8" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3 samples, 0.06%)</title><rect x="572.8" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3 samples, 0.06%)</title><rect x="572.8" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.06%)</title><rect x="572.8" y="563.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.06%)</title><rect x="572.8" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.04%)</title><rect x="573.0" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="573.0" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="573.0" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (2 samples, 0.04%)</title><rect x="573.0" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (2 samples, 0.04%)</title><rect x="573.0" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="576.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (237 samples, 4.39%)</title><rect x="573.4" y="595.0" width="51.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.4" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (237 samples, 4.39%)</title><rect x="573.4" y="579.0" width="51.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.4" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (237 samples, 4.39%)</title><rect x="573.4" y="563.0" width="51.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.4" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (237 samples, 4.39%)</title><rect x="573.4" y="547.0" width="51.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.4" y="558.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (109 samples, 2.02%)</title><rect x="573.4" y="531.0" width="23.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.4" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (109 samples, 2.02%)</title><rect x="573.4" y="515.0" width="23.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (109 samples, 2.02%)</title><rect x="573.4" y="499.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (109 samples, 2.02%)</title><rect x="573.4" y="483.0" width="23.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.4" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (109 samples, 2.02%)</title><rect x="573.4" y="467.0" width="23.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.4" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (109 samples, 2.02%)</title><rect x="573.4" y="451.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.4" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (109 samples, 2.02%)</title><rect x="573.4" y="435.0" width="23.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.4" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (109 samples, 2.02%)</title><rect x="573.4" y="419.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (109 samples, 2.02%)</title><rect x="573.4" y="403.0" width="23.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (108 samples, 2.00%)</title><rect x="573.4" y="387.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.4" y="398.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3 samples, 0.06%)</title><rect x="573.4" y="371.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="576.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.apply (96 samples, 1.78%)</title><rect x="574.1" y="371.0" width="21.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.1" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (96 samples, 1.78%)</title><rect x="574.1" y="355.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.1" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (6 samples, 0.11%)</title><rect x="574.1" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.11%)</title><rect x="574.1" y="323.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.1" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.09%)</title><rect x="574.1" y="307.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="577.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (90 samples, 1.67%)</title><rect x="575.4" y="339.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.07%)</title><rect x="575.6" y="323.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.07%)</title><rect x="575.6" y="307.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.07%)</title><rect x="575.6" y="291.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="578.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (85 samples, 1.58%)</title><rect x="576.5" y="323.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.5" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$123/285631240.apply (7 samples, 0.13%)</title><rect x="576.5" y="307.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="579.5" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (7 samples, 0.13%)</title><rect x="576.5" y="291.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.5" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (7 samples, 0.13%)</title><rect x="576.5" y="275.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (7 samples, 0.13%)</title><rect x="576.5" y="259.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.5" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.07%)</title><rect x="576.5" y="243.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="579.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="577.4" y="243.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="580.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (78 samples, 1.45%)</title><rect x="578.0" y="307.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2017647512.linkToTargetMethod (4 samples, 0.07%)</title><rect x="578.2" y="291.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1812561793.invokeStatic (4 samples, 0.07%)</title><rect x="578.2" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.get$Lambda (4 samples, 0.07%)</title><rect x="578.2" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$212 (4 samples, 0.07%)</title><rect x="578.2" y="243.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="581.2" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (15 samples, 0.28%)</title><rect x="579.1" y="291.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.06%)</title><rect x="579.1" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.06%)</title><rect x="579.1" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.1" y="270.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.06%)</title><rect x="579.1" y="243.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="582.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.13%)</title><rect x="579.8" y="275.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.13%)</title><rect x="579.8" y="259.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.8" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.13%)</title><rect x="579.8" y="243.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.8" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.07%)</title><rect x="579.8" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.8" y="238.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (4 samples, 0.07%)</title><rect x="579.8" y="211.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (4 samples, 0.07%)</title><rect x="579.8" y="195.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.8" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (4 samples, 0.07%)</title><rect x="579.8" y="179.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="582.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.04%)</title><rect x="580.9" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.04%)</title><rect x="580.9" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.9" y="222.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.04%)</title><rect x="580.9" y="195.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.9" y="206.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.04%)</title><rect x="580.9" y="179.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="583.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (5 samples, 0.09%)</title><rect x="581.3" y="275.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.3" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (5 samples, 0.09%)</title><rect x="581.3" y="259.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="584.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.15%)</title><rect x="582.4" y="291.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="582.4" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.06%)</title><rect x="582.4" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="585.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.09%)</title><rect x="583.0" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.09%)</title><rect x="583.0" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.09%)</title><rect x="583.0" y="243.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="586.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (5 samples, 0.09%)</title><rect x="584.4" y="291.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="587.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.06%)</title><rect x="585.4" y="291.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="588.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (3 samples, 0.06%)</title><rect x="585.4" y="275.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="588.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 0.76%)</title><rect x="586.1" y="291.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.run (41 samples, 0.76%)</title><rect x="586.1" y="275.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (41 samples, 0.76%)</title><rect x="586.1" y="259.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="586.1" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="586.1" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/173548741.get$Lambda (3 samples, 0.06%)</title><rect x="586.3" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (3 samples, 0.06%)</title><rect x="586.3" y="195.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="589.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.11%)</title><rect x="587.0" y="243.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.11%)</title><rect x="587.0" y="227.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="587.2" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="587.2" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="587.2" y="179.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="590.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (5 samples, 0.09%)</title><rect x="588.3" y="243.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="591.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (3 samples, 0.06%)</title><rect x="589.4" y="243.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.06%)</title><rect x="589.4" y="227.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="592.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.09%)</title><rect x="590.0" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (5 samples, 0.09%)</title><rect x="590.0" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.09%)</title><rect x="590.0" y="211.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.09%)</title><rect x="590.0" y="195.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.09%)</title><rect x="590.0" y="179.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.07%)</title><rect x="590.0" y="163.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="593.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.04%)</title><rect x="591.1" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="591.1" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (2 samples, 0.04%)</title><rect x="591.1" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="591.1" y="195.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (16 samples, 0.30%)</title><rect x="591.6" y="243.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (2 samples, 0.04%)</title><rect x="591.6" y="227.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="594.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (14 samples, 0.26%)</title><rect x="592.0" y="227.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.26%)</title><rect x="592.0" y="211.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (14 samples, 0.26%)</title><rect x="592.0" y="195.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.26%)</title><rect x="592.0" y="179.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.24%)</title><rect x="592.2" y="163.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.24%)</title><rect x="592.2" y="147.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.2" y="158.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.24%)</title><rect x="592.2" y="131.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="595.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.apply (9 samples, 0.17%)</title><rect x="595.1" y="371.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (9 samples, 0.17%)</title><rect x="595.1" y="355.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (5 samples, 0.09%)</title><rect x="595.1" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (5 samples, 0.09%)</title><rect x="595.1" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.1" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (5 samples, 0.09%)</title><rect x="595.1" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="598.1" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (5 samples, 0.09%)</title><rect x="595.1" y="291.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="598.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.07%)</title><rect x="596.2" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="596.2" y="323.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (128 samples, 2.37%)</title><rect x="597.3" y="531.0" width="28.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.3" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (8 samples, 0.15%)</title><rect x="597.3" y="515.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.15%)</title><rect x="597.3" y="499.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.3" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.15%)</title><rect x="597.3" y="483.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.3" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.15%)</title><rect x="597.3" y="467.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.15%)</title><rect x="597.3" y="451.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.3" y="462.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.15%)</title><rect x="597.3" y="435.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="600.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (12 samples, 0.22%)</title><rect x="599.2" y="515.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="599.5" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="599.5" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="602.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="599.5" y="467.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.5" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="599.5" y="451.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="602.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="600.3" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.3" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.07%)</title><rect x="600.3" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.3" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="600.3" y="467.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="603.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.06%)</title><rect x="601.2" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.2" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="601.2" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.06%)</title><rect x="601.2" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.2" y="478.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="601.2" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="604.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (37 samples, 0.69%)</title><rect x="601.9" y="515.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (37 samples, 0.69%)</title><rect x="601.9" y="499.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (37 samples, 0.69%)</title><rect x="601.9" y="483.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.9" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.04%)</title><rect x="601.9" y="467.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="604.9" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="602.3" y="467.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="605.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.07%)</title><rect x="603.0" y="467.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="606.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="604.0" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="604.0" y="451.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (5 samples, 0.09%)</title><rect x="604.0" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.0" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (5 samples, 0.09%)</title><rect x="604.0" y="419.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="607.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (19 samples, 0.35%)</title><rect x="605.4" y="467.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.4" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (19 samples, 0.35%)</title><rect x="605.4" y="451.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.35%)</title><rect x="605.4" y="435.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.11%)</title><rect x="605.4" y="419.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (6 samples, 0.11%)</title><rect x="605.4" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.11%)</title><rect x="605.4" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.11%)</title><rect x="605.4" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.11%)</title><rect x="605.4" y="355.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.11%)</title><rect x="605.4" y="339.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.11%)</title><rect x="605.4" y="323.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.11%)</title><rect x="605.4" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.11%)</title><rect x="605.4" y="291.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="608.4" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (7 samples, 0.13%)</title><rect x="606.7" y="419.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.7" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (7 samples, 0.13%)</title><rect x="606.7" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.7" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (2 samples, 0.04%)</title><rect x="606.7" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="606.7" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="606.7" y="355.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (5 samples, 0.09%)</title><rect x="607.1" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.1" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (5 samples, 0.09%)</title><rect x="607.1" y="371.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="610.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.11%)</title><rect x="608.2" y="419.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.11%)</title><rect x="608.2" y="403.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="611.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="609.5" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.04%)</title><rect x="609.5" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="612.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (70 samples, 1.30%)</title><rect x="610.0" y="515.0" width="15.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.0" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.06%)</title><rect x="610.0" y="499.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="613.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="610.6" y="499.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.6" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.11%)</title><rect x="610.6" y="483.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.6" y="494.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="610.6" y="467.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="613.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.20%)</title><rect x="611.9" y="499.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.20%)</title><rect x="611.9" y="483.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.06%)</title><rect x="611.9" y="467.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="614.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.15%)</title><rect x="612.6" y="467.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.6" y="478.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.15%)</title><rect x="612.6" y="451.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="615.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (50 samples, 0.93%)</title><rect x="614.3" y="499.0" width="11.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.3" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.22%)</title><rect x="614.3" y="483.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.22%)</title><rect x="614.3" y="467.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="614.3" y="451.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="617.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.15%)</title><rect x="615.2" y="451.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.2" y="462.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.15%)</title><rect x="615.2" y="435.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="618.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.15%)</title><rect x="617.0" y="483.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (8 samples, 0.15%)</title><rect x="617.0" y="467.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.0" y="478.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="617.0" y="451.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="620.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.06%)</title><rect x="618.1" y="451.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="621.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.trim (10 samples, 0.19%)</title><rect x="618.7" y="483.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (10 samples, 0.19%)</title><rect x="618.7" y="467.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.19%)</title><rect x="618.7" y="451.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="618.7" y="435.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="621.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="620.0" y="435.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.0" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="620.0" y="419.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="623.0" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.17%)</title><rect x="620.9" y="483.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.17%)</title><rect x="620.9" y="467.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.17%)</title><rect x="620.9" y="451.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.17%)</title><rect x="620.9" y="435.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="623.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.17%)</title><rect x="620.9" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.17%)</title><rect x="620.9" y="403.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.9" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (11 samples, 0.20%)</title><rect x="622.9" y="483.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.07%)</title><rect x="622.9" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.9" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4 samples, 0.07%)</title><rect x="622.9" y="451.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="625.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.09%)</title><rect x="623.7" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.7" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (5 samples, 0.09%)</title><rect x="623.7" y="451.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="626.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$205/782105492.apply (2 samples, 0.04%)</title><rect x="624.8" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.04%)</title><rect x="624.8" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="624.8" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="627.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (86 samples, 1.59%)</title><rect x="625.3" y="643.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (86 samples, 1.59%)</title><rect x="625.3" y="627.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (86 samples, 1.59%)</title><rect x="625.3" y="611.0" width="18.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (86 samples, 1.59%)</title><rect x="625.3" y="595.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (86 samples, 1.59%)</title><rect x="625.3" y="579.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (86 samples, 1.59%)</title><rect x="625.3" y="563.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.04%)</title><rect x="625.5" y="547.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="628.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="625.9" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="625.9" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (2 samples, 0.04%)</title><rect x="625.9" y="515.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="628.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (80 samples, 1.48%)</title><rect x="626.6" y="547.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (80 samples, 1.48%)</title><rect x="626.6" y="531.0" width="17.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.run (28 samples, 0.52%)</title><rect x="626.6" y="515.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (28 samples, 0.52%)</title><rect x="626.6" y="499.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (28 samples, 0.52%)</title><rect x="626.6" y="483.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9 samples, 0.17%)</title><rect x="626.6" y="467.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.6" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.13%)</title><rect x="626.6" y="451.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.6" y="462.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.06%)</title><rect x="626.6" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.6" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.06%)</title><rect x="626.6" y="419.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="629.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.07%)</title><rect x="627.2" y="435.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.2" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.07%)</title><rect x="627.2" y="419.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="630.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="628.1" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="628.1" y="435.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="628.1" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (2 samples, 0.04%)</title><rect x="628.1" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.04%)</title><rect x="628.1" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="631.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (19 samples, 0.35%)</title><rect x="628.6" y="467.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (19 samples, 0.35%)</title><rect x="628.6" y="451.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (10 samples, 0.19%)</title><rect x="628.6" y="435.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.6" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.04%)</title><rect x="628.8" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.04%)</title><rect x="628.8" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.8" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2 samples, 0.04%)</title><rect x="628.8" y="387.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="631.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.06%)</title><rect x="629.2" y="419.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.06%)</title><rect x="629.2" y="403.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.2" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.06%)</title><rect x="629.2" y="387.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="632.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (4 samples, 0.07%)</title><rect x="629.9" y="419.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="632.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.06%)</title><rect x="630.7" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.7" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.04%)</title><rect x="631.0" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.0" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.04%)</title><rect x="631.0" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.0" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.04%)</title><rect x="631.0" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="634.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (6 samples, 0.11%)</title><rect x="631.4" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="634.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5 samples, 0.09%)</title><rect x="631.6" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 0.07%)</title><rect x="631.8" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.07%)</title><rect x="631.8" y="387.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (3 samples, 0.06%)</title><rect x="631.8" y="371.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="634.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (52 samples, 0.96%)</title><rect x="632.7" y="515.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (52 samples, 0.96%)</title><rect x="632.7" y="499.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (52 samples, 0.96%)</title><rect x="632.7" y="483.0" width="11.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 0.95%)</title><rect x="632.7" y="467.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 0.95%)</title><rect x="632.7" y="451.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (51 samples, 0.95%)</title><rect x="632.7" y="435.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (51 samples, 0.95%)</title><rect x="632.7" y="419.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.accept (51 samples, 0.95%)</title><rect x="632.7" y="403.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (51 samples, 0.95%)</title><rect x="632.7" y="387.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 0.95%)</title><rect x="632.7" y="371.0" width="11.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 0.95%)</title><rect x="632.7" y="355.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.07%)</title><rect x="632.7" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.apply (4 samples, 0.07%)</title><rect x="632.7" y="323.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.07%)</title><rect x="632.7" y="307.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (4 samples, 0.07%)</title><rect x="632.7" y="291.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="635.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (47 samples, 0.87%)</title><rect x="633.6" y="339.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (47 samples, 0.87%)</title><rect x="633.6" y="323.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (47 samples, 0.87%)</title><rect x="633.6" y="307.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (47 samples, 0.87%)</title><rect x="633.6" y="291.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Thread (31 samples, 0.57%)</title><rect x="633.6" y="275.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="636.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (16 samples, 0.30%)</title><rect x="640.4" y="275.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="640.8" y="259.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="640.8" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="640.8" y="227.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.8" y="238.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="640.8" y="211.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="643.8" y="222.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (12 samples, 0.22%)</title><rect x="641.2" y="259.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (12 samples, 0.22%)</title><rect x="641.2" y="243.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.2" y="254.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (11 samples, 0.20%)</title><rect x="641.5" y="227.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.5" y="238.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (4 samples, 0.07%)</title><rect x="641.5" y="211.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.5" y="222.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (4 samples, 0.07%)</title><rect x="641.5" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.5" y="206.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (4 samples, 0.07%)</title><rect x="641.5" y="179.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="644.5" y="190.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (7 samples, 0.13%)</title><rect x="642.3" y="211.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.3" y="222.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (6 samples, 0.11%)</title><rect x="642.3" y="195.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="645.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (369 samples, 6.84%)</title><rect x="644.1" y="723.0" width="80.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.1" y="734.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="644.1" y="707.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="644.1" y="691.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1538519397.get$Lambda (2 samples, 0.04%)</title><rect x="644.1" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.1" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$185 (2 samples, 0.04%)</title><rect x="644.1" y="659.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="647.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1242618604.get$Lambda (3 samples, 0.06%)</title><rect x="644.5" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.5" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$189 (3 samples, 0.06%)</title><rect x="644.5" y="659.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="647.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1043351526.linkToTargetMethod (4 samples, 0.07%)</title><rect x="645.2" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="645.2" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.get$Lambda (4 samples, 0.07%)</title><rect x="645.2" y="675.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$186 (4 samples, 0.07%)</title><rect x="645.2" y="659.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="648.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (74 samples, 1.37%)</title><rect x="646.1" y="707.0" width="16.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2104524528.accept (66 samples, 1.22%)</title><rect x="646.1" y="691.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (66 samples, 1.22%)</title><rect x="646.1" y="675.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (66 samples, 1.22%)</title><rect x="646.1" y="659.0" width="14.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (66 samples, 1.22%)</title><rect x="646.1" y="643.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (66 samples, 1.22%)</title><rect x="646.1" y="627.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (66 samples, 1.22%)</title><rect x="646.1" y="611.0" width="14.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (66 samples, 1.22%)</title><rect x="646.1" y="595.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (66 samples, 1.22%)</title><rect x="646.1" y="579.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (66 samples, 1.22%)</title><rect x="646.1" y="563.0" width="14.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (66 samples, 1.22%)</title><rect x="646.1" y="547.0" width="14.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (66 samples, 1.22%)</title><rect x="646.1" y="531.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (66 samples, 1.22%)</title><rect x="646.1" y="515.0" width="14.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 0.22%)</title><rect x="646.1" y="499.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 0.22%)</title><rect x="646.1" y="483.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (12 samples, 0.22%)</title><rect x="646.1" y="467.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (5 samples, 0.09%)</title><rect x="646.1" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (5 samples, 0.09%)</title><rect x="646.1" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (5 samples, 0.09%)</title><rect x="646.1" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (5 samples, 0.09%)</title><rect x="646.1" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (5 samples, 0.09%)</title><rect x="646.1" y="387.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="649.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="647.2" y="451.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="647.2" y="435.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.13%)</title><rect x="647.2" y="419.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.13%)</title><rect x="647.2" y="403.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.13%)</title><rect x="647.2" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (7 samples, 0.13%)</title><rect x="647.2" y="371.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="650.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (54 samples, 1.00%)</title><rect x="648.7" y="499.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (19 samples, 0.35%)</title><rect x="648.7" y="483.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.26%)</title><rect x="648.7" y="467.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.7" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.26%)</title><rect x="648.7" y="451.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="651.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (5 samples, 0.09%)</title><rect x="651.7" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.7" y="478.0"></text>
</g>
<g>
<title>java/util/List.of (5 samples, 0.09%)</title><rect x="651.7" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.7" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (5 samples, 0.09%)</title><rect x="651.7" y="435.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="654.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (35 samples, 0.65%)</title><rect x="652.8" y="483.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$152/998016372.get (35 samples, 0.65%)</title><rect x="652.8" y="467.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (35 samples, 0.65%)</title><rect x="652.8" y="451.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (35 samples, 0.65%)</title><rect x="652.8" y="435.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.8" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.65%)</title><rect x="652.8" y="419.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.8" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="652.8" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="655.8" y="414.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.61%)</title><rect x="653.3" y="403.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="656.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$191/879344288.accept (8 samples, 0.15%)</title><rect x="660.5" y="691.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (8 samples, 0.15%)</title><rect x="660.5" y="675.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.run (8 samples, 0.15%)</title><rect x="660.5" y="659.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (8 samples, 0.15%)</title><rect x="660.5" y="643.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (8 samples, 0.15%)</title><rect x="660.5" y="627.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="663.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.15%)</title><rect x="660.5" y="611.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="663.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (8 samples, 0.15%)</title><rect x="660.5" y="595.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.5" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (8 samples, 0.15%)</title><rect x="660.5" y="579.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="663.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (52 samples, 0.96%)</title><rect x="662.2" y="707.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.2" y="718.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (52 samples, 0.96%)</title><rect x="662.2" y="691.0" width="11.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="665.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (18 samples, 0.33%)</title><rect x="673.6" y="707.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.19%)</title><rect x="673.6" y="691.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.19%)</title><rect x="673.6" y="675.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.19%)</title><rect x="673.6" y="659.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.19%)</title><rect x="673.6" y="643.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.19%)</title><rect x="673.6" y="627.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (10 samples, 0.19%)</title><rect x="673.6" y="611.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.6" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (10 samples, 0.19%)</title><rect x="673.6" y="595.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="676.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (8 samples, 0.15%)</title><rect x="675.8" y="691.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.8" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (8 samples, 0.15%)</title><rect x="675.8" y="675.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="678.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (46 samples, 0.85%)</title><rect x="677.6" y="707.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1024844896.run (22 samples, 0.41%)</title><rect x="677.6" y="691.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (22 samples, 0.41%)</title><rect x="677.6" y="675.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.41%)</title><rect x="677.6" y="659.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.41%)</title><rect x="677.6" y="643.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 0.41%)</title><rect x="677.6" y="627.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (22 samples, 0.41%)</title><rect x="677.6" y="611.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (22 samples, 0.41%)</title><rect x="677.6" y="595.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (22 samples, 0.41%)</title><rect x="677.6" y="579.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (22 samples, 0.41%)</title><rect x="677.6" y="563.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (22 samples, 0.41%)</title><rect x="677.6" y="547.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (14 samples, 0.26%)</title><rect x="677.6" y="531.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.26%)</title><rect x="677.6" y="515.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (14 samples, 0.26%)</title><rect x="677.6" y="499.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (11 samples, 0.20%)</title><rect x="677.6" y="483.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (11 samples, 0.20%)</title><rect x="677.6" y="467.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.20%)</title><rect x="677.6" y="451.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.20%)</title><rect x="677.6" y="435.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.20%)</title><rect x="677.6" y="419.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.6" y="430.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.20%)</title><rect x="677.6" y="403.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="680.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.06%)</title><rect x="680.0" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="680.0" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="680.0" y="451.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (3 samples, 0.06%)</title><rect x="680.0" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (3 samples, 0.06%)</title><rect x="680.0" y="419.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="683.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (8 samples, 0.15%)</title><rect x="680.6" y="531.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.15%)</title><rect x="680.6" y="515.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.15%)</title><rect x="680.6" y="499.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.15%)</title><rect x="680.6" y="483.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.15%)</title><rect x="680.6" y="467.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.15%)</title><rect x="680.6" y="451.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (8 samples, 0.15%)</title><rect x="680.6" y="435.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="683.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$159/2084334116.run (24 samples, 0.45%)</title><rect x="682.4" y="691.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (24 samples, 0.45%)</title><rect x="682.4" y="675.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.17%)</title><rect x="682.4" y="659.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.17%)</title><rect x="682.4" y="643.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.get$Lambda (9 samples, 0.17%)</title><rect x="682.4" y="627.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$192 (9 samples, 0.17%)</title><rect x="682.4" y="611.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="685.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.28%)</title><rect x="684.3" y="659.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.28%)</title><rect x="684.3" y="643.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.28%)</title><rect x="684.3" y="627.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (15 samples, 0.28%)</title><rect x="684.3" y="611.0" width="3.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="687.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (88 samples, 1.63%)</title><rect x="687.6" y="707.0" width="19.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.6" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.now (11 samples, 0.20%)</title><rect x="687.6" y="691.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.6" y="702.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (11 samples, 0.20%)</title><rect x="687.6" y="675.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.6" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (11 samples, 0.20%)</title><rect x="687.6" y="659.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.6" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.create (11 samples, 0.20%)</title><rect x="687.6" y="643.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.6" y="654.0"></text>
</g>
<g>
<title>java.time.Instant (11 samples, 0.20%)</title><rect x="687.6" y="627.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="690.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (77 samples, 1.43%)</title><rect x="690.0" y="691.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.28%)</title><rect x="690.0" y="675.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.28%)</title><rect x="690.0" y="659.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$224/1515826887.get$Lambda (15 samples, 0.28%)</title><rect x="690.0" y="643.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$224 (15 samples, 0.28%)</title><rect x="690.0" y="627.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="693.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (21 samples, 0.39%)</title><rect x="693.3" y="675.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.3" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (21 samples, 0.39%)</title><rect x="693.3" y="659.0" width="4.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="696.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (7 samples, 0.13%)</title><rect x="697.9" y="675.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.9" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.13%)</title><rect x="697.9" y="659.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.9" y="670.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.13%)</title><rect x="697.9" y="643.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="700.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (34 samples, 0.63%)</title><rect x="699.4" y="675.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.4" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.30%)</title><rect x="699.4" y="659.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="702.4" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (18 samples, 0.33%)</title><rect x="702.9" y="659.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.9" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (18 samples, 0.33%)</title><rect x="702.9" y="643.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.9" y="654.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (18 samples, 0.33%)</title><rect x="702.9" y="627.0" width="4.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="705.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (53 samples, 0.98%)</title><rect x="706.9" y="707.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.13%)</title><rect x="706.9" y="691.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.13%)</title><rect x="706.9" y="675.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$184/1509399046.get$Lambda (7 samples, 0.13%)</title><rect x="706.9" y="659.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.9" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$184 (7 samples, 0.13%)</title><rect x="706.9" y="643.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="709.9" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.52%)</title><rect x="708.4" y="691.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (13 samples, 0.24%)</title><rect x="708.4" y="675.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.4" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (13 samples, 0.24%)</title><rect x="708.4" y="659.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="711.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (15 samples, 0.28%)</title><rect x="711.3" y="675.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="714.3" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (15 samples, 0.28%)</title><rect x="711.3" y="659.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="714.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (18 samples, 0.33%)</title><rect x="714.5" y="691.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.5" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (18 samples, 0.33%)</title><rect x="714.5" y="675.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="717.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (17 samples, 0.32%)</title><rect x="718.5" y="707.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (17 samples, 0.32%)</title><rect x="718.5" y="691.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.5" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (17 samples, 0.32%)</title><rect x="718.5" y="675.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (16 samples, 0.30%)</title><rect x="718.5" y="659.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.13%)</title><rect x="718.5" y="643.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (7 samples, 0.13%)</title><rect x="718.5" y="627.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="721.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (9 samples, 0.17%)</title><rect x="720.0" y="643.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.17%)</title><rect x="720.0" y="627.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.17%)</title><rect x="720.0" y="611.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.17%)</title><rect x="720.0" y="595.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="723.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.17%)</title><rect x="720.0" y="579.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.0" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.17%)</title><rect x="720.0" y="563.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="723.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (5 samples, 0.09%)</title><rect x="722.2" y="707.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.09%)</title><rect x="722.2" y="691.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5 samples, 0.09%)</title><rect x="722.2" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (5 samples, 0.09%)</title><rect x="722.2" y="659.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (5 samples, 0.09%)</title><rect x="722.2" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="725.2" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (5 samples, 0.09%)</title><rect x="722.2" y="627.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="725.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (7 samples, 0.13%)</title><rect x="723.3" y="707.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.13%)</title><rect x="723.3" y="691.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.13%)</title><rect x="723.3" y="675.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.13%)</title><rect x="723.3" y="659.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="726.3" y="670.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (34 samples, 0.63%)</title><rect x="724.8" y="723.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.createSession (34 samples, 0.63%)</title><rect x="724.8" y="707.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.createSession (34 samples, 0.63%)</title><rect x="724.8" y="691.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.8" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.ServiceSession (3 samples, 0.06%)</title><rect x="724.8" y="675.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="727.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceSession.&lt;init&gt; (31 samples, 0.57%)</title><rect x="725.5" y="675.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (31 samples, 0.57%)</title><rect x="725.5" y="659.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.5" y="670.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.04%)</title><rect x="725.5" y="643.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="728.5" y="654.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.54%)</title><rect x="725.9" y="643.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="728.9" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,092 samples, 38.79%)</title><rect x="732.3" y="723.0" width="457.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.3" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.26%)</title><rect x="732.3" y="707.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.3" y="718.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (14 samples, 0.26%)</title><rect x="732.3" y="691.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="735.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,078 samples, 38.53%)</title><rect x="735.3" y="707.0" width="454.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.3" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,078 samples, 38.53%)</title><rect x="735.3" y="691.0" width="454.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.3" y="702.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,078 samples, 38.53%)</title><rect x="735.3" y="675.0" width="454.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="738.3" y="686.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,000 samples, 18.54%)</title><rect x="735.3" y="659.0" width="218.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="738.3" y="670.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,000 samples, 18.54%)</title><rect x="735.3" y="643.0" width="218.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.3" y="654.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (943 samples, 17.49%)</title><rect x="735.3" y="627.0" width="206.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.3" y="638.0">RequestHandler1_entity.hand..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (66 samples, 1.22%)</title><rect x="735.3" y="611.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (66 samples, 1.22%)</title><rect x="735.3" y="595.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (66 samples, 1.22%)</title><rect x="735.3" y="579.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (66 samples, 1.22%)</title><rect x="735.3" y="563.0" width="14.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.54%)</title><rect x="735.3" y="547.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="738.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.69%)</title><rect x="741.7" y="547.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.7" y="558.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.69%)</title><rect x="741.7" y="531.0" width="8.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="744.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (877 samples, 16.26%)</title><rect x="749.8" y="611.0" width="191.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.8" y="622.0">ru/mail/polis/service/iva..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (52 samples, 0.96%)</title><rect x="749.8" y="595.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="752.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.96%)</title><rect x="749.8" y="579.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.96%)</title><rect x="749.8" y="563.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.52%)</title><rect x="749.8" y="547.0" width="6.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="752.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.45%)</title><rect x="755.9" y="547.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.9" y="558.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.45%)</title><rect x="755.9" y="531.0" width="5.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="758.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (73 samples, 1.35%)</title><rect x="761.1" y="595.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="764.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (73 samples, 1.35%)</title><rect x="761.1" y="579.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.41%)</title><rect x="761.1" y="563.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.41%)</title><rect x="761.1" y="547.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get$Lambda (22 samples, 0.41%)</title><rect x="761.1" y="531.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$119 (22 samples, 0.41%)</title><rect x="761.1" y="515.0" width="4.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="764.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (51 samples, 0.95%)</title><rect x="766.0" y="563.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (51 samples, 0.95%)</title><rect x="766.0" y="547.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (16 samples, 0.30%)</title><rect x="766.0" y="531.0" width="3.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="769.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (35 samples, 0.65%)</title><rect x="769.5" y="531.0" width="7.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="772.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (635 samples, 11.77%)</title><rect x="777.1" y="595.0" width="139.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.1" y="606.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="777.1" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="777.1" y="563.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.get$Lambda (4 samples, 0.07%)</title><rect x="777.1" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.1" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.AsyncServiceImpl$$Lambda$139 (4 samples, 0.07%)</title><rect x="777.1" y="531.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="780.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.09%)</title><rect x="778.0" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.09%)</title><rect x="778.0" y="563.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.09%)</title><rect x="778.0" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.09%)</title><rect x="778.0" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.09%)</title><rect x="778.0" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.09%)</title><rect x="778.0" y="499.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="781.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.06%)</title><rect x="779.1" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="779.1" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.1" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.04%)</title><rect x="779.1" y="547.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="782.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.09%)</title><rect x="779.7" y="579.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (5 samples, 0.09%)</title><rect x="779.7" y="563.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (4 samples, 0.07%)</title><rect x="779.7" y="547.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="782.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.06%)</title><rect x="780.8" y="579.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.06%)</title><rect x="780.8" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (2 samples, 0.04%)</title><rect x="780.8" y="547.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="783.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (9 samples, 0.17%)</title><rect x="781.5" y="579.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (9 samples, 0.17%)</title><rect x="781.5" y="563.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="781.5" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="781.5" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get$Lambda (2 samples, 0.04%)</title><rect x="781.5" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.5" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$119 (2 samples, 0.04%)</title><rect x="781.5" y="499.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="784.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (7 samples, 0.13%)</title><rect x="781.9" y="547.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="784.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (7 samples, 0.13%)</title><rect x="781.9" y="531.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (4 samples, 0.07%)</title><rect x="781.9" y="515.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="784.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.06%)</title><rect x="782.8" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.getAckResponses (33 samples, 0.61%)</title><rect x="783.5" y="579.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.5" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.04%)</title><rect x="783.5" y="563.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="786.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (4 samples, 0.07%)</title><rect x="784.1" y="563.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="787.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (25 samples, 0.46%)</title><rect x="785.0" y="563.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$137/766939021.accept (25 samples, 0.46%)</title><rect x="785.0" y="547.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$1 (25 samples, 0.46%)</title><rect x="785.0" y="531.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.13%)</title><rect x="785.0" y="515.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.13%)</title><rect x="785.0" y="499.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.get$Lambda (7 samples, 0.13%)</title><rect x="785.0" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.0" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.Futures$$Lambda$138 (7 samples, 0.13%)</title><rect x="785.0" y="467.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="788.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (18 samples, 0.33%)</title><rect x="786.5" y="515.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.33%)</title><rect x="786.5" y="499.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (13 samples, 0.24%)</title><rect x="786.5" y="483.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="789.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="789.6" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="789.6" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="789.6" y="451.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="792.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.forwardRequest (512 samples, 9.49%)</title><rect x="790.7" y="579.0" width="112.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.7" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (13 samples, 0.24%)</title><rect x="790.7" y="563.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (13 samples, 0.24%)</title><rect x="790.7" y="547.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (9 samples, 0.17%)</title><rect x="790.7" y="531.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="793.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="792.7" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="792.7" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="795.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="792.7" y="499.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="795.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (318 samples, 5.90%)</title><rect x="793.5" y="563.0" width="69.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.5" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (318 samples, 5.90%)</title><rect x="793.5" y="547.0" width="69.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.5" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (318 samples, 5.90%)</title><rect x="793.5" y="531.0" width="69.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.5" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (318 samples, 5.90%)</title><rect x="793.5" y="515.0" width="69.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.5" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.11%)</title><rect x="793.5" y="499.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.11%)</title><rect x="793.5" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.07%)</title><rect x="793.5" y="467.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="796.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="794.4" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="794.4" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.04%)</title><rect x="794.4" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="797.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (12 samples, 0.22%)</title><rect x="794.8" y="499.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.22%)</title><rect x="794.8" y="483.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.09%)</title><rect x="794.8" y="467.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="797.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="795.9" y="467.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.13%)</title><rect x="795.9" y="451.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="798.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.13%)</title><rect x="795.9" y="435.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="798.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (9 samples, 0.17%)</title><rect x="797.5" y="499.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="800.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (16 samples, 0.30%)</title><rect x="799.4" y="499.0" width="3.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="802.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (157 samples, 2.91%)</title><rect x="802.9" y="499.0" width="34.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.9" y="510.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (12 samples, 0.22%)</title><rect x="802.9" y="483.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.9" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.19%)</title><rect x="802.9" y="467.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.9" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.06%)</title><rect x="802.9" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.9" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.06%)</title><rect x="802.9" y="435.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="805.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.13%)</title><rect x="803.6" y="451.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.6" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (7 samples, 0.13%)</title><rect x="803.6" y="435.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="806.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="805.1" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="805.1" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="805.1" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (2 samples, 0.04%)</title><rect x="805.1" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.1" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (2 samples, 0.04%)</title><rect x="805.1" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="808.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (72 samples, 1.34%)</title><rect x="805.6" y="483.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (72 samples, 1.34%)</title><rect x="805.6" y="467.0" width="15.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.6" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.07%)</title><rect x="805.6" y="451.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="808.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.11%)</title><rect x="806.4" y="451.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="809.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="808.0" y="451.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="808.0" y="435.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (6 samples, 0.11%)</title><rect x="808.0" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.0" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (6 samples, 0.11%)</title><rect x="808.0" y="403.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="811.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (42 samples, 0.78%)</title><rect x="809.3" y="451.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (42 samples, 0.78%)</title><rect x="809.3" y="435.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (42 samples, 0.78%)</title><rect x="809.3" y="419.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (42 samples, 0.78%)</title><rect x="809.3" y="403.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.3" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (20 samples, 0.37%)</title><rect x="809.3" y="387.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (10 samples, 0.19%)</title><rect x="809.3" y="371.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.19%)</title><rect x="809.3" y="355.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="812.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.19%)</title><rect x="809.3" y="339.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.19%)</title><rect x="809.3" y="323.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.19%)</title><rect x="809.3" y="307.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.19%)</title><rect x="809.3" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.19%)</title><rect x="809.3" y="275.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.19%)</title><rect x="809.3" y="259.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="812.3" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (10 samples, 0.19%)</title><rect x="811.5" y="371.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.5" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (10 samples, 0.19%)</title><rect x="811.5" y="355.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="814.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="813.7" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="813.7" y="371.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (4 samples, 0.07%)</title><rect x="813.7" y="355.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.7" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (4 samples, 0.07%)</title><rect x="813.7" y="339.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="816.7" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (9 samples, 0.17%)</title><rect x="814.5" y="387.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.5" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (9 samples, 0.17%)</title><rect x="814.5" y="371.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (8 samples, 0.15%)</title><rect x="814.5" y="355.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.5" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.15%)</title><rect x="814.5" y="339.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="817.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.15%)</title><rect x="814.5" y="323.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="817.5" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.17%)</title><rect x="816.5" y="387.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (9 samples, 0.17%)</title><rect x="816.5" y="371.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="819.5" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (6 samples, 0.11%)</title><rect x="818.5" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.5" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (6 samples, 0.11%)</title><rect x="818.5" y="435.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="821.5" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (7 samples, 0.13%)</title><rect x="819.8" y="451.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.13%)</title><rect x="819.8" y="435.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="822.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (54 samples, 1.00%)</title><rect x="821.5" y="483.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.5" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (54 samples, 1.00%)</title><rect x="821.5" y="467.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.5" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (51 samples, 0.95%)</title><rect x="821.5" y="451.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.5" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (51 samples, 0.95%)</title><rect x="821.5" y="435.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.5" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (51 samples, 0.95%)</title><rect x="821.5" y="419.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.5" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.20%)</title><rect x="821.5" y="403.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="824.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.20%)</title><rect x="823.9" y="403.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.9" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.20%)</title><rect x="823.9" y="387.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.9" y="398.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.20%)</title><rect x="823.9" y="371.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="826.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (29 samples, 0.54%)</title><rect x="826.4" y="403.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.54%)</title><rect x="826.4" y="387.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.30%)</title><rect x="826.4" y="371.0" width="3.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="829.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.24%)</title><rect x="829.9" y="371.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.9" y="382.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.24%)</title><rect x="829.9" y="355.0" width="2.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="832.9" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (3 samples, 0.06%)</title><rect x="832.7" y="451.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="835.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (10 samples, 0.19%)</title><rect x="833.4" y="483.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (10 samples, 0.19%)</title><rect x="833.4" y="467.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="836.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.15%)</title><rect x="835.5" y="483.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.5" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.04%)</title><rect x="835.5" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="838.5" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.06%)</title><rect x="836.0" y="467.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.06%)</title><rect x="836.0" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="839.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="836.6" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.06%)</title><rect x="836.6" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="839.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (80 samples, 1.48%)</title><rect x="837.3" y="499.0" width="17.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (2 samples, 0.04%)</title><rect x="837.3" y="483.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="840.3" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.map (6 samples, 0.11%)</title><rect x="837.7" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/271136818.apply (6 samples, 0.11%)</title><rect x="837.7" y="467.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (6 samples, 0.11%)</title><rect x="837.7" y="451.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="840.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (5 samples, 0.09%)</title><rect x="839.0" y="483.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="842.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.04%)</title><rect x="840.1" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (2 samples, 0.04%)</title><rect x="840.1" y="467.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="843.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (4 samples, 0.07%)</title><rect x="840.6" y="483.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.6" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.07%)</title><rect x="840.6" y="467.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.6" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.07%)</title><rect x="840.6" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.6" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.07%)</title><rect x="840.6" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="843.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (61 samples, 1.13%)</title><rect x="841.4" y="483.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (61 samples, 1.13%)</title><rect x="841.4" y="467.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.4" y="478.0"></text>
</g>
<g>
<title>java.lang.Class[] (4 samples, 0.07%)</title><rect x="841.4" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="844.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.19%)</title><rect x="842.3" y="451.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="845.3" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.06%)</title><rect x="844.5" y="451.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="847.5" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (28 samples, 0.52%)</title><rect x="845.2" y="451.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (28 samples, 0.52%)</title><rect x="845.2" y="435.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.2" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (28 samples, 0.52%)</title><rect x="845.2" y="419.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.2" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (28 samples, 0.52%)</title><rect x="845.2" y="403.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.2" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (28 samples, 0.52%)</title><rect x="845.2" y="387.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="848.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (11 samples, 0.20%)</title><rect x="851.3" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (11 samples, 0.20%)</title><rect x="851.3" y="435.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (5 samples, 0.09%)</title><rect x="851.3" y="419.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (5 samples, 0.09%)</title><rect x="851.3" y="403.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="854.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (6 samples, 0.11%)</title><rect x="852.4" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (6 samples, 0.11%)</title><rect x="852.4" y="403.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="855.4" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.09%)</title><rect x="853.7" y="451.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.09%)</title><rect x="853.7" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.7" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.09%)</title><rect x="853.7" y="419.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="856.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (38 samples, 0.70%)</title><rect x="854.8" y="499.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.09%)</title><rect x="854.8" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.06%)</title><rect x="854.8" y="467.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="857.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="855.5" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.04%)</title><rect x="855.5" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2 samples, 0.04%)</title><rect x="855.5" y="435.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="858.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="855.9" y="483.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="858.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (28 samples, 0.52%)</title><rect x="857.0" y="483.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.11%)</title><rect x="857.0" y="467.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.11%)</title><rect x="857.0" y="451.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.get$Lambda (5 samples, 0.09%)</title><rect x="857.2" y="435.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (5 samples, 0.09%)</title><rect x="857.2" y="419.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="860.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.41%)</title><rect x="858.3" y="467.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.41%)</title><rect x="858.3" y="451.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (17 samples, 0.32%)</title><rect x="858.3" y="435.0" width="3.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="861.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="862.0" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="862.0" y="419.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="862.0" y="403.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="865.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.formHttpRequest (181 samples, 3.36%)</title><rect x="863.1" y="563.0" width="39.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.1" y="574.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.20%)</title><rect x="863.1" y="547.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (11 samples, 0.20%)</title><rect x="863.1" y="531.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (11 samples, 0.20%)</title><rect x="863.1" y="515.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.20%)</title><rect x="863.1" y="499.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.13%)</title><rect x="863.1" y="483.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.13%)</title><rect x="863.1" y="467.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="866.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.07%)</title><rect x="864.6" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.07%)</title><rect x="864.6" y="467.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.6" y="478.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="864.6" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="867.6" y="462.0"></text>
</g>
<g>
<title>java/net/URI.create (55 samples, 1.02%)</title><rect x="865.5" y="547.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.5" y="558.0"></text>
</g>
<g>
<title>java.net.URI (11 samples, 0.20%)</title><rect x="865.5" y="531.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="868.5" y="542.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (44 samples, 0.82%)</title><rect x="867.9" y="531.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.9" y="542.0"></text>
</g>
<g>
<title>java.net.URI$Parser (3 samples, 0.06%)</title><rect x="867.9" y="515.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="870.9" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (41 samples, 0.76%)</title><rect x="868.6" y="515.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="871.6" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.17%)</title><rect x="868.6" y="499.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.6" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.17%)</title><rect x="868.6" y="483.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.6" y="494.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.11%)</title><rect x="868.6" y="467.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="871.6" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.06%)</title><rect x="869.9" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.9" y="478.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.06%)</title><rect x="869.9" y="451.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="872.9" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (32 samples, 0.59%)</title><rect x="870.5" y="499.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.5" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.33%)</title><rect x="870.5" y="483.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.33%)</title><rect x="870.5" y="467.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.15%)</title><rect x="870.5" y="451.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="873.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.19%)</title><rect x="872.3" y="451.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.3" y="462.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.19%)</title><rect x="872.3" y="435.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="875.3" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (14 samples, 0.26%)</title><rect x="874.5" y="483.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.15%)</title><rect x="874.5" y="467.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.15%)</title><rect x="874.5" y="451.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="874.5" y="435.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="877.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="875.4" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.4" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="875.4" y="419.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="878.4" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.11%)</title><rect x="876.2" y="467.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.2" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (6 samples, 0.11%)</title><rect x="876.2" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.11%)</title><rect x="876.2" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.11%)</title><rect x="876.2" y="419.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.11%)</title><rect x="876.2" y="403.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.2" y="414.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.11%)</title><rect x="876.2" y="387.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="879.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (3 samples, 0.06%)</title><rect x="877.6" y="547.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (3 samples, 0.06%)</title><rect x="877.6" y="531.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="880.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (21 samples, 0.39%)</title><rect x="878.2" y="547.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (6 samples, 0.11%)</title><rect x="878.2" y="531.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="881.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (15 samples, 0.28%)</title><rect x="879.5" y="531.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (7 samples, 0.13%)</title><rect x="879.5" y="515.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="882.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (8 samples, 0.15%)</title><rect x="881.1" y="515.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.1" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.15%)</title><rect x="881.1" y="499.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="884.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (66 samples, 1.22%)</title><rect x="882.8" y="547.0" width="14.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (5 samples, 0.09%)</title><rect x="882.8" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="885.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (61 samples, 1.13%)</title><rect x="883.9" y="531.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="886.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (57 samples, 1.06%)</title><rect x="883.9" y="515.0" width="12.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (57 samples, 1.06%)</title><rect x="883.9" y="499.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.9" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.06%)</title><rect x="884.1" y="483.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="887.1" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.17%)</title><rect x="884.8" y="483.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="887.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="887.0" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="887.0" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (3 samples, 0.06%)</title><rect x="887.0" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.0" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.06%)</title><rect x="887.0" y="435.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="890.0" y="446.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.04%)</title><rect x="887.6" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.6" y="494.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2 samples, 0.04%)</title><rect x="887.6" y="467.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="890.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (30 samples, 0.56%)</title><rect x="888.1" y="483.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (30 samples, 0.56%)</title><rect x="888.1" y="467.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (30 samples, 0.56%)</title><rect x="888.1" y="451.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="888.1" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="888.1" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (5 samples, 0.09%)</title><rect x="888.1" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="891.1" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (5 samples, 0.09%)</title><rect x="888.1" y="387.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="891.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (11 samples, 0.20%)</title><rect x="889.1" y="435.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (11 samples, 0.20%)</title><rect x="889.1" y="419.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (11 samples, 0.20%)</title><rect x="889.1" y="403.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.20%)</title><rect x="889.1" y="387.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.20%)</title><rect x="889.1" y="371.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.20%)</title><rect x="889.1" y="355.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.20%)</title><rect x="889.1" y="339.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.20%)</title><rect x="889.1" y="323.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.1" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.20%)</title><rect x="889.1" y="307.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="892.1" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (10 samples, 0.19%)</title><rect x="891.6" y="435.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.6" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (10 samples, 0.19%)</title><rect x="891.6" y="419.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (7 samples, 0.13%)</title><rect x="891.6" y="403.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.13%)</title><rect x="891.6" y="387.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="894.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.13%)</title><rect x="891.6" y="371.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="894.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.06%)</title><rect x="893.1" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.1" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.06%)</title><rect x="893.1" y="387.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="896.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.07%)</title><rect x="893.7" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.07%)</title><rect x="893.7" y="419.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="896.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (8 samples, 0.15%)</title><rect x="894.6" y="483.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.6" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.15%)</title><rect x="894.6" y="467.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="897.6" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.07%)</title><rect x="896.4" y="515.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.4" y="526.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.07%)</title><rect x="896.4" y="499.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.4" y="510.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.07%)</title><rect x="896.4" y="483.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="899.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (16 samples, 0.30%)</title><rect x="897.2" y="547.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (16 samples, 0.30%)</title><rect x="897.2" y="531.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (16 samples, 0.30%)</title><rect x="897.2" y="515.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.2" y="526.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (16 samples, 0.30%)</title><rect x="897.2" y="499.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="900.2" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.13%)</title><rect x="897.2" y="483.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.13%)</title><rect x="897.2" y="467.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="900.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$120/26136221.apply (9 samples, 0.17%)</title><rect x="898.8" y="483.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (9 samples, 0.17%)</title><rect x="898.8" y="467.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.8" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.13%)</title><rect x="898.8" y="451.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="901.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="900.3" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="903.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="900.3" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="903.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.17%)</title><rect x="900.7" y="547.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.17%)</title><rect x="900.7" y="531.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.17%)</title><rect x="900.7" y="515.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.7" y="526.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="900.7" y="499.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="903.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="901.6" y="499.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.6" y="510.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="901.6" y="483.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="904.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.getNodes (61 samples, 1.13%)</title><rect x="902.7" y="579.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.7" y="590.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.04%)</title><rect x="902.7" y="563.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="905.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.07%)</title><rect x="903.2" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.2" y="574.0"></text>
</g>
<g>
<title>java.lang.Integer (4 samples, 0.07%)</title><rect x="903.2" y="547.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="906.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.22%)</title><rect x="904.0" y="563.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="907.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1392425346.invoke (12 samples, 0.22%)</title><rect x="904.0" y="547.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.22%)</title><rect x="904.0" y="531.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.22%)</title><rect x="904.0" y="515.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.22%)</title><rect x="904.0" y="499.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.0" y="510.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.22%)</title><rect x="904.0" y="483.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="907.0" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.07%)</title><rect x="906.7" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.04%)</title><rect x="906.7" y="547.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="909.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="907.1" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.04%)</title><rect x="907.1" y="531.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="910.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.17%)</title><rect x="907.7" y="563.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.17%)</title><rect x="907.7" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.13%)</title><rect x="907.7" y="531.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.7" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.13%)</title><rect x="907.7" y="515.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="910.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.04%)</title><rect x="909.3" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.3" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.04%)</title><rect x="909.3" y="515.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="912.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (7 samples, 0.13%)</title><rect x="909.7" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.13%)</title><rect x="909.7" y="547.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="912.7" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (20 samples, 0.37%)</title><rect x="911.2" y="563.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.put (20 samples, 0.37%)</title><rect x="911.2" y="547.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.2" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (20 samples, 0.37%)</title><rect x="911.2" y="531.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.19%)</title><rect x="911.2" y="515.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.2" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.19%)</title><rect x="911.2" y="499.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="914.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (10 samples, 0.19%)</title><rect x="913.4" y="515.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.4" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (10 samples, 0.19%)</title><rect x="913.4" y="499.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="916.4" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="915.6" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="915.6" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.04%)</title><rect x="915.6" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="918.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.trySendResponse (117 samples, 2.17%)</title><rect x="916.1" y="595.0" width="25.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.1" y="606.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.54%)</title><rect x="916.1" y="579.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.54%)</title><rect x="916.1" y="563.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="919.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.get$Lambda (29 samples, 0.54%)</title><rect x="916.1" y="547.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.1" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$142 (29 samples, 0.54%)</title><rect x="916.1" y="531.0" width="6.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="919.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (88 samples, 1.63%)</title><rect x="922.4" y="579.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (88 samples, 1.63%)</title><rect x="922.4" y="563.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (56 samples, 1.04%)</title><rect x="922.4" y="547.0" width="12.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="925.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (32 samples, 0.59%)</title><rect x="934.7" y="547.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (32 samples, 0.59%)</title><rect x="934.7" y="531.0" width="7.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="937.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (57 samples, 1.06%)</title><rect x="941.7" y="627.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 1.06%)</title><rect x="941.7" y="611.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="944.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 1.06%)</title><rect x="941.7" y="595.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="944.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.57%)</title><rect x="941.7" y="579.0" width="6.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="944.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.48%)</title><rect x="948.4" y="579.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.4" y="590.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.48%)</title><rect x="948.4" y="563.0" width="5.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="951.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (288 samples, 5.34%)</title><rect x="954.1" y="659.0" width="63.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.1" y="670.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (39 samples, 0.72%)</title><rect x="954.1" y="643.0" width="8.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="957.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (103 samples, 1.91%)</title><rect x="962.7" y="643.0" width="22.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.7" y="654.0">o..</text>
</g>
<g>
<title>java.lang.String[] (103 samples, 1.91%)</title><rect x="962.7" y="627.0" width="22.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="965.7" y="638.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (146 samples, 2.71%)</title><rect x="985.2" y="643.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.2" y="654.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (146 samples, 2.71%)</title><rect x="985.2" y="627.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.2" y="638.0">on..</text>
</g>
<g>
<title>char[] (80 samples, 1.48%)</title><rect x="985.2" y="611.0" width="17.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="988.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.37%)</title><rect x="1002.7" y="611.0" width="4.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1005.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.85%)</title><rect x="1007.1" y="611.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.85%)</title><rect x="1007.1" y="595.0" width="10.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (46 samples, 0.85%)</title><rect x="1007.1" y="579.0" width="10.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.1" y="590.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.85%)</title><rect x="1007.1" y="563.0" width="10.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1010.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (181 samples, 3.36%)</title><rect x="1017.1" y="659.0" width="39.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1020.1" y="670.0">one..</text>
</g>
<g>
<title>byte[] (181 samples, 3.36%)</title><rect x="1017.1" y="643.0" width="39.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1020.1" y="654.0">byt..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (72 samples, 1.34%)</title><rect x="1056.7" y="659.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (72 samples, 1.34%)</title><rect x="1056.7" y="643.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (72 samples, 1.34%)</title><rect x="1056.7" y="627.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.7" y="638.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.56%)</title><rect x="1056.7" y="611.0" width="6.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1059.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.78%)</title><rect x="1063.3" y="611.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1066.3" y="622.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.78%)</title><rect x="1063.3" y="595.0" width="9.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1066.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (537 samples, 9.96%)</title><rect x="1072.5" y="659.0" width="117.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.5" y="670.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (537 samples, 9.96%)</title><rect x="1072.5" y="643.0" width="117.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.5" y="654.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (253 samples, 4.69%)</title><rect x="1072.5" y="627.0" width="55.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1075.5" y="638.0">char[]</text>
</g>
<g>
<title>java.lang.String (106 samples, 1.97%)</title><rect x="1127.9" y="627.0" width="23.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1130.9" y="638.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (178 samples, 3.30%)</title><rect x="1151.1" y="627.0" width="38.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.1" y="638.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (178 samples, 3.30%)</title><rect x="1151.1" y="611.0" width="38.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1154.1" y="622.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (178 samples, 3.30%)</title><rect x="1151.1" y="595.0" width="38.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.1" y="606.0">jav..</text>
</g>
<g>
<title>byte[] (178 samples, 3.30%)</title><rect x="1151.1" y="579.0" width="38.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1154.1" y="590.0">byt..</text>
</g>
</g>
</svg>
