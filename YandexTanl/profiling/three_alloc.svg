<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (6,531 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (3,626 samples, 55.52%)</title><rect x="10.2" y="691.0" width="655.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.2" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (35 samples, 0.54%)</title><rect x="10.2" y="675.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (35 samples, 0.54%)</title><rect x="10.2" y="659.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (35 samples, 0.54%)</title><rect x="10.2" y="643.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 0.54%)</title><rect x="10.2" y="627.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (35 samples, 0.54%)</title><rect x="10.2" y="611.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (35 samples, 0.54%)</title><rect x="10.2" y="595.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 0.54%)</title><rect x="10.2" y="579.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (35 samples, 0.54%)</title><rect x="10.2" y="563.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (35 samples, 0.54%)</title><rect x="10.2" y="547.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (35 samples, 0.54%)</title><rect x="10.2" y="531.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (35 samples, 0.54%)</title><rect x="10.2" y="515.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (35 samples, 0.54%)</title><rect x="10.2" y="499.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,591 samples, 54.98%)</title><rect x="16.5" y="675.0" width="648.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.5" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,591 samples, 54.98%)</title><rect x="16.5" y="659.0" width="648.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.5" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,450 samples, 37.51%)</title><rect x="16.5" y="643.0" width="442.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.5" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,133 samples, 17.35%)</title><rect x="16.5" y="627.0" width="204.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.5" y="638.0">java/util/concurrent/Comple..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (429 samples, 6.57%)</title><rect x="16.5" y="611.0" width="77.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.5" y="622.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3 samples, 0.05%)</title><rect x="16.5" y="595.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.apply (426 samples, 6.52%)</title><rect x="17.0" y="595.0" width="77.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.0" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (426 samples, 6.52%)</title><rect x="17.0" y="579.0" width="77.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.0" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (426 samples, 6.52%)</title><rect x="17.0" y="563.0" width="77.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.0" y="574.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="17.0" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="17.0" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/516891066.get$Lambda (3 samples, 0.05%)</title><rect x="17.0" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$183 (3 samples, 0.05%)</title><rect x="17.0" y="499.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="20.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6 samples, 0.09%)</title><rect x="17.6" y="547.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6 samples, 0.09%)</title><rect x="17.6" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (3 samples, 0.05%)</title><rect x="17.6" y="515.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="20.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="18.1" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="18.1" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="18.1" y="483.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="21.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (14 samples, 0.21%)</title><rect x="18.7" y="547.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (14 samples, 0.21%)</title><rect x="18.7" y="531.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (7 samples, 0.11%)</title><rect x="18.7" y="515.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="21.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.11%)</title><rect x="19.9" y="515.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.11%)</title><rect x="19.9" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.11%)</title><rect x="19.9" y="483.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="22.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (385 samples, 5.89%)</title><rect x="21.2" y="547.0" width="69.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.2" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (385 samples, 5.89%)</title><rect x="21.2" y="531.0" width="69.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.2" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (385 samples, 5.89%)</title><rect x="21.2" y="515.0" width="69.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.2" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.09%)</title><rect x="21.2" y="499.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.09%)</title><rect x="21.2" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.get$Lambda (4 samples, 0.06%)</title><rect x="21.6" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$168 (4 samples, 0.06%)</title><rect x="21.6" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="24.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (265 samples, 4.06%)</title><rect x="22.3" y="499.0" width="47.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.3" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (265 samples, 4.06%)</title><rect x="22.3" y="483.0" width="47.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.3" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (260 samples, 3.98%)</title><rect x="22.3" y="467.0" width="47.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.3" y="478.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.apply (260 samples, 3.98%)</title><rect x="22.3" y="451.0" width="47.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.3" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (260 samples, 3.98%)</title><rect x="22.3" y="435.0" width="47.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.3" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (260 samples, 3.98%)</title><rect x="22.3" y="419.0" width="47.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.3" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.apply (260 samples, 3.98%)</title><rect x="22.3" y="403.0" width="47.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.3" y="414.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (260 samples, 3.98%)</title><rect x="22.3" y="387.0" width="47.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.3" y="398.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.05%)</title><rect x="22.3" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.05%)</title><rect x="22.3" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.03%)</title><rect x="22.3" y="339.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.09%)</title><rect x="22.8" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.09%)</title><rect x="22.8" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (4 samples, 0.06%)</title><rect x="22.8" y="339.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="23.6" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="23.6" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="23.6" y="307.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="26.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (251 samples, 3.84%)</title><rect x="23.9" y="371.0" width="45.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.9" y="382.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="23.9" y="355.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="23.9" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.get$Lambda (3 samples, 0.05%)</title><rect x="23.9" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$178 (3 samples, 0.05%)</title><rect x="23.9" y="307.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="26.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (220 samples, 3.37%)</title><rect x="24.5" y="355.0" width="39.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.5" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (220 samples, 3.37%)</title><rect x="24.5" y="339.0" width="39.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.5" y="350.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="24.5" y="323.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.apply (211 samples, 3.23%)</title><rect x="24.8" y="323.0" width="38.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.8" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (211 samples, 3.23%)</title><rect x="24.8" y="307.0" width="38.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.8" y="318.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.08%)</title><rect x="25.0" y="291.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.08%)</title><rect x="25.0" y="275.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="25.2" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="25.2" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.06%)</title><rect x="25.2" y="227.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="28.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.06%)</title><rect x="25.9" y="291.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.08%)</title><rect x="26.6" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.06%)</title><rect x="26.8" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (4 samples, 0.06%)</title><rect x="26.8" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (4 samples, 0.06%)</title><rect x="26.8" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (4 samples, 0.06%)</title><rect x="26.8" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (4 samples, 0.06%)</title><rect x="26.8" y="211.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.8" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (4 samples, 0.06%)</title><rect x="26.8" y="195.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="29.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (3 samples, 0.05%)</title><rect x="27.5" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="30.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.05%)</title><rect x="27.5" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.03%)</title><rect x="27.7" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.03%)</title><rect x="27.7" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (2 samples, 0.03%)</title><rect x="27.7" y="227.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="30.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (193 samples, 2.96%)</title><rect x="28.1" y="291.0" width="34.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.1" y="302.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (3 samples, 0.05%)</title><rect x="28.1" y="275.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="31.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (11 samples, 0.17%)</title><rect x="28.6" y="275.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (11 samples, 0.17%)</title><rect x="28.6" y="259.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (11 samples, 0.17%)</title><rect x="28.6" y="243.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="31.6" y="254.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.17%)</title><rect x="28.6" y="227.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="31.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (6 samples, 0.09%)</title><rect x="30.6" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.6" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (6 samples, 0.09%)</title><rect x="30.6" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.6" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="30.6" y="243.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="33.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.24%)</title><rect x="31.7" y="275.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.24%)</title><rect x="31.7" y="259.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="31.7" y="243.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="34.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.20%)</title><rect x="32.2" y="243.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="35.2" y="254.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.20%)</title><rect x="32.2" y="227.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="35.2" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="34.6" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="34.6" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.06%)</title><rect x="34.6" y="243.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="37.6" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.06%)</title><rect x="35.3" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.3" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.06%)</title><rect x="35.3" y="259.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="38.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (124 samples, 1.90%)</title><rect x="36.0" y="275.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.0" y="286.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (5 samples, 0.08%)</title><rect x="36.0" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.08%)</title><rect x="36.0" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.08%)</title><rect x="36.0" y="227.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.get$Lambda (5 samples, 0.08%)</title><rect x="36.0" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.0" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$193 (5 samples, 0.08%)</title><rect x="36.0" y="195.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="39.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (70 samples, 1.07%)</title><rect x="36.9" y="259.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (38 samples, 0.58%)</title><rect x="36.9" y="243.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (38 samples, 0.58%)</title><rect x="36.9" y="227.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (38 samples, 0.58%)</title><rect x="36.9" y="211.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.9" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.58%)</title><rect x="36.9" y="195.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="206.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.58%)</title><rect x="36.9" y="179.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="39.9" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (6 samples, 0.09%)</title><rect x="43.8" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.8" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (6 samples, 0.09%)</title><rect x="43.8" y="227.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (6 samples, 0.09%)</title><rect x="43.8" y="211.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (6 samples, 0.09%)</title><rect x="43.8" y="195.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="46.8" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (6 samples, 0.09%)</title><rect x="44.9" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.9" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (5 samples, 0.08%)</title><rect x="45.1" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.1" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (5 samples, 0.08%)</title><rect x="45.1" y="211.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="48.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.test (20 samples, 0.31%)</title><rect x="46.0" y="243.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (20 samples, 0.31%)</title><rect x="46.0" y="227.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$91/2013559698.test (20 samples, 0.31%)</title><rect x="46.0" y="211.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (20 samples, 0.31%)</title><rect x="46.0" y="195.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$80/1582071873.test (20 samples, 0.31%)</title><rect x="46.0" y="179.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.0" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (20 samples, 0.31%)</title><rect x="46.0" y="163.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/1616974404.test (20 samples, 0.31%)</title><rect x="46.0" y="147.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (20 samples, 0.31%)</title><rect x="46.0" y="131.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.31%)</title><rect x="46.0" y="115.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.31%)</title><rect x="46.0" y="99.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.18%)</title><rect x="46.0" y="83.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="49.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.12%)</title><rect x="48.1" y="83.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.1" y="94.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.12%)</title><rect x="48.1" y="67.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="51.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (49 samples, 0.75%)</title><rect x="49.6" y="259.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (49 samples, 0.75%)</title><rect x="49.6" y="243.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.6" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (49 samples, 0.75%)</title><rect x="49.6" y="227.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.03%)</title><rect x="50.1" y="211.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.1" y="222.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (2 samples, 0.03%)</title><rect x="50.5" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.5" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (2 samples, 0.03%)</title><rect x="50.5" y="195.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.5" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (38 samples, 0.58%)</title><rect x="50.8" y="211.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (38 samples, 0.58%)</title><rect x="50.8" y="195.0" width="6.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (38 samples, 0.58%)</title><rect x="50.8" y="179.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.11%)</title><rect x="50.8" y="163.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.11%)</title><rect x="50.8" y="147.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.8" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (7 samples, 0.11%)</title><rect x="50.8" y="131.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.8" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (7 samples, 0.11%)</title><rect x="50.8" y="115.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="53.8" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="52.1" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.1" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (2 samples, 0.03%)</title><rect x="52.1" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="52.1" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="52.1" y="115.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="52.1" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="52.1" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="52.1" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="52.1" y="51.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="52.1" y="35.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="55.1" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (13 samples, 0.20%)</title><rect x="52.5" y="163.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (13 samples, 0.20%)</title><rect x="52.5" y="147.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (6 samples, 0.09%)</title><rect x="52.5" y="131.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.09%)</title><rect x="52.5" y="115.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.09%)</title><rect x="52.5" y="99.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="55.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.11%)</title><rect x="53.5" y="131.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.5" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.11%)</title><rect x="53.5" y="115.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="56.5" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.24%)</title><rect x="54.8" y="163.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.24%)</title><rect x="54.8" y="147.0" width="2.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="57.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.06%)</title><rect x="57.7" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.06%)</title><rect x="57.7" y="195.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="60.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (7 samples, 0.11%)</title><rect x="58.4" y="275.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.09%)</title><rect x="58.6" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (6 samples, 0.09%)</title><rect x="58.6" y="243.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (6 samples, 0.09%)</title><rect x="58.6" y="227.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.09%)</title><rect x="58.6" y="211.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.08%)</title><rect x="58.8" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.08%)</title><rect x="58.8" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.8" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="58.8" y="163.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="61.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.06%)</title><rect x="59.7" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (4 samples, 0.06%)</title><rect x="59.7" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="59.7" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.06%)</title><rect x="59.7" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (4 samples, 0.06%)</title><rect x="59.7" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="59.7" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.06%)</title><rect x="59.7" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.06%)</title><rect x="59.7" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.7" y="174.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="59.7" y="147.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="62.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (14 samples, 0.21%)</title><rect x="60.4" y="275.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.4" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.09%)</title><rect x="60.4" y="259.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="63.4" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.11%)</title><rect x="61.7" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.11%)</title><rect x="61.7" y="243.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.11%)</title><rect x="62.9" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.11%)</title><rect x="62.9" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.11%)</title><rect x="62.9" y="291.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="65.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (3 samples, 0.05%)</title><rect x="64.2" y="355.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="67.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.06%)</title><rect x="64.7" y="355.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="67.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (21 samples, 0.32%)</title><rect x="65.5" y="355.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="65.5" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="65.5" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (3 samples, 0.05%)</title><rect x="65.8" y="339.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (2 samples, 0.03%)</title><rect x="66.6" y="339.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="69.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.11%)</title><rect x="66.9" y="339.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.11%)</title><rect x="66.9" y="323.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.11%)</title><rect x="66.9" y="307.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.11%)</title><rect x="66.9" y="291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.11%)</title><rect x="66.9" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.11%)</title><rect x="66.9" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (7 samples, 0.11%)</title><rect x="66.9" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7 samples, 0.11%)</title><rect x="66.9" y="227.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.11%)</title><rect x="66.9" y="211.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="66.9" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="66.9" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$173/2084879101.get$Lambda (3 samples, 0.05%)</title><rect x="66.9" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$173 (3 samples, 0.05%)</title><rect x="66.9" y="147.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="69.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.03%)</title><rect x="67.5" y="195.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="70.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="67.8" y="195.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="67.8" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (6 samples, 0.09%)</title><rect x="68.2" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.2" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="68.2" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="71.2" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.06%)</title><rect x="68.5" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="71.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.08%)</title><rect x="69.3" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.08%)</title><rect x="69.3" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.08%)</title><rect x="69.3" y="435.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="72.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.09%)</title><rect x="70.2" y="499.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.09%)</title><rect x="70.2" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.08%)</title><rect x="70.2" y="467.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="73.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (108 samples, 1.65%)</title><rect x="71.2" y="499.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="71.2" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="71.2" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/264389024.get$Lambda (2 samples, 0.03%)</title><rect x="71.2" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$166 (2 samples, 0.03%)</title><rect x="71.2" y="435.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="74.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.08%)</title><rect x="71.6" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.08%)</title><rect x="71.6" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$167/2108789873.apply (3 samples, 0.05%)</title><rect x="71.6" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (3 samples, 0.05%)</title><rect x="71.6" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.05%)</title><rect x="71.6" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="71.6" y="403.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="74.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="72.2" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="72.2" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="72.2" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="75.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.05%)</title><rect x="72.5" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.05%)</title><rect x="72.5" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="72.5" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="72.5" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="72.5" y="419.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="75.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (98 samples, 1.50%)</title><rect x="73.1" y="483.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (98 samples, 1.50%)</title><rect x="73.1" y="467.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (7 samples, 0.11%)</title><rect x="73.1" y="451.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="76.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (88 samples, 1.35%)</title><rect x="74.3" y="451.0" width="15.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (3 samples, 0.05%)</title><rect x="74.3" y="435.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="77.3" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.05%)</title><rect x="74.9" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="77.9" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4 samples, 0.06%)</title><rect x="75.6" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.06%)</title><rect x="75.6" y="419.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.06%)</title><rect x="75.6" y="403.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="78.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (9 samples, 0.14%)</title><rect x="76.5" y="435.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="79.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (4 samples, 0.06%)</title><rect x="78.1" y="435.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (7 samples, 0.11%)</title><rect x="78.8" y="435.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="81.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.08%)</title><rect x="80.1" y="435.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="83.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (22 samples, 0.34%)</title><rect x="81.0" y="435.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (2 samples, 0.03%)</title><rect x="81.0" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="84.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (5 samples, 0.08%)</title><rect x="81.9" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (5 samples, 0.08%)</title><rect x="81.9" y="403.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="84.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="83.0" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="86.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (9 samples, 0.14%)</title><rect x="83.4" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (3 samples, 0.05%)</title><rect x="83.4" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="86.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (3 samples, 0.05%)</title><rect x="83.9" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (3 samples, 0.05%)</title><rect x="83.9" y="387.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="86.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.05%)</title><rect x="84.4" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.03%)</title><rect x="84.6" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="87.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (18 samples, 0.28%)</title><rect x="85.0" y="435.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (2 samples, 0.03%)</title><rect x="85.3" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="88.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (4 samples, 0.06%)</title><rect x="85.9" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (4 samples, 0.06%)</title><rect x="85.9" y="403.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="88.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (9 samples, 0.14%)</title><rect x="86.6" y="419.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.03%)</title><rect x="86.6" y="403.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="89.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (2 samples, 0.03%)</title><rect x="87.0" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.03%)</title><rect x="87.0" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="90.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (5 samples, 0.08%)</title><rect x="87.3" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (2 samples, 0.03%)</title><rect x="87.5" y="387.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="90.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.03%)</title><rect x="87.9" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="90.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (2 samples, 0.03%)</title><rect x="88.2" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="88.2" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="88.2" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$161/417104487.get$Lambda (2 samples, 0.03%)</title><rect x="88.2" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$161 (2 samples, 0.03%)</title><rect x="88.2" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (4 samples, 0.06%)</title><rect x="88.6" y="435.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (4 samples, 0.06%)</title><rect x="88.6" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (4 samples, 0.06%)</title><rect x="88.6" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.6" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.06%)</title><rect x="88.6" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.6" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.06%)</title><rect x="88.6" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.06%)</title><rect x="88.6" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="88.6" y="339.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (5 samples, 0.08%)</title><rect x="89.3" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.3" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.08%)</title><rect x="89.3" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.run (5 samples, 0.08%)</title><rect x="89.3" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.08%)</title><rect x="89.3" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.3" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.06%)</title><rect x="89.5" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.5" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.05%)</title><rect x="89.7" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.05%)</title><rect x="89.7" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.7" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.05%)</title><rect x="89.7" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.7" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.05%)</title><rect x="89.7" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.7" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (3 samples, 0.05%)</title><rect x="89.7" y="291.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="92.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.05%)</title><rect x="90.2" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="90.2" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="93.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (8 samples, 0.12%)</title><rect x="90.8" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (8 samples, 0.12%)</title><rect x="90.8" y="531.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.12%)</title><rect x="90.8" y="515.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.12%)</title><rect x="90.8" y="499.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="93.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (10 samples, 0.15%)</title><rect x="92.2" y="547.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (8 samples, 0.12%)</title><rect x="92.2" y="531.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="95.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (2 samples, 0.03%)</title><rect x="93.7" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.03%)</title><rect x="93.7" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="93.7" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.7" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (2 samples, 0.03%)</title><rect x="93.7" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="93.7" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="93.7" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.03%)</title><rect x="93.7" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="93.7" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.7" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.03%)</title><rect x="93.7" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.7" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.03%)</title><rect x="93.7" y="387.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.7" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.03%)</title><rect x="93.7" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="96.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (704 samples, 10.78%)</title><rect x="94.0" y="611.0" width="127.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.0" y="622.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (704 samples, 10.78%)</title><rect x="94.0" y="595.0" width="127.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.0" y="606.0">java/util/concur..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (700 samples, 10.72%)</title><rect x="94.0" y="579.0" width="126.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.0" y="590.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (700 samples, 10.72%)</title><rect x="94.0" y="563.0" width="126.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.0" y="574.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (700 samples, 10.72%)</title><rect x="94.0" y="547.0" width="126.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.0" y="558.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (700 samples, 10.72%)</title><rect x="94.0" y="531.0" width="126.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.0" y="542.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (608 samples, 9.31%)</title><rect x="94.0" y="515.0" width="109.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.0" y="526.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (608 samples, 9.31%)</title><rect x="94.0" y="499.0" width="109.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.0" y="510.0">one/nio/util/..</text>
</g>
<g>
<title>byte[] (347 samples, 5.31%)</title><rect x="94.0" y="483.0" width="62.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="97.0" y="494.0">byte[]</text>
</g>
<g>
<title>byte[] (261 samples, 4.00%)</title><rect x="156.7" y="483.0" width="47.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.7" y="494.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (92 samples, 1.41%)</title><rect x="203.9" y="515.0" width="16.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.9" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (92 samples, 1.41%)</title><rect x="203.9" y="499.0" width="16.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="206.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (4 samples, 0.06%)</title><rect x="220.5" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (4 samples, 0.06%)</title><rect x="220.5" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (4 samples, 0.06%)</title><rect x="220.5" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="220.5" y="531.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="220.5" y="515.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="223.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get (1,317 samples, 20.17%)</title><rect x="221.2" y="627.0" width="238.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.2" y="638.0">ru/mail/polis/service/ivanovand..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$get$0 (1,317 samples, 20.17%)</title><rect x="221.2" y="611.0" width="238.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.2" y="622.0">ru/mail/polis/service/ivanovand..</text>
</g>
<g>
<title>java/lang/String.getBytes (74 samples, 1.13%)</title><rect x="221.2" y="595.0" width="13.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (74 samples, 1.13%)</title><rect x="221.2" y="579.0" width="13.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (74 samples, 1.13%)</title><rect x="221.2" y="563.0" width="13.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 1.13%)</title><rect x="221.2" y="547.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.2" y="558.0"></text>
</g>
<g>
<title>byte[] (74 samples, 1.13%)</title><rect x="221.2" y="531.0" width="13.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="224.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (243 samples, 3.72%)</title><rect x="234.6" y="595.0" width="43.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.6" y="606.0">one/..</text>
</g>
<g>
<title>one.nio.http.Response (34 samples, 0.52%)</title><rect x="234.6" y="579.0" width="6.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="237.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (209 samples, 3.20%)</title><rect x="240.7" y="579.0" width="37.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="243.7" y="590.0">one..</text>
</g>
<g>
<title>byte[] (83 samples, 1.27%)</title><rect x="240.7" y="563.0" width="15.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="243.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (59 samples, 0.90%)</title><rect x="255.7" y="563.0" width="10.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="258.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 1.03%)</title><rect x="266.4" y="563.0" width="12.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="269.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (679 samples, 10.40%)</title><rect x="278.5" y="595.0" width="122.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.5" y="606.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (627 samples, 9.60%)</title><rect x="278.5" y="579.0" width="113.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.5" y="590.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (627 samples, 9.60%)</title><rect x="278.5" y="563.0" width="113.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.5" y="574.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>byte[] (572 samples, 8.76%)</title><rect x="278.5" y="547.0" width="103.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="281.5" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (55 samples, 0.84%)</title><rect x="381.8" y="547.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.toArrayShifted (52 samples, 0.80%)</title><rect x="391.8" y="579.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (52 samples, 0.80%)</title><rect x="391.8" y="563.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.8" y="574.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.80%)</title><rect x="391.8" y="547.0" width="9.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="394.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (321 samples, 4.92%)</title><rect x="401.2" y="595.0" width="58.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="404.2" y="606.0">ru/mai..</text>
</g>
<g>
<title>byte[] (282 samples, 4.32%)</title><rect x="401.2" y="579.0" width="50.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="404.2" y="590.0">byte[]</text>
</g>
<g>
<title>byte[] (39 samples, 0.60%)</title><rect x="452.1" y="579.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="455.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (635 samples, 9.72%)</title><rect x="459.2" y="643.0" width="114.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.2" y="654.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (635 samples, 9.72%)</title><rect x="459.2" y="627.0" width="114.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.2" y="638.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (81 samples, 1.24%)</title><rect x="459.2" y="611.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (81 samples, 1.24%)</title><rect x="459.2" y="595.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (81 samples, 1.24%)</title><rect x="459.2" y="579.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (81 samples, 1.24%)</title><rect x="459.2" y="563.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (72 samples, 1.10%)</title><rect x="459.2" y="547.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="462.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (72 samples, 1.10%)</title><rect x="459.2" y="531.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (72 samples, 1.10%)</title><rect x="459.2" y="515.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (72 samples, 1.10%)</title><rect x="459.2" y="499.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (55 samples, 0.84%)</title><rect x="459.2" y="483.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (55 samples, 0.84%)</title><rect x="459.2" y="467.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.2" y="478.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.84%)</title><rect x="459.2" y="451.0" width="9.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="462.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (17 samples, 0.26%)</title><rect x="469.1" y="483.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.1" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (17 samples, 0.26%)</title><rect x="469.1" y="467.0" width="3.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="472.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (9 samples, 0.14%)</title><rect x="472.2" y="547.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (9 samples, 0.14%)</title><rect x="472.2" y="531.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (9 samples, 0.14%)</title><rect x="472.2" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.14%)</title><rect x="472.2" y="499.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.14%)</title><rect x="472.2" y="483.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="475.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.apply (462 samples, 7.07%)</title><rect x="473.8" y="611.0" width="83.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.8" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$sendToReplicas$2 (462 samples, 7.07%)</title><rect x="473.8" y="595.0" width="83.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.8" y="606.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.formFinalResponse (462 samples, 7.07%)</title><rect x="473.8" y="579.0" width="83.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.8" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/Collection.stream (20 samples, 0.31%)</title><rect x="473.8" y="563.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (8 samples, 0.12%)</title><rect x="473.8" y="547.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.8" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (8 samples, 0.12%)</title><rect x="473.8" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.8" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (8 samples, 0.12%)</title><rect x="473.8" y="515.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="476.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.18%)</title><rect x="475.2" y="547.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.2" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.18%)</title><rect x="475.2" y="531.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="478.2" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (2 samples, 0.03%)</title><rect x="477.4" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="477.4" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="477.4" y="531.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.4" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$235/8451200.get$Lambda (2 samples, 0.03%)</title><rect x="477.4" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.4" y="526.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$235 (2 samples, 0.03%)</title><rect x="477.4" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="480.4" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (147 samples, 2.25%)</title><rect x="477.8" y="563.0" width="26.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.8" y="574.0">j..</text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.03%)</title><rect x="477.8" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="480.8" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="477.8" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="480.8" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.03%)</title><rect x="477.8" y="515.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="480.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica$$Lambda$237/461658586.apply (145 samples, 2.22%)</title><rect x="478.1" y="547.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.1" y="558.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.lambda$formFinalResponse$2 (145 samples, 2.22%)</title><rect x="478.1" y="531.0" width="26.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.1" y="542.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (5 samples, 0.08%)</title><rect x="478.1" y="515.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="481.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (31 samples, 0.47%)</title><rect x="479.0" y="515.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.0" y="526.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.29%)</title><rect x="479.0" y="499.0" width="3.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="482.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.11%)</title><rect x="482.5" y="499.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="485.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.08%)</title><rect x="483.7" y="499.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="486.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getData (33 samples, 0.51%)</title><rect x="484.6" y="515.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.6" y="526.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.51%)</title><rect x="484.6" y="499.0" width="6.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="487.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampByData (76 samples, 1.16%)</title><rect x="490.6" y="515.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (37 samples, 0.57%)</title><rect x="490.6" y="499.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.6" y="510.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.57%)</title><rect x="490.6" y="483.0" width="6.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="493.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (39 samples, 0.60%)</title><rect x="497.3" y="499.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.3" y="510.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.60%)</title><rect x="497.3" y="483.0" width="7.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="500.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (19 samples, 0.29%)</title><rect x="504.3" y="563.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.3" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (19 samples, 0.29%)</title><rect x="504.3" y="547.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="507.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (240 samples, 3.67%)</title><rect x="507.8" y="563.0" width="43.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.8" y="574.0">java..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (7 samples, 0.11%)</title><rect x="507.8" y="547.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.11%)</title><rect x="507.8" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.11%)</title><rect x="507.8" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.8" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$236/272885942.get$Lambda (7 samples, 0.11%)</title><rect x="507.8" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.8" y="510.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$236 (7 samples, 0.11%)</title><rect x="507.8" y="483.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="510.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (233 samples, 3.57%)</title><rect x="509.0" y="547.0" width="42.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.0" y="558.0">java..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (226 samples, 3.46%)</title><rect x="509.0" y="531.0" width="40.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.0" y="542.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (226 samples, 3.46%)</title><rect x="509.0" y="515.0" width="40.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.0" y="526.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (212 samples, 3.25%)</title><rect x="509.0" y="499.0" width="38.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.0" y="510.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (207 samples, 3.17%)</title><rect x="509.0" y="483.0" width="37.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.0" y="494.0">jav..</text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (207 samples, 3.17%)</title><rect x="509.0" y="467.0" width="37.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.0" y="478.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (207 samples, 3.17%)</title><rect x="509.0" y="451.0" width="37.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.0" y="462.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (207 samples, 3.17%)</title><rect x="509.0" y="435.0" width="37.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.0" y="446.0">jav..</text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$236/272885942.apply (207 samples, 3.17%)</title><rect x="509.0" y="419.0" width="37.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.0" y="430.0">jav..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (207 samples, 3.17%)</title><rect x="509.0" y="403.0" width="37.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.0" y="414.0">jav..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$235/8451200.compare (207 samples, 3.17%)</title><rect x="509.0" y="387.0" width="37.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.0" y="398.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (207 samples, 3.17%)</title><rect x="509.0" y="371.0" width="37.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.0" y="382.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica$$Lambda$234/1096180869.applyAsLong (207 samples, 3.17%)</title><rect x="509.0" y="355.0" width="37.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.0" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.lambda$formFinalResponse$1 (207 samples, 3.17%)</title><rect x="509.0" y="339.0" width="37.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.0" y="350.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.47%)</title><rect x="509.0" y="323.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.47%)</title><rect x="509.0" y="307.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.47%)</title><rect x="509.0" y="291.0" width="5.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="512.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampByData (176 samples, 2.69%)</title><rect x="514.6" y="323.0" width="31.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.6" y="334.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (73 samples, 1.12%)</title><rect x="514.6" y="307.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.6" y="318.0"></text>
</g>
<g>
<title>byte[] (73 samples, 1.12%)</title><rect x="514.6" y="291.0" width="13.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="517.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (103 samples, 1.58%)</title><rect x="527.8" y="307.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.8" y="318.0"></text>
</g>
<g>
<title>byte[] (71 samples, 1.09%)</title><rect x="527.8" y="291.0" width="12.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="530.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (32 samples, 0.49%)</title><rect x="540.6" y="291.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.6" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.49%)</title><rect x="540.6" y="275.0" width="5.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="543.6" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.08%)</title><rect x="546.4" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (5 samples, 0.08%)</title><rect x="546.4" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.4" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (5 samples, 0.08%)</title><rect x="546.4" y="451.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="549.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (8 samples, 0.12%)</title><rect x="547.3" y="499.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (8 samples, 0.12%)</title><rect x="547.3" y="483.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.3" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (8 samples, 0.12%)</title><rect x="547.3" y="467.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="550.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (6 samples, 0.09%)</title><rect x="548.8" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (6 samples, 0.09%)</title><rect x="548.8" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (6 samples, 0.09%)</title><rect x="548.8" y="467.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (6 samples, 0.09%)</title><rect x="548.8" y="451.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="551.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (7 samples, 0.11%)</title><rect x="549.9" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.9" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (7 samples, 0.11%)</title><rect x="549.9" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="552.9" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.12%)</title><rect x="551.1" y="563.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="554.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (26 samples, 0.40%)</title><rect x="552.6" y="563.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.6" y="574.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.17%)</title><rect x="552.6" y="547.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="555.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.08%)</title><rect x="554.6" y="547.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="557.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.15%)</title><rect x="555.5" y="547.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="558.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology$$Lambda$133/1116379785.apply (92 samples, 1.41%)</title><rect x="557.3" y="611.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.lambda$forwardRequest$0 (92 samples, 1.41%)</title><rect x="557.3" y="595.0" width="16.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (15 samples, 0.23%)</title><rect x="557.3" y="579.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (15 samples, 0.23%)</title><rect x="557.3" y="563.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.3" y="574.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="557.3" y="547.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="560.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.09%)</title><rect x="558.9" y="547.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="561.9" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (25 samples, 0.38%)</title><rect x="560.0" y="579.0" width="4.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="563.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (52 samples, 0.80%)</title><rect x="564.5" y="579.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.5" y="590.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.31%)</title><rect x="564.5" y="563.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="567.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.24%)</title><rect x="568.1" y="563.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.24%)</title><rect x="571.0" y="563.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="574.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (102 samples, 1.56%)</title><rect x="573.9" y="643.0" width="18.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="576.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (91 samples, 1.39%)</title><rect x="573.9" y="627.0" width="16.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (91 samples, 1.39%)</title><rect x="573.9" y="611.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (91 samples, 1.39%)</title><rect x="573.9" y="595.0" width="16.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (91 samples, 1.39%)</title><rect x="573.9" y="579.0" width="16.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="576.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (11 samples, 0.17%)</title><rect x="590.3" y="627.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.17%)</title><rect x="590.3" y="611.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (11 samples, 0.17%)</title><rect x="590.3" y="595.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (11 samples, 0.17%)</title><rect x="590.3" y="579.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="593.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.run (39 samples, 0.60%)</title><rect x="592.3" y="643.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (39 samples, 0.60%)</title><rect x="592.3" y="627.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (39 samples, 0.60%)</title><rect x="592.3" y="611.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (39 samples, 0.60%)</title><rect x="592.3" y="595.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.60%)</title><rect x="592.3" y="579.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (39 samples, 0.60%)</title><rect x="592.3" y="563.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (39 samples, 0.60%)</title><rect x="592.3" y="547.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (39 samples, 0.60%)</title><rect x="592.3" y="531.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (39 samples, 0.60%)</title><rect x="592.3" y="515.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (39 samples, 0.60%)</title><rect x="592.3" y="499.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (39 samples, 0.60%)</title><rect x="592.3" y="483.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (35 samples, 0.54%)</title><rect x="592.3" y="467.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="592.3" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="592.3" y="435.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$195/453975360.get$Lambda (3 samples, 0.05%)</title><rect x="592.3" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$195 (3 samples, 0.05%)</title><rect x="592.3" y="403.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="595.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (31 samples, 0.47%)</title><rect x="593.0" y="451.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (4 samples, 0.06%)</title><rect x="593.0" y="435.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="596.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.41%)</title><rect x="593.8" y="435.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (27 samples, 0.41%)</title><rect x="593.8" y="419.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.41%)</title><rect x="593.8" y="403.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (13 samples, 0.20%)</title><rect x="593.8" y="387.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (4 samples, 0.06%)</title><rect x="593.8" y="371.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="596.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.apply (9 samples, 0.14%)</title><rect x="594.5" y="371.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (9 samples, 0.14%)</title><rect x="594.5" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (9 samples, 0.14%)</title><rect x="594.5" y="339.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.05%)</title><rect x="594.5" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.5" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.05%)</title><rect x="594.5" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.5" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.05%)</title><rect x="594.5" y="291.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="597.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (6 samples, 0.09%)</title><rect x="595.0" y="323.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (6 samples, 0.09%)</title><rect x="595.0" y="307.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.09%)</title><rect x="595.0" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (4 samples, 0.06%)</title><rect x="595.0" y="275.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="598.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="595.8" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="595.8" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="595.8" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="598.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (14 samples, 0.21%)</title><rect x="596.1" y="387.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (14 samples, 0.21%)</title><rect x="596.1" y="371.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.apply (14 samples, 0.21%)</title><rect x="596.1" y="355.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (14 samples, 0.21%)</title><rect x="596.1" y="339.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="599.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (14 samples, 0.21%)</title><rect x="596.1" y="323.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.apply (14 samples, 0.21%)</title><rect x="596.1" y="307.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="599.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (14 samples, 0.21%)</title><rect x="596.1" y="291.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="596.1" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="596.1" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.get$Lambda (2 samples, 0.03%)</title><rect x="596.1" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="599.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$199 (2 samples, 0.03%)</title><rect x="596.1" y="227.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="599.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.09%)</title><rect x="596.5" y="275.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.09%)</title><rect x="596.5" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (4 samples, 0.06%)</title><rect x="596.5" y="243.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="599.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="597.2" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="597.2" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="597.2" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="600.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (6 samples, 0.09%)</title><rect x="597.6" y="275.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (4 samples, 0.06%)</title><rect x="597.6" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (3 samples, 0.05%)</title><rect x="597.6" y="243.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="600.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="598.3" y="259.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="598.3" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="598.3" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="601.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="598.3" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="598.3" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.03%)</title><rect x="598.3" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.03%)</title><rect x="598.3" y="163.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="601.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.06%)</title><rect x="598.6" y="467.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.06%)</title><rect x="598.6" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (4 samples, 0.06%)</title><rect x="598.6" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (4 samples, 0.06%)</title><rect x="598.6" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (4 samples, 0.06%)</title><rect x="598.6" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.6" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.06%)</title><rect x="598.6" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.6" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.05%)</title><rect x="598.8" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.8" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (3 samples, 0.05%)</title><rect x="598.8" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="601.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (365 samples, 5.59%)</title><rect x="599.4" y="643.0" width="65.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.4" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (365 samples, 5.59%)</title><rect x="599.4" y="627.0" width="65.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.4" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (243 samples, 3.72%)</title><rect x="599.4" y="611.0" width="43.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.4" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (243 samples, 3.72%)</title><rect x="599.4" y="595.0" width="43.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.4" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (243 samples, 3.72%)</title><rect x="599.4" y="579.0" width="43.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.4" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (7 samples, 0.11%)</title><rect x="599.4" y="563.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (7 samples, 0.11%)</title><rect x="599.4" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (7 samples, 0.11%)</title><rect x="599.4" y="531.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (7 samples, 0.11%)</title><rect x="599.4" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (4 samples, 0.06%)</title><rect x="599.4" y="499.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (4 samples, 0.06%)</title><rect x="599.4" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="599.4" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.06%)</title><rect x="599.4" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.06%)</title><rect x="599.4" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.4" y="446.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="599.4" y="419.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="602.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.05%)</title><rect x="600.1" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="600.1" y="483.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="600.1" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (3 samples, 0.05%)</title><rect x="600.1" y="451.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (3 samples, 0.05%)</title><rect x="600.1" y="435.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="603.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (236 samples, 3.61%)</title><rect x="600.6" y="563.0" width="42.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.6" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (236 samples, 3.61%)</title><rect x="600.6" y="547.0" width="42.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.6" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (236 samples, 3.61%)</title><rect x="600.6" y="531.0" width="42.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.6" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (236 samples, 3.61%)</title><rect x="600.6" y="515.0" width="42.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.6" y="526.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (116 samples, 1.78%)</title><rect x="600.6" y="499.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (116 samples, 1.78%)</title><rect x="600.6" y="483.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (116 samples, 1.78%)</title><rect x="600.6" y="467.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (116 samples, 1.78%)</title><rect x="600.6" y="451.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (116 samples, 1.78%)</title><rect x="600.6" y="435.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (116 samples, 1.78%)</title><rect x="600.6" y="419.0" width="21.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (116 samples, 1.78%)</title><rect x="600.6" y="403.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (112 samples, 1.71%)</title><rect x="600.6" y="387.0" width="20.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (112 samples, 1.71%)</title><rect x="600.6" y="371.0" width="20.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (109 samples, 1.67%)</title><rect x="600.6" y="355.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="600.6" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="603.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.apply (104 samples, 1.59%)</title><rect x="601.0" y="339.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (104 samples, 1.59%)</title><rect x="601.0" y="323.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.03%)</title><rect x="601.2" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.03%)</title><rect x="601.2" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (101 samples, 1.55%)</title><rect x="601.5" y="307.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.12%)</title><rect x="601.5" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.12%)</title><rect x="601.5" y="275.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.06%)</title><rect x="601.5" y="259.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="604.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="602.3" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="602.3" y="243.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.06%)</title><rect x="602.3" y="227.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="605.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (93 samples, 1.42%)</title><rect x="603.0" y="291.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$123/285631240.apply (6 samples, 0.09%)</title><rect x="603.0" y="275.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (6 samples, 0.09%)</title><rect x="603.0" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (6 samples, 0.09%)</title><rect x="603.0" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (2 samples, 0.03%)</title><rect x="603.0" y="227.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="606.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (4 samples, 0.06%)</title><rect x="603.3" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="603.5" y="211.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="606.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (87 samples, 1.33%)</title><rect x="604.1" y="275.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2017647512.linkToTargetMethod (4 samples, 0.06%)</title><rect x="604.1" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1812561793.invokeStatic (4 samples, 0.06%)</title><rect x="604.1" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.get$Lambda (4 samples, 0.06%)</title><rect x="604.1" y="227.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$212 (4 samples, 0.06%)</title><rect x="604.1" y="211.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="607.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (16 samples, 0.24%)</title><rect x="604.8" y="259.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.09%)</title><rect x="604.8" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.03%)</title><rect x="604.8" y="227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (2 samples, 0.03%)</title><rect x="604.8" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="607.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.06%)</title><rect x="605.1" y="227.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.06%)</title><rect x="605.1" y="211.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="608.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (6 samples, 0.09%)</title><rect x="605.9" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.09%)</title><rect x="605.9" y="227.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.09%)</title><rect x="605.9" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$208/768646236.get (3 samples, 0.05%)</title><rect x="606.1" y="195.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.1" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (3 samples, 0.05%)</title><rect x="606.1" y="179.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="609.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="606.6" y="195.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="606.6" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.6" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.03%)</title><rect x="606.6" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.6" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.03%)</title><rect x="606.6" y="147.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (4 samples, 0.06%)</title><rect x="607.0" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (4 samples, 0.06%)</title><rect x="607.0" y="227.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="610.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (14 samples, 0.21%)</title><rect x="607.7" y="259.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.11%)</title><rect x="607.7" y="243.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (6 samples, 0.09%)</title><rect x="607.7" y="227.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="610.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.11%)</title><rect x="608.9" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.11%)</title><rect x="608.9" y="227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.06%)</title><rect x="608.9" y="211.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="611.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="609.7" y="211.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="609.7" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.7" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="609.7" y="179.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="612.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (3 samples, 0.05%)</title><rect x="610.2" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="613.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (3 samples, 0.05%)</title><rect x="610.8" y="259.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="613.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 0.69%)</title><rect x="611.7" y="259.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.run (45 samples, 0.69%)</title><rect x="611.7" y="243.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (45 samples, 0.69%)</title><rect x="611.7" y="227.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.12%)</title><rect x="611.7" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.12%)</title><rect x="611.7" y="195.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.get$Lambda (2 samples, 0.03%)</title><rect x="611.7" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$213 (2 samples, 0.03%)</title><rect x="611.7" y="163.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="614.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1661738971.get$Lambda (3 samples, 0.05%)</title><rect x="612.0" y="179.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (3 samples, 0.05%)</title><rect x="612.0" y="163.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="615.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/173548741.get$Lambda (3 samples, 0.05%)</title><rect x="612.6" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (3 samples, 0.05%)</title><rect x="612.6" y="163.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="615.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (4 samples, 0.06%)</title><rect x="613.3" y="211.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="616.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.03%)</title><rect x="614.0" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="614.0" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="617.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (12 samples, 0.18%)</title><rect x="614.4" y="211.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (12 samples, 0.18%)</title><rect x="614.4" y="195.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.17%)</title><rect x="614.5" y="179.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.17%)</title><rect x="614.5" y="163.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.17%)</title><rect x="614.5" y="147.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.11%)</title><rect x="614.5" y="131.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="617.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="615.8" y="131.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="615.8" y="115.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.8" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.06%)</title><rect x="615.8" y="99.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="618.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.05%)</title><rect x="616.5" y="211.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="616.5" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (3 samples, 0.05%)</title><rect x="616.5" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="616.5" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="616.7" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="616.7" y="131.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.7" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="616.7" y="115.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="619.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (15 samples, 0.23%)</title><rect x="617.1" y="211.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (14 samples, 0.21%)</title><rect x="617.3" y="195.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.21%)</title><rect x="617.3" y="179.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (14 samples, 0.21%)</title><rect x="617.3" y="163.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.21%)</title><rect x="617.3" y="147.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.3" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.05%)</title><rect x="617.3" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.3" y="142.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="617.3" y="115.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="620.3" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.17%)</title><rect x="617.8" y="131.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.17%)</title><rect x="617.8" y="115.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.8" y="126.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.17%)</title><rect x="617.8" y="99.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="620.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.apply (3 samples, 0.05%)</title><rect x="619.8" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.05%)</title><rect x="619.8" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="620.0" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="620.0" y="291.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="623.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.05%)</title><rect x="620.3" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.05%)</title><rect x="620.3" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/516891066.apply (3 samples, 0.05%)</title><rect x="620.3" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3 samples, 0.05%)</title><rect x="620.3" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.05%)</title><rect x="620.3" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="620.3" y="275.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="623.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/398643824.apply (4 samples, 0.06%)</title><rect x="620.9" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (4 samples, 0.06%)</title><rect x="620.9" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (4 samples, 0.06%)</title><rect x="620.9" y="355.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="623.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (120 samples, 1.84%)</title><rect x="621.6" y="499.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.6" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (9 samples, 0.14%)</title><rect x="621.6" y="483.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.14%)</title><rect x="621.6" y="467.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.14%)</title><rect x="621.6" y="451.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.14%)</title><rect x="621.6" y="435.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.14%)</title><rect x="621.6" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.6" y="430.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.14%)</title><rect x="621.6" y="403.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="624.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (15 samples, 0.23%)</title><rect x="623.2" y="483.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="623.2" y="467.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="626.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="623.8" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="623.8" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.8" y="462.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="623.8" y="435.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="626.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10 samples, 0.15%)</title><rect x="624.1" y="467.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.15%)</title><rect x="624.1" y="451.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.14%)</title><rect x="624.1" y="435.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="627.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (28 samples, 0.43%)</title><rect x="625.9" y="483.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (28 samples, 0.43%)</title><rect x="625.9" y="467.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (28 samples, 0.43%)</title><rect x="625.9" y="451.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.9" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.06%)</title><rect x="626.3" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="629.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="627.0" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="627.0" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (4 samples, 0.06%)</title><rect x="627.0" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="630.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (4 samples, 0.06%)</title><rect x="627.0" y="387.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="630.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (16 samples, 0.24%)</title><rect x="627.9" y="435.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (16 samples, 0.24%)</title><rect x="627.9" y="419.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (16 samples, 0.24%)</title><rect x="627.9" y="403.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="627.9" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="627.9" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (3 samples, 0.05%)</title><rect x="627.9" y="355.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (3 samples, 0.05%)</title><rect x="627.9" y="339.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="630.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.06%)</title><rect x="628.5" y="387.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (4 samples, 0.06%)</title><rect x="628.5" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.06%)</title><rect x="628.5" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="628.5" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="628.5" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="628.5" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="628.5" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.06%)</title><rect x="628.5" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="628.5" y="259.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="631.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (5 samples, 0.08%)</title><rect x="629.2" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (5 samples, 0.08%)</title><rect x="629.2" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (3 samples, 0.05%)</title><rect x="629.2" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.05%)</title><rect x="629.2" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="629.2" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="632.2" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="629.7" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.7" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="629.7" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="632.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="630.1" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.06%)</title><rect x="630.1" y="371.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="633.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (68 samples, 1.04%)</title><rect x="631.0" y="483.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="631.2" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="631.2" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="634.2" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="631.2" y="435.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="634.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (7 samples, 0.11%)</title><rect x="631.7" y="467.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.11%)</title><rect x="631.7" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="631.7" y="435.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="634.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="632.4" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.4" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="632.4" y="419.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="635.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (57 samples, 0.87%)</title><rect x="633.0" y="467.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.26%)</title><rect x="633.0" y="451.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.26%)</title><rect x="633.0" y="435.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.0" y="446.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.09%)</title><rect x="633.0" y="419.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="636.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.17%)</title><rect x="634.1" y="419.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.1" y="430.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.17%)</title><rect x="634.1" y="403.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="637.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (8 samples, 0.12%)</title><rect x="636.0" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (8 samples, 0.12%)</title><rect x="636.0" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.0" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="636.0" y="419.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="639.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="637.1" y="419.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="640.1" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.11%)</title><rect x="637.5" y="451.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.11%)</title><rect x="637.5" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.11%)</title><rect x="637.5" y="419.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.11%)</title><rect x="637.5" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.5" y="414.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.11%)</title><rect x="637.5" y="387.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="640.5" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.17%)</title><rect x="638.8" y="451.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.17%)</title><rect x="638.8" y="435.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.17%)</title><rect x="638.8" y="419.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.17%)</title><rect x="638.8" y="403.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.17%)</title><rect x="638.8" y="387.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.17%)</title><rect x="638.8" y="371.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="641.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (14 samples, 0.21%)</title><rect x="640.7" y="451.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.11%)</title><rect x="640.7" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.11%)</title><rect x="640.7" y="419.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="643.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.09%)</title><rect x="642.0" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (6 samples, 0.09%)</title><rect x="642.0" y="419.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="645.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (122 samples, 1.87%)</title><rect x="643.3" y="611.0" width="22.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.3" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (122 samples, 1.87%)</title><rect x="643.3" y="595.0" width="22.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.3" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (122 samples, 1.87%)</title><rect x="643.3" y="579.0" width="22.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.3" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (122 samples, 1.87%)</title><rect x="643.3" y="563.0" width="22.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.3" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (122 samples, 1.87%)</title><rect x="643.3" y="547.0" width="22.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.3" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (11 samples, 0.17%)</title><rect x="643.3" y="531.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.09%)</title><rect x="643.3" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="646.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.09%)</title><rect x="643.3" y="499.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/912126104.get$Lambda (4 samples, 0.06%)</title><rect x="643.3" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$172 (4 samples, 0.06%)</title><rect x="643.3" y="467.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="646.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$173/2084879101.get$Lambda (2 samples, 0.03%)</title><rect x="644.0" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$173 (2 samples, 0.03%)</title><rect x="644.0" y="467.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="647.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (5 samples, 0.08%)</title><rect x="644.4" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (5 samples, 0.08%)</title><rect x="644.4" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (4 samples, 0.06%)</title><rect x="644.5" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (4 samples, 0.06%)</title><rect x="644.5" y="467.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="647.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (111 samples, 1.70%)</title><rect x="645.3" y="531.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (111 samples, 1.70%)</title><rect x="645.3" y="515.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (111 samples, 1.70%)</title><rect x="645.3" y="499.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (111 samples, 1.70%)</title><rect x="645.3" y="483.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (111 samples, 1.70%)</title><rect x="645.3" y="467.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (111 samples, 1.70%)</title><rect x="645.3" y="451.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.run (33 samples, 0.51%)</title><rect x="645.6" y="435.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (33 samples, 0.51%)</title><rect x="645.6" y="419.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (33 samples, 0.51%)</title><rect x="645.6" y="403.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (10 samples, 0.15%)</title><rect x="645.6" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.6" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.14%)</title><rect x="645.6" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.6" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (5 samples, 0.08%)</title><rect x="645.6" y="355.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.6" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (5 samples, 0.08%)</title><rect x="645.6" y="339.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="648.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.06%)</title><rect x="646.5" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.06%)</title><rect x="646.5" y="339.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="649.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (23 samples, 0.35%)</title><rect x="647.4" y="387.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (23 samples, 0.35%)</title><rect x="647.4" y="371.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (11 samples, 0.17%)</title><rect x="647.4" y="355.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.4" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="647.4" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.05%)</title><rect x="647.4" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.4" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="647.4" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.4" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.05%)</title><rect x="647.4" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.4" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.05%)</title><rect x="647.4" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.4" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (3 samples, 0.05%)</title><rect x="647.4" y="259.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="650.4" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.06%)</title><rect x="648.0" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.0" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.06%)</title><rect x="648.0" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.0" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (4 samples, 0.06%)</title><rect x="648.0" y="307.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="651.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="648.7" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="648.7" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.03%)</title><rect x="648.7" y="307.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="651.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (2 samples, 0.03%)</title><rect x="649.1" y="339.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="652.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (6 samples, 0.09%)</title><rect x="649.4" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.05%)</title><rect x="649.4" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.4" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.05%)</title><rect x="649.4" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (3 samples, 0.05%)</title><rect x="649.4" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="649.4" y="291.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="652.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.05%)</title><rect x="650.0" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.0" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.05%)</title><rect x="650.0" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.0" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.05%)</title><rect x="650.0" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="653.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (6 samples, 0.09%)</title><rect x="650.5" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (3 samples, 0.05%)</title><rect x="650.5" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="653.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.05%)</title><rect x="651.0" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2 samples, 0.03%)</title><rect x="651.0" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.03%)</title><rect x="651.0" y="307.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="651.0" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (2 samples, 0.03%)</title><rect x="651.0" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="654.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (68 samples, 1.04%)</title><rect x="651.6" y="435.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (68 samples, 1.04%)</title><rect x="651.6" y="419.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (68 samples, 1.04%)</title><rect x="651.6" y="403.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (55 samples, 0.84%)</title><rect x="651.6" y="387.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 0.84%)</title><rect x="651.6" y="371.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (55 samples, 0.84%)</title><rect x="651.6" y="355.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (55 samples, 0.84%)</title><rect x="651.6" y="339.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.accept (55 samples, 0.84%)</title><rect x="651.6" y="323.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (55 samples, 0.84%)</title><rect x="651.6" y="307.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (55 samples, 0.84%)</title><rect x="651.6" y="291.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 0.84%)</title><rect x="651.6" y="275.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.06%)</title><rect x="651.6" y="259.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.apply (4 samples, 0.06%)</title><rect x="651.6" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.06%)</title><rect x="651.6" y="227.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (4 samples, 0.06%)</title><rect x="651.6" y="211.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="654.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (51 samples, 0.78%)</title><rect x="652.3" y="259.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (51 samples, 0.78%)</title><rect x="652.3" y="243.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (51 samples, 0.78%)</title><rect x="652.3" y="227.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (51 samples, 0.78%)</title><rect x="652.3" y="211.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Thread (35 samples, 0.54%)</title><rect x="652.3" y="195.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="655.3" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (16 samples, 0.24%)</title><rect x="658.6" y="195.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.06%)</title><rect x="658.8" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="658.8" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="659.0" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.0" y="158.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="659.0" y="131.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="662.0" y="142.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (11 samples, 0.17%)</title><rect x="659.5" y="179.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.5" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (11 samples, 0.17%)</title><rect x="659.5" y="163.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.03%)</title><rect x="659.5" y="147.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="662.5" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (9 samples, 0.14%)</title><rect x="659.9" y="147.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.9" y="158.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (4 samples, 0.06%)</title><rect x="659.9" y="131.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.9" y="142.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (4 samples, 0.06%)</title><rect x="659.9" y="115.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.9" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (4 samples, 0.06%)</title><rect x="659.9" y="99.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="662.9" y="110.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (5 samples, 0.08%)</title><rect x="660.6" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.6" y="142.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (3 samples, 0.05%)</title><rect x="660.6" y="115.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="663.6" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (2 samples, 0.03%)</title><rect x="661.2" y="115.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="664.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (13 samples, 0.20%)</title><rect x="661.5" y="387.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.5" y="398.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.20%)</title><rect x="661.5" y="371.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="664.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (8 samples, 0.12%)</title><rect x="663.9" y="435.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (8 samples, 0.12%)</title><rect x="663.9" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (8 samples, 0.12%)</title><rect x="663.9" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (8 samples, 0.12%)</title><rect x="663.9" y="387.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (8 samples, 0.12%)</title><rect x="663.9" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.9" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.09%)</title><rect x="663.9" y="355.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="663.9" y="339.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="666.9" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.05%)</title><rect x="664.4" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.4" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (3 samples, 0.05%)</title><rect x="664.4" y="323.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="667.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="665.0" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="665.0" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="665.0" y="323.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="668.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (467 samples, 7.15%)</title><rect x="665.3" y="691.0" width="84.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.3" y="702.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.18%)</title><rect x="665.3" y="675.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.18%)</title><rect x="665.3" y="659.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1538519397.get$Lambda (4 samples, 0.06%)</title><rect x="665.3" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$185 (4 samples, 0.06%)</title><rect x="665.3" y="627.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="668.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1242618604.get$Lambda (8 samples, 0.12%)</title><rect x="666.0" y="643.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.0" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$189 (8 samples, 0.12%)</title><rect x="666.0" y="627.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="669.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1043351526.linkToTargetMethod (8 samples, 0.12%)</title><rect x="667.5" y="675.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.12%)</title><rect x="667.5" y="659.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.get$Lambda (8 samples, 0.12%)</title><rect x="667.5" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$186 (8 samples, 0.12%)</title><rect x="667.5" y="627.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="670.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (142 samples, 2.17%)</title><rect x="668.9" y="675.0" width="25.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.9" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2104524528.accept (124 samples, 1.90%)</title><rect x="668.9" y="659.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.9" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (124 samples, 1.90%)</title><rect x="668.9" y="643.0" width="22.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.9" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (124 samples, 1.90%)</title><rect x="668.9" y="627.0" width="22.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.9" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (124 samples, 1.90%)</title><rect x="668.9" y="611.0" width="22.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.9" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (124 samples, 1.90%)</title><rect x="668.9" y="595.0" width="22.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.9" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (124 samples, 1.90%)</title><rect x="668.9" y="579.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.9" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (124 samples, 1.90%)</title><rect x="668.9" y="563.0" width="22.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.9" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (124 samples, 1.90%)</title><rect x="668.9" y="547.0" width="22.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.9" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (124 samples, 1.90%)</title><rect x="668.9" y="531.0" width="22.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (124 samples, 1.90%)</title><rect x="668.9" y="515.0" width="22.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (124 samples, 1.90%)</title><rect x="668.9" y="499.0" width="22.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (124 samples, 1.90%)</title><rect x="668.9" y="483.0" width="22.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.9" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (13 samples, 0.20%)</title><rect x="668.9" y="467.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (13 samples, 0.20%)</title><rect x="668.9" y="451.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (13 samples, 0.20%)</title><rect x="668.9" y="435.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (10 samples, 0.15%)</title><rect x="668.9" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="671.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (10 samples, 0.15%)</title><rect x="668.9" y="403.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (10 samples, 0.15%)</title><rect x="668.9" y="387.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (10 samples, 0.15%)</title><rect x="668.9" y="371.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="671.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.15%)</title><rect x="668.9" y="355.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="671.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="670.7" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.05%)</title><rect x="670.7" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.05%)</title><rect x="670.7" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.05%)</title><rect x="670.7" y="371.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.05%)</title><rect x="670.7" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.05%)</title><rect x="670.7" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="673.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.03%)</title><rect x="671.3" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="671.3" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="671.3" y="435.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (2 samples, 0.03%)</title><rect x="671.3" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (2 samples, 0.03%)</title><rect x="671.3" y="403.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="674.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (109 samples, 1.67%)</title><rect x="671.6" y="467.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (20 samples, 0.31%)</title><rect x="671.6" y="451.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (11 samples, 0.17%)</title><rect x="671.6" y="435.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (11 samples, 0.17%)</title><rect x="671.6" y="419.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="674.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (9 samples, 0.14%)</title><rect x="673.6" y="435.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (9 samples, 0.14%)</title><rect x="673.6" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (9 samples, 0.14%)</title><rect x="673.6" y="403.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="676.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (89 samples, 1.36%)</title><rect x="675.3" y="451.0" width="16.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$152/998016372.get (89 samples, 1.36%)</title><rect x="675.3" y="435.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (89 samples, 1.36%)</title><rect x="675.3" y="419.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (89 samples, 1.36%)</title><rect x="675.3" y="403.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (89 samples, 1.36%)</title><rect x="675.3" y="387.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.3" y="398.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.06%)</title><rect x="675.3" y="371.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="678.3" y="382.0"></text>
</g>
<g>
<title>byte[] (85 samples, 1.30%)</title><rect x="676.0" y="371.0" width="15.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$191/879344288.accept (18 samples, 0.28%)</title><rect x="691.3" y="659.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (18 samples, 0.28%)</title><rect x="691.3" y="643.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.run (18 samples, 0.28%)</title><rect x="691.3" y="627.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (18 samples, 0.28%)</title><rect x="691.3" y="611.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (18 samples, 0.28%)</title><rect x="691.3" y="595.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (18 samples, 0.28%)</title><rect x="691.3" y="579.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (18 samples, 0.28%)</title><rect x="691.3" y="563.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.3" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (18 samples, 0.28%)</title><rect x="691.3" y="547.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="694.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (52 samples, 0.80%)</title><rect x="694.6" y="675.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="697.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (52 samples, 0.80%)</title><rect x="694.6" y="659.0" width="9.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="697.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (15 samples, 0.23%)</title><rect x="704.0" y="675.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.08%)</title><rect x="704.0" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.08%)</title><rect x="704.0" y="643.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (5 samples, 0.08%)</title><rect x="704.0" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.08%)</title><rect x="704.0" y="611.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.08%)</title><rect x="704.0" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (5 samples, 0.08%)</title><rect x="704.0" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (5 samples, 0.08%)</title><rect x="704.0" y="563.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="707.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (10 samples, 0.15%)</title><rect x="704.9" y="659.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (10 samples, 0.15%)</title><rect x="704.9" y="643.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="707.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (52 samples, 0.80%)</title><rect x="706.7" y="675.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1024844896.run (28 samples, 0.43%)</title><rect x="706.7" y="659.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (28 samples, 0.43%)</title><rect x="706.7" y="643.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.43%)</title><rect x="706.7" y="627.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.43%)</title><rect x="706.7" y="611.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (28 samples, 0.43%)</title><rect x="706.7" y="595.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (28 samples, 0.43%)</title><rect x="706.7" y="579.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (28 samples, 0.43%)</title><rect x="706.7" y="563.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (28 samples, 0.43%)</title><rect x="706.7" y="547.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (28 samples, 0.43%)</title><rect x="706.7" y="531.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (28 samples, 0.43%)</title><rect x="706.7" y="515.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (23 samples, 0.35%)</title><rect x="706.7" y="499.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (23 samples, 0.35%)</title><rect x="706.7" y="483.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (23 samples, 0.35%)</title><rect x="706.7" y="467.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (17 samples, 0.26%)</title><rect x="706.7" y="451.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (17 samples, 0.26%)</title><rect x="706.7" y="435.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.26%)</title><rect x="706.7" y="419.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.26%)</title><rect x="706.7" y="403.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.26%)</title><rect x="706.7" y="387.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.7" y="398.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.26%)</title><rect x="706.7" y="371.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="709.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.09%)</title><rect x="709.8" y="451.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.09%)</title><rect x="709.8" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.09%)</title><rect x="709.8" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (6 samples, 0.09%)</title><rect x="709.8" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (6 samples, 0.09%)</title><rect x="709.8" y="387.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="712.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.08%)</title><rect x="710.8" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.08%)</title><rect x="710.8" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.08%)</title><rect x="710.8" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.08%)</title><rect x="710.8" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.08%)</title><rect x="710.8" y="435.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.08%)</title><rect x="710.8" y="419.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (5 samples, 0.08%)</title><rect x="710.8" y="403.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="713.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$159/2084334116.run (24 samples, 0.37%)</title><rect x="711.7" y="659.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (24 samples, 0.37%)</title><rect x="711.7" y="643.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.11%)</title><rect x="711.7" y="627.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.11%)</title><rect x="711.7" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.get$Lambda (7 samples, 0.11%)</title><rect x="711.7" y="595.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$192 (7 samples, 0.11%)</title><rect x="711.7" y="579.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="714.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.26%)</title><rect x="713.0" y="627.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.26%)</title><rect x="713.0" y="611.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.26%)</title><rect x="713.0" y="595.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (17 samples, 0.26%)</title><rect x="713.0" y="579.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="716.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (97 samples, 1.49%)</title><rect x="716.1" y="675.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.1" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (21 samples, 0.32%)</title><rect x="716.1" y="659.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.1" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (21 samples, 0.32%)</title><rect x="716.1" y="643.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.1" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (21 samples, 0.32%)</title><rect x="716.1" y="627.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.1" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (21 samples, 0.32%)</title><rect x="716.1" y="611.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.1" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (21 samples, 0.32%)</title><rect x="716.1" y="595.0" width="3.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="719.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (76 samples, 1.16%)</title><rect x="719.9" y="659.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.15%)</title><rect x="719.9" y="643.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.15%)</title><rect x="719.9" y="627.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$224/1515826887.get$Lambda (10 samples, 0.15%)</title><rect x="719.9" y="611.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$224 (10 samples, 0.15%)</title><rect x="719.9" y="595.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="722.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (16 samples, 0.24%)</title><rect x="721.7" y="643.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.7" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (16 samples, 0.24%)</title><rect x="721.7" y="627.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="724.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (15 samples, 0.23%)</title><rect x="724.6" y="643.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (15 samples, 0.23%)</title><rect x="724.6" y="627.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.6" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (15 samples, 0.23%)</title><rect x="724.6" y="611.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="727.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (35 samples, 0.54%)</title><rect x="727.3" y="643.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.31%)</title><rect x="727.3" y="627.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="730.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (15 samples, 0.23%)</title><rect x="730.9" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (15 samples, 0.23%)</title><rect x="730.9" y="611.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.9" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (15 samples, 0.23%)</title><rect x="730.9" y="595.0" width="2.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="733.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (56 samples, 0.86%)</title><rect x="733.6" y="675.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="733.6" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="733.6" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$184/1509399046.get$Lambda (2 samples, 0.03%)</title><rect x="733.6" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$184 (2 samples, 0.03%)</title><rect x="733.6" y="611.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="736.6" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (34 samples, 0.52%)</title><rect x="734.0" y="659.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (14 samples, 0.21%)</title><rect x="734.0" y="643.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (14 samples, 0.21%)</title><rect x="734.0" y="627.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="737.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (20 samples, 0.31%)</title><rect x="736.5" y="643.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (20 samples, 0.31%)</title><rect x="736.5" y="627.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="739.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (20 samples, 0.31%)</title><rect x="740.1" y="659.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.1" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (20 samples, 0.31%)</title><rect x="740.1" y="643.0" width="3.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="743.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (18 samples, 0.28%)</title><rect x="743.7" y="675.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 0.28%)</title><rect x="743.7" y="659.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (18 samples, 0.28%)</title><rect x="743.7" y="643.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (18 samples, 0.28%)</title><rect x="743.7" y="627.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (4 samples, 0.06%)</title><rect x="743.7" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (4 samples, 0.06%)</title><rect x="743.7" y="595.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="746.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (14 samples, 0.21%)</title><rect x="744.5" y="611.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.21%)</title><rect x="744.5" y="595.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.21%)</title><rect x="744.5" y="579.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.21%)</title><rect x="744.5" y="563.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (14 samples, 0.21%)</title><rect x="744.5" y="547.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (14 samples, 0.21%)</title><rect x="744.5" y="531.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="747.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (6 samples, 0.09%)</title><rect x="747.0" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (6 samples, 0.09%)</title><rect x="747.0" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (6 samples, 0.09%)</title><rect x="747.0" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (6 samples, 0.09%)</title><rect x="747.0" y="627.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (6 samples, 0.09%)</title><rect x="747.0" y="611.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (6 samples, 0.09%)</title><rect x="747.0" y="595.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="750.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (9 samples, 0.14%)</title><rect x="748.1" y="675.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.14%)</title><rect x="748.1" y="659.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="751.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (9 samples, 0.14%)</title><rect x="748.1" y="643.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (9 samples, 0.14%)</title><rect x="748.1" y="627.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="751.1" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (35 samples, 0.54%)</title><rect x="749.7" y="691.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.createSession (35 samples, 0.54%)</title><rect x="749.7" y="675.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.createSession (35 samples, 0.54%)</title><rect x="749.7" y="659.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.7" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.ServiceSession (2 samples, 0.03%)</title><rect x="749.7" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="752.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceSession.&lt;init&gt; (33 samples, 0.51%)</title><rect x="750.1" y="643.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (33 samples, 0.51%)</title><rect x="750.1" y="627.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.1" y="638.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="750.1" y="611.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="753.1" y="622.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.47%)</title><rect x="750.4" y="611.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="753.4" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,402 samples, 36.78%)</title><rect x="756.0" y="691.0" width="434.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.0" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.32%)</title><rect x="756.0" y="675.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.0" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (21 samples, 0.32%)</title><rect x="756.0" y="659.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="759.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,381 samples, 36.46%)</title><rect x="759.8" y="675.0" width="430.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.8" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,381 samples, 36.46%)</title><rect x="759.8" y="659.0" width="430.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.8" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,381 samples, 36.46%)</title><rect x="759.8" y="643.0" width="430.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.8" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,103 samples, 16.89%)</title><rect x="759.8" y="627.0" width="199.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.8" y="638.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,103 samples, 16.89%)</title><rect x="759.8" y="611.0" width="199.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.8" y="622.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,042 samples, 15.95%)</title><rect x="759.8" y="595.0" width="188.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.8" y="606.0">RequestHandler1_entity.h..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (64 samples, 0.98%)</title><rect x="759.8" y="579.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (64 samples, 0.98%)</title><rect x="759.8" y="563.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (64 samples, 0.98%)</title><rect x="759.8" y="547.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (64 samples, 0.98%)</title><rect x="759.8" y="531.0" width="11.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.41%)</title><rect x="759.8" y="515.0" width="4.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="762.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.57%)</title><rect x="764.7" y="515.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.7" y="526.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.57%)</title><rect x="764.7" y="499.0" width="6.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="767.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (978 samples, 14.97%)</title><rect x="771.4" y="579.0" width="176.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.4" y="590.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (58 samples, 0.89%)</title><rect x="771.4" y="563.0" width="10.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="774.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.89%)</title><rect x="771.4" y="547.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.89%)</title><rect x="771.4" y="531.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.40%)</title><rect x="771.4" y="515.0" width="4.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="774.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.49%)</title><rect x="776.1" y="515.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.1" y="526.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.49%)</title><rect x="776.1" y="499.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="779.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (83 samples, 1.27%)</title><rect x="781.9" y="563.0" width="14.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.get (83 samples, 1.27%)</title><rect x="781.9" y="547.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.49%)</title><rect x="781.9" y="531.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.49%)</title><rect x="781.9" y="515.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get$Lambda (32 samples, 0.49%)</title><rect x="781.9" y="499.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$232 (32 samples, 0.49%)</title><rect x="781.9" y="483.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="784.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (51 samples, 0.78%)</title><rect x="787.6" y="531.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (51 samples, 0.78%)</title><rect x="787.6" y="515.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="790.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (34 samples, 0.52%)</title><rect x="787.6" y="499.0" width="6.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="790.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (17 samples, 0.26%)</title><rect x="793.8" y="499.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="796.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (744 samples, 11.39%)</title><rect x="796.8" y="563.0" width="134.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.8" y="574.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="797.0" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.11%)</title><rect x="797.0" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="797.0" y="515.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.11%)</title><rect x="797.0" y="499.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.11%)</title><rect x="797.0" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.11%)</title><rect x="797.0" y="467.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="800.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.14%)</title><rect x="798.3" y="547.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.3" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.11%)</title><rect x="798.3" y="531.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.3" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (7 samples, 0.11%)</title><rect x="798.3" y="515.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="801.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.03%)</title><rect x="799.6" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (2 samples, 0.03%)</title><rect x="799.6" y="515.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="802.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (3 samples, 0.05%)</title><rect x="799.9" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (3 samples, 0.05%)</title><rect x="799.9" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="800.1" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.03%)</title><rect x="800.1" y="499.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="803.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.08%)</title><rect x="800.5" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.08%)</title><rect x="800.5" y="531.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (3 samples, 0.05%)</title><rect x="800.5" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="803.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="801.0" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.03%)</title><rect x="801.0" y="499.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="804.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (5 samples, 0.08%)</title><rect x="801.4" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.get (5 samples, 0.08%)</title><rect x="801.4" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 0.06%)</title><rect x="801.5" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.06%)</title><rect x="801.5" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.05%)</title><rect x="801.7" y="483.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="804.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.getAckResponses (39 samples, 0.60%)</title><rect x="802.3" y="547.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.3" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (2 samples, 0.03%)</title><rect x="802.4" y="531.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="805.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (4 samples, 0.06%)</title><rect x="802.8" y="531.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="805.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (30 samples, 0.46%)</title><rect x="803.5" y="531.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$137/766939021.accept (30 samples, 0.46%)</title><rect x="803.5" y="515.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$1 (30 samples, 0.46%)</title><rect x="803.5" y="499.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.12%)</title><rect x="803.5" y="483.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.12%)</title><rect x="803.5" y="467.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.get$Lambda (8 samples, 0.12%)</title><rect x="803.5" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.5" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.Futures$$Lambda$138 (8 samples, 0.12%)</title><rect x="803.5" y="435.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="806.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (22 samples, 0.34%)</title><rect x="805.0" y="483.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (22 samples, 0.34%)</title><rect x="805.0" y="467.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.11%)</title><rect x="805.0" y="451.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="808.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (4 samples, 0.06%)</title><rect x="806.2" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (4 samples, 0.06%)</title><rect x="806.2" y="435.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="809.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.17%)</title><rect x="807.0" y="451.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.17%)</title><rect x="807.0" y="435.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.17%)</title><rect x="807.0" y="419.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="810.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="809.0" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.forwardRequest (609 samples, 9.32%)</title><rect x="809.3" y="547.0" width="110.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.3" y="558.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (20 samples, 0.31%)</title><rect x="809.3" y="531.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (20 samples, 0.31%)</title><rect x="809.3" y="515.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (13 samples, 0.20%)</title><rect x="809.3" y="499.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="812.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.11%)</title><rect x="811.7" y="499.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.11%)</title><rect x="811.7" y="483.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.11%)</title><rect x="811.7" y="467.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="814.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (384 samples, 5.88%)</title><rect x="812.9" y="531.0" width="69.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.9" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (384 samples, 5.88%)</title><rect x="812.9" y="515.0" width="69.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.9" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (384 samples, 5.88%)</title><rect x="812.9" y="499.0" width="69.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.9" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (384 samples, 5.88%)</title><rect x="812.9" y="483.0" width="69.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.9" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="812.9" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="815.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="812.9" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$131/1332309156.get$Lambda (3 samples, 0.05%)</title><rect x="812.9" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="815.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$131 (3 samples, 0.05%)</title><rect x="812.9" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="815.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.15%)</title><rect x="813.5" y="467.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.15%)</title><rect x="813.5" y="451.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.06%)</title><rect x="813.5" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="816.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.09%)</title><rect x="814.2" y="435.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.09%)</title><rect x="814.2" y="419.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.09%)</title><rect x="814.2" y="403.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="817.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (18 samples, 0.28%)</title><rect x="815.3" y="467.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.28%)</title><rect x="815.3" y="451.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (10 samples, 0.15%)</title><rect x="815.3" y="435.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="818.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.12%)</title><rect x="817.1" y="435.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.12%)</title><rect x="817.1" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.12%)</title><rect x="817.1" y="403.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="820.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (10 samples, 0.15%)</title><rect x="818.5" y="467.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="821.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (19 samples, 0.29%)</title><rect x="820.3" y="467.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="823.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (190 samples, 2.91%)</title><rect x="823.8" y="467.0" width="34.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.8" y="478.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (26 samples, 0.40%)</title><rect x="823.8" y="451.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.8" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (17 samples, 0.26%)</title><rect x="823.8" y="435.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (11 samples, 0.17%)</title><rect x="823.8" y="419.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.8" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (11 samples, 0.17%)</title><rect x="823.8" y="403.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="826.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.09%)</title><rect x="825.8" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (6 samples, 0.09%)</title><rect x="825.8" y="403.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="828.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (9 samples, 0.14%)</title><rect x="826.8" y="435.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.14%)</title><rect x="826.8" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (9 samples, 0.14%)</title><rect x="826.8" y="403.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (9 samples, 0.14%)</title><rect x="826.8" y="387.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.8" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (9 samples, 0.14%)</title><rect x="826.8" y="371.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="829.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (74 samples, 1.13%)</title><rect x="828.5" y="451.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (74 samples, 1.13%)</title><rect x="828.5" y="435.0" width="13.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.5" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (3 samples, 0.05%)</title><rect x="828.5" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="831.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.09%)</title><rect x="829.0" y="419.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="832.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.08%)</title><rect x="830.1" y="419.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="833.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (4 samples, 0.06%)</title><rect x="831.0" y="419.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="834.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.08%)</title><rect x="831.7" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.08%)</title><rect x="831.7" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (5 samples, 0.08%)</title><rect x="831.7" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.7" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (5 samples, 0.08%)</title><rect x="831.7" y="371.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="834.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (30 samples, 0.46%)</title><rect x="832.6" y="419.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (30 samples, 0.46%)</title><rect x="832.6" y="403.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (30 samples, 0.46%)</title><rect x="832.6" y="387.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (30 samples, 0.46%)</title><rect x="832.6" y="371.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (16 samples, 0.24%)</title><rect x="832.6" y="355.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (12 samples, 0.18%)</title><rect x="832.6" y="339.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (12 samples, 0.18%)</title><rect x="832.6" y="323.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.18%)</title><rect x="832.6" y="307.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.18%)</title><rect x="832.6" y="291.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.18%)</title><rect x="832.6" y="275.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.18%)</title><rect x="832.6" y="259.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.18%)</title><rect x="832.6" y="243.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.18%)</title><rect x="832.6" y="227.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="835.6" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.06%)</title><rect x="834.8" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.8" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (4 samples, 0.06%)</title><rect x="834.8" y="323.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="837.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="835.5" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="835.5" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.5" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (4 samples, 0.06%)</title><rect x="835.5" y="323.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.5" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (4 samples, 0.06%)</title><rect x="835.5" y="307.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="838.5" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (8 samples, 0.12%)</title><rect x="836.2" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.2" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (8 samples, 0.12%)</title><rect x="836.2" y="339.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.08%)</title><rect x="836.2" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.08%)</title><rect x="836.2" y="307.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.08%)</title><rect x="836.2" y="291.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="839.2" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (3 samples, 0.05%)</title><rect x="837.1" y="323.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.1" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (3 samples, 0.05%)</title><rect x="837.1" y="307.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="840.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="837.7" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.7" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (2 samples, 0.03%)</title><rect x="837.7" y="339.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="840.7" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (12 samples, 0.18%)</title><rect x="838.0" y="419.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.0" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (12 samples, 0.18%)</title><rect x="838.0" y="403.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="841.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (9 samples, 0.14%)</title><rect x="840.2" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.14%)</title><rect x="840.2" y="403.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="843.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (5 samples, 0.08%)</title><rect x="841.8" y="451.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="844.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (60 samples, 0.92%)</title><rect x="842.7" y="451.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.7" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (60 samples, 0.92%)</title><rect x="842.7" y="435.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.7" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (59 samples, 0.90%)</title><rect x="842.7" y="419.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.7" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (59 samples, 0.90%)</title><rect x="842.7" y="403.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.7" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (59 samples, 0.90%)</title><rect x="842.7" y="387.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.7" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.18%)</title><rect x="842.7" y="371.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="845.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (19 samples, 0.29%)</title><rect x="844.9" y="371.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.9" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (19 samples, 0.29%)</title><rect x="844.9" y="355.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.9" y="366.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.29%)</title><rect x="844.9" y="339.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="847.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (28 samples, 0.43%)</title><rect x="848.3" y="371.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.43%)</title><rect x="848.3" y="355.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.18%)</title><rect x="848.3" y="339.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="851.3" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.24%)</title><rect x="850.5" y="339.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.5" y="350.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.24%)</title><rect x="850.5" y="323.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="853.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="853.6" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.08%)</title><rect x="853.6" y="435.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="856.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (20 samples, 0.31%)</title><rect x="854.5" y="451.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.5" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.09%)</title><rect x="854.5" y="435.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="857.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.05%)</title><rect x="855.6" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="858.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="855.6" y="419.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="858.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.17%)</title><rect x="856.1" y="435.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.17%)</title><rect x="856.1" y="419.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="859.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (80 samples, 1.22%)</title><rect x="858.1" y="467.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (4 samples, 0.06%)</title><rect x="858.1" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="861.1" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (8 samples, 0.12%)</title><rect x="858.8" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/271136818.apply (8 samples, 0.12%)</title><rect x="858.8" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="861.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (7 samples, 0.11%)</title><rect x="859.0" y="419.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (7 samples, 0.11%)</title><rect x="859.0" y="403.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="862.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (10 samples, 0.15%)</title><rect x="860.3" y="451.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="863.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.03%)</title><rect x="862.1" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="865.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (2 samples, 0.03%)</title><rect x="862.1" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="865.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (5 samples, 0.08%)</title><rect x="862.4" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.4" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (5 samples, 0.08%)</title><rect x="862.4" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.4" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (5 samples, 0.08%)</title><rect x="862.4" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.4" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (5 samples, 0.08%)</title><rect x="862.4" y="403.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="865.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (51 samples, 0.78%)</title><rect x="863.3" y="451.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="866.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (51 samples, 0.78%)</title><rect x="863.3" y="435.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (8 samples, 0.12%)</title><rect x="863.3" y="419.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="866.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.08%)</title><rect x="864.8" y="419.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="867.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (4 samples, 0.06%)</title><rect x="865.7" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="868.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (20 samples, 0.31%)</title><rect x="866.4" y="419.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (20 samples, 0.31%)</title><rect x="866.4" y="403.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.4" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (20 samples, 0.31%)</title><rect x="866.4" y="387.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.4" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (20 samples, 0.31%)</title><rect x="866.4" y="371.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="869.4" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (20 samples, 0.31%)</title><rect x="866.4" y="355.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="869.4" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (8 samples, 0.12%)</title><rect x="870.0" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (8 samples, 0.12%)</title><rect x="870.0" y="403.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (4 samples, 0.06%)</title><rect x="870.0" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (4 samples, 0.06%)</title><rect x="870.0" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="873.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (4 samples, 0.06%)</title><rect x="870.7" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (4 samples, 0.06%)</title><rect x="870.7" y="371.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="873.7" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.09%)</title><rect x="871.5" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (6 samples, 0.09%)</title><rect x="871.5" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.5" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (6 samples, 0.09%)</title><rect x="871.5" y="387.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="874.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (54 samples, 0.83%)</title><rect x="872.6" y="467.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (9 samples, 0.14%)</title><rect x="872.6" y="451.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.05%)</title><rect x="872.6" y="435.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="875.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.09%)</title><rect x="873.1" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.09%)</title><rect x="873.1" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (6 samples, 0.09%)</title><rect x="873.1" y="403.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="876.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.14%)</title><rect x="874.2" y="451.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="877.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (36 samples, 0.55%)</title><rect x="875.8" y="451.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.12%)</title><rect x="875.8" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.12%)</title><rect x="875.8" y="419.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.get$Lambda (6 samples, 0.09%)</title><rect x="875.8" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (6 samples, 0.09%)</title><rect x="875.8" y="387.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="878.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.get$Lambda (2 samples, 0.03%)</title><rect x="876.9" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (2 samples, 0.03%)</title><rect x="876.9" y="387.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="879.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (28 samples, 0.43%)</title><rect x="877.2" y="435.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (28 samples, 0.43%)</title><rect x="877.2" y="419.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (17 samples, 0.26%)</title><rect x="877.2" y="403.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="880.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.17%)</title><rect x="880.3" y="403.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.17%)</title><rect x="880.3" y="387.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.17%)</title><rect x="880.3" y="371.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="883.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.formHttpRequest (205 samples, 3.14%)</title><rect x="882.3" y="531.0" width="37.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.3" y="542.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.21%)</title><rect x="882.3" y="515.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (14 samples, 0.21%)</title><rect x="882.3" y="499.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (14 samples, 0.21%)</title><rect x="882.3" y="483.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.21%)</title><rect x="882.3" y="467.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.20%)</title><rect x="882.5" y="451.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.20%)</title><rect x="882.5" y="435.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.5" y="446.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.20%)</title><rect x="882.5" y="419.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="885.5" y="430.0"></text>
</g>
<g>
<title>java/net/URI.create (67 samples, 1.03%)</title><rect x="884.8" y="515.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.8" y="526.0"></text>
</g>
<g>
<title>java.net.URI (13 samples, 0.20%)</title><rect x="884.8" y="499.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="887.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (54 samples, 0.83%)</title><rect x="887.2" y="499.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.2" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (5 samples, 0.08%)</title><rect x="887.2" y="483.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="890.2" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (49 samples, 0.75%)</title><rect x="888.1" y="483.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.1" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.14%)</title><rect x="888.1" y="467.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.14%)</title><rect x="888.1" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="888.1" y="435.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="891.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.09%)</title><rect x="888.6" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.6" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="888.6" y="419.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="891.6" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (40 samples, 0.61%)</title><rect x="889.7" y="467.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.34%)</title><rect x="889.7" y="451.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.34%)</title><rect x="889.7" y="435.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.21%)</title><rect x="889.7" y="419.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="892.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.12%)</title><rect x="892.2" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.2" y="430.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.12%)</title><rect x="892.2" y="403.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="895.2" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (18 samples, 0.28%)</title><rect x="893.7" y="451.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.15%)</title><rect x="893.7" y="435.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.15%)</title><rect x="893.7" y="419.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.06%)</title><rect x="893.7" y="403.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="896.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.09%)</title><rect x="894.4" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.4" y="414.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.09%)</title><rect x="894.4" y="387.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="897.4" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (8 samples, 0.12%)</title><rect x="895.5" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (8 samples, 0.12%)</title><rect x="895.5" y="419.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="898.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.12%)</title><rect x="895.5" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.12%)</title><rect x="895.5" y="387.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.5" y="398.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="895.5" y="371.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="898.5" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.08%)</title><rect x="896.0" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.0" y="382.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.08%)</title><rect x="896.0" y="355.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="899.0" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (18 samples, 0.28%)</title><rect x="896.9" y="515.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (8 samples, 0.12%)</title><rect x="896.9" y="499.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="899.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (10 samples, 0.15%)</title><rect x="898.4" y="499.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (5 samples, 0.08%)</title><rect x="898.4" y="483.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="901.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (5 samples, 0.08%)</title><rect x="899.3" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.08%)</title><rect x="899.3" y="467.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="902.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (74 samples, 1.13%)</title><rect x="900.2" y="515.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (6 samples, 0.09%)</title><rect x="900.2" y="499.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="903.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (68 samples, 1.04%)</title><rect x="901.3" y="499.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (64 samples, 0.98%)</title><rect x="901.3" y="483.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (64 samples, 0.98%)</title><rect x="901.3" y="467.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.3" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (4 samples, 0.06%)</title><rect x="901.3" y="451.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="904.3" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.05%)</title><rect x="902.0" y="451.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="905.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (10 samples, 0.15%)</title><rect x="902.5" y="451.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="905.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.12%)</title><rect x="904.4" y="451.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.12%)</title><rect x="904.4" y="435.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="907.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (8 samples, 0.12%)</title><rect x="904.4" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.4" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (8 samples, 0.12%)</title><rect x="904.4" y="403.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="907.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (29 samples, 0.44%)</title><rect x="906.0" y="451.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (29 samples, 0.44%)</title><rect x="906.0" y="435.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (29 samples, 0.44%)</title><rect x="906.0" y="419.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.08%)</title><rect x="906.0" y="403.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.08%)</title><rect x="906.0" y="387.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (5 samples, 0.08%)</title><rect x="906.0" y="371.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.0" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (5 samples, 0.08%)</title><rect x="906.0" y="355.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="909.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.09%)</title><rect x="906.9" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="909.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (6 samples, 0.09%)</title><rect x="906.9" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.09%)</title><rect x="906.9" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.09%)</title><rect x="906.9" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.09%)</title><rect x="906.9" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.09%)</title><rect x="906.9" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.09%)</title><rect x="906.9" y="307.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.09%)</title><rect x="906.9" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.09%)</title><rect x="906.9" y="275.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="909.9" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (13 samples, 0.20%)</title><rect x="908.0" y="403.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.0" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (13 samples, 0.20%)</title><rect x="908.0" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (5 samples, 0.08%)</title><rect x="908.0" y="371.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="911.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.08%)</title><rect x="908.0" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="911.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.08%)</title><rect x="908.0" y="339.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="911.0" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.12%)</title><rect x="908.9" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.9" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.12%)</title><rect x="908.9" y="355.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="911.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.08%)</title><rect x="910.3" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.08%)</title><rect x="910.3" y="387.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="913.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (9 samples, 0.14%)</title><rect x="911.2" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.14%)</title><rect x="911.2" y="435.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="914.2" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.06%)</title><rect x="912.8" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.06%)</title><rect x="912.8" y="467.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.06%)</title><rect x="912.8" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="915.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (22 samples, 0.34%)</title><rect x="913.6" y="515.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (22 samples, 0.34%)</title><rect x="913.6" y="499.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (22 samples, 0.34%)</title><rect x="913.6" y="483.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.6" y="494.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (22 samples, 0.34%)</title><rect x="913.6" y="467.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.14%)</title><rect x="913.6" y="451.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (9 samples, 0.14%)</title><rect x="913.6" y="435.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="916.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$120/26136221.apply (13 samples, 0.20%)</title><rect x="915.2" y="451.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (13 samples, 0.20%)</title><rect x="915.2" y="435.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.2" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.11%)</title><rect x="915.2" y="419.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="918.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.09%)</title><rect x="916.5" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.09%)</title><rect x="916.5" y="403.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="919.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.15%)</title><rect x="917.5" y="515.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.15%)</title><rect x="917.5" y="499.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.15%)</title><rect x="917.5" y="483.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.14%)</title><rect x="917.5" y="467.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="920.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.getNodes (66 samples, 1.01%)</title><rect x="919.3" y="547.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.06%)</title><rect x="919.3" y="531.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="922.3" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.05%)</title><rect x="920.2" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Integer (3 samples, 0.05%)</title><rect x="920.2" y="515.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="923.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.18%)</title><rect x="920.8" y="531.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1392425346.invoke (12 samples, 0.18%)</title><rect x="920.8" y="515.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.18%)</title><rect x="920.8" y="499.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.18%)</title><rect x="920.8" y="483.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="923.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.18%)</title><rect x="920.8" y="467.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.8" y="478.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.18%)</title><rect x="920.8" y="451.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="923.8" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.12%)</title><rect x="923.0" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="926.0" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.06%)</title><rect x="923.0" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="926.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.06%)</title><rect x="923.7" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.7" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (4 samples, 0.06%)</title><rect x="923.7" y="499.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="926.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.03%)</title><rect x="924.4" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.4" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (2 samples, 0.03%)</title><rect x="924.4" y="515.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="927.4" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.put (12 samples, 0.18%)</title><rect x="924.8" y="531.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (12 samples, 0.18%)</title><rect x="924.8" y="515.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="927.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.11%)</title><rect x="924.8" y="499.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.8" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.11%)</title><rect x="924.8" y="483.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="927.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.08%)</title><rect x="926.0" y="499.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.0" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (5 samples, 0.08%)</title><rect x="926.0" y="483.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="929.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (7 samples, 0.11%)</title><rect x="926.9" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.9" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.11%)</title><rect x="926.9" y="515.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="929.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (14 samples, 0.21%)</title><rect x="928.2" y="531.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.2" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (14 samples, 0.21%)</title><rect x="928.2" y="515.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (14 samples, 0.21%)</title><rect x="928.2" y="499.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="931.2" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.09%)</title><rect x="928.2" y="483.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.2" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (6 samples, 0.09%)</title><rect x="928.2" y="467.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="931.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (8 samples, 0.12%)</title><rect x="929.3" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (8 samples, 0.12%)</title><rect x="929.3" y="467.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="932.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.05%)</title><rect x="930.7" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.05%)</title><rect x="930.7" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.7" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (3 samples, 0.05%)</title><rect x="930.7" y="499.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="933.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.trySendResponse (93 samples, 1.42%)</title><rect x="931.3" y="563.0" width="16.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.41%)</title><rect x="931.3" y="547.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.41%)</title><rect x="931.3" y="531.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.get$Lambda (27 samples, 0.41%)</title><rect x="931.3" y="515.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.3" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$142 (27 samples, 0.41%)</title><rect x="931.3" y="499.0" width="4.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="934.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (66 samples, 1.01%)</title><rect x="936.1" y="547.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (66 samples, 1.01%)</title><rect x="936.1" y="531.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (43 samples, 0.66%)</title><rect x="936.1" y="515.0" width="7.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="939.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (22 samples, 0.34%)</title><rect x="943.9" y="515.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (22 samples, 0.34%)</title><rect x="943.9" y="499.0" width="4.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="946.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (61 samples, 0.93%)</title><rect x="948.1" y="595.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (61 samples, 0.93%)</title><rect x="948.1" y="579.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 0.93%)</title><rect x="948.1" y="563.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.41%)</title><rect x="948.1" y="547.0" width="4.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="951.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.52%)</title><rect x="953.0" y="547.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.0" y="558.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.52%)</title><rect x="953.0" y="531.0" width="6.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="956.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (374 samples, 5.73%)</title><rect x="959.1" y="627.0" width="67.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.1" y="638.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (65 samples, 1.00%)</title><rect x="959.1" y="611.0" width="11.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="962.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (87 samples, 1.33%)</title><rect x="970.8" y="611.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (87 samples, 1.33%)</title><rect x="970.8" y="595.0" width="15.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="973.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (222 samples, 3.40%)</title><rect x="986.6" y="611.0" width="40.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.6" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (222 samples, 3.40%)</title><rect x="986.6" y="595.0" width="40.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.6" y="606.0">one..</text>
</g>
<g>
<title>char[] (145 samples, 2.22%)</title><rect x="986.6" y="579.0" width="26.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="989.6" y="590.0">c..</text>
</g>
<g>
<title>java.lang.String (31 samples, 0.47%)</title><rect x="1012.8" y="579.0" width="5.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1015.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.70%)</title><rect x="1018.4" y="579.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.70%)</title><rect x="1018.4" y="563.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (46 samples, 0.70%)</title><rect x="1018.4" y="547.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.4" y="558.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.70%)</title><rect x="1018.4" y="531.0" width="8.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1021.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (36 samples, 0.55%)</title><rect x="1026.7" y="627.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1029.7" y="638.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.55%)</title><rect x="1026.7" y="611.0" width="6.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1029.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (65 samples, 1.00%)</title><rect x="1033.2" y="627.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1036.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (65 samples, 1.00%)</title><rect x="1033.2" y="611.0" width="11.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 1.00%)</title><rect x="1033.2" y="595.0" width="11.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.54%)</title><rect x="1033.2" y="579.0" width="6.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1036.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.46%)</title><rect x="1039.5" y="579.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.5" y="590.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.46%)</title><rect x="1039.5" y="563.0" width="5.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1042.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (803 samples, 12.30%)</title><rect x="1044.9" y="627.0" width="145.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.9" y="638.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (803 samples, 12.30%)</title><rect x="1044.9" y="611.0" width="145.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.9" y="622.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>char[] (477 samples, 7.30%)</title><rect x="1044.9" y="595.0" width="86.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1047.9" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (119 samples, 1.82%)</title><rect x="1131.1" y="595.0" width="21.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1134.1" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (207 samples, 3.17%)</title><rect x="1152.6" y="595.0" width="37.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.6" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (207 samples, 3.17%)</title><rect x="1152.6" y="579.0" width="37.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.6" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (207 samples, 3.17%)</title><rect x="1152.6" y="563.0" width="37.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1155.6" y="574.0">jav..</text>
</g>
<g>
<title>byte[] (207 samples, 3.17%)</title><rect x="1152.6" y="547.0" width="37.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1155.6" y="558.0">byt..</text>
</g>
</g>
</svg>
