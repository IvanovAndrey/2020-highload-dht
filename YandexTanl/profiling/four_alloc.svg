<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (8,566 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (4,735 samples, 55.28%)</title><rect x="10.0" y="691.0" width="652.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (21 samples, 0.25%)</title><rect x="10.0" y="675.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (21 samples, 0.25%)</title><rect x="10.0" y="659.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (21 samples, 0.25%)</title><rect x="10.0" y="643.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.25%)</title><rect x="10.0" y="627.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (21 samples, 0.25%)</title><rect x="10.0" y="611.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (21 samples, 0.25%)</title><rect x="10.0" y="595.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.25%)</title><rect x="10.0" y="579.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 0.25%)</title><rect x="10.0" y="563.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (21 samples, 0.25%)</title><rect x="10.0" y="547.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (21 samples, 0.25%)</title><rect x="10.0" y="531.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (21 samples, 0.25%)</title><rect x="10.0" y="515.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (21 samples, 0.25%)</title><rect x="10.0" y="499.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,714 samples, 55.03%)</title><rect x="12.9" y="675.0" width="649.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.9" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,714 samples, 55.03%)</title><rect x="12.9" y="659.0" width="649.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.9" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,269 samples, 38.16%)</title><rect x="12.9" y="643.0" width="450.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.9" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,331 samples, 15.54%)</title><rect x="12.9" y="627.0" width="183.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.9" y="638.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (510 samples, 5.95%)</title><rect x="12.9" y="611.0" width="70.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.9" y="622.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.06%)</title><rect x="12.9" y="595.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="15.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.apply (505 samples, 5.90%)</title><rect x="13.6" y="595.0" width="69.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.6" y="606.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (505 samples, 5.90%)</title><rect x="13.6" y="579.0" width="69.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.6" y="590.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (505 samples, 5.90%)</title><rect x="13.6" y="563.0" width="69.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="16.6" y="574.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="13.6" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="13.6" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/516891066.get$Lambda (2 samples, 0.02%)</title><rect x="13.7" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$183 (2 samples, 0.02%)</title><rect x="13.7" y="499.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="16.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.05%)</title><rect x="14.0" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.05%)</title><rect x="14.0" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (3 samples, 0.04%)</title><rect x="14.0" y="515.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="17.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.15%)</title><rect x="14.5" y="547.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.15%)</title><rect x="14.5" y="531.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (9 samples, 0.11%)</title><rect x="14.5" y="515.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="15.8" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="15.8" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="15.8" y="483.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="18.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (466 samples, 5.44%)</title><rect x="16.3" y="547.0" width="64.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.3" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (466 samples, 5.44%)</title><rect x="16.3" y="531.0" width="64.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.3" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (466 samples, 5.44%)</title><rect x="16.3" y="515.0" width="64.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.3" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.09%)</title><rect x="16.3" y="499.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.09%)</title><rect x="16.3" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.get$Lambda (3 samples, 0.04%)</title><rect x="16.3" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$135 (3 samples, 0.04%)</title><rect x="16.3" y="451.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="19.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.get$Lambda (5 samples, 0.06%)</title><rect x="16.7" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$168 (5 samples, 0.06%)</title><rect x="16.7" y="451.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="19.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (331 samples, 3.86%)</title><rect x="17.4" y="499.0" width="45.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.4" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (331 samples, 3.86%)</title><rect x="17.4" y="483.0" width="45.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.4" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (327 samples, 3.82%)</title><rect x="17.4" y="467.0" width="45.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.4" y="478.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.apply (327 samples, 3.82%)</title><rect x="17.4" y="451.0" width="45.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.4" y="462.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (327 samples, 3.82%)</title><rect x="17.4" y="435.0" width="45.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.4" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (327 samples, 3.82%)</title><rect x="17.4" y="419.0" width="45.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.4" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.apply (327 samples, 3.82%)</title><rect x="17.4" y="403.0" width="45.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.4" y="414.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (327 samples, 3.82%)</title><rect x="17.4" y="387.0" width="45.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.4" y="398.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="17.4" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="17.4" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.get$Lambda (4 samples, 0.05%)</title><rect x="17.4" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$181 (4 samples, 0.05%)</title><rect x="17.4" y="323.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6 samples, 0.07%)</title><rect x="18.0" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6 samples, 0.07%)</title><rect x="18.0" y="355.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (3 samples, 0.04%)</title><rect x="18.0" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="21.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="18.4" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="18.4" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="18.4" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="21.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.13%)</title><rect x="18.8" y="371.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.13%)</title><rect x="18.8" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (6 samples, 0.07%)</title><rect x="18.8" y="339.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="21.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.06%)</title><rect x="19.6" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.06%)</title><rect x="19.6" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.06%)</title><rect x="19.6" y="307.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="22.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (306 samples, 3.57%)</title><rect x="20.3" y="371.0" width="42.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.3" y="382.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.11%)</title><rect x="20.3" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.11%)</title><rect x="20.3" y="339.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.get$Lambda (8 samples, 0.09%)</title><rect x="20.3" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$178 (8 samples, 0.09%)</title><rect x="20.3" y="307.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (246 samples, 2.87%)</title><rect x="21.6" y="355.0" width="33.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.6" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (246 samples, 2.87%)</title><rect x="21.6" y="339.0" width="33.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.6" y="350.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3 samples, 0.04%)</title><rect x="21.6" y="323.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="24.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.apply (234 samples, 2.73%)</title><rect x="22.0" y="323.0" width="32.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.0" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (234 samples, 2.73%)</title><rect x="22.0" y="307.0" width="32.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.0" y="318.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="22.0" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="22.0" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$190/282825006.get$Lambda (3 samples, 0.04%)</title><rect x="22.0" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$190 (3 samples, 0.04%)</title><rect x="22.0" y="243.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="25.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.12%)</title><rect x="22.4" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.12%)</title><rect x="22.4" y="275.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (6 samples, 0.07%)</title><rect x="22.4" y="259.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="25.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="23.2" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="23.2" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="23.2" y="227.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="26.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="23.9" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (2 samples, 0.02%)</title><rect x="23.9" y="275.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="26.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (11 samples, 0.13%)</title><rect x="24.2" y="291.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.13%)</title><rect x="24.2" y="275.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.02%)</title><rect x="24.2" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.02%)</title><rect x="24.2" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.02%)</title><rect x="24.2" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (2 samples, 0.02%)</title><rect x="24.2" y="211.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="27.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (9 samples, 0.11%)</title><rect x="24.5" y="259.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (9 samples, 0.11%)</title><rect x="24.5" y="243.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (6 samples, 0.07%)</title><rect x="24.5" y="227.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="27.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="25.3" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (3 samples, 0.04%)</title><rect x="25.3" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (207 samples, 2.42%)</title><rect x="25.7" y="291.0" width="28.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.7" y="302.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.02%)</title><rect x="25.7" y="275.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="28.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (13 samples, 0.15%)</title><rect x="26.0" y="275.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (13 samples, 0.15%)</title><rect x="26.0" y="259.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (13 samples, 0.15%)</title><rect x="26.0" y="243.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.0" y="254.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.15%)</title><rect x="26.0" y="227.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="29.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (7 samples, 0.08%)</title><rect x="27.8" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (7 samples, 0.08%)</title><rect x="27.8" y="259.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.8" y="270.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="27.8" y="243.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="30.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (12 samples, 0.14%)</title><rect x="28.7" y="275.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.14%)</title><rect x="28.7" y="259.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.7" y="270.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.05%)</title><rect x="28.7" y="243.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="31.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.09%)</title><rect x="29.3" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.3" y="254.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.09%)</title><rect x="29.3" y="227.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="32.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="30.4" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="30.4" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (4 samples, 0.05%)</title><rect x="30.4" y="243.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="33.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.05%)</title><rect x="30.9" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.9" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.05%)</title><rect x="30.9" y="259.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="33.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (134 samples, 1.56%)</title><rect x="31.5" y="275.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.5" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (3 samples, 0.04%)</title><rect x="31.5" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="31.5" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="31.5" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.5" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.get$Lambda (3 samples, 0.04%)</title><rect x="31.5" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.5" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$193 (3 samples, 0.04%)</title><rect x="31.5" y="195.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="34.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (65 samples, 0.76%)</title><rect x="31.9" y="259.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (36 samples, 0.42%)</title><rect x="31.9" y="243.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (36 samples, 0.42%)</title><rect x="31.9" y="227.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (36 samples, 0.42%)</title><rect x="31.9" y="211.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.9" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.42%)</title><rect x="31.9" y="195.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.9" y="206.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.42%)</title><rect x="31.9" y="179.0" width="5.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="34.9" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.05%)</title><rect x="36.9" y="243.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.05%)</title><rect x="36.9" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (4 samples, 0.05%)</title><rect x="36.9" y="211.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (4 samples, 0.05%)</title><rect x="36.9" y="195.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="39.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (9 samples, 0.11%)</title><rect x="37.4" y="243.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.4" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (3 samples, 0.04%)</title><rect x="37.4" y="227.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="40.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (6 samples, 0.07%)</title><rect x="37.8" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.8" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (6 samples, 0.07%)</title><rect x="37.8" y="211.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="40.8" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.test (16 samples, 0.19%)</title><rect x="38.7" y="243.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.7" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (16 samples, 0.19%)</title><rect x="38.7" y="227.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$91/2013559698.test (16 samples, 0.19%)</title><rect x="38.7" y="211.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (16 samples, 0.19%)</title><rect x="38.7" y="195.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$80/1582071873.test (16 samples, 0.19%)</title><rect x="38.7" y="179.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (16 samples, 0.19%)</title><rect x="38.7" y="163.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/1616974404.test (16 samples, 0.19%)</title><rect x="38.7" y="147.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (16 samples, 0.19%)</title><rect x="38.7" y="131.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.19%)</title><rect x="38.7" y="115.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.19%)</title><rect x="38.7" y="99.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="38.7" y="83.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="41.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.08%)</title><rect x="39.9" y="83.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.9" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="39.9" y="67.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="42.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (66 samples, 0.77%)</title><rect x="40.9" y="259.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (66 samples, 0.77%)</title><rect x="40.9" y="243.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (66 samples, 0.77%)</title><rect x="40.9" y="227.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.9" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (4 samples, 0.05%)</title><rect x="40.9" y="211.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="43.9" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.04%)</title><rect x="41.4" y="211.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="44.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.06%)</title><rect x="41.8" y="211.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="44.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (3 samples, 0.04%)</title><rect x="42.5" y="211.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="45.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="42.9" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="42.9" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.9" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (3 samples, 0.04%)</title><rect x="42.9" y="179.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.9" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.04%)</title><rect x="42.9" y="163.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="45.9" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (6 samples, 0.07%)</title><rect x="43.3" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.3" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (6 samples, 0.07%)</title><rect x="43.3" y="195.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="46.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (36 samples, 0.42%)</title><rect x="44.2" y="211.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (36 samples, 0.42%)</title><rect x="44.2" y="195.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.2" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (36 samples, 0.42%)</title><rect x="44.2" y="179.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.09%)</title><rect x="44.2" y="163.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.09%)</title><rect x="44.2" y="147.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (8 samples, 0.09%)</title><rect x="44.2" y="131.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.2" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (8 samples, 0.09%)</title><rect x="44.2" y="115.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="47.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.06%)</title><rect x="45.3" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.3" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (5 samples, 0.06%)</title><rect x="45.3" y="147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.06%)</title><rect x="45.3" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.06%)</title><rect x="45.3" y="115.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.06%)</title><rect x="45.3" y="99.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.3" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.06%)</title><rect x="45.3" y="83.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.3" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.06%)</title><rect x="45.3" y="67.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="45.3" y="51.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.3" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="45.3" y="35.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="48.3" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (16 samples, 0.19%)</title><rect x="46.0" y="163.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.0" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (16 samples, 0.19%)</title><rect x="46.0" y="147.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (9 samples, 0.11%)</title><rect x="46.0" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.0" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.11%)</title><rect x="46.0" y="115.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.0" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.11%)</title><rect x="46.0" y="99.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="49.0" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.08%)</title><rect x="47.2" y="131.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.2" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.08%)</title><rect x="47.2" y="115.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="50.2" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.08%)</title><rect x="48.2" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.2" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.08%)</title><rect x="48.2" y="147.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="51.2" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (6 samples, 0.07%)</title><rect x="49.1" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.1" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.07%)</title><rect x="49.1" y="195.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="52.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (11 samples, 0.13%)</title><rect x="49.9" y="275.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (6 samples, 0.07%)</title><rect x="49.9" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.9" y="270.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="49.9" y="243.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="52.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.06%)</title><rect x="50.8" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (5 samples, 0.06%)</title><rect x="50.8" y="243.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (5 samples, 0.06%)</title><rect x="50.8" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.06%)</title><rect x="50.8" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.05%)</title><rect x="50.9" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.05%)</title><rect x="50.9" y="179.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.9" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="50.9" y="163.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="53.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (7 samples, 0.08%)</title><rect x="51.5" y="275.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (7 samples, 0.08%)</title><rect x="51.5" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="51.5" y="243.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (7 samples, 0.08%)</title><rect x="51.5" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (7 samples, 0.08%)</title><rect x="51.5" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="51.5" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.02%)</title><rect x="51.5" y="179.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="54.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="51.5" y="163.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="54.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.06%)</title><rect x="51.7" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.06%)</title><rect x="51.7" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.7" y="174.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="51.7" y="147.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="54.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (13 samples, 0.15%)</title><rect x="52.4" y="275.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.4" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.06%)</title><rect x="52.4" y="259.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="55.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.05%)</title><rect x="53.1" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="53.1" y="243.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="56.1" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.05%)</title><rect x="53.7" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.7" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.05%)</title><rect x="53.7" y="243.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="56.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.11%)</title><rect x="54.2" y="323.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.11%)</title><rect x="54.2" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.11%)</title><rect x="54.2" y="291.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="57.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (8 samples, 0.09%)</title><rect x="55.5" y="355.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="58.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="56.6" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="59.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (40 samples, 0.47%)</title><rect x="57.0" y="355.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="57.0" y="339.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="57.0" y="323.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (2 samples, 0.02%)</title><rect x="57.2" y="339.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="60.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (7 samples, 0.08%)</title><rect x="57.5" y="339.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="60.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (5 samples, 0.06%)</title><rect x="58.5" y="339.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="61.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (10 samples, 0.12%)</title><rect x="59.2" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.12%)</title><rect x="59.2" y="323.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.12%)</title><rect x="59.2" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.12%)</title><rect x="59.2" y="291.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.12%)</title><rect x="59.2" y="275.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (10 samples, 0.12%)</title><rect x="59.2" y="259.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (10 samples, 0.12%)</title><rect x="59.2" y="243.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10 samples, 0.12%)</title><rect x="59.2" y="227.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (10 samples, 0.12%)</title><rect x="59.2" y="211.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="59.2" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="59.2" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/912126104.get$Lambda (2 samples, 0.02%)</title><rect x="59.2" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$172 (2 samples, 0.02%)</title><rect x="59.2" y="147.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (7 samples, 0.08%)</title><rect x="59.6" y="195.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (7 samples, 0.08%)</title><rect x="59.6" y="179.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (2 samples, 0.02%)</title><rect x="59.6" y="163.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="62.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (5 samples, 0.06%)</title><rect x="59.9" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (5 samples, 0.06%)</title><rect x="59.9" y="147.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (12 samples, 0.14%)</title><rect x="60.6" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.6" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.05%)</title><rect x="60.6" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="63.6" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (6 samples, 0.07%)</title><rect x="61.1" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="64.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="61.9" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.9" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="61.9" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.9" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="61.9" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (2 samples, 0.02%)</title><rect x="62.2" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="62.2" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="65.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="62.5" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="62.5" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="62.5" y="435.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.07%)</title><rect x="63.0" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="66.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.07%)</title><rect x="63.0" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (4 samples, 0.05%)</title><rect x="63.0" y="467.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="66.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="63.6" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="63.6" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="63.6" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="66.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (121 samples, 1.41%)</title><rect x="63.9" y="499.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="63.9" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="63.9" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$167/2108789873.get$Lambda (2 samples, 0.02%)</title><rect x="64.0" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$167 (2 samples, 0.02%)</title><rect x="64.0" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="67.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.09%)</title><rect x="64.3" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.09%)</title><rect x="64.3" y="467.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$167/2108789873.apply (6 samples, 0.07%)</title><rect x="64.3" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (6 samples, 0.07%)</title><rect x="64.3" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.07%)</title><rect x="64.3" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.07%)</title><rect x="64.3" y="403.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="67.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="65.1" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="65.1" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="65.1" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="65.4" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="65.4" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="65.4" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="65.4" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="65.4" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="68.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (108 samples, 1.26%)</title><rect x="65.7" y="483.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (108 samples, 1.26%)</title><rect x="65.7" y="467.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (8 samples, 0.09%)</title><rect x="65.7" y="451.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (97 samples, 1.13%)</title><rect x="66.8" y="451.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (4 samples, 0.05%)</title><rect x="66.8" y="435.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="69.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (2 samples, 0.02%)</title><rect x="67.4" y="435.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="70.4" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.07%)</title><rect x="67.7" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.7" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (6 samples, 0.07%)</title><rect x="67.7" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.7" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (6 samples, 0.07%)</title><rect x="67.7" y="403.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="70.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (3 samples, 0.04%)</title><rect x="68.5" y="435.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="71.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (4 samples, 0.05%)</title><rect x="69.0" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="72.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (8 samples, 0.09%)</title><rect x="69.5" y="435.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="72.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.07%)</title><rect x="70.6" y="435.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="73.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (27 samples, 0.32%)</title><rect x="71.4" y="435.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (5 samples, 0.06%)</title><rect x="71.4" y="419.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="74.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (2 samples, 0.02%)</title><rect x="72.1" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="75.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (3 samples, 0.04%)</title><rect x="72.4" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="75.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.07%)</title><rect x="72.8" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.07%)</title><rect x="72.8" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$163/1240991028.get$Lambda (2 samples, 0.02%)</title><rect x="72.8" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$163 (2 samples, 0.02%)</title><rect x="72.8" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="75.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.get$Lambda (4 samples, 0.05%)</title><rect x="73.1" y="387.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$164 (4 samples, 0.05%)</title><rect x="73.1" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="76.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (2 samples, 0.02%)</title><rect x="73.8" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="76.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (8 samples, 0.09%)</title><rect x="74.1" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (2 samples, 0.02%)</title><rect x="74.1" y="403.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="77.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (3 samples, 0.04%)</title><rect x="74.3" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="77.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.02%)</title><rect x="74.9" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.02%)</title><rect x="74.9" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="77.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (20 samples, 0.23%)</title><rect x="75.2" y="435.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (4 samples, 0.05%)</title><rect x="75.2" y="419.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="78.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.02%)</title><rect x="75.8" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.02%)</title><rect x="75.8" y="403.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="78.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (13 samples, 0.15%)</title><rect x="76.1" y="419.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (5 samples, 0.06%)</title><rect x="76.1" y="403.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="79.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (4 samples, 0.05%)</title><rect x="76.8" y="403.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="79.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.04%)</title><rect x="77.5" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.02%)</title><rect x="77.6" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="80.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (10 samples, 0.12%)</title><rect x="77.9" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (8 samples, 0.09%)</title><rect x="77.9" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (8 samples, 0.09%)</title><rect x="77.9" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.9" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.09%)</title><rect x="77.9" y="387.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.9" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.09%)</title><rect x="77.9" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (8 samples, 0.09%)</title><rect x="77.9" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.09%)</title><rect x="77.9" y="339.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="80.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (2 samples, 0.02%)</title><rect x="79.0" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (2 samples, 0.02%)</title><rect x="79.0" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (6 samples, 0.07%)</title><rect x="79.3" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.3" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.06%)</title><rect x="79.4" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.run (5 samples, 0.06%)</title><rect x="79.4" y="403.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.06%)</title><rect x="79.4" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.4" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.06%)</title><rect x="79.4" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.4" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (3 samples, 0.04%)</title><rect x="79.4" y="355.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="82.4" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.02%)</title><rect x="79.8" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.8" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.02%)</title><rect x="79.8" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.8" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.02%)</title><rect x="79.8" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.8" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.02%)</title><rect x="79.8" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.8" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (2 samples, 0.02%)</title><rect x="79.8" y="291.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="82.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="80.1" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="80.1" y="435.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (9 samples, 0.11%)</title><rect x="80.5" y="547.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (9 samples, 0.11%)</title><rect x="80.5" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.11%)</title><rect x="80.5" y="515.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (9 samples, 0.11%)</title><rect x="80.5" y="499.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="83.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (10 samples, 0.12%)</title><rect x="81.8" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (8 samples, 0.09%)</title><rect x="81.8" y="531.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="84.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (2 samples, 0.02%)</title><rect x="82.9" y="531.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.02%)</title><rect x="82.9" y="515.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="82.9" y="499.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.9" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (2 samples, 0.02%)</title><rect x="82.9" y="483.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="82.9" y="467.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="82.9" y="451.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.02%)</title><rect x="82.9" y="435.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.9" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="82.9" y="419.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.9" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.02%)</title><rect x="82.9" y="403.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.9" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.02%)</title><rect x="82.9" y="387.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.9" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.02%)</title><rect x="82.9" y="371.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="85.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (821 samples, 9.58%)</title><rect x="83.1" y="611.0" width="113.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.1" y="622.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (821 samples, 9.58%)</title><rect x="83.1" y="595.0" width="113.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.1" y="606.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (817 samples, 9.54%)</title><rect x="83.1" y="579.0" width="112.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.1" y="590.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (817 samples, 9.54%)</title><rect x="83.1" y="563.0" width="112.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.1" y="574.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (817 samples, 9.54%)</title><rect x="83.1" y="547.0" width="112.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.1" y="558.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (817 samples, 9.54%)</title><rect x="83.1" y="531.0" width="112.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.1" y="542.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (724 samples, 8.45%)</title><rect x="83.1" y="515.0" width="99.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.1" y="526.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (724 samples, 8.45%)</title><rect x="83.1" y="499.0" width="99.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.1" y="510.0">one/nio/util..</text>
</g>
<g>
<title>byte[] (477 samples, 5.57%)</title><rect x="83.1" y="483.0" width="65.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="86.1" y="494.0">byte[]</text>
</g>
<g>
<title>byte[] (247 samples, 2.88%)</title><rect x="148.9" y="483.0" width="34.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="151.9" y="494.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 1.09%)</title><rect x="182.9" y="515.0" width="12.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.9" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (93 samples, 1.09%)</title><rect x="182.9" y="499.0" width="12.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="185.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (4 samples, 0.05%)</title><rect x="195.7" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (4 samples, 0.05%)</title><rect x="195.7" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (4 samples, 0.05%)</title><rect x="195.7" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="195.7" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="195.7" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="198.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get (1,938 samples, 22.62%)</title><rect x="196.2" y="627.0" width="267.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.2" y="638.0">ru/mail/polis/service/ivanovandrey/B..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$get$0 (1,938 samples, 22.62%)</title><rect x="196.2" y="611.0" width="267.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.2" y="622.0">ru/mail/polis/service/ivanovandrey/B..</text>
</g>
<g>
<title>java/lang/String.getBytes (126 samples, 1.47%)</title><rect x="196.2" y="595.0" width="17.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (126 samples, 1.47%)</title><rect x="196.2" y="579.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (126 samples, 1.47%)</title><rect x="196.2" y="563.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (126 samples, 1.47%)</title><rect x="196.2" y="547.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.2" y="558.0"></text>
</g>
<g>
<title>byte[] (126 samples, 1.47%)</title><rect x="196.2" y="531.0" width="17.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="199.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (438 samples, 5.11%)</title><rect x="213.6" y="595.0" width="60.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.6" y="606.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Response (118 samples, 1.38%)</title><rect x="213.6" y="579.0" width="16.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="216.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (320 samples, 3.74%)</title><rect x="229.9" y="579.0" width="44.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.9" y="590.0">one/..</text>
</g>
<g>
<title>byte[] (110 samples, 1.28%)</title><rect x="229.9" y="563.0" width="15.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="232.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (107 samples, 1.25%)</title><rect x="245.0" y="563.0" width="14.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="248.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 1.20%)</title><rect x="259.7" y="563.0" width="14.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="262.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (764 samples, 8.92%)</title><rect x="273.9" y="595.0" width="105.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.9" y="606.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (702 samples, 8.20%)</title><rect x="273.9" y="579.0" width="96.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.9" y="590.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (702 samples, 8.20%)</title><rect x="273.9" y="563.0" width="96.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.9" y="574.0">org/rocksdb..</text>
</g>
<g>
<title>byte[] (608 samples, 7.10%)</title><rect x="273.9" y="547.0" width="83.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="276.9" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (94 samples, 1.10%)</title><rect x="357.7" y="547.0" width="12.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.toArrayShifted (62 samples, 0.72%)</title><rect x="370.6" y="579.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (62 samples, 0.72%)</title><rect x="370.6" y="563.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="373.6" y="574.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.72%)</title><rect x="370.6" y="547.0" width="8.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="373.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (610 samples, 7.12%)</title><rect x="379.2" y="595.0" width="84.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="382.2" y="606.0">ru/mail/po..</text>
</g>
<g>
<title>byte[] (365 samples, 4.26%)</title><rect x="379.2" y="579.0" width="50.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="382.2" y="590.0">byte[]</text>
</g>
<g>
<title>byte[] (245 samples, 2.86%)</title><rect x="429.5" y="579.0" width="33.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="432.5" y="590.0">by..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (793 samples, 9.26%)</title><rect x="463.2" y="643.0" width="109.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.2" y="654.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (793 samples, 9.26%)</title><rect x="463.2" y="627.0" width="109.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.2" y="638.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (95 samples, 1.11%)</title><rect x="463.2" y="611.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (95 samples, 1.11%)</title><rect x="463.2" y="595.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (95 samples, 1.11%)</title><rect x="463.2" y="579.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (95 samples, 1.11%)</title><rect x="463.2" y="563.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (78 samples, 0.91%)</title><rect x="463.2" y="547.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (78 samples, 0.91%)</title><rect x="463.2" y="531.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (78 samples, 0.91%)</title><rect x="463.2" y="515.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (78 samples, 0.91%)</title><rect x="463.2" y="499.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (70 samples, 0.82%)</title><rect x="463.2" y="483.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (70 samples, 0.82%)</title><rect x="463.2" y="467.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.2" y="478.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.82%)</title><rect x="463.2" y="451.0" width="9.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="466.2" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 0.09%)</title><rect x="472.9" y="483.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.9" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 0.09%)</title><rect x="472.9" y="467.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="475.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (17 samples, 0.20%)</title><rect x="474.0" y="547.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (17 samples, 0.20%)</title><rect x="474.0" y="531.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (17 samples, 0.20%)</title><rect x="474.0" y="515.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.20%)</title><rect x="474.0" y="499.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.0" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.20%)</title><rect x="474.0" y="483.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="477.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.apply (592 samples, 6.91%)</title><rect x="476.3" y="611.0" width="81.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.3" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$sendToReplicas$2 (592 samples, 6.91%)</title><rect x="476.3" y="595.0" width="81.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.3" y="606.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.formFinalResponse (592 samples, 6.91%)</title><rect x="476.3" y="579.0" width="81.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.3" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/Collection.stream (31 samples, 0.36%)</title><rect x="476.3" y="563.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (11 samples, 0.13%)</title><rect x="476.3" y="547.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.3" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (11 samples, 0.13%)</title><rect x="476.3" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.3" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (11 samples, 0.13%)</title><rect x="476.3" y="515.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="479.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (20 samples, 0.23%)</title><rect x="477.8" y="547.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (20 samples, 0.23%)</title><rect x="477.8" y="531.0" width="2.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="480.8" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (9 samples, 0.11%)</title><rect x="480.6" y="563.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.11%)</title><rect x="480.6" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.11%)</title><rect x="480.6" y="531.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.6" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$235/8451200.get$Lambda (9 samples, 0.11%)</title><rect x="480.6" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.6" y="526.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$235 (9 samples, 0.11%)</title><rect x="480.6" y="499.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="483.6" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (195 samples, 2.28%)</title><rect x="481.8" y="563.0" width="26.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="484.8" y="574.0">j..</text>
</g>
<g>
<title>java/util/Optional.ofNullable (5 samples, 0.06%)</title><rect x="481.8" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.8" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (5 samples, 0.06%)</title><rect x="481.8" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.8" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (5 samples, 0.06%)</title><rect x="481.8" y="515.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="484.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica$$Lambda$237/461658586.apply (190 samples, 2.22%)</title><rect x="482.5" y="547.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.5" y="558.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.lambda$formFinalResponse$2 (190 samples, 2.22%)</title><rect x="482.5" y="531.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.5" y="542.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (9 samples, 0.11%)</title><rect x="482.5" y="515.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="485.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (29 samples, 0.34%)</title><rect x="483.7" y="515.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.7" y="526.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="483.7" y="499.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="486.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.16%)</title><rect x="484.7" y="499.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="487.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.09%)</title><rect x="486.6" y="499.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="489.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getData (47 samples, 0.55%)</title><rect x="487.7" y="515.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="526.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.55%)</title><rect x="487.7" y="499.0" width="6.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="490.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampByData (105 samples, 1.23%)</title><rect x="494.2" y="515.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (57 samples, 0.67%)</title><rect x="494.2" y="499.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.2" y="510.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.67%)</title><rect x="494.2" y="483.0" width="7.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="497.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (48 samples, 0.56%)</title><rect x="502.1" y="499.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.1" y="510.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.56%)</title><rect x="502.1" y="483.0" width="6.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="505.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (20 samples, 0.23%)</title><rect x="508.7" y="563.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.7" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (20 samples, 0.23%)</title><rect x="508.7" y="547.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="511.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (295 samples, 3.44%)</title><rect x="511.4" y="563.0" width="40.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.4" y="574.0">jav..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (11 samples, 0.13%)</title><rect x="511.4" y="547.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.13%)</title><rect x="511.4" y="531.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.13%)</title><rect x="511.4" y="515.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.4" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$236/272885942.get$Lambda (11 samples, 0.13%)</title><rect x="511.4" y="499.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.4" y="510.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$236 (11 samples, 0.13%)</title><rect x="511.4" y="483.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="514.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (284 samples, 3.32%)</title><rect x="512.9" y="547.0" width="39.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.9" y="558.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (274 samples, 3.20%)</title><rect x="512.9" y="531.0" width="37.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.9" y="542.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (274 samples, 3.20%)</title><rect x="512.9" y="515.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.9" y="526.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (261 samples, 3.05%)</title><rect x="512.9" y="499.0" width="36.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.9" y="510.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (252 samples, 2.94%)</title><rect x="512.9" y="483.0" width="34.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.9" y="494.0">ja..</text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (252 samples, 2.94%)</title><rect x="512.9" y="467.0" width="34.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.9" y="478.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (252 samples, 2.94%)</title><rect x="512.9" y="451.0" width="34.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.9" y="462.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (252 samples, 2.94%)</title><rect x="512.9" y="435.0" width="34.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.9" y="446.0">ja..</text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$236/272885942.apply (252 samples, 2.94%)</title><rect x="512.9" y="419.0" width="34.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.9" y="430.0">ja..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (252 samples, 2.94%)</title><rect x="512.9" y="403.0" width="34.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.9" y="414.0">ja..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$235/8451200.compare (252 samples, 2.94%)</title><rect x="512.9" y="387.0" width="34.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.9" y="398.0">ja..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (252 samples, 2.94%)</title><rect x="512.9" y="371.0" width="34.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.9" y="382.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica$$Lambda$234/1096180869.applyAsLong (252 samples, 2.94%)</title><rect x="512.9" y="355.0" width="34.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.9" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.lambda$formFinalResponse$1 (252 samples, 2.94%)</title><rect x="512.9" y="339.0" width="34.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.9" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.36%)</title><rect x="512.9" y="323.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (31 samples, 0.36%)</title><rect x="512.9" y="307.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (31 samples, 0.36%)</title><rect x="512.9" y="291.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="515.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampByData (221 samples, 2.58%)</title><rect x="517.2" y="323.0" width="30.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.2" y="334.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (92 samples, 1.07%)</title><rect x="517.2" y="307.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.2" y="318.0"></text>
</g>
<g>
<title>byte[] (92 samples, 1.07%)</title><rect x="517.2" y="291.0" width="12.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="520.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (129 samples, 1.51%)</title><rect x="529.9" y="307.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.9" y="318.0"></text>
</g>
<g>
<title>byte[] (99 samples, 1.16%)</title><rect x="529.9" y="291.0" width="13.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="532.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (30 samples, 0.35%)</title><rect x="543.5" y="291.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (30 samples, 0.35%)</title><rect x="543.5" y="275.0" width="4.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="546.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.11%)</title><rect x="547.7" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (9 samples, 0.11%)</title><rect x="547.7" y="467.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="550.7" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (9 samples, 0.11%)</title><rect x="547.7" y="451.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="550.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (8 samples, 0.09%)</title><rect x="548.9" y="499.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (8 samples, 0.09%)</title><rect x="548.9" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.9" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (8 samples, 0.09%)</title><rect x="548.9" y="467.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="551.9" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (5 samples, 0.06%)</title><rect x="550.0" y="499.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (5 samples, 0.06%)</title><rect x="550.0" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.0" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (5 samples, 0.06%)</title><rect x="550.0" y="467.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.0" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (5 samples, 0.06%)</title><rect x="550.0" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="553.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (10 samples, 0.12%)</title><rect x="550.7" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="553.7" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (10 samples, 0.12%)</title><rect x="550.7" y="515.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="553.7" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (7 samples, 0.08%)</title><rect x="552.1" y="563.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="555.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (35 samples, 0.41%)</title><rect x="553.0" y="563.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.0" y="574.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.18%)</title><rect x="553.0" y="547.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="556.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.18%)</title><rect x="555.1" y="547.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="558.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.06%)</title><rect x="557.2" y="547.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="560.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology$$Lambda$133/1116379785.apply (106 samples, 1.24%)</title><rect x="557.8" y="611.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="560.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.lambda$forwardRequest$0 (106 samples, 1.24%)</title><rect x="557.8" y="595.0" width="14.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (27 samples, 0.32%)</title><rect x="557.8" y="579.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (27 samples, 0.32%)</title><rect x="557.8" y="563.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.8" y="574.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.19%)</title><rect x="557.8" y="547.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="560.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.13%)</title><rect x="560.1" y="547.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="563.1" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (20 samples, 0.23%)</title><rect x="561.6" y="579.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="564.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (59 samples, 0.69%)</title><rect x="564.3" y="579.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.3" y="590.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.25%)</title><rect x="564.3" y="563.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="567.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.27%)</title><rect x="567.2" y="563.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="570.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.18%)</title><rect x="570.4" y="563.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="573.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (104 samples, 1.21%)</title><rect x="572.4" y="643.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (95 samples, 1.11%)</title><rect x="572.4" y="627.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (95 samples, 1.11%)</title><rect x="572.4" y="611.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (95 samples, 1.11%)</title><rect x="572.4" y="595.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (95 samples, 1.11%)</title><rect x="572.4" y="579.0" width="13.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="575.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.11%)</title><rect x="585.5" y="627.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.11%)</title><rect x="585.5" y="611.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (9 samples, 0.11%)</title><rect x="585.5" y="595.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (9 samples, 0.11%)</title><rect x="585.5" y="579.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="588.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.run (57 samples, 0.67%)</title><rect x="586.8" y="643.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="589.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (57 samples, 0.67%)</title><rect x="586.8" y="627.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="589.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (57 samples, 0.67%)</title><rect x="586.8" y="611.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (57 samples, 0.67%)</title><rect x="586.8" y="595.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 0.67%)</title><rect x="586.8" y="579.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (57 samples, 0.67%)</title><rect x="586.8" y="563.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (57 samples, 0.67%)</title><rect x="586.8" y="547.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (57 samples, 0.67%)</title><rect x="586.8" y="531.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="589.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (57 samples, 0.67%)</title><rect x="586.8" y="515.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (57 samples, 0.67%)</title><rect x="586.8" y="499.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (57 samples, 0.67%)</title><rect x="586.8" y="483.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (50 samples, 0.58%)</title><rect x="586.8" y="467.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="589.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (49 samples, 0.57%)</title><rect x="586.9" y="451.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (4 samples, 0.05%)</title><rect x="586.9" y="435.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="589.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 0.53%)</title><rect x="587.5" y="435.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (45 samples, 0.53%)</title><rect x="587.5" y="419.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (45 samples, 0.53%)</title><rect x="587.5" y="403.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (24 samples, 0.28%)</title><rect x="587.5" y="387.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (8 samples, 0.09%)</title><rect x="587.5" y="371.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="590.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.apply (12 samples, 0.14%)</title><rect x="588.6" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (12 samples, 0.14%)</title><rect x="588.6" y="355.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (12 samples, 0.14%)</title><rect x="588.6" y="339.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.04%)</title><rect x="588.6" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.6" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.04%)</title><rect x="588.6" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.6" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.04%)</title><rect x="588.6" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="591.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (9 samples, 0.11%)</title><rect x="589.0" y="323.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (9 samples, 0.11%)</title><rect x="589.0" y="307.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (9 samples, 0.11%)</title><rect x="589.0" y="291.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.06%)</title><rect x="589.0" y="275.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="592.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="589.7" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="589.7" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="589.7" y="243.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="592.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.apply (4 samples, 0.05%)</title><rect x="590.2" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4 samples, 0.05%)</title><rect x="590.2" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4 samples, 0.05%)</title><rect x="590.2" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3 samples, 0.04%)</title><rect x="590.4" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3 samples, 0.04%)</title><rect x="590.4" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.04%)</title><rect x="590.4" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.run (3 samples, 0.04%)</title><rect x="590.4" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.04%)</title><rect x="590.4" y="259.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (21 samples, 0.25%)</title><rect x="590.8" y="387.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (21 samples, 0.25%)</title><rect x="590.8" y="371.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.apply (21 samples, 0.25%)</title><rect x="590.8" y="355.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (21 samples, 0.25%)</title><rect x="590.8" y="339.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (21 samples, 0.25%)</title><rect x="590.8" y="323.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.apply (21 samples, 0.25%)</title><rect x="590.8" y="307.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (21 samples, 0.25%)</title><rect x="590.8" y="291.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="590.8" y="275.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="590.8" y="259.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.get$Lambda (2 samples, 0.02%)</title><rect x="590.8" y="243.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$199 (2 samples, 0.02%)</title><rect x="590.8" y="227.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="593.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.07%)</title><rect x="591.0" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.07%)</title><rect x="591.0" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.02%)</title><rect x="591.0" y="243.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="594.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="591.3" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="591.3" y="227.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="591.3" y="211.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="594.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (13 samples, 0.15%)</title><rect x="591.9" y="275.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (9 samples, 0.11%)</title><rect x="591.9" y="259.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (3 samples, 0.04%)</title><rect x="591.9" y="243.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="594.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (6 samples, 0.07%)</title><rect x="592.3" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (6 samples, 0.07%)</title><rect x="592.3" y="227.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.07%)</title><rect x="592.3" y="211.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="595.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.05%)</title><rect x="593.1" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (2 samples, 0.02%)</title><rect x="593.1" y="243.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="596.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="593.4" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.02%)</title><rect x="593.4" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.02%)</title><rect x="593.4" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.02%)</title><rect x="593.4" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.02%)</title><rect x="593.4" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.02%)</title><rect x="593.4" y="163.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="596.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (7 samples, 0.08%)</title><rect x="593.7" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (7 samples, 0.08%)</title><rect x="593.7" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (7 samples, 0.08%)</title><rect x="593.7" y="435.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (7 samples, 0.08%)</title><rect x="593.7" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (7 samples, 0.08%)</title><rect x="593.7" y="403.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="596.7" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.08%)</title><rect x="593.7" y="387.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (3 samples, 0.04%)</title><rect x="593.7" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (3 samples, 0.04%)</title><rect x="593.7" y="355.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="596.7" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (4 samples, 0.05%)</title><rect x="594.1" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.1" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (4 samples, 0.05%)</title><rect x="594.1" y="355.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="597.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (491 samples, 5.73%)</title><rect x="594.6" y="643.0" width="67.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.6" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (491 samples, 5.73%)</title><rect x="594.6" y="627.0" width="67.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.6" y="638.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (335 samples, 3.91%)</title><rect x="594.6" y="611.0" width="46.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.6" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (335 samples, 3.91%)</title><rect x="594.6" y="595.0" width="46.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="597.6" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (335 samples, 3.91%)</title><rect x="594.6" y="579.0" width="46.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.6" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (12 samples, 0.14%)</title><rect x="594.6" y="563.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (12 samples, 0.14%)</title><rect x="594.6" y="547.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (12 samples, 0.14%)</title><rect x="594.6" y="531.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (12 samples, 0.14%)</title><rect x="594.6" y="515.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (7 samples, 0.08%)</title><rect x="594.6" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (7 samples, 0.08%)</title><rect x="594.6" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="597.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="594.6" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.08%)</title><rect x="594.6" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.08%)</title><rect x="594.6" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.6" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="594.6" y="419.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="597.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.06%)</title><rect x="595.6" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.06%)</title><rect x="595.6" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.06%)</title><rect x="595.6" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (5 samples, 0.06%)</title><rect x="595.6" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (5 samples, 0.06%)</title><rect x="595.6" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="598.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (323 samples, 3.77%)</title><rect x="596.3" y="563.0" width="44.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.3" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (323 samples, 3.77%)</title><rect x="596.3" y="547.0" width="44.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.3" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (323 samples, 3.77%)</title><rect x="596.3" y="531.0" width="44.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.3" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (323 samples, 3.77%)</title><rect x="596.3" y="515.0" width="44.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.3" y="526.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (156 samples, 1.82%)</title><rect x="596.3" y="499.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.3" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (156 samples, 1.82%)</title><rect x="596.3" y="483.0" width="21.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (156 samples, 1.82%)</title><rect x="596.3" y="467.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (156 samples, 1.82%)</title><rect x="596.3" y="451.0" width="21.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.3" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (156 samples, 1.82%)</title><rect x="596.3" y="435.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (156 samples, 1.82%)</title><rect x="596.3" y="419.0" width="21.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (156 samples, 1.82%)</title><rect x="596.3" y="403.0" width="21.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (153 samples, 1.79%)</title><rect x="596.3" y="387.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (153 samples, 1.79%)</title><rect x="596.3" y="371.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.3" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (150 samples, 1.75%)</title><rect x="596.3" y="355.0" width="20.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3 samples, 0.04%)</title><rect x="596.3" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="599.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.apply (140 samples, 1.63%)</title><rect x="596.7" y="339.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (140 samples, 1.63%)</title><rect x="596.7" y="323.0" width="19.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="596.7" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="596.7" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.get$Lambda (3 samples, 0.04%)</title><rect x="596.7" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$222 (3 samples, 0.04%)</title><rect x="596.7" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="599.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (6 samples, 0.07%)</title><rect x="597.1" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.07%)</title><rect x="597.1" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.06%)</title><rect x="597.1" y="275.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="600.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (131 samples, 1.53%)</title><rect x="597.9" y="307.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="597.9" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="597.9" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/2051064248.get$Lambda (3 samples, 0.04%)</title><rect x="597.9" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$221 (3 samples, 0.04%)</title><rect x="597.9" y="243.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="600.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.06%)</title><rect x="598.3" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.06%)</title><rect x="598.3" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.05%)</title><rect x="598.3" y="259.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="601.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (123 samples, 1.44%)</title><rect x="599.0" y="291.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$123/285631240.apply (5 samples, 0.06%)</title><rect x="599.0" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (5 samples, 0.06%)</title><rect x="599.0" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (5 samples, 0.06%)</title><rect x="599.0" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (2 samples, 0.02%)</title><rect x="599.0" y="227.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="602.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (3 samples, 0.04%)</title><rect x="599.3" y="227.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="599.4" y="211.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="602.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (118 samples, 1.38%)</title><rect x="599.7" y="275.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.06%)</title><rect x="599.7" y="259.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.06%)</title><rect x="599.7" y="243.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.get$Lambda (2 samples, 0.02%)</title><rect x="599.7" y="227.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$219 (2 samples, 0.02%)</title><rect x="599.7" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="602.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$220/1128258684.get$Lambda (3 samples, 0.04%)</title><rect x="600.0" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$220 (3 samples, 0.04%)</title><rect x="600.0" y="211.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="603.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2017647512.linkToTargetMethod (3 samples, 0.04%)</title><rect x="600.4" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1812561793.invokeStatic (3 samples, 0.04%)</title><rect x="600.4" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.get$Lambda (3 samples, 0.04%)</title><rect x="600.4" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$212 (3 samples, 0.04%)</title><rect x="600.4" y="211.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="603.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (29 samples, 0.34%)</title><rect x="600.8" y="259.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.09%)</title><rect x="600.8" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.04%)</title><rect x="600.8" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (3 samples, 0.04%)</title><rect x="600.8" y="211.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="603.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.06%)</title><rect x="601.2" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.06%)</title><rect x="601.2" y="211.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="604.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (10 samples, 0.12%)</title><rect x="601.9" y="243.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.9" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.12%)</title><rect x="601.9" y="227.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.12%)</title><rect x="601.9" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.07%)</title><rect x="601.9" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.9" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.05%)</title><rect x="601.9" y="179.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.05%)</title><rect x="601.9" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.05%)</title><rect x="601.9" y="147.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.9" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.05%)</title><rect x="601.9" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (4 samples, 0.05%)</title><rect x="601.9" y="115.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.9" y="126.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$206/1735967884.applyAsLong (2 samples, 0.02%)</title><rect x="601.9" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.9" y="110.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="601.9" y="83.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.9" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="601.9" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.02%)</title><rect x="601.9" y="51.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="604.9" y="62.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (2 samples, 0.02%)</title><rect x="602.2" y="99.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.2" y="110.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.02%)</title><rect x="602.2" y="83.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.2" y="94.0"></text>
</g>
<g>
<title>java.lang.Long (2 samples, 0.02%)</title><rect x="602.2" y="67.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="605.2" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="602.5" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.02%)</title><rect x="602.5" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.5" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (2 samples, 0.02%)</title><rect x="602.5" y="147.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="605.5" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$208/768646236.get (2 samples, 0.02%)</title><rect x="602.8" y="195.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.8" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (2 samples, 0.02%)</title><rect x="602.8" y="179.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="605.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.02%)</title><rect x="603.0" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.02%)</title><rect x="603.0" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.0" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.02%)</title><rect x="603.0" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.0" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.02%)</title><rect x="603.0" y="147.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="606.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (11 samples, 0.13%)</title><rect x="603.3" y="243.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.3" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (11 samples, 0.13%)</title><rect x="603.3" y="227.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="606.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.14%)</title><rect x="604.8" y="259.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.05%)</title><rect x="604.8" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.02%)</title><rect x="604.8" y="227.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="607.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="605.1" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="605.1" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="605.1" y="195.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="608.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (8 samples, 0.09%)</title><rect x="605.4" y="243.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.09%)</title><rect x="605.4" y="227.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.05%)</title><rect x="605.4" y="211.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="608.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="605.9" y="211.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="605.9" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="605.9" y="179.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="608.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (3 samples, 0.04%)</title><rect x="606.5" y="259.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="609.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (2 samples, 0.02%)</title><rect x="606.9" y="259.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="609.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.02%)</title><rect x="607.2" y="259.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="610.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.02%)</title><rect x="607.4" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (2 samples, 0.02%)</title><rect x="607.4" y="243.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="610.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (60 samples, 0.70%)</title><rect x="607.7" y="259.0" width="8.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.run (60 samples, 0.70%)</title><rect x="607.7" y="243.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (60 samples, 0.70%)</title><rect x="607.7" y="227.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.09%)</title><rect x="607.7" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.09%)</title><rect x="607.7" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.get$Lambda (3 samples, 0.04%)</title><rect x="607.7" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="610.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$213 (3 samples, 0.04%)</title><rect x="607.7" y="163.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="610.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1661738971.get$Lambda (2 samples, 0.02%)</title><rect x="608.1" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (2 samples, 0.02%)</title><rect x="608.1" y="163.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="611.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/173548741.get$Lambda (3 samples, 0.04%)</title><rect x="608.4" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (3 samples, 0.04%)</title><rect x="608.4" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="611.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.11%)</title><rect x="608.8" y="211.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.11%)</title><rect x="608.8" y="195.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.8" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.06%)</title><rect x="608.8" y="179.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="611.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="609.5" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="609.5" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="609.5" y="147.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="612.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (2 samples, 0.02%)</title><rect x="610.1" y="211.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="613.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (5 samples, 0.06%)</title><rect x="610.3" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.06%)</title><rect x="610.3" y="195.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="613.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (11 samples, 0.13%)</title><rect x="611.0" y="211.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (11 samples, 0.13%)</title><rect x="611.0" y="195.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.13%)</title><rect x="611.0" y="179.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.13%)</title><rect x="611.0" y="163.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.13%)</title><rect x="611.0" y="147.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.08%)</title><rect x="611.0" y="131.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="614.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="612.0" y="131.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="612.0" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.0" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="612.0" y="99.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="615.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (11 samples, 0.13%)</title><rect x="612.5" y="211.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.13%)</title><rect x="612.5" y="195.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (11 samples, 0.13%)</title><rect x="612.5" y="179.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.13%)</title><rect x="612.5" y="163.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.02%)</title><rect x="612.5" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="612.5" y="131.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="615.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.11%)</title><rect x="612.8" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.11%)</title><rect x="612.8" y="131.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.8" y="142.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="612.8" y="115.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="615.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (14 samples, 0.16%)</title><rect x="614.1" y="211.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (5 samples, 0.06%)</title><rect x="614.1" y="195.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="617.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (9 samples, 0.11%)</title><rect x="614.7" y="195.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.11%)</title><rect x="614.7" y="179.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (9 samples, 0.11%)</title><rect x="614.7" y="163.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.11%)</title><rect x="614.7" y="147.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (9 samples, 0.11%)</title><rect x="614.7" y="131.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="617.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (9 samples, 0.11%)</title><rect x="614.7" y="115.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.7" y="126.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="614.7" y="99.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="617.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.apply (7 samples, 0.08%)</title><rect x="616.0" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (7 samples, 0.08%)</title><rect x="616.0" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.04%)</title><rect x="616.0" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (3 samples, 0.04%)</title><rect x="616.0" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.0" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="616.0" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.0" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (3 samples, 0.04%)</title><rect x="616.0" y="259.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="619.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.05%)</title><rect x="616.4" y="307.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="616.4" y="291.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="619.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.04%)</title><rect x="616.9" y="355.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.04%)</title><rect x="616.9" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/516891066.apply (3 samples, 0.04%)</title><rect x="616.9" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3 samples, 0.04%)</title><rect x="616.9" y="307.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="616.9" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="616.9" y="275.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="619.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/398643824.apply (3 samples, 0.04%)</title><rect x="617.4" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (3 samples, 0.04%)</title><rect x="617.4" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (3 samples, 0.04%)</title><rect x="617.4" y="355.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="620.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (167 samples, 1.95%)</title><rect x="617.8" y="499.0" width="23.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.8" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (9 samples, 0.11%)</title><rect x="617.8" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.11%)</title><rect x="617.8" y="467.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="620.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.11%)</title><rect x="617.8" y="451.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (9 samples, 0.11%)</title><rect x="617.8" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.11%)</title><rect x="617.8" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.8" y="430.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="617.8" y="403.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="620.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (24 samples, 0.28%)</title><rect x="619.0" y="483.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.0" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.02%)</title><rect x="619.0" y="467.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="622.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.11%)</title><rect x="619.3" y="467.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.11%)</title><rect x="619.3" y="451.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.3" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.11%)</title><rect x="619.3" y="435.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.3" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="619.3" y="419.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="622.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="620.5" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (3 samples, 0.04%)</title><rect x="620.5" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.5" y="462.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="620.5" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="623.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (10 samples, 0.12%)</title><rect x="620.9" y="467.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.12%)</title><rect x="620.9" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.09%)</title><rect x="620.9" y="435.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="623.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="622.0" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.0" y="446.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="622.0" y="419.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="625.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (40 samples, 0.47%)</title><rect x="622.3" y="483.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (40 samples, 0.47%)</title><rect x="622.3" y="467.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (40 samples, 0.47%)</title><rect x="622.3" y="451.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.3" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.02%)</title><rect x="622.3" y="435.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="625.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.02%)</title><rect x="622.7" y="435.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="625.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.02%)</title><rect x="623.0" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="626.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="623.3" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="623.3" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (3 samples, 0.04%)</title><rect x="623.3" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.3" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.04%)</title><rect x="623.3" y="387.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="626.3" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (27 samples, 0.32%)</title><rect x="623.7" y="435.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (27 samples, 0.32%)</title><rect x="623.7" y="419.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (27 samples, 0.32%)</title><rect x="623.7" y="403.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="626.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="623.7" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="623.7" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (4 samples, 0.05%)</title><rect x="623.7" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.7" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (4 samples, 0.05%)</title><rect x="623.7" y="339.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.06%)</title><rect x="624.2" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (5 samples, 0.06%)</title><rect x="624.2" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (5 samples, 0.06%)</title><rect x="624.2" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.06%)</title><rect x="624.2" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.06%)</title><rect x="624.2" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.06%)</title><rect x="624.2" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.06%)</title><rect x="624.2" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.06%)</title><rect x="624.2" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="624.2" y="259.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="627.2" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (10 samples, 0.12%)</title><rect x="624.9" y="387.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (10 samples, 0.12%)</title><rect x="624.9" y="371.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (6 samples, 0.07%)</title><rect x="624.9" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.07%)</title><rect x="624.9" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.07%)</title><rect x="624.9" y="323.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="627.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.05%)</title><rect x="625.8" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.8" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.05%)</title><rect x="625.8" y="339.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="628.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.09%)</title><rect x="626.3" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (8 samples, 0.09%)</title><rect x="626.3" y="371.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="629.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (3 samples, 0.04%)</title><rect x="627.4" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.04%)</title><rect x="627.4" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="630.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (94 samples, 1.10%)</title><rect x="627.8" y="483.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.8" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.07%)</title><rect x="627.8" y="467.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="630.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.09%)</title><rect x="628.8" y="467.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.09%)</title><rect x="628.8" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.08%)</title><rect x="628.9" y="435.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.9" y="446.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.08%)</title><rect x="628.9" y="419.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="631.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (79 samples, 0.92%)</title><rect x="629.9" y="467.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.20%)</title><rect x="629.9" y="451.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.20%)</title><rect x="629.9" y="435.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.08%)</title><rect x="629.9" y="419.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="632.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.12%)</title><rect x="630.9" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.9" y="430.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.12%)</title><rect x="630.9" y="403.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="633.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (19 samples, 0.22%)</title><rect x="632.2" y="451.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (19 samples, 0.22%)</title><rect x="632.2" y="435.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.2" y="446.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.12%)</title><rect x="632.2" y="419.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="635.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.11%)</title><rect x="633.6" y="419.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="636.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (14 samples, 0.16%)</title><rect x="634.9" y="451.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (14 samples, 0.16%)</title><rect x="634.9" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.16%)</title><rect x="634.9" y="419.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.07%)</title><rect x="634.9" y="403.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="637.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.09%)</title><rect x="635.7" y="403.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.7" y="414.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.09%)</title><rect x="635.7" y="387.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="638.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.19%)</title><rect x="636.8" y="451.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.19%)</title><rect x="636.8" y="435.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.19%)</title><rect x="636.8" y="419.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.19%)</title><rect x="636.8" y="403.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.19%)</title><rect x="636.8" y="387.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.19%)</title><rect x="636.8" y="371.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="639.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (13 samples, 0.15%)</title><rect x="639.0" y="451.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (5 samples, 0.06%)</title><rect x="639.0" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (5 samples, 0.06%)</title><rect x="639.0" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="642.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.04%)</title><rect x="639.7" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.7" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3 samples, 0.04%)</title><rect x="639.7" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="642.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$205/782105492.apply (5 samples, 0.06%)</title><rect x="640.1" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (5 samples, 0.06%)</title><rect x="640.1" y="419.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.1" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.06%)</title><rect x="640.1" y="403.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="643.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (156 samples, 1.82%)</title><rect x="640.8" y="611.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="643.8" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (156 samples, 1.82%)</title><rect x="640.8" y="595.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.8" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (156 samples, 1.82%)</title><rect x="640.8" y="579.0" width="21.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.8" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (156 samples, 1.82%)</title><rect x="640.8" y="563.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.8" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (156 samples, 1.82%)</title><rect x="640.8" y="547.0" width="21.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.8" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (11 samples, 0.13%)</title><rect x="640.8" y="531.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (7 samples, 0.08%)</title><rect x="640.9" y="515.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="643.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="641.9" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="641.9" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (2 samples, 0.02%)</title><rect x="641.9" y="483.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="644.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (145 samples, 1.69%)</title><rect x="642.3" y="531.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (145 samples, 1.69%)</title><rect x="642.3" y="515.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (145 samples, 1.69%)</title><rect x="642.3" y="499.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (145 samples, 1.69%)</title><rect x="642.3" y="483.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (145 samples, 1.69%)</title><rect x="642.3" y="467.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (145 samples, 1.69%)</title><rect x="642.3" y="451.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (5 samples, 0.06%)</title><rect x="642.3" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.3" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (5 samples, 0.06%)</title><rect x="642.3" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.06%)</title><rect x="642.3" y="403.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="645.3" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.02%)</title><rect x="643.0" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.0" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.02%)</title><rect x="643.0" y="419.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="646.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.run (40 samples, 0.47%)</title><rect x="643.3" y="435.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (40 samples, 0.47%)</title><rect x="643.3" y="419.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (40 samples, 0.47%)</title><rect x="643.3" y="403.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (10 samples, 0.12%)</title><rect x="643.3" y="387.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.3" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (8 samples, 0.09%)</title><rect x="643.3" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.3" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.05%)</title><rect x="643.3" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.3" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.05%)</title><rect x="643.3" y="339.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="646.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.05%)</title><rect x="643.8" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.05%)</title><rect x="643.8" y="339.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="646.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.02%)</title><rect x="644.4" y="371.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.02%)</title><rect x="644.4" y="355.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.02%)</title><rect x="644.4" y="339.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (30 samples, 0.35%)</title><rect x="644.6" y="387.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.02%)</title><rect x="644.6" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.6" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.02%)</title><rect x="644.6" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.02%)</title><rect x="644.6" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.02%)</title><rect x="644.6" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.6" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.02%)</title><rect x="644.6" y="307.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="647.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (28 samples, 0.33%)</title><rect x="644.9" y="371.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (11 samples, 0.13%)</title><rect x="644.9" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="644.9" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.02%)</title><rect x="644.9" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.9" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.02%)</title><rect x="644.9" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.9" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.02%)</title><rect x="644.9" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.9" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.02%)</title><rect x="644.9" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.9" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (2 samples, 0.02%)</title><rect x="644.9" y="259.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="647.9" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.04%)</title><rect x="645.2" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.04%)</title><rect x="645.2" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (3 samples, 0.04%)</title><rect x="645.2" y="307.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="648.2" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (2 samples, 0.02%)</title><rect x="645.6" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.6" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (2 samples, 0.02%)</title><rect x="645.6" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.6" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.02%)</title><rect x="645.6" y="307.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="648.6" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.02%)</title><rect x="645.9" y="339.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.02%)</title><rect x="645.9" y="323.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.9" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.02%)</title><rect x="645.9" y="307.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="648.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (2 samples, 0.02%)</title><rect x="646.1" y="339.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="649.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (8 samples, 0.09%)</title><rect x="646.4" y="355.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="646.4" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.4" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="646.4" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (3 samples, 0.04%)</title><rect x="646.4" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="646.4" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="649.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.06%)</title><rect x="646.8" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.06%)</title><rect x="646.8" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.06%)</title><rect x="646.8" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="649.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9 samples, 0.11%)</title><rect x="647.5" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (2 samples, 0.02%)</title><rect x="647.5" y="339.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="650.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7 samples, 0.08%)</title><rect x="647.8" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (6 samples, 0.07%)</title><rect x="647.9" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (6 samples, 0.07%)</title><rect x="647.9" y="307.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (3 samples, 0.04%)</title><rect x="647.9" y="291.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="650.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="648.4" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="651.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (3 samples, 0.04%)</title><rect x="648.4" y="275.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="651.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (86 samples, 1.00%)</title><rect x="648.8" y="435.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="651.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (86 samples, 1.00%)</title><rect x="648.8" y="419.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (86 samples, 1.00%)</title><rect x="648.8" y="403.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (71 samples, 0.83%)</title><rect x="648.8" y="387.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (71 samples, 0.83%)</title><rect x="648.8" y="371.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (71 samples, 0.83%)</title><rect x="648.8" y="355.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (71 samples, 0.83%)</title><rect x="648.8" y="339.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.accept (71 samples, 0.83%)</title><rect x="648.8" y="323.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (71 samples, 0.83%)</title><rect x="648.8" y="307.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (71 samples, 0.83%)</title><rect x="648.8" y="291.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (71 samples, 0.83%)</title><rect x="648.8" y="275.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.05%)</title><rect x="648.8" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.apply (4 samples, 0.05%)</title><rect x="648.8" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.05%)</title><rect x="648.8" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (4 samples, 0.05%)</title><rect x="648.8" y="211.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="651.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (67 samples, 0.78%)</title><rect x="649.3" y="259.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (67 samples, 0.78%)</title><rect x="649.3" y="243.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (67 samples, 0.78%)</title><rect x="649.3" y="227.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (67 samples, 0.78%)</title><rect x="649.3" y="211.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.3" y="222.0"></text>
</g>
<g>
<title>java.lang.Thread (36 samples, 0.42%)</title><rect x="649.3" y="195.0" width="5.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="652.3" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (31 samples, 0.36%)</title><rect x="654.3" y="195.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.3" y="206.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.07%)</title><rect x="654.3" y="179.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="657.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="655.1" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.1" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="655.1" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.1" y="174.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.02%)</title><rect x="655.1" y="147.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="658.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.07%)</title><rect x="655.4" y="179.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.07%)</title><rect x="655.4" y="163.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="655.4" y="147.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="658.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.05%)</title><rect x="655.7" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.7" y="158.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.05%)</title><rect x="655.7" y="131.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="658.7" y="142.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (17 samples, 0.20%)</title><rect x="656.2" y="179.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.2" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (17 samples, 0.20%)</title><rect x="656.2" y="163.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.06%)</title><rect x="656.2" y="147.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="659.2" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (12 samples, 0.14%)</title><rect x="656.9" y="147.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.9" y="158.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (4 samples, 0.05%)</title><rect x="656.9" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.9" y="142.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (4 samples, 0.05%)</title><rect x="656.9" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.9" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (4 samples, 0.05%)</title><rect x="656.9" y="99.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="659.9" y="110.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (8 samples, 0.09%)</title><rect x="657.4" y="131.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.4" y="142.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (5 samples, 0.06%)</title><rect x="657.4" y="115.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="660.4" y="126.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (3 samples, 0.04%)</title><rect x="658.1" y="115.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="661.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (15 samples, 0.18%)</title><rect x="658.5" y="387.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.5" y="398.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.18%)</title><rect x="658.5" y="371.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="661.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (12 samples, 0.14%)</title><rect x="660.6" y="435.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (12 samples, 0.14%)</title><rect x="660.6" y="419.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (12 samples, 0.14%)</title><rect x="660.6" y="403.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (12 samples, 0.14%)</title><rect x="660.6" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (12 samples, 0.14%)</title><rect x="660.6" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.6" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.09%)</title><rect x="660.6" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="660.6" y="339.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="663.6" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (5 samples, 0.06%)</title><rect x="661.0" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.0" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (5 samples, 0.06%)</title><rect x="661.0" y="323.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="664.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="661.7" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="661.7" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="661.7" y="323.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="664.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (608 samples, 7.10%)</title><rect x="662.3" y="691.0" width="83.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.3" y="702.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.13%)</title><rect x="662.3" y="675.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.13%)</title><rect x="662.3" y="659.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1538519397.get$Lambda (8 samples, 0.09%)</title><rect x="662.3" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$185 (8 samples, 0.09%)</title><rect x="662.3" y="627.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="665.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1242618604.get$Lambda (3 samples, 0.04%)</title><rect x="663.4" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$189 (3 samples, 0.04%)</title><rect x="663.4" y="627.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="666.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1043351526.linkToTargetMethod (9 samples, 0.11%)</title><rect x="663.8" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.11%)</title><rect x="663.8" y="659.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.get$Lambda (9 samples, 0.11%)</title><rect x="663.8" y="643.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$186 (9 samples, 0.11%)</title><rect x="663.8" y="627.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="666.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (239 samples, 2.79%)</title><rect x="665.0" y="675.0" width="32.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.0" y="686.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2104524528.accept (223 samples, 2.60%)</title><rect x="665.0" y="659.0" width="30.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.0" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (223 samples, 2.60%)</title><rect x="665.0" y="643.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.0" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (223 samples, 2.60%)</title><rect x="665.0" y="627.0" width="30.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.0" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (223 samples, 2.60%)</title><rect x="665.0" y="611.0" width="30.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.0" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (223 samples, 2.60%)</title><rect x="665.0" y="595.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.0" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (223 samples, 2.60%)</title><rect x="665.0" y="579.0" width="30.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.0" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (223 samples, 2.60%)</title><rect x="665.0" y="563.0" width="30.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.0" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (223 samples, 2.60%)</title><rect x="665.0" y="547.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (223 samples, 2.60%)</title><rect x="665.0" y="531.0" width="30.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (223 samples, 2.60%)</title><rect x="665.0" y="515.0" width="30.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (223 samples, 2.60%)</title><rect x="665.0" y="499.0" width="30.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.0" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (223 samples, 2.60%)</title><rect x="665.0" y="483.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.0" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (24 samples, 0.28%)</title><rect x="665.0" y="467.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (24 samples, 0.28%)</title><rect x="665.0" y="451.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (24 samples, 0.28%)</title><rect x="665.0" y="435.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (15 samples, 0.18%)</title><rect x="665.0" y="419.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (15 samples, 0.18%)</title><rect x="665.0" y="403.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (15 samples, 0.18%)</title><rect x="665.0" y="387.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (15 samples, 0.18%)</title><rect x="665.0" y="371.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (15 samples, 0.18%)</title><rect x="665.0" y="355.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="668.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.11%)</title><rect x="667.1" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.11%)</title><rect x="667.1" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.11%)</title><rect x="667.1" y="387.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.11%)</title><rect x="667.1" y="371.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.11%)</title><rect x="667.1" y="355.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (9 samples, 0.11%)</title><rect x="667.1" y="339.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="670.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.04%)</title><rect x="668.3" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="668.3" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="668.3" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="671.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (3 samples, 0.04%)</title><rect x="668.3" y="419.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (3 samples, 0.04%)</title><rect x="668.3" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="671.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (196 samples, 2.29%)</title><rect x="668.7" y="467.0" width="27.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.7" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (35 samples, 0.41%)</title><rect x="668.7" y="451.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (21 samples, 0.25%)</title><rect x="668.7" y="435.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.7" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (21 samples, 0.25%)</title><rect x="668.7" y="419.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="671.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (14 samples, 0.16%)</title><rect x="671.6" y="435.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (14 samples, 0.16%)</title><rect x="671.6" y="419.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.6" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (14 samples, 0.16%)</title><rect x="671.6" y="403.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="674.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (161 samples, 1.88%)</title><rect x="673.6" y="451.0" width="22.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.6" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$152/998016372.get (161 samples, 1.88%)</title><rect x="673.6" y="435.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.6" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (161 samples, 1.88%)</title><rect x="673.6" y="419.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.6" y="430.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (161 samples, 1.88%)</title><rect x="673.6" y="403.0" width="22.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.6" y="414.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (160 samples, 1.87%)</title><rect x="673.7" y="387.0" width="22.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.7" y="398.0">j..</text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="673.7" y="371.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="676.7" y="382.0"></text>
</g>
<g>
<title>byte[] (151 samples, 1.76%)</title><rect x="674.9" y="371.0" width="20.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="677.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$191/879344288.accept (16 samples, 0.19%)</title><rect x="695.7" y="659.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (16 samples, 0.19%)</title><rect x="695.7" y="643.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.run (16 samples, 0.19%)</title><rect x="695.7" y="627.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (16 samples, 0.19%)</title><rect x="695.7" y="611.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (16 samples, 0.19%)</title><rect x="695.7" y="595.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (16 samples, 0.19%)</title><rect x="695.7" y="579.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (16 samples, 0.19%)</title><rect x="695.7" y="563.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.7" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (16 samples, 0.19%)</title><rect x="695.7" y="547.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="698.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (66 samples, 0.77%)</title><rect x="697.9" y="675.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.9" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (66 samples, 0.77%)</title><rect x="697.9" y="659.0" width="9.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="700.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (20 samples, 0.23%)</title><rect x="707.0" y="675.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.11%)</title><rect x="707.0" y="659.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (9 samples, 0.11%)</title><rect x="707.0" y="643.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (9 samples, 0.11%)</title><rect x="707.0" y="627.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.11%)</title><rect x="707.0" y="611.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.11%)</title><rect x="707.0" y="595.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (9 samples, 0.11%)</title><rect x="707.0" y="579.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (9 samples, 0.11%)</title><rect x="707.0" y="563.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="710.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (11 samples, 0.13%)</title><rect x="708.3" y="659.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.3" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (11 samples, 0.13%)</title><rect x="708.3" y="643.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="711.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (64 samples, 0.75%)</title><rect x="709.8" y="675.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1024844896.run (42 samples, 0.49%)</title><rect x="709.8" y="659.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (42 samples, 0.49%)</title><rect x="709.8" y="643.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.49%)</title><rect x="709.8" y="627.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.49%)</title><rect x="709.8" y="611.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42 samples, 0.49%)</title><rect x="709.8" y="595.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (42 samples, 0.49%)</title><rect x="709.8" y="579.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (42 samples, 0.49%)</title><rect x="709.8" y="563.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (42 samples, 0.49%)</title><rect x="709.8" y="547.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (42 samples, 0.49%)</title><rect x="709.8" y="531.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (42 samples, 0.49%)</title><rect x="709.8" y="515.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (31 samples, 0.36%)</title><rect x="709.8" y="499.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (31 samples, 0.36%)</title><rect x="709.8" y="483.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (31 samples, 0.36%)</title><rect x="709.8" y="467.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (23 samples, 0.27%)</title><rect x="709.8" y="451.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (23 samples, 0.27%)</title><rect x="709.8" y="435.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.27%)</title><rect x="709.8" y="419.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (23 samples, 0.27%)</title><rect x="709.8" y="403.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (23 samples, 0.27%)</title><rect x="709.8" y="387.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.8" y="398.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.27%)</title><rect x="709.8" y="371.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="712.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.09%)</title><rect x="713.0" y="451.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.09%)</title><rect x="713.0" y="435.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.09%)</title><rect x="713.0" y="419.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="716.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (8 samples, 0.09%)</title><rect x="713.0" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (8 samples, 0.09%)</title><rect x="713.0" y="387.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="716.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (11 samples, 0.13%)</title><rect x="714.1" y="499.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.13%)</title><rect x="714.1" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.13%)</title><rect x="714.1" y="467.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.13%)</title><rect x="714.1" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.13%)</title><rect x="714.1" y="435.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.13%)</title><rect x="714.1" y="419.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (11 samples, 0.13%)</title><rect x="714.1" y="403.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="717.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$159/2084334116.run (22 samples, 0.26%)</title><rect x="715.6" y="659.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (22 samples, 0.26%)</title><rect x="715.6" y="643.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.15%)</title><rect x="715.6" y="627.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.15%)</title><rect x="715.6" y="611.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.get$Lambda (13 samples, 0.15%)</title><rect x="715.6" y="595.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$192 (13 samples, 0.15%)</title><rect x="715.6" y="579.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="718.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.11%)</title><rect x="717.4" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.11%)</title><rect x="717.4" y="611.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.11%)</title><rect x="717.4" y="595.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (9 samples, 0.11%)</title><rect x="717.4" y="579.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="720.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (100 samples, 1.17%)</title><rect x="718.6" y="675.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.6" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (16 samples, 0.19%)</title><rect x="718.6" y="659.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.6" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (16 samples, 0.19%)</title><rect x="718.6" y="643.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (16 samples, 0.19%)</title><rect x="718.6" y="627.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (16 samples, 0.19%)</title><rect x="718.6" y="611.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.6" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (16 samples, 0.19%)</title><rect x="718.6" y="595.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="721.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (84 samples, 0.98%)</title><rect x="720.8" y="659.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.19%)</title><rect x="720.8" y="643.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.19%)</title><rect x="720.8" y="627.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$224/1515826887.get$Lambda (16 samples, 0.19%)</title><rect x="720.8" y="611.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$224 (16 samples, 0.19%)</title><rect x="720.8" y="595.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="723.8" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (18 samples, 0.21%)</title><rect x="723.0" y="643.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.0" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (18 samples, 0.21%)</title><rect x="723.0" y="627.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="726.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (8 samples, 0.09%)</title><rect x="725.5" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.5" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (8 samples, 0.09%)</title><rect x="725.5" y="627.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.5" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (8 samples, 0.09%)</title><rect x="725.5" y="611.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="728.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (42 samples, 0.49%)</title><rect x="726.6" y="643.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="729.6" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.28%)</title><rect x="726.6" y="627.0" width="3.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="729.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (18 samples, 0.21%)</title><rect x="729.9" y="627.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (18 samples, 0.21%)</title><rect x="729.9" y="611.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.9" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (18 samples, 0.21%)</title><rect x="729.9" y="595.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="732.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (66 samples, 0.77%)</title><rect x="732.4" y="675.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.07%)</title><rect x="732.4" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.07%)</title><rect x="732.4" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$184/1509399046.get$Lambda (6 samples, 0.07%)</title><rect x="732.4" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$184 (6 samples, 0.07%)</title><rect x="732.4" y="611.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="735.4" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (39 samples, 0.46%)</title><rect x="733.2" y="659.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (16 samples, 0.19%)</title><rect x="733.2" y="643.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (16 samples, 0.19%)</title><rect x="733.2" y="627.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="736.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (23 samples, 0.27%)</title><rect x="735.4" y="643.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.4" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (23 samples, 0.27%)</title><rect x="735.4" y="627.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="738.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (21 samples, 0.25%)</title><rect x="738.6" y="659.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (21 samples, 0.25%)</title><rect x="738.6" y="643.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="741.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.04%)</title><rect x="741.5" y="675.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.02%)</title><rect x="741.6" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.02%)</title><rect x="741.6" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.02%)</title><rect x="741.6" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.02%)</title><rect x="741.6" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.6" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2 samples, 0.02%)</title><rect x="741.6" y="595.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="744.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (18 samples, 0.21%)</title><rect x="741.9" y="675.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (18 samples, 0.21%)</title><rect x="741.9" y="659.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (18 samples, 0.21%)</title><rect x="741.9" y="643.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (18 samples, 0.21%)</title><rect x="741.9" y="627.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (11 samples, 0.13%)</title><rect x="741.9" y="611.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (11 samples, 0.13%)</title><rect x="741.9" y="595.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="744.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.08%)</title><rect x="743.4" y="611.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.08%)</title><rect x="743.4" y="595.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.08%)</title><rect x="743.4" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.08%)</title><rect x="743.4" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.08%)</title><rect x="743.4" y="547.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.08%)</title><rect x="743.4" y="531.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="746.4" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (4 samples, 0.05%)</title><rect x="744.4" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.05%)</title><rect x="744.4" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (4 samples, 0.05%)</title><rect x="744.4" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (4 samples, 0.05%)</title><rect x="744.4" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="747.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.04%)</title><rect x="744.4" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (3 samples, 0.04%)</title><rect x="744.4" y="595.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="747.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (8 samples, 0.09%)</title><rect x="744.9" y="675.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.09%)</title><rect x="744.9" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (8 samples, 0.09%)</title><rect x="744.9" y="643.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (8 samples, 0.09%)</title><rect x="744.9" y="627.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="747.9" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (132 samples, 1.54%)</title><rect x="746.0" y="691.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.createSession (132 samples, 1.54%)</title><rect x="746.0" y="675.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.createSession (132 samples, 1.54%)</title><rect x="746.0" y="659.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.0" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.ServiceSession (2 samples, 0.02%)</title><rect x="746.0" y="643.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="749.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceSession.&lt;init&gt; (130 samples, 1.52%)</title><rect x="746.3" y="643.0" width="17.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (130 samples, 1.52%)</title><rect x="746.3" y="627.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.3" y="638.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.11%)</title><rect x="746.3" y="611.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="749.3" y="622.0"></text>
</g>
<g>
<title>byte[] (121 samples, 1.41%)</title><rect x="747.5" y="611.0" width="16.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="750.5" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,091 samples, 36.08%)</title><rect x="764.2" y="691.0" width="425.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.2" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (26 samples, 0.30%)</title><rect x="764.2" y="675.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.2" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (26 samples, 0.30%)</title><rect x="764.2" y="659.0" width="3.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="767.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,065 samples, 35.78%)</title><rect x="767.8" y="675.0" width="422.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.8" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,065 samples, 35.78%)</title><rect x="767.8" y="659.0" width="422.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.8" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,065 samples, 35.78%)</title><rect x="767.8" y="643.0" width="422.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.8" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,494 samples, 17.44%)</title><rect x="767.8" y="627.0" width="205.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.8" y="638.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,494 samples, 17.44%)</title><rect x="767.8" y="611.0" width="205.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.8" y="622.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,382 samples, 16.13%)</title><rect x="767.8" y="595.0" width="190.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="770.8" y="606.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (69 samples, 0.81%)</title><rect x="767.8" y="579.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (69 samples, 0.81%)</title><rect x="767.8" y="563.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (69 samples, 0.81%)</title><rect x="767.8" y="547.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.81%)</title><rect x="767.8" y="531.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.32%)</title><rect x="767.8" y="515.0" width="3.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="770.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.49%)</title><rect x="771.5" y="515.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.5" y="526.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.49%)</title><rect x="771.5" y="499.0" width="5.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="774.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (1,313 samples, 15.33%)</title><rect x="777.3" y="579.0" width="180.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="780.3" y="590.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (84 samples, 0.98%)</title><rect x="777.3" y="563.0" width="11.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="780.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.98%)</title><rect x="777.3" y="547.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.98%)</title><rect x="777.3" y="531.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.46%)</title><rect x="777.3" y="515.0" width="5.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="780.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.53%)</title><rect x="782.7" y="515.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.7" y="526.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.53%)</title><rect x="782.7" y="499.0" width="6.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="785.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (148 samples, 1.73%)</title><rect x="788.9" y="563.0" width="20.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.get (148 samples, 1.73%)</title><rect x="788.9" y="547.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.51%)</title><rect x="788.9" y="531.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.51%)</title><rect x="788.9" y="515.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get$Lambda (44 samples, 0.51%)</title><rect x="788.9" y="499.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$232 (44 samples, 0.51%)</title><rect x="788.9" y="483.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="791.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (104 samples, 1.21%)</title><rect x="794.9" y="531.0" width="14.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (104 samples, 1.21%)</title><rect x="794.9" y="515.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.9" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (53 samples, 0.62%)</title><rect x="794.9" y="499.0" width="7.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="797.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (51 samples, 0.60%)</title><rect x="802.2" y="499.0" width="7.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="805.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (933 samples, 10.89%)</title><rect x="809.2" y="563.0" width="128.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.2" y="574.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="809.4" y="547.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="809.4" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="809.4" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="809.4" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="809.4" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.4" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.04%)</title><rect x="809.4" y="467.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="812.4" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.09%)</title><rect x="809.8" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.07%)</title><rect x="809.8" y="531.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.8" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.07%)</title><rect x="809.8" y="515.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="812.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.02%)</title><rect x="810.6" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.6" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (2 samples, 0.02%)</title><rect x="810.6" y="515.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="813.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (10 samples, 0.12%)</title><rect x="810.9" y="547.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (10 samples, 0.12%)</title><rect x="810.9" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (9 samples, 0.11%)</title><rect x="810.9" y="515.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="813.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (7 samples, 0.08%)</title><rect x="812.3" y="547.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7 samples, 0.08%)</title><rect x="812.3" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (4 samples, 0.05%)</title><rect x="812.3" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="815.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="812.8" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.8" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.04%)</title><rect x="812.8" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="815.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (7 samples, 0.08%)</title><rect x="813.2" y="547.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.get (7 samples, 0.08%)</title><rect x="813.2" y="531.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="813.2" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="813.2" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get$Lambda (2 samples, 0.02%)</title><rect x="813.2" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.2" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$232 (2 samples, 0.02%)</title><rect x="813.2" y="467.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="816.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (5 samples, 0.06%)</title><rect x="813.5" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (5 samples, 0.06%)</title><rect x="813.5" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="816.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (5 samples, 0.06%)</title><rect x="813.5" y="483.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="816.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.getAckResponses (60 samples, 0.70%)</title><rect x="814.2" y="547.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (4 samples, 0.05%)</title><rect x="814.2" y="531.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="817.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (4 samples, 0.05%)</title><rect x="814.8" y="531.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="817.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (6 samples, 0.07%)</title><rect x="815.3" y="531.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="818.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (44 samples, 0.51%)</title><rect x="816.1" y="531.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$137/766939021.accept (44 samples, 0.51%)</title><rect x="816.1" y="515.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$1 (44 samples, 0.51%)</title><rect x="816.1" y="499.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.16%)</title><rect x="816.1" y="483.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.16%)</title><rect x="816.1" y="467.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.get$Lambda (14 samples, 0.16%)</title><rect x="816.1" y="451.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.1" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.Futures$$Lambda$138 (14 samples, 0.16%)</title><rect x="816.1" y="435.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="819.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.35%)</title><rect x="818.1" y="483.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (30 samples, 0.35%)</title><rect x="818.1" y="467.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.22%)</title><rect x="818.1" y="451.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="821.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="820.7" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (2 samples, 0.02%)</title><rect x="820.7" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="823.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.11%)</title><rect x="821.0" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.11%)</title><rect x="821.0" y="435.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.11%)</title><rect x="821.0" y="419.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="824.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="822.2" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.forwardRequest (741 samples, 8.65%)</title><rect x="822.5" y="547.0" width="102.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.5" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (22 samples, 0.26%)</title><rect x="822.5" y="531.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (22 samples, 0.26%)</title><rect x="822.5" y="515.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (9 samples, 0.11%)</title><rect x="822.5" y="499.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="825.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.15%)</title><rect x="823.7" y="499.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.15%)</title><rect x="823.7" y="483.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.15%)</title><rect x="823.7" y="467.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="826.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (490 samples, 5.72%)</title><rect x="825.5" y="531.0" width="67.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.5" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (490 samples, 5.72%)</title><rect x="825.5" y="515.0" width="67.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.5" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (490 samples, 5.72%)</title><rect x="825.5" y="499.0" width="67.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.5" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (490 samples, 5.72%)</title><rect x="825.5" y="483.0" width="67.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.5" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="825.5" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="825.5" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$131/1332309156.get$Lambda (3 samples, 0.04%)</title><rect x="825.5" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$131 (3 samples, 0.04%)</title><rect x="825.5" y="419.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="828.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.19%)</title><rect x="825.9" y="467.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.19%)</title><rect x="825.9" y="451.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.14%)</title><rect x="825.9" y="435.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="828.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="827.6" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.05%)</title><rect x="827.6" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.05%)</title><rect x="827.6" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="830.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (18 samples, 0.21%)</title><rect x="828.1" y="467.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (18 samples, 0.21%)</title><rect x="828.1" y="451.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (11 samples, 0.13%)</title><rect x="828.1" y="435.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="831.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="829.6" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.08%)</title><rect x="829.6" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.08%)</title><rect x="829.6" y="403.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="832.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (15 samples, 0.18%)</title><rect x="830.6" y="467.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="833.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (24 samples, 0.28%)</title><rect x="832.7" y="467.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="835.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (245 samples, 2.86%)</title><rect x="836.0" y="467.0" width="33.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.0" y="478.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (24 samples, 0.28%)</title><rect x="836.0" y="451.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.0" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (17 samples, 0.20%)</title><rect x="836.0" y="435.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="839.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (6 samples, 0.07%)</title><rect x="836.0" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.0" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (6 samples, 0.07%)</title><rect x="836.0" y="403.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="839.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.13%)</title><rect x="836.8" y="419.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.13%)</title><rect x="836.8" y="403.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="839.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.08%)</title><rect x="838.3" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.08%)</title><rect x="838.3" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.08%)</title><rect x="838.3" y="403.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (7 samples, 0.08%)</title><rect x="838.3" y="387.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.3" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (7 samples, 0.08%)</title><rect x="838.3" y="371.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="841.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (99 samples, 1.16%)</title><rect x="839.3" y="451.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (99 samples, 1.16%)</title><rect x="839.3" y="435.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.3" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.02%)</title><rect x="839.3" y="419.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="842.3" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.07%)</title><rect x="839.6" y="419.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="842.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.15%)</title><rect x="840.4" y="419.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="843.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.02%)</title><rect x="842.2" y="419.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="845.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.06%)</title><rect x="842.4" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.06%)</title><rect x="842.4" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (5 samples, 0.06%)</title><rect x="842.4" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.4" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (5 samples, 0.06%)</title><rect x="842.4" y="371.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="845.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (51 samples, 0.60%)</title><rect x="843.1" y="419.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.1" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (51 samples, 0.60%)</title><rect x="843.1" y="403.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (51 samples, 0.60%)</title><rect x="843.1" y="387.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (51 samples, 0.60%)</title><rect x="843.1" y="371.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (24 samples, 0.28%)</title><rect x="843.1" y="355.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (17 samples, 0.20%)</title><rect x="843.1" y="339.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.1" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (17 samples, 0.20%)</title><rect x="843.1" y="323.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.20%)</title><rect x="843.1" y="307.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.20%)</title><rect x="843.1" y="291.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.20%)</title><rect x="843.1" y="275.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.1" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.20%)</title><rect x="843.1" y="259.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.20%)</title><rect x="843.1" y="243.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.20%)</title><rect x="843.1" y="227.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="846.1" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (7 samples, 0.08%)</title><rect x="845.5" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.5" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (7 samples, 0.08%)</title><rect x="845.5" y="323.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="848.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.06%)</title><rect x="846.4" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.06%)</title><rect x="846.4" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="849.4" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (5 samples, 0.06%)</title><rect x="846.4" y="323.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.4" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (5 samples, 0.06%)</title><rect x="846.4" y="307.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="849.4" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (8 samples, 0.09%)</title><rect x="847.1" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.1" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (8 samples, 0.09%)</title><rect x="847.1" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4 samples, 0.05%)</title><rect x="847.1" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="847.1" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.05%)</title><rect x="847.1" y="291.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="850.1" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.05%)</title><rect x="847.7" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.7" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.05%)</title><rect x="847.7" y="307.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="850.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.16%)</title><rect x="848.2" y="355.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.2" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (14 samples, 0.16%)</title><rect x="848.2" y="339.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="851.2" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (9 samples, 0.11%)</title><rect x="850.2" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.2" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (9 samples, 0.11%)</title><rect x="850.2" y="403.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="853.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (11 samples, 0.13%)</title><rect x="851.4" y="419.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.13%)</title><rect x="851.4" y="403.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="854.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (5 samples, 0.06%)</title><rect x="852.9" y="451.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="855.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (85 samples, 0.99%)</title><rect x="853.6" y="451.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.6" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (85 samples, 0.99%)</title><rect x="853.6" y="435.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.6" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (77 samples, 0.90%)</title><rect x="853.6" y="419.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.6" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (77 samples, 0.90%)</title><rect x="853.6" y="403.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.6" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (77 samples, 0.90%)</title><rect x="853.6" y="387.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.6" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (20 samples, 0.23%)</title><rect x="853.6" y="371.0" width="2.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="856.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.27%)</title><rect x="856.4" y="371.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.4" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.27%)</title><rect x="856.4" y="355.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.4" y="366.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.27%)</title><rect x="856.4" y="339.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="859.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (34 samples, 0.40%)</title><rect x="859.5" y="371.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.5" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.40%)</title><rect x="859.5" y="355.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.5" y="366.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.21%)</title><rect x="859.5" y="339.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="862.5" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.19%)</title><rect x="862.0" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.0" y="350.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.19%)</title><rect x="862.0" y="323.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="865.0" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (8 samples, 0.09%)</title><rect x="864.2" y="419.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="867.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (11 samples, 0.13%)</title><rect x="865.3" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.13%)</title><rect x="865.3" y="435.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="868.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (21 samples, 0.25%)</title><rect x="866.8" y="451.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.8" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="866.8" y="435.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="869.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.06%)</title><rect x="867.4" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="870.4" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="867.4" y="419.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="870.4" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.14%)</title><rect x="868.1" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.14%)</title><rect x="868.1" y="419.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="871.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (109 samples, 1.27%)</title><rect x="869.7" y="467.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.7" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.map (11 samples, 0.13%)</title><rect x="869.9" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/271136818.apply (11 samples, 0.13%)</title><rect x="869.9" y="435.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (7 samples, 0.08%)</title><rect x="869.9" y="419.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="872.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (4 samples, 0.05%)</title><rect x="870.8" y="419.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (4 samples, 0.05%)</title><rect x="870.8" y="403.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="873.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (20 samples, 0.23%)</title><rect x="871.4" y="451.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="874.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.02%)</title><rect x="874.1" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (2 samples, 0.02%)</title><rect x="874.1" y="435.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="877.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (4 samples, 0.05%)</title><rect x="874.4" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.4" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (4 samples, 0.05%)</title><rect x="874.4" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.4" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.05%)</title><rect x="874.4" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.4" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.05%)</title><rect x="874.4" y="403.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="877.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (71 samples, 0.83%)</title><rect x="875.0" y="451.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (71 samples, 0.83%)</title><rect x="875.0" y="435.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.0" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (11 samples, 0.13%)</title><rect x="875.0" y="419.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="878.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.12%)</title><rect x="876.5" y="419.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="879.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (7 samples, 0.08%)</title><rect x="877.8" y="419.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="880.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (24 samples, 0.28%)</title><rect x="878.8" y="419.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (24 samples, 0.28%)</title><rect x="878.8" y="403.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.8" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (24 samples, 0.28%)</title><rect x="878.8" y="387.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.8" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (24 samples, 0.28%)</title><rect x="878.8" y="371.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.8" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (24 samples, 0.28%)</title><rect x="878.8" y="355.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="881.8" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (13 samples, 0.15%)</title><rect x="882.1" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (13 samples, 0.15%)</title><rect x="882.1" y="403.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="885.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (4 samples, 0.05%)</title><rect x="882.1" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (4 samples, 0.05%)</title><rect x="882.1" y="371.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="885.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (9 samples, 0.11%)</title><rect x="882.7" y="387.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (9 samples, 0.11%)</title><rect x="882.7" y="371.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="885.7" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.07%)</title><rect x="883.9" y="419.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (6 samples, 0.07%)</title><rect x="883.9" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="886.9" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (6 samples, 0.07%)</title><rect x="883.9" y="387.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="886.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (60 samples, 0.70%)</title><rect x="884.7" y="467.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (17 samples, 0.20%)</title><rect x="884.7" y="451.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (6 samples, 0.07%)</title><rect x="884.7" y="435.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="887.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.13%)</title><rect x="885.6" y="435.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.13%)</title><rect x="885.6" y="419.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (11 samples, 0.13%)</title><rect x="885.6" y="403.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="888.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.04%)</title><rect x="887.1" y="451.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="890.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (40 samples, 0.47%)</title><rect x="887.5" y="451.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="887.5" y="435.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="887.5" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.get$Lambda (4 samples, 0.05%)</title><rect x="887.5" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (4 samples, 0.05%)</title><rect x="887.5" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="890.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.get$Lambda (3 samples, 0.04%)</title><rect x="888.0" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="891.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (3 samples, 0.04%)</title><rect x="888.0" y="387.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="891.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (33 samples, 0.39%)</title><rect x="888.5" y="435.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (33 samples, 0.39%)</title><rect x="888.5" y="419.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (18 samples, 0.21%)</title><rect x="888.5" y="403.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="891.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.18%)</title><rect x="890.9" y="403.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.18%)</title><rect x="890.9" y="387.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.18%)</title><rect x="890.9" y="371.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="893.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.formHttpRequest (229 samples, 2.67%)</title><rect x="893.0" y="531.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.0" y="542.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.14%)</title><rect x="893.0" y="515.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (12 samples, 0.14%)</title><rect x="893.0" y="499.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (12 samples, 0.14%)</title><rect x="893.0" y="483.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.14%)</title><rect x="893.0" y="467.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.07%)</title><rect x="893.0" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="896.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.07%)</title><rect x="893.0" y="435.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="896.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.07%)</title><rect x="893.8" y="451.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.07%)</title><rect x="893.8" y="435.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.8" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="893.8" y="419.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="896.8" y="430.0"></text>
</g>
<g>
<title>java/net/URI.create (75 samples, 0.88%)</title><rect x="894.7" y="515.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.7" y="526.0"></text>
</g>
<g>
<title>java.net.URI (23 samples, 0.27%)</title><rect x="894.7" y="499.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="897.7" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (52 samples, 0.61%)</title><rect x="897.8" y="499.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.8" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (6 samples, 0.07%)</title><rect x="897.8" y="483.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="900.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (46 samples, 0.54%)</title><rect x="898.7" y="483.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="901.7" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.09%)</title><rect x="898.7" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.09%)</title><rect x="898.7" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.04%)</title><rect x="898.7" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="901.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.06%)</title><rect x="899.1" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="902.1" y="446.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="899.1" y="419.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="902.1" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (38 samples, 0.44%)</title><rect x="899.8" y="467.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.21%)</title><rect x="899.8" y="451.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.21%)</title><rect x="899.8" y="435.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.09%)</title><rect x="899.8" y="419.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="902.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.12%)</title><rect x="900.9" y="419.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.9" y="430.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.12%)</title><rect x="900.9" y="403.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="903.9" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (20 samples, 0.23%)</title><rect x="902.2" y="451.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.08%)</title><rect x="902.2" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.08%)</title><rect x="902.2" y="419.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="902.2" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="905.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.06%)</title><rect x="902.5" y="403.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.5" y="414.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.06%)</title><rect x="902.5" y="387.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="905.5" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (13 samples, 0.15%)</title><rect x="903.2" y="435.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.2" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (13 samples, 0.15%)</title><rect x="903.2" y="419.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.15%)</title><rect x="903.2" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.15%)</title><rect x="903.2" y="387.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.12%)</title><rect x="903.2" y="371.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="906.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="904.6" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.6" y="382.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.04%)</title><rect x="904.6" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="907.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (25 samples, 0.29%)</title><rect x="905.0" y="515.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (9 samples, 0.11%)</title><rect x="905.0" y="499.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="908.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (16 samples, 0.19%)</title><rect x="906.2" y="499.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (7 samples, 0.08%)</title><rect x="906.2" y="483.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="909.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (9 samples, 0.11%)</title><rect x="907.2" y="483.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.2" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.11%)</title><rect x="907.2" y="467.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="910.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (87 samples, 1.02%)</title><rect x="908.4" y="515.0" width="12.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (14 samples, 0.16%)</title><rect x="908.4" y="499.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="911.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (73 samples, 0.85%)</title><rect x="910.4" y="499.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (71 samples, 0.83%)</title><rect x="910.4" y="483.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (71 samples, 0.83%)</title><rect x="910.4" y="467.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.4" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (7 samples, 0.08%)</title><rect x="910.4" y="451.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="913.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="911.3" y="451.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="914.3" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.11%)</title><rect x="911.9" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="914.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.07%)</title><rect x="913.3" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.07%)</title><rect x="913.3" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.3" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (6 samples, 0.07%)</title><rect x="913.3" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.3" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (6 samples, 0.07%)</title><rect x="913.3" y="403.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="916.3" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (4 samples, 0.05%)</title><rect x="914.1" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.1" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (4 samples, 0.05%)</title><rect x="914.1" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="917.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (33 samples, 0.39%)</title><rect x="914.6" y="451.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (33 samples, 0.39%)</title><rect x="914.6" y="435.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (33 samples, 0.39%)</title><rect x="914.6" y="419.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.09%)</title><rect x="914.6" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.09%)</title><rect x="914.6" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (8 samples, 0.09%)</title><rect x="914.6" y="371.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.6" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (8 samples, 0.09%)</title><rect x="914.6" y="355.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="917.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (11 samples, 0.13%)</title><rect x="915.7" y="403.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (11 samples, 0.13%)</title><rect x="915.7" y="387.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (11 samples, 0.13%)</title><rect x="915.7" y="371.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.13%)</title><rect x="915.7" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.13%)</title><rect x="915.7" y="339.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.13%)</title><rect x="915.7" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="918.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.13%)</title><rect x="915.7" y="307.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.13%)</title><rect x="915.7" y="291.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.13%)</title><rect x="915.7" y="275.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="918.7" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (8 samples, 0.09%)</title><rect x="917.2" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.2" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (8 samples, 0.09%)</title><rect x="917.2" y="387.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.2" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.08%)</title><rect x="917.4" y="371.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.08%)</title><rect x="917.4" y="355.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="920.4" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.07%)</title><rect x="918.3" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.07%)</title><rect x="918.3" y="387.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="921.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (7 samples, 0.08%)</title><rect x="919.2" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="922.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.08%)</title><rect x="919.2" y="435.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="922.2" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.02%)</title><rect x="920.1" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.1" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.02%)</title><rect x="920.1" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.1" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.02%)</title><rect x="920.1" y="451.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="923.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (18 samples, 0.21%)</title><rect x="920.4" y="515.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (18 samples, 0.21%)</title><rect x="920.4" y="499.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (18 samples, 0.21%)</title><rect x="920.4" y="483.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.4" y="494.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (18 samples, 0.21%)</title><rect x="920.4" y="467.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.11%)</title><rect x="920.4" y="451.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (9 samples, 0.11%)</title><rect x="920.4" y="435.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="923.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$120/26136221.apply (9 samples, 0.11%)</title><rect x="921.7" y="451.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (9 samples, 0.11%)</title><rect x="921.7" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.7" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.05%)</title><rect x="921.7" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="924.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.06%)</title><rect x="922.2" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="922.2" y="403.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="925.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.14%)</title><rect x="922.9" y="515.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.14%)</title><rect x="922.9" y="499.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.14%)</title><rect x="922.9" y="483.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.07%)</title><rect x="922.9" y="467.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="925.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.07%)</title><rect x="923.7" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.7" y="478.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.07%)</title><rect x="923.7" y="451.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="926.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.getNodes (96 samples, 1.12%)</title><rect x="924.5" y="547.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (8 samples, 0.09%)</title><rect x="924.5" y="531.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="927.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (8 samples, 0.09%)</title><rect x="925.8" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="928.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Integer (8 samples, 0.09%)</title><rect x="925.8" y="515.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="928.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.16%)</title><rect x="926.9" y="531.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1392425346.invoke (14 samples, 0.16%)</title><rect x="926.9" y="515.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.16%)</title><rect x="926.9" y="499.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="929.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.16%)</title><rect x="926.9" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="929.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.16%)</title><rect x="926.9" y="467.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.9" y="478.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.16%)</title><rect x="926.9" y="451.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="929.9" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.11%)</title><rect x="928.8" y="531.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.06%)</title><rect x="928.8" y="515.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="931.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.05%)</title><rect x="929.5" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.5" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (4 samples, 0.05%)</title><rect x="929.5" y="499.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="932.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (27 samples, 0.32%)</title><rect x="930.1" y="531.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="933.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (27 samples, 0.32%)</title><rect x="930.1" y="515.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (19 samples, 0.22%)</title><rect x="930.1" y="499.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.1" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (19 samples, 0.22%)</title><rect x="930.1" y="483.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="933.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (8 samples, 0.09%)</title><rect x="932.7" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="935.7" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (8 samples, 0.09%)</title><rect x="932.7" y="483.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="935.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.05%)</title><rect x="933.8" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.8" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.05%)</title><rect x="933.8" y="515.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="936.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (19 samples, 0.22%)</title><rect x="934.3" y="531.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (19 samples, 0.22%)</title><rect x="934.3" y="515.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (19 samples, 0.22%)</title><rect x="934.3" y="499.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (11 samples, 0.13%)</title><rect x="934.3" y="483.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="937.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (11 samples, 0.13%)</title><rect x="934.3" y="467.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="937.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (8 samples, 0.09%)</title><rect x="935.8" y="483.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.8" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (8 samples, 0.09%)</title><rect x="935.8" y="467.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="938.8" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.07%)</title><rect x="936.9" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.07%)</title><rect x="936.9" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.9" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.07%)</title><rect x="936.9" y="499.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="939.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.trySendResponse (148 samples, 1.73%)</title><rect x="937.8" y="563.0" width="20.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.84%)</title><rect x="937.8" y="547.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.84%)</title><rect x="937.8" y="531.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.get$Lambda (72 samples, 0.84%)</title><rect x="937.8" y="515.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$142 (72 samples, 0.84%)</title><rect x="937.8" y="499.0" width="9.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="940.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (76 samples, 0.89%)</title><rect x="947.7" y="547.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (76 samples, 0.89%)</title><rect x="947.7" y="531.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (58 samples, 0.68%)</title><rect x="947.7" y="515.0" width="8.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="950.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (18 samples, 0.21%)</title><rect x="955.7" y="515.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="958.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (18 samples, 0.21%)</title><rect x="955.7" y="499.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="958.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (112 samples, 1.31%)</title><rect x="958.2" y="595.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="961.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (112 samples, 1.31%)</title><rect x="958.2" y="579.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="961.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (112 samples, 1.31%)</title><rect x="958.2" y="563.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.42%)</title><rect x="958.2" y="547.0" width="4.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="961.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (76 samples, 0.89%)</title><rect x="963.1" y="547.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="966.1" y="558.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.89%)</title><rect x="963.1" y="531.0" width="10.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="966.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (512 samples, 5.98%)</title><rect x="973.6" y="627.0" width="70.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.6" y="638.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.Request (90 samples, 1.05%)</title><rect x="973.6" y="611.0" width="12.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="976.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (158 samples, 1.84%)</title><rect x="986.0" y="611.0" width="21.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.0" y="622.0">o..</text>
</g>
<g>
<title>java.lang.String[] (158 samples, 1.84%)</title><rect x="986.0" y="595.0" width="21.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="989.0" y="606.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (264 samples, 3.08%)</title><rect x="1007.8" y="611.0" width="36.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.8" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (264 samples, 3.08%)</title><rect x="1007.8" y="595.0" width="36.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.8" y="606.0">one..</text>
</g>
<g>
<title>char[] (142 samples, 1.66%)</title><rect x="1007.8" y="579.0" width="19.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1010.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.61%)</title><rect x="1027.3" y="579.0" width="7.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1030.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (70 samples, 0.82%)</title><rect x="1034.5" y="579.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1037.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (70 samples, 0.82%)</title><rect x="1034.5" y="563.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1037.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (70 samples, 0.82%)</title><rect x="1034.5" y="547.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1037.5" y="558.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.82%)</title><rect x="1034.5" y="531.0" width="9.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1037.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (48 samples, 0.56%)</title><rect x="1044.1" y="627.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.1" y="638.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.56%)</title><rect x="1044.1" y="611.0" width="6.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1047.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (85 samples, 0.99%)</title><rect x="1050.7" y="627.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (85 samples, 0.99%)</title><rect x="1050.7" y="611.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (85 samples, 0.99%)</title><rect x="1050.7" y="595.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.49%)</title><rect x="1050.7" y="579.0" width="5.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1053.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.50%)</title><rect x="1056.5" y="579.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.5" y="590.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.50%)</title><rect x="1056.5" y="563.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1059.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (926 samples, 10.81%)</title><rect x="1062.4" y="627.0" width="127.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.4" y="638.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (926 samples, 10.81%)</title><rect x="1062.4" y="611.0" width="127.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.4" y="622.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (471 samples, 5.50%)</title><rect x="1062.4" y="595.0" width="64.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1065.4" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (168 samples, 1.96%)</title><rect x="1127.3" y="595.0" width="23.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1130.3" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (287 samples, 3.35%)</title><rect x="1150.5" y="595.0" width="39.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.5" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (287 samples, 3.35%)</title><rect x="1150.5" y="579.0" width="39.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.5" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (287 samples, 3.35%)</title><rect x="1150.5" y="563.0" width="39.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.5" y="574.0">jav..</text>
</g>
<g>
<title>byte[] (287 samples, 3.35%)</title><rect x="1150.5" y="547.0" width="39.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1153.5" y="558.0">byt..</text>
</g>
</g>
</svg>
