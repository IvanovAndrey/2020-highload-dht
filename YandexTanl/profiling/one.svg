<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (868 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.35%)</title><rect x="10.0" y="1139.0" width="4.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.35%)</title><rect x="10.0" y="1123.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.35%)</title><rect x="10.0" y="1107.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.23%)</title><rect x="11.4" y="1091.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.4" y="1102.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.12%)</title><rect x="14.1" y="1139.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="17.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.35%)</title><rect x="15.4" y="1139.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="18.4" y="1150.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.12%)</title><rect x="15.4" y="1123.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="18.4" y="1134.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.12%)</title><rect x="15.4" y="1107.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.4" y="1118.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="15.4" y="1091.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="18.4" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.12%)</title><rect x="15.4" y="1075.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.4" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.12%)</title><rect x="15.4" y="1059.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.4" y="1070.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.12%)</title><rect x="15.4" y="1043.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.4" y="1054.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.12%)</title><rect x="15.4" y="1027.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="18.4" y="1038.0"></text>
</g>
<g>
<title>rcu_do_batch (1 samples, 0.12%)</title><rect x="15.4" y="1011.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.4" y="1022.0"></text>
</g>
<g>
<title>epi_rcu_free (1 samples, 0.12%)</title><rect x="15.4" y="995.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="18.4" y="1006.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="15.4" y="979.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="18.4" y="990.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (2 samples, 0.23%)</title><rect x="16.8" y="1123.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="19.8" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.23%)</title><rect x="16.8" y="1107.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.8" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.23%)</title><rect x="16.8" y="1091.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.8" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.23%)</title><rect x="16.8" y="1075.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="19.8" y="1086.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.23%)</title><rect x="16.8" y="1059.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="19.8" y="1070.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.23%)</title><rect x="16.8" y="1043.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.8" y="1054.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.12%)</title><rect x="16.8" y="1027.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.8" y="1038.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.12%)</title><rect x="16.8" y="1011.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="19.8" y="1022.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.12%)</title><rect x="16.8" y="995.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.8" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="16.8" y="979.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.8" y="990.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.12%)</title><rect x="18.2" y="1027.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="21.2" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.12%)</title><rect x="19.5" y="1139.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="22.5" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="19.5" y="1123.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="22.5" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="19.5" y="1107.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.5" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="19.5" y="1091.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.5" y="1102.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.12%)</title><rect x="19.5" y="1075.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="22.5" y="1086.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.12%)</title><rect x="19.5" y="1059.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.5" y="1070.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="19.5" y="1043.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="22.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.run (569 samples, 65.55%)</title><rect x="20.9" y="1139.0" width="773.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.9" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (569 samples, 65.55%)</title><rect x="20.9" y="1123.0" width="773.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.9" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (569 samples, 65.55%)</title><rect x="20.9" y="1107.0" width="773.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.9" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.35%)</title><rect x="23.6" y="1091.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.35%)</title><rect x="23.6" y="1075.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.6" y="1086.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.35%)</title><rect x="23.6" y="1059.0" width="4.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="26.6" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="23.6" y="1043.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.6" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.12%)</title><rect x="25.0" y="1043.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="28.0" y="1054.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::release_stable_list_wake_up(bool) (1 samples, 0.12%)</title><rect x="26.3" y="1043.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="29.3" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.12%)</title><rect x="26.3" y="1027.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="29.3" y="1038.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.12%)</title><rect x="26.3" y="1011.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="29.3" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.12%)</title><rect x="26.3" y="995.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="29.3" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="26.3" y="979.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="29.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="26.3" y="963.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="29.3" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="26.3" y="947.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.3" y="958.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="26.3" y="931.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.3" y="942.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="26.3" y="915.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (115 samples, 13.25%)</title><rect x="27.7" y="1091.0" width="156.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="1102.0">java/util/concurrent..</text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="27.7" y="1075.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="30.7" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="27.7" y="1059.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.7" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="27.7" y="1043.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="30.7" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="27.7" y="1027.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (56 samples, 6.45%)</title><rect x="29.0" y="1075.0" width="76.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.0" y="1086.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (28 samples, 3.23%)</title><rect x="29.0" y="1059.0" width="38.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.0" y="1070.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.apply (28 samples, 3.23%)</title><rect x="29.0" y="1043.0" width="38.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.0" y="1054.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (28 samples, 3.23%)</title><rect x="29.0" y="1027.0" width="38.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.0" y="1038.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (28 samples, 3.23%)</title><rect x="29.0" y="1011.0" width="38.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.0" y="1022.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.12%)</title><rect x="29.0" y="995.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.12%)</title><rect x="29.0" y="979.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.12%)</title><rect x="29.0" y="963.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.12%)</title><rect x="29.0" y="947.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (21 samples, 2.42%)</title><rect x="30.4" y="995.0" width="28.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.4" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (21 samples, 2.42%)</title><rect x="30.4" y="979.0" width="28.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.4" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (21 samples, 2.42%)</title><rect x="30.4" y="963.0" width="28.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.4" y="974.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9 samples, 1.04%)</title><rect x="30.4" y="947.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 1.04%)</title><rect x="30.4" y="931.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 1.04%)</title><rect x="30.4" y="915.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.apply (9 samples, 1.04%)</title><rect x="30.4" y="899.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (9 samples, 1.04%)</title><rect x="30.4" y="883.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 1.04%)</title><rect x="30.4" y="867.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.apply (9 samples, 1.04%)</title><rect x="30.4" y="851.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (9 samples, 1.04%)</title><rect x="30.4" y="835.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9 samples, 1.04%)</title><rect x="30.4" y="819.0" width="12.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.92%)</title><rect x="30.4" y="803.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.92%)</title><rect x="30.4" y="787.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.apply (8 samples, 0.92%)</title><rect x="30.4" y="771.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (8 samples, 0.92%)</title><rect x="30.4" y="755.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.12%)</title><rect x="31.8" y="739.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.12%)</title><rect x="31.8" y="723.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.12%)</title><rect x="31.8" y="707.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.12%)</title><rect x="31.8" y="691.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.12%)</title><rect x="31.8" y="675.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.12%)</title><rect x="31.8" y="659.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.12%)</title><rect x="31.8" y="643.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.12%)</title><rect x="31.8" y="627.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (6 samples, 0.69%)</title><rect x="33.1" y="739.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.12%)</title><rect x="33.1" y="723.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.1" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.12%)</title><rect x="33.1" y="707.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.1" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.12%)</title><rect x="33.1" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.1" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (1 samples, 0.12%)</title><rect x="33.1" y="675.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (4 samples, 0.46%)</title><rect x="34.5" y="723.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2 samples, 0.23%)</title><rect x="34.5" y="707.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.12%)</title><rect x="34.5" y="691.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="37.5" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.12%)</title><rect x="34.5" y="675.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.5" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.12%)</title><rect x="34.5" y="659.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.5" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (1 samples, 0.12%)</title><rect x="34.5" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="34.5" y="627.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="37.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="34.5" y="611.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="37.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="34.5" y="595.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="37.5" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.12%)</title><rect x="35.8" y="691.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.8" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.12%)</title><rect x="35.8" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.8" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.12%)</title><rect x="35.8" y="659.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.12%)</title><rect x="35.8" y="643.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (2 samples, 0.23%)</title><rect x="37.2" y="707.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.2" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.23%)</title><rect x="37.2" y="691.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.2" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.23%)</title><rect x="37.2" y="675.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.12%)</title><rect x="37.2" y="659.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="37.2" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.2" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (1 samples, 0.12%)</title><rect x="37.2" y="627.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.12%)</title><rect x="38.5" y="659.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (1 samples, 0.12%)</title><rect x="38.5" y="643.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.12%)</title><rect x="38.5" y="627.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.12%)</title><rect x="38.5" y="611.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.12%)</title><rect x="38.5" y="595.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="38.5" y="579.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="38.5" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.12%)</title><rect x="39.9" y="723.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.12%)</title><rect x="39.9" y="707.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.12%)</title><rect x="39.9" y="691.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.12%)</title><rect x="39.9" y="675.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (1 samples, 0.12%)</title><rect x="39.9" y="659.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="39.9" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.12%)</title><rect x="39.9" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.9" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="39.9" y="611.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="42.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.12%)</title><rect x="41.3" y="803.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (1 samples, 0.12%)</title><rect x="41.3" y="787.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (12 samples, 1.38%)</title><rect x="42.6" y="947.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.12%)</title><rect x="42.6" y="931.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.12%)</title><rect x="42.6" y="915.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.6" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="42.6" y="899.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="45.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (11 samples, 1.27%)</title><rect x="44.0" y="931.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (11 samples, 1.27%)</title><rect x="44.0" y="915.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (11 samples, 1.27%)</title><rect x="44.0" y="899.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.23%)</title><rect x="44.0" y="883.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.&lt;init&gt; (1 samples, 0.12%)</title><rect x="45.3" y="867.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (3 samples, 0.35%)</title><rect x="46.7" y="883.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.12%)</title><rect x="46.7" y="867.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.12%)</title><rect x="46.7" y="851.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.7" y="862.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.12%)</title><rect x="46.7" y="835.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.23%)</title><rect x="48.1" y="867.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.12%)</title><rect x="48.1" y="851.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (1 samples, 0.12%)</title><rect x="49.4" y="851.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (6 samples, 0.69%)</title><rect x="50.8" y="883.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.8" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.69%)</title><rect x="50.8" y="867.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.8" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (2 samples, 0.23%)</title><rect x="50.8" y="851.0" width="2.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="53.8" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.12%)</title><rect x="50.8" y="835.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="53.8" y="846.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.12%)</title><rect x="50.8" y="819.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="53.8" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.12%)</title><rect x="52.1" y="835.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="55.1" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.12%)</title><rect x="52.1" y="819.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="55.1" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.12%)</title><rect x="52.1" y="803.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="55.1" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.12%)</title><rect x="52.1" y="787.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="55.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.run (4 samples, 0.46%)</title><rect x="53.5" y="851.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.35%)</title><rect x="54.9" y="835.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.9" y="846.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.35%)</title><rect x="54.9" y="819.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.9" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.35%)</title><rect x="54.9" y="803.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.9" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.35%)</title><rect x="54.9" y="787.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.9" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.35%)</title><rect x="54.9" y="771.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.12%)</title><rect x="54.9" y="755.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.12%)</title><rect x="54.9" y="739.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.9" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.12%)</title><rect x="54.9" y="723.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="56.2" y="755.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.12%)</title><rect x="56.2" y="739.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.12%)</title><rect x="56.2" y="723.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.2" y="734.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="56.2" y="707.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="59.2" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.12%)</title><rect x="57.6" y="755.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.12%)</title><rect x="57.6" y="739.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.12%)</title><rect x="57.6" y="723.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.12%)</title><rect x="57.6" y="707.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (2 samples, 0.23%)</title><rect x="58.9" y="995.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2 samples, 0.23%)</title><rect x="58.9" y="979.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.23%)</title><rect x="58.9" y="963.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.23%)</title><rect x="58.9" y="947.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.9" y="958.0"></text>
</g>
<g>
<title>__write (2 samples, 0.23%)</title><rect x="58.9" y="931.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="61.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.23%)</title><rect x="58.9" y="915.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="61.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.23%)</title><rect x="58.9" y="899.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="61.9" y="910.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.23%)</title><rect x="58.9" y="883.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.9" y="894.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.23%)</title><rect x="58.9" y="867.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.9" y="878.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.23%)</title><rect x="58.9" y="851.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.9" y="862.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.23%)</title><rect x="58.9" y="835.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.9" y="846.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.23%)</title><rect x="58.9" y="819.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.9" y="830.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.23%)</title><rect x="58.9" y="803.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.9" y="814.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.23%)</title><rect x="58.9" y="787.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="61.9" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.23%)</title><rect x="58.9" y="771.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="61.9" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.23%)</title><rect x="58.9" y="755.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (3 samples, 0.35%)</title><rect x="61.7" y="995.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (1 samples, 0.12%)</title><rect x="61.7" y="979.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (2 samples, 0.23%)</title><rect x="63.0" y="979.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.trace (2 samples, 0.23%)</title><rect x="63.0" y="963.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.12%)</title><rect x="63.0" y="947.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.12%)</title><rect x="64.4" y="947.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (1 samples, 0.12%)</title><rect x="65.7" y="995.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (1 samples, 0.12%)</title><rect x="65.7" y="979.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (28 samples, 3.23%)</title><rect x="67.1" y="1059.0" width="38.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.1" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (28 samples, 3.23%)</title><rect x="67.1" y="1043.0" width="38.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.1" y="1054.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.12%)</title><rect x="67.1" y="1027.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.12%)</title><rect x="67.1" y="1011.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.1" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="67.1" y="995.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="70.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (27 samples, 3.11%)</title><rect x="68.5" y="1027.0" width="36.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.5" y="1038.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (27 samples, 3.11%)</title><rect x="68.5" y="1011.0" width="36.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.5" y="1022.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (27 samples, 3.11%)</title><rect x="68.5" y="995.0" width="36.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.5" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (25 samples, 2.88%)</title><rect x="68.5" y="979.0" width="33.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.5" y="990.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.23%)</title><rect x="68.5" y="963.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.12%)</title><rect x="69.8" y="947.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.8" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="69.8" y="931.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="69.8" y="915.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.8" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="69.8" y="899.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="69.8" y="883.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 2.65%)</title><rect x="71.2" y="963.0" width="31.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.2" y="974.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 2.65%)</title><rect x="71.2" y="947.0" width="31.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.2" y="958.0">on..</text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.12%)</title><rect x="71.2" y="931.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="74.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (21 samples, 2.42%)</title><rect x="72.5" y="931.0" width="28.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.5" y="942.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (21 samples, 2.42%)</title><rect x="72.5" y="915.0" width="28.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.5" y="926.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.12%)</title><rect x="72.5" y="899.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="75.5" y="910.0"></text>
</g>
<g>
<title>send (20 samples, 2.30%)</title><rect x="73.9" y="899.0" width="27.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="76.9" y="910.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 2.30%)</title><rect x="73.9" y="883.0" width="27.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="76.9" y="894.0">e..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 2.30%)</title><rect x="73.9" y="867.0" width="27.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.9" y="878.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (20 samples, 2.30%)</title><rect x="73.9" y="851.0" width="27.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="76.9" y="862.0">_..</text>
</g>
<g>
<title>__sys_sendto (20 samples, 2.30%)</title><rect x="73.9" y="835.0" width="27.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.9" y="846.0">_..</text>
</g>
<g>
<title>sock_sendmsg (20 samples, 2.30%)</title><rect x="73.9" y="819.0" width="27.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.9" y="830.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (20 samples, 2.30%)</title><rect x="73.9" y="803.0" width="27.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.9" y="814.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (20 samples, 2.30%)</title><rect x="73.9" y="787.0" width="27.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.9" y="798.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (20 samples, 2.30%)</title><rect x="73.9" y="771.0" width="27.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.9" y="782.0">t..</text>
</g>
<g>
<title>tcp_push (18 samples, 2.07%)</title><rect x="73.9" y="755.0" width="24.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.9" y="766.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (18 samples, 2.07%)</title><rect x="73.9" y="739.0" width="24.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="76.9" y="750.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (18 samples, 2.07%)</title><rect x="73.9" y="723.0" width="24.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.9" y="734.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (18 samples, 2.07%)</title><rect x="73.9" y="707.0" width="24.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="76.9" y="718.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (18 samples, 2.07%)</title><rect x="73.9" y="691.0" width="24.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="76.9" y="702.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (17 samples, 1.96%)</title><rect x="75.3" y="675.0" width="23.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="78.3" y="686.0">_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.12%)</title><rect x="75.3" y="659.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="78.3" y="670.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 1.73%)</title><rect x="76.6" y="659.0" width="20.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="79.6" y="670.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.12%)</title><rect x="76.6" y="643.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="79.6" y="654.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="76.6" y="627.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="79.6" y="638.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="76.6" y="611.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.6" y="622.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="76.6" y="595.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.6" y="606.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.12%)</title><rect x="76.6" y="579.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.6" y="590.0"></text>
</g>
<g>
<title>ip_output (13 samples, 1.50%)</title><rect x="78.0" y="643.0" width="17.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.0" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (12 samples, 1.38%)</title><rect x="78.0" y="627.0" width="16.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="81.0" y="638.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="78.0" y="611.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.0" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (11 samples, 1.27%)</title><rect x="79.3" y="611.0" width="15.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.3" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (11 samples, 1.27%)</title><rect x="79.3" y="595.0" width="15.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="82.3" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 1.27%)</title><rect x="79.3" y="579.0" width="15.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.3" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.0 (11 samples, 1.27%)</title><rect x="79.3" y="563.0" width="15.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="82.3" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 1.15%)</title><rect x="80.7" y="547.0" width="13.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.7" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 1.15%)</title><rect x="80.7" y="531.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.7" y="542.0"></text>
</g>
<g>
<title>net_rx_action (10 samples, 1.15%)</title><rect x="80.7" y="515.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.7" y="526.0"></text>
</g>
<g>
<title>process_backlog (10 samples, 1.15%)</title><rect x="80.7" y="499.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="83.7" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (10 samples, 1.15%)</title><rect x="80.7" y="483.0" width="13.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="83.7" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (10 samples, 1.15%)</title><rect x="80.7" y="467.0" width="13.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.7" y="478.0"></text>
</g>
<g>
<title>ip_rcv (10 samples, 1.15%)</title><rect x="80.7" y="451.0" width="13.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.7" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 1.15%)</title><rect x="80.7" y="435.0" width="13.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.7" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (10 samples, 1.15%)</title><rect x="80.7" y="419.0" width="13.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="83.7" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 1.15%)</title><rect x="80.7" y="403.0" width="13.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.7" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (10 samples, 1.15%)</title><rect x="80.7" y="387.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.7" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 1.04%)</title><rect x="82.1" y="371.0" width="12.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.1" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.81%)</title><rect x="84.8" y="355.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.8" y="366.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.12%)</title><rect x="84.8" y="339.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="87.8" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.69%)</title><rect x="86.1" y="339.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="89.1" y="350.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.12%)</title><rect x="86.1" y="323.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="89.1" y="334.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.12%)</title><rect x="86.1" y="307.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.1" y="318.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="86.1" y="291.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.1" y="302.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 0.58%)</title><rect x="87.5" y="323.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.5" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.58%)</title><rect x="87.5" y="307.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="90.5" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.58%)</title><rect x="87.5" y="291.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.5" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.58%)</title><rect x="87.5" y="275.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.5" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.58%)</title><rect x="87.5" y="259.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.5" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="94.3" y="627.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.3" y="638.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.12%)</title><rect x="94.3" y="611.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="97.3" y="622.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.12%)</title><rect x="94.3" y="595.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.3" y="606.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.12%)</title><rect x="94.3" y="579.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.3" y="590.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="95.6" y="643.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="98.6" y="654.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.12%)</title><rect x="97.0" y="659.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="100.0" y="670.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.23%)</title><rect x="98.4" y="755.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.4" y="766.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="98.4" y="739.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="101.4" y="750.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.12%)</title><rect x="99.7" y="739.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.7" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="101.1" y="931.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="104.1" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="101.1" y="915.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="104.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.23%)</title><rect x="102.4" y="979.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="103.8" y="963.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="103.8" y="947.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.12%)</title><rect x="103.8" y="931.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.12%)</title><rect x="103.8" y="915.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.8" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.12%)</title><rect x="103.8" y="899.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get (58 samples, 6.68%)</title><rect x="105.2" y="1075.0" width="78.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.2" y="1086.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$put$1 (58 samples, 6.68%)</title><rect x="105.2" y="1059.0" width="78.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.2" y="1070.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsertWithTimestamp (58 samples, 6.68%)</title><rect x="105.2" y="1043.0" width="78.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.2" y="1054.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (57 samples, 6.57%)</title><rect x="105.2" y="1027.0" width="77.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.2" y="1038.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (57 samples, 6.57%)</title><rect x="105.2" y="1011.0" width="77.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.2" y="1022.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (54 samples, 6.22%)</title><rect x="105.2" y="995.0" width="73.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="108.2" y="1006.0">Java_org..</text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.12%)</title><rect x="105.2" y="979.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="108.2" y="990.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (53 samples, 6.11%)</title><rect x="106.5" y="979.0" width="72.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="109.5" y="990.0">rocksdb_..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="106.5" y="963.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="109.5" y="974.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="106.5" y="947.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="109.5" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="106.5" y="931.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="109.5" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="106.5" y="915.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="109.5" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="106.5" y="899.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="109.5" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 5.99%)</title><rect x="107.9" y="963.0" width="70.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="110.9" y="974.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 5.99%)</title><rect x="107.9" y="947.0" width="70.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="110.9" y="958.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (50 samples, 5.76%)</title><rect x="107.9" y="931.0" width="68.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="110.9" y="942.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (44 samples, 5.07%)</title><rect x="107.9" y="915.0" width="59.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="110.9" y="926.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.12%)</title><rect x="107.9" y="899.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="110.9" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (42 samples, 4.84%)</title><rect x="109.2" y="899.0" width="57.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="112.2" y="910.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.23%)</title><rect x="110.6" y="883.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="113.6" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (28 samples, 3.23%)</title><rect x="113.3" y="883.0" width="38.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="116.3" y="894.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (27 samples, 3.11%)</title><rect x="113.3" y="867.0" width="36.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="116.3" y="878.0">roc..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (26 samples, 3.00%)</title><rect x="114.7" y="851.0" width="35.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="117.7" y="862.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni7585100241879282924.so (2 samples, 0.23%)</title><rect x="116.0" y="835.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="119.0" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="117.4" y="819.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="120.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="117.4" y="803.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="120.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="117.4" y="787.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="120.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (23 samples, 2.65%)</title><rect x="118.8" y="835.0" width="31.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="121.8" y="846.0">ro..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.12%)</title><rect x="120.1" y="819.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="123.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (21 samples, 2.42%)</title><rect x="121.5" y="819.0" width="28.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="124.5" y="830.0">ro..</text>
</g>
<g>
<title>__write (20 samples, 2.30%)</title><rect x="122.8" y="803.0" width="27.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="125.8" y="814.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 2.30%)</title><rect x="122.8" y="787.0" width="27.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="125.8" y="798.0">e..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 2.30%)</title><rect x="122.8" y="771.0" width="27.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="125.8" y="782.0">d..</text>
</g>
<g>
<title>__x64_sys_write (20 samples, 2.30%)</title><rect x="122.8" y="755.0" width="27.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="125.8" y="766.0">_..</text>
</g>
<g>
<title>ksys_write (20 samples, 2.30%)</title><rect x="122.8" y="739.0" width="27.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="125.8" y="750.0">k..</text>
</g>
<g>
<title>vfs_write (20 samples, 2.30%)</title><rect x="122.8" y="723.0" width="27.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.8" y="734.0">v..</text>
</g>
<g>
<title>__vfs_write (18 samples, 2.07%)</title><rect x="124.2" y="707.0" width="24.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="127.2" y="718.0">_..</text>
</g>
<g>
<title>new_sync_write (18 samples, 2.07%)</title><rect x="124.2" y="691.0" width="24.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="127.2" y="702.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (17 samples, 1.96%)</title><rect x="125.6" y="675.0" width="23.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="128.6" y="686.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (17 samples, 1.96%)</title><rect x="125.6" y="659.0" width="23.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="128.6" y="670.0">_..</text>
</g>
<g>
<title>file_update_time (6 samples, 0.69%)</title><rect x="125.6" y="643.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.6" y="654.0"></text>
</g>
<g>
<title>generic_update_time (6 samples, 0.69%)</title><rect x="125.6" y="627.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="128.6" y="638.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.69%)</title><rect x="125.6" y="611.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="128.6" y="622.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.69%)</title><rect x="125.6" y="595.0" width="8.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="128.6" y="606.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.12%)</title><rect x="125.6" y="579.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="128.6" y="590.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.12%)</title><rect x="125.6" y="563.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="128.6" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.12%)</title><rect x="125.6" y="547.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="128.6" y="558.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.58%)</title><rect x="126.9" y="579.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.9" y="590.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.35%)</title><rect x="126.9" y="563.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="129.9" y="574.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.35%)</title><rect x="126.9" y="547.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="129.9" y="558.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.23%)</title><rect x="126.9" y="531.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.9" y="542.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (2 samples, 0.23%)</title><rect x="126.9" y="515.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.9" y="526.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.12%)</title><rect x="128.3" y="499.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="131.3" y="510.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.12%)</title><rect x="128.3" y="483.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.3" y="494.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.12%)</title><rect x="129.6" y="531.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.6" y="542.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.12%)</title><rect x="129.6" y="515.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.6" y="526.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.23%)</title><rect x="131.0" y="563.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="134.0" y="574.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.23%)</title><rect x="131.0" y="547.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="134.0" y="558.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.12%)</title><rect x="132.4" y="531.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="135.4" y="542.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.12%)</title><rect x="132.4" y="515.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="135.4" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 1.27%)</title><rect x="133.7" y="643.0" width="15.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.7" y="654.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.12%)</title><rect x="133.7" y="627.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.7" y="638.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.35%)</title><rect x="135.1" y="627.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.1" y="638.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.23%)</title><rect x="136.4" y="611.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="139.4" y="622.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.23%)</title><rect x="136.4" y="595.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="139.4" y="606.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.23%)</title><rect x="136.4" y="579.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="139.4" y="590.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.12%)</title><rect x="137.8" y="563.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="140.8" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.69%)</title><rect x="139.1" y="627.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.1" y="638.0"></text>
</g>
<g>
<title>generic_write_end (6 samples, 0.69%)</title><rect x="139.1" y="611.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.1" y="622.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.69%)</title><rect x="139.1" y="595.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="142.1" y="606.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.69%)</title><rect x="139.1" y="579.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="142.1" y="590.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 0.69%)</title><rect x="139.1" y="563.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="142.1" y="574.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.35%)</title><rect x="139.1" y="547.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.1" y="558.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.35%)</title><rect x="139.1" y="531.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.1" y="542.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.23%)</title><rect x="140.5" y="515.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="143.5" y="526.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.12%)</title><rect x="140.5" y="499.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.5" y="510.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.12%)</title><rect x="141.9" y="499.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="144.9" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.12%)</title><rect x="141.9" y="483.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.9" y="494.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.23%)</title><rect x="143.2" y="547.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.2" y="558.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.12%)</title><rect x="143.2" y="531.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="146.2" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.12%)</title><rect x="144.6" y="531.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.6" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.12%)</title><rect x="145.9" y="547.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="148.9" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.12%)</title><rect x="147.3" y="627.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="150.3" y="638.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.12%)</title><rect x="148.7" y="707.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="150.0" y="867.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="153.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 1.04%)</title><rect x="151.4" y="883.0" width="12.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="154.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 1.04%)</title><rect x="151.4" y="867.0" width="12.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="154.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 1.04%)</title><rect x="151.4" y="851.0" width="12.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="154.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.81%)</title><rect x="152.7" y="835.0" width="9.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="155.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (7 samples, 0.81%)</title><rect x="152.7" y="819.0" width="9.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="155.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.12%)</title><rect x="152.7" y="803.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="155.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.69%)</title><rect x="154.1" y="803.0" width="8.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="157.1" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7585100241879282924.so (1 samples, 0.12%)</title><rect x="154.1" y="787.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="157.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.12%)</title><rect x="154.1" y="771.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="157.1" y="782.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.12%)</title><rect x="155.5" y="787.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="158.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.12%)</title><rect x="155.5" y="771.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="158.5" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="155.5" y="755.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="158.5" y="766.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.12%)</title><rect x="156.8" y="787.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.8" y="798.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.12%)</title><rect x="156.8" y="771.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.8" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.12%)</title><rect x="156.8" y="755.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.8" y="766.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.12%)</title><rect x="156.8" y="739.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="159.8" y="750.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.12%)</title><rect x="156.8" y="723.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="159.8" y="734.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="156.8" y="707.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="159.8" y="718.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.12%)</title><rect x="156.8" y="691.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.8" y="702.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.12%)</title><rect x="156.8" y="675.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="159.8" y="686.0"></text>
</g>
<g>
<title>__next_zones_zonelist (1 samples, 0.12%)</title><rect x="156.8" y="659.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (1 samples, 0.12%)</title><rect x="158.2" y="787.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="161.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.12%)</title><rect x="159.5" y="787.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="162.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() [clone .plt] (1 samples, 0.12%)</title><rect x="160.9" y="787.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="163.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.12%)</title><rect x="162.3" y="835.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="165.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.12%)</title><rect x="163.6" y="883.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="166.6" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.12%)</title><rect x="165.0" y="883.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="168.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.12%)</title><rect x="166.3" y="899.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="169.3" y="910.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.12%)</title><rect x="167.7" y="915.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="170.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.23%)</title><rect x="169.1" y="915.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="172.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.12%)</title><rect x="169.1" y="899.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="172.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.12%)</title><rect x="170.4" y="899.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="173.4" y="910.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.23%)</title><rect x="171.8" y="915.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="174.8" y="926.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.12%)</title><rect x="174.5" y="915.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="177.5" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="174.5" y="899.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="177.5" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="174.5" y="883.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.5" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="174.5" y="867.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="175.9" y="931.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="178.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="177.2" y="931.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="180.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.12%)</title><rect x="178.6" y="995.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="181.6" y="1006.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.12%)</title><rect x="178.6" y="979.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="181.6" y="990.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.12%)</title><rect x="179.9" y="995.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="182.9" y="1006.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.12%)</title><rect x="181.3" y="995.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="184.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (1 samples, 0.12%)</title><rect x="182.6" y="1027.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.6" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="182.6" y="1011.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="185.6" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.12%)</title><rect x="182.6" y="995.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="185.6" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="182.6" y="979.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="185.6" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="182.6" y="963.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="185.6" y="974.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="182.6" y="947.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="185.6" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="182.6" y="931.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="185.6" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.12%)</title><rect x="182.6" y="915.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="185.6" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.12%)</title><rect x="182.6" y="899.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="185.6" y="910.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.12%)</title><rect x="182.6" y="883.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="185.6" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.12%)</title><rect x="182.6" y="867.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="185.6" y="878.0"></text>
</g>
<g>
<title>HeapRegion::set_eden() (1 samples, 0.12%)</title><rect x="182.6" y="851.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="185.6" y="862.0"></text>
</g>
<g>
<title>HeapRegionType::get_trace_type() (1 samples, 0.12%)</title><rect x="182.6" y="835.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="185.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (57 samples, 6.57%)</title><rect x="184.0" y="1091.0" width="77.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.0" y="1102.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (55 samples, 6.34%)</title><rect x="184.0" y="1075.0" width="74.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.0" y="1086.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (53 samples, 6.11%)</title><rect x="184.0" y="1059.0" width="72.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.0" y="1070.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (53 samples, 6.11%)</title><rect x="184.0" y="1043.0" width="72.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.0" y="1054.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (1 samples, 0.12%)</title><rect x="184.0" y="1027.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (51 samples, 5.88%)</title><rect x="185.4" y="1027.0" width="69.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.4" y="1038.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (50 samples, 5.76%)</title><rect x="186.7" y="1011.0" width="68.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.7" y="1022.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.12%)</title><rect x="186.7" y="995.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.12%)</title><rect x="186.7" y="979.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (1 samples, 0.12%)</title><rect x="186.7" y="963.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (42 samples, 4.84%)</title><rect x="188.1" y="995.0" width="57.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.1" y="1006.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (42 samples, 4.84%)</title><rect x="188.1" y="979.0" width="57.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.1" y="990.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 4.84%)</title><rect x="188.1" y="963.0" width="57.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.1" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 4.61%)</title><rect x="189.4" y="947.0" width="54.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.4" y="958.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.12%)</title><rect x="189.4" y="931.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.4" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.12%)</title><rect x="189.4" y="915.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="189.4" y="899.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.4" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="189.4" y="883.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.12%)</title><rect x="189.4" y="867.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="189.4" y="851.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.12%)</title><rect x="189.4" y="835.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 4.49%)</title><rect x="190.8" y="931.0" width="53.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.8" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 4.49%)</title><rect x="190.8" y="915.0" width="53.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.8" y="926.0">one/n..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="190.8" y="899.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="193.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (38 samples, 4.38%)</title><rect x="192.2" y="899.0" width="51.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.2" y="910.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (38 samples, 4.38%)</title><rect x="192.2" y="883.0" width="51.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.2" y="894.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.12%)</title><rect x="193.5" y="867.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="196.5" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.12%)</title><rect x="193.5" y="851.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="196.5" y="862.0"></text>
</g>
<g>
<title>send (36 samples, 4.15%)</title><rect x="194.9" y="867.0" width="48.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="197.9" y="878.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 3.92%)</title><rect x="197.6" y="851.0" width="46.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.6" y="862.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (34 samples, 3.92%)</title><rect x="197.6" y="835.0" width="46.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.6" y="846.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (33 samples, 3.80%)</title><rect x="199.0" y="819.0" width="44.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="202.0" y="830.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (33 samples, 3.80%)</title><rect x="199.0" y="803.0" width="44.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.0" y="814.0">__sy..</text>
</g>
<g>
<title>fput_many (1 samples, 0.12%)</title><rect x="199.0" y="787.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="202.0" y="798.0"></text>
</g>
<g>
<title>sock_sendmsg (32 samples, 3.69%)</title><rect x="200.3" y="787.0" width="43.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="203.3" y="798.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (32 samples, 3.69%)</title><rect x="200.3" y="771.0" width="43.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="203.3" y="782.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (31 samples, 3.57%)</title><rect x="201.7" y="755.0" width="42.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="204.7" y="766.0">tcp_..</text>
</g>
<g>
<title>release_sock (4 samples, 0.46%)</title><rect x="201.7" y="739.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="204.7" y="750.0"></text>
</g>
<g>
<title>__release_sock (4 samples, 0.46%)</title><rect x="201.7" y="723.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="204.7" y="734.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.23%)</title><rect x="201.7" y="707.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.7" y="718.0"></text>
</g>
<g>
<title>preempt_schedule_common (2 samples, 0.23%)</title><rect x="201.7" y="691.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.7" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.23%)</title><rect x="201.7" y="675.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.7" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.23%)</title><rect x="201.7" y="659.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="204.7" y="670.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.23%)</title><rect x="204.4" y="707.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="207.4" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.23%)</title><rect x="204.4" y="691.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="207.4" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.12%)</title><rect x="204.4" y="675.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="207.4" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.12%)</title><rect x="204.4" y="659.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="207.4" y="670.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.12%)</title><rect x="205.8" y="675.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="208.8" y="686.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.12%)</title><rect x="205.8" y="659.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="208.8" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (27 samples, 3.11%)</title><rect x="207.1" y="739.0" width="36.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.1" y="750.0">tcp..</text>
</g>
<g>
<title>check_stack_object (1 samples, 0.12%)</title><rect x="207.1" y="723.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="210.1" y="734.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.12%)</title><rect x="208.5" y="723.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="211.5" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.12%)</title><rect x="208.5" y="707.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="211.5" y="718.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.12%)</title><rect x="208.5" y="691.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.5" y="702.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.12%)</title><rect x="208.5" y="675.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="211.5" y="686.0"></text>
</g>
<g>
<title>tcp_push (25 samples, 2.88%)</title><rect x="209.8" y="723.0" width="34.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.8" y="734.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (25 samples, 2.88%)</title><rect x="209.8" y="707.0" width="34.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="212.8" y="718.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (25 samples, 2.88%)</title><rect x="209.8" y="691.0" width="34.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.8" y="702.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (24 samples, 2.76%)</title><rect x="211.2" y="675.0" width="32.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="214.2" y="686.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (24 samples, 2.76%)</title><rect x="211.2" y="659.0" width="32.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="214.2" y="670.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (23 samples, 2.65%)</title><rect x="211.2" y="643.0" width="31.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="214.2" y="654.0">__..</text>
</g>
<g>
<title>ip_local_out (23 samples, 2.65%)</title><rect x="211.2" y="627.0" width="31.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="214.2" y="638.0">ip..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.35%)</title><rect x="211.2" y="611.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="214.2" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.35%)</title><rect x="211.2" y="595.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.2" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.35%)</title><rect x="211.2" y="579.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.2" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.35%)</title><rect x="211.2" y="563.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.2" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.12%)</title><rect x="211.2" y="547.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="214.2" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.23%)</title><rect x="212.6" y="547.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.6" y="558.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.23%)</title><rect x="212.6" y="531.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.6" y="542.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.12%)</title><rect x="213.9" y="515.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.9" y="526.0"></text>
</g>
<g>
<title>ip_output (20 samples, 2.30%)</title><rect x="215.3" y="611.0" width="27.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="218.3" y="622.0">i..</text>
</g>
<g>
<title>ip_finish_output (19 samples, 2.19%)</title><rect x="216.6" y="595.0" width="25.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="219.6" y="606.0">i..</text>
</g>
<g>
<title>__ip_finish_output (19 samples, 2.19%)</title><rect x="216.6" y="579.0" width="25.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.6" y="590.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (19 samples, 2.19%)</title><rect x="216.6" y="563.0" width="25.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="219.6" y="574.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (16 samples, 1.84%)</title><rect x="218.0" y="547.0" width="21.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="221.0" y="558.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (16 samples, 1.84%)</title><rect x="218.0" y="531.0" width="21.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="221.0" y="542.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (16 samples, 1.84%)</title><rect x="218.0" y="515.0" width="21.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="221.0" y="526.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (16 samples, 1.84%)</title><rect x="218.0" y="499.0" width="21.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="221.0" y="510.0">_..</text>
</g>
<g>
<title>net_rx_action (15 samples, 1.73%)</title><rect x="219.4" y="483.0" width="20.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="222.4" y="494.0"></text>
</g>
<g>
<title>process_backlog (14 samples, 1.61%)</title><rect x="220.7" y="467.0" width="19.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="223.7" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb (14 samples, 1.61%)</title><rect x="220.7" y="451.0" width="19.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="223.7" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (14 samples, 1.61%)</title><rect x="220.7" y="435.0" width="19.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="223.7" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="220.7" y="419.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.7" y="430.0"></text>
</g>
<g>
<title>br_handle_frame?[bridge] (1 samples, 0.12%)</title><rect x="220.7" y="403.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="223.7" y="414.0"></text>
</g>
<g>
<title>br_nf_pre_routing?[br_netfilter] (1 samples, 0.12%)</title><rect x="220.7" y="387.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.7" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="220.7" y="371.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.7" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.12%)</title><rect x="220.7" y="355.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="223.7" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.12%)</title><rect x="220.7" y="339.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.7" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.12%)</title><rect x="220.7" y="323.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="223.7" y="334.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.12%)</title><rect x="220.7" y="307.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="223.7" y="318.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (1 samples, 0.12%)</title><rect x="222.1" y="419.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="225.1" y="430.0"></text>
</g>
<g>
<title>ip_rcv (12 samples, 1.38%)</title><rect x="223.4" y="419.0" width="16.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="226.4" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 1.38%)</title><rect x="223.4" y="403.0" width="16.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.4" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (12 samples, 1.38%)</title><rect x="223.4" y="387.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="226.4" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 1.38%)</title><rect x="223.4" y="371.0" width="16.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="226.4" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 1.38%)</title><rect x="223.4" y="355.0" width="16.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.4" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 1.38%)</title><rect x="223.4" y="339.0" width="16.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="226.4" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 1.38%)</title><rect x="223.4" y="323.0" width="16.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="226.4" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 1.38%)</title><rect x="223.4" y="307.0" width="16.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.4" y="318.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.23%)</title><rect x="226.2" y="291.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.2" y="302.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.23%)</title><rect x="226.2" y="275.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="229.2" y="286.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (2 samples, 0.23%)</title><rect x="226.2" y="259.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.2" y="270.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.23%)</title><rect x="226.2" y="243.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="229.2" y="254.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.12%)</title><rect x="227.5" y="227.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="230.5" y="238.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.12%)</title><rect x="227.5" y="211.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.5" y="222.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.12%)</title><rect x="227.5" y="195.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="230.5" y="206.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.12%)</title><rect x="227.5" y="179.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.5" y="190.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.12%)</title><rect x="227.5" y="163.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.5" y="174.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.12%)</title><rect x="227.5" y="147.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="230.5" y="158.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.12%)</title><rect x="227.5" y="131.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.5" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.12%)</title><rect x="227.5" y="115.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.5" y="126.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.12%)</title><rect x="227.5" y="99.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="230.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.69%)</title><rect x="228.9" y="291.0" width="8.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.9" y="302.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.58%)</title><rect x="230.2" y="275.0" width="6.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="233.2" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.35%)</title><rect x="232.9" y="259.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="235.9" y="270.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.23%)</title><rect x="232.9" y="243.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="235.9" y="254.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="234.3" y="227.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.3" y="238.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="235.7" y="243.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="238.7" y="254.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.12%)</title><rect x="235.7" y="227.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="238.7" y="238.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.12%)</title><rect x="237.0" y="291.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="240.0" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.12%)</title><rect x="237.0" y="275.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="240.0" y="286.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.12%)</title><rect x="237.0" y="259.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="240.0" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.12%)</title><rect x="237.0" y="243.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="240.0" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="237.0" y="227.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="240.0" y="238.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.12%)</title><rect x="238.4" y="291.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="241.4" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.23%)</title><rect x="239.7" y="547.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="242.7" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.23%)</title><rect x="239.7" y="531.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="242.7" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="239.7" y="515.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="242.7" y="526.0"></text>
</g>
<g>
<title>br_dev_xmit?[bridge] (2 samples, 0.23%)</title><rect x="239.7" y="499.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="242.7" y="510.0"></text>
</g>
<g>
<title>br_forward?[bridge] (2 samples, 0.23%)</title><rect x="239.7" y="483.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="242.7" y="494.0"></text>
</g>
<g>
<title>__br_forward?[bridge] (2 samples, 0.23%)</title><rect x="239.7" y="467.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="242.7" y="478.0"></text>
</g>
<g>
<title>br_forward_finish?[bridge] (2 samples, 0.23%)</title><rect x="239.7" y="451.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="242.7" y="462.0"></text>
</g>
<g>
<title>br_dev_queue_push_xmit?[bridge] (2 samples, 0.23%)</title><rect x="239.7" y="435.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.7" y="446.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.12%)</title><rect x="241.1" y="419.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="244.1" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.12%)</title><rect x="241.1" y="403.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.1" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.12%)</title><rect x="241.1" y="387.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.1" y="398.0"></text>
</g>
<g>
<title>veth_xmit?[veth] (1 samples, 0.12%)</title><rect x="241.1" y="371.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="244.1" y="382.0"></text>
</g>
<g>
<title>__dev_forward_skb (1 samples, 0.12%)</title><rect x="241.1" y="355.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="244.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.12%)</title><rect x="241.1" y="339.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="244.1" y="350.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.12%)</title><rect x="242.5" y="643.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="245.5" y="654.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.12%)</title><rect x="243.8" y="947.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="246.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.increment (1 samples, 0.12%)</title><rect x="243.8" y="931.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.12%)</title><rect x="243.8" y="915.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (7 samples, 0.81%)</title><rect x="245.2" y="995.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (7 samples, 0.81%)</title><rect x="245.2" y="979.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.69%)</title><rect x="245.2" y="963.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.69%)</title><rect x="245.2" y="947.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.69%)</title><rect x="245.2" y="931.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.69%)</title><rect x="245.2" y="915.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.69%)</title><rect x="245.2" y="899.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.69%)</title><rect x="245.2" y="883.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.69%)</title><rect x="245.2" y="867.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.69%)</title><rect x="245.2" y="851.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.69%)</title><rect x="245.2" y="835.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.69%)</title><rect x="245.2" y="819.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.69%)</title><rect x="245.2" y="803.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="248.2" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.12%)</title><rect x="245.2" y="787.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="248.2" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="245.2" y="771.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="248.2" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.58%)</title><rect x="246.5" y="787.0" width="6.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="249.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.58%)</title><rect x="246.5" y="771.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="249.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.58%)</title><rect x="246.5" y="755.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="249.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.58%)</title><rect x="246.5" y="739.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="249.5" y="750.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.58%)</title><rect x="246.5" y="723.0" width="6.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="249.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.58%)</title><rect x="246.5" y="707.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="249.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.58%)</title><rect x="246.5" y="691.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.5" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.58%)</title><rect x="246.5" y="675.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="249.5" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.58%)</title><rect x="246.5" y="659.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="249.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.12%)</title><rect x="253.3" y="963.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.3" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.12%)</title><rect x="253.3" y="947.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.3" y="958.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.12%)</title><rect x="254.7" y="1027.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="257.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.apply (1 samples, 0.12%)</title><rect x="256.1" y="1059.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$sendToReplicas$2 (1 samples, 0.12%)</title><rect x="256.1" y="1043.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology$$Lambda$133/1116379785.apply (1 samples, 0.12%)</title><rect x="257.4" y="1059.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.lambda$forwardRequest$0 (1 samples, 0.12%)</title><rect x="257.4" y="1043.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.12%)</title><rect x="257.4" y="1027.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.12%)</title><rect x="257.4" y="1011.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.12%)</title><rect x="257.4" y="995.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.23%)</title><rect x="258.8" y="1075.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.23%)</title><rect x="258.8" y="1059.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.23%)</title><rect x="258.8" y="1043.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.23%)</title><rect x="258.8" y="1027.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.23%)</title><rect x="258.8" y="1011.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.8" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="258.8" y="995.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="261.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology$$Lambda$133/1116379785.apply (1 samples, 0.12%)</title><rect x="260.1" y="995.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (5 samples, 0.58%)</title><rect x="261.5" y="1091.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.58%)</title><rect x="261.5" y="1075.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (4 samples, 0.46%)</title><rect x="262.9" y="1059.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.12%)</title><rect x="264.2" y="1043.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.12%)</title><rect x="264.2" y="1027.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.12%)</title><rect x="264.2" y="1011.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.12%)</title><rect x="264.2" y="995.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.run (1 samples, 0.12%)</title><rect x="265.6" y="1043.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.12%)</title><rect x="266.9" y="1043.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (108 samples, 12.44%)</title><rect x="268.3" y="1091.0" width="146.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.3" y="1102.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (50 samples, 5.76%)</title><rect x="269.7" y="1075.0" width="67.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.7" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (48 samples, 5.53%)</title><rect x="271.0" y="1059.0" width="65.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.0" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.35%)</title><rect x="271.0" y="1043.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.12%)</title><rect x="273.7" y="1027.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.23%)</title><rect x="275.1" y="1043.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.12%)</title><rect x="276.5" y="1027.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.12%)</title><rect x="276.5" y="1011.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.12%)</title><rect x="276.5" y="995.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.5" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="276.5" y="979.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="279.5" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="276.5" y="963.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="279.5" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="276.5" y="947.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="279.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (43 samples, 4.95%)</title><rect x="277.8" y="1043.0" width="58.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.8" y="1054.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43 samples, 4.95%)</title><rect x="277.8" y="1027.0" width="58.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.8" y="1038.0">jdk/in..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.12%)</title><rect x="279.2" y="1011.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="282.2" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 1.04%)</title><rect x="280.5" y="1011.0" width="12.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="283.5" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.23%)</title><rect x="281.9" y="995.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="284.9" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="283.2" y="979.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="286.2" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="283.2" y="963.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="286.2" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="283.2" y="947.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.2" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.46%)</title><rect x="284.6" y="995.0" width="5.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="287.6" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.23%)</title><rect x="286.0" y="979.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="289.0" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="287.3" y="963.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.3" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="287.3" y="947.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.3" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="287.3" y="931.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="290.3" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="288.7" y="979.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="291.7" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.12%)</title><rect x="290.0" y="995.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="293.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="290.0" y="979.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="293.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="290.0" y="963.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="293.0" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="290.0" y="947.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.0" y="958.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="290.0" y="931.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="293.0" y="942.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="290.0" y="915.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.0" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="291.4" y="995.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="294.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 3.69%)</title><rect x="292.8" y="1011.0" width="43.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="295.8" y="1022.0">[unk..</text>
</g>
<g>
<title>__pthread_cond_wait (32 samples, 3.69%)</title><rect x="292.8" y="995.0" width="43.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="295.8" y="1006.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 3.57%)</title><rect x="294.1" y="979.0" width="42.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="297.1" y="990.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 3.57%)</title><rect x="294.1" y="963.0" width="42.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="297.1" y="974.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 3.57%)</title><rect x="294.1" y="947.0" width="42.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="297.1" y="958.0">__x6..</text>
</g>
<g>
<title>do_futex (31 samples, 3.57%)</title><rect x="294.1" y="931.0" width="42.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.1" y="942.0">do_f..</text>
</g>
<g>
<title>futex_wait (31 samples, 3.57%)</title><rect x="294.1" y="915.0" width="42.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.1" y="926.0">fute..</text>
</g>
<g>
<title>futex_wait_queue_me (30 samples, 3.46%)</title><rect x="294.1" y="899.0" width="40.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.1" y="910.0">fut..</text>
</g>
<g>
<title>schedule (30 samples, 3.46%)</title><rect x="294.1" y="883.0" width="40.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.1" y="894.0">sch..</text>
</g>
<g>
<title>__sched_text_start (30 samples, 3.46%)</title><rect x="294.1" y="867.0" width="40.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.1" y="878.0">__s..</text>
</g>
<g>
<title>finish_task_switch (30 samples, 3.46%)</title><rect x="294.1" y="851.0" width="40.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.1" y="862.0">fin..</text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.12%)</title><rect x="334.9" y="899.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="337.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.12%)</title><rect x="336.3" y="1059.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.12%)</title><rect x="336.3" y="1043.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.12%)</title><rect x="336.3" y="1027.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.12%)</title><rect x="336.3" y="1011.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.3" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="336.3" y="995.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="339.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (57 samples, 6.57%)</title><rect x="337.6" y="1075.0" width="77.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.6" y="1086.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (51 samples, 5.88%)</title><rect x="337.6" y="1059.0" width="69.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.6" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.12%)</title><rect x="337.6" y="1043.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.12%)</title><rect x="339.0" y="1043.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.12%)</title><rect x="339.0" y="1027.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.12%)</title><rect x="339.0" y="1011.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.0" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="339.0" y="995.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.0" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="339.0" y="979.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="342.0" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="339.0" y="963.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="342.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 5.65%)</title><rect x="340.3" y="1043.0" width="66.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="343.3" y="1054.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 5.65%)</title><rect x="340.3" y="1027.0" width="66.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.3" y="1038.0">jdk/int..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.12%)</title><rect x="341.7" y="1011.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="344.7" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.58%)</title><rect x="343.1" y="1011.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="346.1" y="1022.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.12%)</title><rect x="344.4" y="995.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="347.4" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.12%)</title><rect x="345.8" y="995.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="348.8" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.12%)</title><rect x="347.1" y="995.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="350.1" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="347.1" y="979.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="350.1" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="347.1" y="963.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.1" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="347.1" y="947.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="350.1" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (1 samples, 0.12%)</title><rect x="348.5" y="995.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="351.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 4.72%)</title><rect x="349.9" y="1011.0" width="55.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="352.9" y="1022.0">[unkn..</text>
</g>
<g>
<title>__pthread_cond_wait (40 samples, 4.61%)</title><rect x="349.9" y="995.0" width="54.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="352.9" y="1006.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 4.61%)</title><rect x="349.9" y="979.0" width="54.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.9" y="990.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (40 samples, 4.61%)</title><rect x="349.9" y="963.0" width="54.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="352.9" y="974.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (39 samples, 4.49%)</title><rect x="349.9" y="947.0" width="53.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.9" y="958.0">__x64..</text>
</g>
<g>
<title>do_futex (39 samples, 4.49%)</title><rect x="349.9" y="931.0" width="53.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.9" y="942.0">do_fu..</text>
</g>
<g>
<title>futex_wait (39 samples, 4.49%)</title><rect x="349.9" y="915.0" width="53.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="352.9" y="926.0">futex..</text>
</g>
<g>
<title>futex_wait_queue_me (37 samples, 4.26%)</title><rect x="349.9" y="899.0" width="50.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.9" y="910.0">futex..</text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.12%)</title><rect x="349.9" y="883.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="352.9" y="894.0"></text>
</g>
<g>
<title>schedule (36 samples, 4.15%)</title><rect x="351.2" y="883.0" width="49.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="354.2" y="894.0">sche..</text>
</g>
<g>
<title>__sched_text_start (36 samples, 4.15%)</title><rect x="351.2" y="867.0" width="49.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.2" y="878.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (36 samples, 4.15%)</title><rect x="351.2" y="851.0" width="49.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="354.2" y="862.0">fini..</text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.12%)</title><rect x="400.2" y="899.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="403.2" y="910.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.12%)</title><rect x="401.5" y="899.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="404.5" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="402.9" y="947.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="405.9" y="958.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="404.2" y="995.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="407.2" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.12%)</title><rect x="405.6" y="1011.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="408.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.12%)</title><rect x="407.0" y="1059.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="410.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.12%)</title><rect x="407.0" y="1043.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.12%)</title><rect x="407.0" y="1027.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.12%)</title><rect x="407.0" y="1011.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.0" y="1022.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.12%)</title><rect x="407.0" y="995.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="410.0" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="407.0" y="979.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="410.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.58%)</title><rect x="408.3" y="1059.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.58%)</title><rect x="408.3" y="1043.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.58%)</title><rect x="408.3" y="1027.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.58%)</title><rect x="408.3" y="1011.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.58%)</title><rect x="408.3" y="995.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.3" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.46%)</title><rect x="408.3" y="979.0" width="5.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="411.3" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.12%)</title><rect x="409.7" y="963.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="412.7" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.23%)</title><rect x="411.0" y="963.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="414.0" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.12%)</title><rect x="413.8" y="979.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="416.8" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="413.8" y="963.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="416.8" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="413.8" y="947.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.8" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="413.8" y="931.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="416.8" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="413.8" y="915.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="416.8" y="926.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="413.8" y="899.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="416.8" y="910.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.12%)</title><rect x="413.8" y="883.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.8" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.12%)</title><rect x="413.8" y="867.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="416.8" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="413.8" y="851.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.run (62 samples, 7.14%)</title><rect x="415.1" y="1091.0" width="84.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.1" y="1102.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (62 samples, 7.14%)</title><rect x="415.1" y="1075.0" width="84.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.1" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (62 samples, 7.14%)</title><rect x="415.1" y="1059.0" width="84.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.1" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (62 samples, 7.14%)</title><rect x="415.1" y="1043.0" width="84.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.1" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (62 samples, 7.14%)</title><rect x="415.1" y="1027.0" width="84.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.1" y="1038.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (62 samples, 7.14%)</title><rect x="415.1" y="1011.0" width="84.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.1" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (62 samples, 7.14%)</title><rect x="415.1" y="995.0" width="84.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.1" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (62 samples, 7.14%)</title><rect x="415.1" y="979.0" width="84.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.1" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (62 samples, 7.14%)</title><rect x="415.1" y="963.0" width="84.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.1" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (62 samples, 7.14%)</title><rect x="415.1" y="947.0" width="84.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.1" y="958.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (62 samples, 7.14%)</title><rect x="415.1" y="931.0" width="84.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.1" y="942.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (12 samples, 1.38%)</title><rect x="415.1" y="915.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (8 samples, 0.92%)</title><rect x="417.8" y="899.0" width="10.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.92%)</title><rect x="417.8" y="883.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7 samples, 0.81%)</title><rect x="417.8" y="867.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.8" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="417.8" y="851.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="420.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.69%)</title><rect x="419.2" y="851.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.12%)</title><rect x="420.6" y="835.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.46%)</title><rect x="421.9" y="835.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.46%)</title><rect x="421.9" y="819.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.apply (4 samples, 0.46%)</title><rect x="421.9" y="803.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.46%)</title><rect x="421.9" y="787.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.46%)</title><rect x="421.9" y="771.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.apply (1 samples, 0.12%)</title><rect x="421.9" y="755.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.12%)</title><rect x="421.9" y="739.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.12%)</title><rect x="421.9" y="723.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.12%)</title><rect x="421.9" y="707.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.12%)</title><rect x="421.9" y="691.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.12%)</title><rect x="421.9" y="675.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1949249014.accept (1 samples, 0.12%)</title><rect x="421.9" y="659.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.12%)</title><rect x="421.9" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.12%)</title><rect x="421.9" y="627.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.12%)</title><rect x="421.9" y="611.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.12%)</title><rect x="421.9" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="424.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.12%)</title><rect x="421.9" y="579.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.12%)</title><rect x="421.9" y="563.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.apply (3 samples, 0.35%)</title><rect x="423.3" y="755.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3 samples, 0.35%)</title><rect x="423.3" y="739.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3 samples, 0.35%)</title><rect x="423.3" y="723.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3 samples, 0.35%)</title><rect x="423.3" y="707.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.23%)</title><rect x="423.3" y="691.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.12%)</title><rect x="426.0" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.12%)</title><rect x="426.0" y="675.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.12%)</title><rect x="426.0" y="659.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.12%)</title><rect x="426.0" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.0" y="654.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.12%)</title><rect x="426.0" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.0" y="638.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.12%)</title><rect x="426.0" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.12%)</title><rect x="427.4" y="867.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.12%)</title><rect x="427.4" y="851.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.12%)</title><rect x="427.4" y="835.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.12%)</title><rect x="427.4" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.12%)</title><rect x="427.4" y="803.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.12%)</title><rect x="427.4" y="787.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.12%)</title><rect x="427.4" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.12%)</title><rect x="427.4" y="755.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.12%)</title><rect x="427.4" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.12%)</title><rect x="427.4" y="723.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.4" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="427.4" y="707.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="430.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (2 samples, 0.23%)</title><rect x="428.7" y="899.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.12%)</title><rect x="430.1" y="883.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.12%)</title><rect x="430.1" y="867.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (50 samples, 5.76%)</title><rect x="431.4" y="915.0" width="68.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.4" y="926.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (50 samples, 5.76%)</title><rect x="431.4" y="899.0" width="68.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.4" y="910.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (50 samples, 5.76%)</title><rect x="431.4" y="883.0" width="68.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.4" y="894.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (50 samples, 5.76%)</title><rect x="431.4" y="867.0" width="68.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.4" y="878.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (50 samples, 5.76%)</title><rect x="431.4" y="851.0" width="68.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.4" y="862.0">jdk/int..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (49 samples, 5.65%)</title><rect x="431.4" y="835.0" width="66.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.4" y="846.0">java/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (49 samples, 5.65%)</title><rect x="431.4" y="819.0" width="66.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.4" y="830.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 5.65%)</title><rect x="431.4" y="803.0" width="66.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.4" y="814.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 5.65%)</title><rect x="431.4" y="787.0" width="66.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.4" y="798.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (47 samples, 5.41%)</title><rect x="432.8" y="771.0" width="63.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.8" y="782.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (47 samples, 5.41%)</title><rect x="432.8" y="755.0" width="63.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.8" y="766.0">sun/nio..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.12%)</title><rect x="432.8" y="739.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="435.8" y="750.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.12%)</title><rect x="434.1" y="739.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="437.1" y="750.0"></text>
</g>
<g>
<title>writev (45 samples, 5.18%)</title><rect x="435.5" y="739.0" width="61.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="438.5" y="750.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 4.95%)</title><rect x="438.2" y="723.0" width="58.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.2" y="734.0">entry_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.12%)</title><rect x="438.2" y="707.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 4.84%)</title><rect x="439.6" y="707.0" width="57.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.6" y="718.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_writev (42 samples, 4.84%)</title><rect x="439.6" y="691.0" width="57.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="442.6" y="702.0">__x64_..</text>
</g>
<g>
<title>do_writev (42 samples, 4.84%)</title><rect x="439.6" y="675.0" width="57.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.6" y="686.0">do_wri..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.23%)</title><rect x="439.6" y="659.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="442.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.23%)</title><rect x="439.6" y="643.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.6" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.23%)</title><rect x="439.6" y="627.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.6" y="638.0"></text>
</g>
<g>
<title>vfs_writev (40 samples, 4.61%)</title><rect x="442.3" y="659.0" width="54.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.3" y="670.0">vfs_w..</text>
</g>
<g>
<title>do_iter_write (37 samples, 4.26%)</title><rect x="442.3" y="643.0" width="50.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.3" y="654.0">do_it..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.12%)</title><rect x="442.3" y="627.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="445.3" y="638.0"></text>
</g>
<g>
<title>do_iter_readv_writev (35 samples, 4.03%)</title><rect x="443.7" y="627.0" width="47.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="446.7" y="638.0">do_i..</text>
</g>
<g>
<title>sock_write_iter (35 samples, 4.03%)</title><rect x="443.7" y="611.0" width="47.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="446.7" y="622.0">sock..</text>
</g>
<g>
<title>sock_sendmsg (35 samples, 4.03%)</title><rect x="443.7" y="595.0" width="47.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="446.7" y="606.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (34 samples, 3.92%)</title><rect x="443.7" y="579.0" width="46.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="446.7" y="590.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (34 samples, 3.92%)</title><rect x="443.7" y="563.0" width="46.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="446.7" y="574.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="443.7" y="547.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.7" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (33 samples, 3.80%)</title><rect x="445.0" y="547.0" width="44.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.0" y="558.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.12%)</title><rect x="446.4" y="531.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.4" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.12%)</title><rect x="446.4" y="515.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="449.4" y="526.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.12%)</title><rect x="447.7" y="531.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.7" y="542.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.12%)</title><rect x="447.7" y="515.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="450.7" y="526.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.12%)</title><rect x="449.1" y="531.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="452.1" y="542.0"></text>
</g>
<g>
<title>tcp_push (29 samples, 3.34%)</title><rect x="450.5" y="531.0" width="39.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="453.5" y="542.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (29 samples, 3.34%)</title><rect x="450.5" y="515.0" width="39.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.5" y="526.0">__t..</text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.12%)</title><rect x="450.5" y="499.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.5" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (28 samples, 3.23%)</title><rect x="451.8" y="499.0" width="38.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="454.8" y="510.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (25 samples, 2.88%)</title><rect x="453.2" y="483.0" width="34.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="456.2" y="494.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (24 samples, 2.76%)</title><rect x="454.5" y="467.0" width="32.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.5" y="478.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (24 samples, 2.76%)</title><rect x="454.5" y="451.0" width="32.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.5" y="462.0">__..</text>
</g>
<g>
<title>ip_local_out (24 samples, 2.76%)</title><rect x="454.5" y="435.0" width="32.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.5" y="446.0">ip..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.46%)</title><rect x="454.5" y="419.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.46%)</title><rect x="454.5" y="403.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.5" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="454.5" y="387.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.5" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="454.5" y="371.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.5" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.35%)</title><rect x="455.9" y="387.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="458.9" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.35%)</title><rect x="455.9" y="371.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.9" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.12%)</title><rect x="455.9" y="355.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="458.9" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.12%)</title><rect x="457.3" y="355.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.3" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.12%)</title><rect x="457.3" y="339.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.3" y="350.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.12%)</title><rect x="458.6" y="355.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="461.6" y="366.0"></text>
</g>
<g>
<title>ip_output (20 samples, 2.30%)</title><rect x="460.0" y="419.0" width="27.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.0" y="430.0">i..</text>
</g>
<g>
<title>ip_finish_output (19 samples, 2.19%)</title><rect x="460.0" y="403.0" width="25.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.0" y="414.0">i..</text>
</g>
<g>
<title>__ip_finish_output (18 samples, 2.07%)</title><rect x="460.0" y="387.0" width="24.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.0" y="398.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (18 samples, 2.07%)</title><rect x="460.0" y="371.0" width="24.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.0" y="382.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 1.38%)</title><rect x="460.0" y="355.0" width="16.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="463.0" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (12 samples, 1.38%)</title><rect x="460.0" y="339.0" width="16.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="463.0" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (12 samples, 1.38%)</title><rect x="460.0" y="323.0" width="16.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.0" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (12 samples, 1.38%)</title><rect x="460.0" y="307.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.0" y="318.0"></text>
</g>
<g>
<title>net_rx_action (12 samples, 1.38%)</title><rect x="460.0" y="291.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.0" y="302.0"></text>
</g>
<g>
<title>process_backlog (12 samples, 1.38%)</title><rect x="460.0" y="275.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 1.38%)</title><rect x="460.0" y="259.0" width="16.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.0" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 1.38%)</title><rect x="460.0" y="243.0" width="16.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="463.0" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="460.0" y="227.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="463.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 1.27%)</title><rect x="461.3" y="227.0" width="15.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.3" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.12%)</title><rect x="461.3" y="211.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="464.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 1.15%)</title><rect x="462.7" y="211.0" width="13.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (10 samples, 1.15%)</title><rect x="462.7" y="195.0" width="13.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="465.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 1.04%)</title><rect x="462.7" y="179.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.7" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 0.92%)</title><rect x="462.7" y="163.0" width="10.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 0.92%)</title><rect x="462.7" y="147.0" width="10.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.7" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.12%)</title><rect x="462.7" y="131.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.81%)</title><rect x="464.1" y="131.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="467.1" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.81%)</title><rect x="464.1" y="115.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="467.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 0.69%)</title><rect x="464.1" y="99.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="467.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.69%)</title><rect x="464.1" y="83.0" width="8.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="467.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.69%)</title><rect x="464.1" y="67.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.69%)</title><rect x="464.1" y="51.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="467.1" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.69%)</title><rect x="464.1" y="35.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="467.1" y="46.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.12%)</title><rect x="472.2" y="99.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.2" y="110.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.12%)</title><rect x="473.6" y="163.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="476.6" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="474.9" y="179.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="477.9" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.69%)</title><rect x="476.3" y="355.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="479.3" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.69%)</title><rect x="476.3" y="339.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="479.3" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.23%)</title><rect x="477.6" y="323.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="480.6" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="479.0" y="307.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.0" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.12%)</title><rect x="479.0" y="291.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.0" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="480.4" y="323.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.4" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.12%)</title><rect x="481.7" y="323.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.7" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.12%)</title><rect x="483.1" y="323.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="486.1" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.12%)</title><rect x="484.4" y="387.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="485.8" y="403.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.8" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out?[nf_nat] (1 samples, 0.12%)</title><rect x="485.8" y="387.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.8" y="398.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.12%)</title><rect x="487.2" y="483.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.2" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.12%)</title><rect x="488.5" y="483.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="491.5" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.12%)</title><rect x="489.9" y="579.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.9" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.12%)</title><rect x="489.9" y="563.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.9" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.12%)</title><rect x="489.9" y="547.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.9" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.12%)</title><rect x="491.2" y="627.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="494.2" y="638.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.12%)</title><rect x="491.2" y="611.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="494.2" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.12%)</title><rect x="491.2" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.2" y="606.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.12%)</title><rect x="491.2" y="579.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.2" y="590.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.12%)</title><rect x="491.2" y="563.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.2" y="574.0"></text>
</g>
<g>
<title>import_iovec (3 samples, 0.35%)</title><rect x="492.6" y="643.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.6" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.23%)</title><rect x="494.0" y="627.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="497.0" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.12%)</title><rect x="495.3" y="611.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.12%)</title><rect x="496.7" y="771.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.7" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.12%)</title><rect x="496.7" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.7" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.12%)</title><rect x="498.0" y="835.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.0" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.12%)</title><rect x="498.0" y="819.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.0" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.12%)</title><rect x="498.0" y="803.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (217 samples, 25.00%)</title><rect x="499.4" y="1091.0" width="295.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.4" y="1102.0">jdk/internal/net/http/common/SequentialS..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (217 samples, 25.00%)</title><rect x="499.4" y="1075.0" width="295.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.4" y="1086.0">jdk/internal/net/http/common/SequentialS..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (42 samples, 4.84%)</title><rect x="499.4" y="1059.0" width="57.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.4" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (42 samples, 4.84%)</title><rect x="499.4" y="1043.0" width="57.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.4" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (42 samples, 4.84%)</title><rect x="499.4" y="1027.0" width="57.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.4" y="1038.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (4 samples, 0.46%)</title><rect x="499.4" y="1011.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (4 samples, 0.46%)</title><rect x="499.4" y="995.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.46%)</title><rect x="499.4" y="979.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.46%)</title><rect x="499.4" y="963.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.46%)</title><rect x="499.4" y="947.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.46%)</title><rect x="499.4" y="931.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.35%)</title><rect x="499.4" y="915.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.35%)</title><rect x="499.4" y="899.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.35%)</title><rect x="499.4" y="883.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="502.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.35%)</title><rect x="499.4" y="867.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.35%)</title><rect x="499.4" y="851.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.4" y="862.0"></text>
</g>
<g>
<title>__write (3 samples, 0.35%)</title><rect x="499.4" y="835.0" width="4.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="502.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.35%)</title><rect x="499.4" y="819.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.35%)</title><rect x="499.4" y="803.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="502.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.35%)</title><rect x="499.4" y="787.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="502.4" y="798.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.35%)</title><rect x="499.4" y="771.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.4" y="782.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.35%)</title><rect x="499.4" y="755.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="502.4" y="766.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.35%)</title><rect x="499.4" y="739.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="502.4" y="750.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.35%)</title><rect x="499.4" y="723.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.4" y="734.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.35%)</title><rect x="499.4" y="707.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="502.4" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.35%)</title><rect x="499.4" y="691.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="502.4" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.35%)</title><rect x="499.4" y="675.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="502.4" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.35%)</title><rect x="499.4" y="659.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.12%)</title><rect x="503.5" y="915.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.12%)</title><rect x="503.5" y="899.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.12%)</title><rect x="503.5" y="883.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.12%)</title><rect x="504.8" y="1011.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.get (1 samples, 0.12%)</title><rect x="504.8" y="995.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (37 samples, 4.26%)</title><rect x="506.2" y="1011.0" width="50.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.2" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (37 samples, 4.26%)</title><rect x="506.2" y="995.0" width="50.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.2" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (37 samples, 4.26%)</title><rect x="506.2" y="979.0" width="50.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.2" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (37 samples, 4.26%)</title><rect x="506.2" y="963.0" width="50.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.2" y="974.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (18 samples, 2.07%)</title><rect x="506.2" y="947.0" width="24.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.2" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 2.07%)</title><rect x="506.2" y="931.0" width="24.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.2" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (18 samples, 2.07%)</title><rect x="506.2" y="915.0" width="24.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.2" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (18 samples, 2.07%)</title><rect x="506.2" y="899.0" width="24.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.2" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 2.07%)</title><rect x="506.2" y="883.0" width="24.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.2" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (15 samples, 1.73%)</title><rect x="507.6" y="867.0" width="20.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 1.73%)</title><rect x="507.6" y="851.0" width="20.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (15 samples, 1.73%)</title><rect x="507.6" y="835.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 1.73%)</title><rect x="507.6" y="819.0" width="20.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (14 samples, 1.61%)</title><rect x="507.6" y="803.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.6" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="507.6" y="787.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="510.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.apply (11 samples, 1.27%)</title><rect x="508.9" y="787.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="511.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (11 samples, 1.27%)</title><rect x="508.9" y="771.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (11 samples, 1.27%)</title><rect x="508.9" y="755.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="511.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (11 samples, 1.27%)</title><rect x="508.9" y="739.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="511.9" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$123/285631240.apply (2 samples, 0.23%)</title><rect x="508.9" y="723.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.9" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.23%)</title><rect x="508.9" y="707.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.9" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.23%)</title><rect x="508.9" y="691.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2 samples, 0.23%)</title><rect x="508.9" y="675.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.12%)</title><rect x="510.3" y="659.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (8 samples, 0.92%)</title><rect x="511.6" y="723.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4 samples, 0.46%)</title><rect x="511.6" y="707.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.6" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.12%)</title><rect x="511.6" y="691.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.6" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.12%)</title><rect x="511.6" y="675.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.12%)</title><rect x="511.6" y="659.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.12%)</title><rect x="511.6" y="643.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.12%)</title><rect x="511.6" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.12%)</title><rect x="511.6" y="611.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.23%)</title><rect x="513.0" y="691.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.0" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.23%)</title><rect x="513.0" y="675.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.12%)</title><rect x="513.0" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.12%)</title><rect x="513.0" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.0" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.12%)</title><rect x="513.0" y="627.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.0" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.12%)</title><rect x="513.0" y="611.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.12%)</title><rect x="513.0" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.0" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.12%)</title><rect x="513.0" y="579.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.12%)</title><rect x="513.0" y="563.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (1 samples, 0.12%)</title><rect x="513.0" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.accept (1 samples, 0.12%)</title><rect x="513.0" y="531.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.12%)</title><rect x="514.4" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.12%)</title><rect x="514.4" y="643.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.12%)</title><rect x="514.4" y="627.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.12%)</title><rect x="514.4" y="611.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.12%)</title><rect x="514.4" y="595.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (1 samples, 0.12%)</title><rect x="514.4" y="579.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="517.4" y="590.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.12%)</title><rect x="514.4" y="563.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.12%)</title><rect x="514.4" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1 samples, 0.12%)</title><rect x="515.7" y="691.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (1 samples, 0.12%)</title><rect x="515.7" y="675.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (1 samples, 0.12%)</title><rect x="515.7" y="659.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.7" y="670.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (1 samples, 0.12%)</title><rect x="515.7" y="643.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.12%)</title><rect x="515.7" y="627.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (1 samples, 0.12%)</title><rect x="515.7" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (1 samples, 0.12%)</title><rect x="517.1" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.35%)</title><rect x="518.4" y="707.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.run (3 samples, 0.35%)</title><rect x="518.4" y="691.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.35%)</title><rect x="518.4" y="675.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1 samples, 0.12%)</title><rect x="518.4" y="659.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.12%)</title><rect x="518.4" y="643.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.4" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (1 samples, 0.12%)</title><rect x="518.4" y="627.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.4" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.12%)</title><rect x="518.4" y="611.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.4" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (1 samples, 0.12%)</title><rect x="518.4" y="595.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.4" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.12%)</title><rect x="518.4" y="579.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="521.4" y="590.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.12%)</title><rect x="518.4" y="563.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="521.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.12%)</title><rect x="519.8" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.12%)</title><rect x="519.8" y="643.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.12%)</title><rect x="519.8" y="627.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1107327737.invoke (1 samples, 0.12%)</title><rect x="519.8" y="611.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1185003301.invoke (1 samples, 0.12%)</title><rect x="519.8" y="595.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="519.8" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.12%)</title><rect x="519.8" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="519.8" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.12%)</title><rect x="519.8" y="531.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.12%)</title><rect x="519.8" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.12%)</title><rect x="521.2" y="659.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.12%)</title><rect x="521.2" y="643.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.12%)</title><rect x="521.2" y="627.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.12%)</title><rect x="521.2" y="611.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.12%)</title><rect x="521.2" y="595.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.12%)</title><rect x="521.2" y="579.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.2" y="590.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.12%)</title><rect x="521.2" y="563.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (1 samples, 0.12%)</title><rect x="522.5" y="723.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.opIsStateful (1 samples, 0.12%)</title><rect x="522.5" y="707.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.apply (2 samples, 0.23%)</title><rect x="523.9" y="787.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.23%)</title><rect x="523.9" y="771.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.23%)</title><rect x="523.9" y="755.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (2 samples, 0.23%)</title><rect x="523.9" y="739.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.23%)</title><rect x="523.9" y="723.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.9" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.23%)</title><rect x="523.9" y="707.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.9" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.12%)</title><rect x="523.9" y="691.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.9" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.12%)</title><rect x="523.9" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.9" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.12%)</title><rect x="525.2" y="691.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.2" y="702.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.12%)</title><rect x="526.6" y="803.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="529.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.23%)</title><rect x="527.9" y="867.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.23%)</title><rect x="527.9" y="851.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.23%)</title><rect x="527.9" y="835.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.23%)</title><rect x="527.9" y="819.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.23%)</title><rect x="527.9" y="803.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.23%)</title><rect x="527.9" y="787.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.23%)</title><rect x="527.9" y="771.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.23%)</title><rect x="527.9" y="755.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.23%)</title><rect x="527.9" y="739.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="530.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.23%)</title><rect x="527.9" y="723.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.9" y="734.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.23%)</title><rect x="527.9" y="707.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="530.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (18 samples, 2.07%)</title><rect x="530.7" y="947.0" width="24.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.7" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.12%)</title><rect x="530.7" y="931.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.7" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="530.7" y="915.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="533.7" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="530.7" y="899.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="533.7" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="530.7" y="883.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="533.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.46%)</title><rect x="532.0" y="931.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (4 samples, 0.46%)</title><rect x="532.0" y="915.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.0" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (4 samples, 0.46%)</title><rect x="532.0" y="899.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="535.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.35%)</title><rect x="533.4" y="883.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (5 samples, 0.58%)</title><rect x="537.5" y="931.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="540.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.58%)</title><rect x="537.5" y="915.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.5" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.58%)</title><rect x="537.5" y="899.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.5" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.12%)</title><rect x="537.5" y="883.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.12%)</title><rect x="537.5" y="867.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.5" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.12%)</title><rect x="537.5" y="851.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="540.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (4 samples, 0.46%)</title><rect x="538.8" y="883.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (4 samples, 0.46%)</title><rect x="538.8" y="867.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.46%)</title><rect x="538.8" y="851.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.12%)</title><rect x="538.8" y="835.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.8" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.12%)</title><rect x="538.8" y="819.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.8" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.12%)</title><rect x="538.8" y="803.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.35%)</title><rect x="540.2" y="835.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.2" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.35%)</title><rect x="540.2" y="819.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.35%)</title><rect x="540.2" y="803.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.35%)</title><rect x="540.2" y="787.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.2" y="798.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.23%)</title><rect x="540.2" y="771.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="543.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1790421142.test (1 samples, 0.12%)</title><rect x="542.9" y="771.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (8 samples, 0.92%)</title><rect x="544.3" y="931.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.23%)</title><rect x="544.3" y="915.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="544.3" y="899.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="544.3" y="883.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.12%)</title><rect x="545.6" y="899.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (6 samples, 0.69%)</title><rect x="547.0" y="915.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.23%)</title><rect x="547.0" y="899.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.23%)</title><rect x="547.0" y="883.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.0" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.23%)</title><rect x="547.0" y="867.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.0" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.12%)</title><rect x="548.3" y="851.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.23%)</title><rect x="549.7" y="899.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.7" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.23%)</title><rect x="549.7" y="883.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="552.4" y="899.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.4" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="552.4" y="883.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.4" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="552.4" y="867.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.4" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="552.4" y="851.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.4" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.12%)</title><rect x="552.4" y="835.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.12%)</title><rect x="553.8" y="899.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.12%)</title><rect x="553.8" y="883.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$170/911355061.accept (1 samples, 0.12%)</title><rect x="555.1" y="947.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.12%)</title><rect x="555.1" y="931.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.12%)</title><rect x="555.1" y="915.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (175 samples, 20.16%)</title><rect x="556.5" y="1059.0" width="237.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.5" y="1070.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (175 samples, 20.16%)</title><rect x="556.5" y="1043.0" width="237.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.5" y="1054.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (175 samples, 20.16%)</title><rect x="556.5" y="1027.0" width="237.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.5" y="1038.0">jdk/internal/net/http/common/Se..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (175 samples, 20.16%)</title><rect x="556.5" y="1011.0" width="237.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.5" y="1022.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (175 samples, 20.16%)</title><rect x="556.5" y="995.0" width="237.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.5" y="1006.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.12%)</title><rect x="557.9" y="979.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.12%)</title><rect x="557.9" y="963.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (173 samples, 19.93%)</title><rect x="559.2" y="979.0" width="235.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.2" y="990.0">jdk/internal/net/http/Http1Asyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (170 samples, 19.59%)</title><rect x="563.3" y="963.0" width="231.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="566.3" y="974.0">jdk/internal/net/http/Http1Resp..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (170 samples, 19.59%)</title><rect x="563.3" y="947.0" width="231.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.3" y="958.0">jdk/internal/net/http/ResponseC..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.run (25 samples, 2.88%)</title><rect x="563.3" y="931.0" width="34.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.3" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (25 samples, 2.88%)</title><rect x="563.3" y="915.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.3" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (25 samples, 2.88%)</title><rect x="563.3" y="899.0" width="34.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.3" y="910.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.12%)</title><rect x="563.3" y="883.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.3" y="894.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.12%)</title><rect x="563.3" y="867.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.12%)</title><rect x="563.3" y="851.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.12%)</title><rect x="563.3" y="835.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.12%)</title><rect x="563.3" y="819.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.12%)</title><rect x="563.3" y="803.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (24 samples, 2.76%)</title><rect x="564.7" y="883.0" width="32.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.7" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (24 samples, 2.76%)</title><rect x="564.7" y="867.0" width="32.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.7" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (10 samples, 1.15%)</title><rect x="564.7" y="851.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.7" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (3 samples, 0.35%)</title><rect x="564.7" y="835.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.7" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (3 samples, 0.35%)</title><rect x="564.7" y="819.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.12%)</title><rect x="567.4" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.4" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (7 samples, 0.81%)</title><rect x="568.7" y="835.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="571.7" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (7 samples, 0.81%)</title><rect x="568.7" y="819.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.7" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (7 samples, 0.81%)</title><rect x="568.7" y="803.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.12%)</title><rect x="578.2" y="851.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="581.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.12%)</title><rect x="578.2" y="835.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.12%)</title><rect x="578.2" y="819.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.12%)</title><rect x="578.2" y="803.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.2" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.12%)</title><rect x="578.2" y="787.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="581.2" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.12%)</title><rect x="578.2" y="771.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="581.2" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="578.2" y="755.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="581.2" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="578.2" y="739.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.2" y="750.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.12%)</title><rect x="578.2" y="723.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="581.2" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.12%)</title><rect x="578.2" y="707.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="581.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (13 samples, 1.50%)</title><rect x="579.6" y="851.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (13 samples, 1.50%)</title><rect x="579.6" y="835.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (13 samples, 1.50%)</title><rect x="579.6" y="819.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (12 samples, 1.38%)</title><rect x="581.0" y="803.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (12 samples, 1.38%)</title><rect x="581.0" y="787.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (12 samples, 1.38%)</title><rect x="581.0" y="771.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (12 samples, 1.38%)</title><rect x="581.0" y="755.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.0" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="581.0" y="739.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="581.0" y="723.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="581.0" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="584.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="581.0" y="691.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 1.27%)</title><rect x="582.3" y="739.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 1.27%)</title><rect x="582.3" y="723.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.3" y="734.0"></text>
</g>
<g>
<title>__write (11 samples, 1.27%)</title><rect x="582.3" y="707.0" width="15.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="585.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.27%)</title><rect x="582.3" y="691.0" width="15.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.27%)</title><rect x="582.3" y="675.0" width="15.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_write (11 samples, 1.27%)</title><rect x="582.3" y="659.0" width="15.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="585.3" y="670.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 1.27%)</title><rect x="582.3" y="643.0" width="15.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.3" y="654.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 1.27%)</title><rect x="582.3" y="627.0" width="15.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="585.3" y="638.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 1.27%)</title><rect x="582.3" y="611.0" width="15.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="585.3" y="622.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 1.27%)</title><rect x="582.3" y="595.0" width="15.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.3" y="606.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 1.27%)</title><rect x="582.3" y="579.0" width="15.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.3" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 1.15%)</title><rect x="582.3" y="563.0" width="13.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="585.3" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 1.15%)</title><rect x="582.3" y="547.0" width="13.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="585.3" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 1.15%)</title><rect x="582.3" y="531.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.3" y="542.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.12%)</title><rect x="595.9" y="563.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1661738971.accept (5 samples, 0.58%)</title><rect x="597.3" y="931.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (5 samples, 0.58%)</title><rect x="597.3" y="915.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (5 samples, 0.58%)</title><rect x="597.3" y="899.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.58%)</title><rect x="597.3" y="883.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.58%)</title><rect x="597.3" y="867.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.58%)</title><rect x="597.3" y="851.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.58%)</title><rect x="597.3" y="835.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.12%)</title><rect x="597.3" y="819.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.12%)</title><rect x="597.3" y="803.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/173548741.accept (1 samples, 0.12%)</title><rect x="597.3" y="787.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/173548741.accept (1 samples, 0.12%)</title><rect x="598.6" y="819.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.12%)</title><rect x="598.6" y="803.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.12%)</title><rect x="598.6" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.12%)</title><rect x="598.6" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.12%)</title><rect x="598.6" y="755.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$217/676087076.accept (3 samples, 0.35%)</title><rect x="600.0" y="819.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (140 samples, 16.13%)</title><rect x="604.1" y="931.0" width="190.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.1" y="942.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (140 samples, 16.13%)</title><rect x="604.1" y="915.0" width="190.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.1" y="926.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (140 samples, 16.13%)</title><rect x="604.1" y="899.0" width="190.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.1" y="910.0">jdk/internal/net/http/Res..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (140 samples, 16.13%)</title><rect x="604.1" y="883.0" width="190.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.1" y="894.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (140 samples, 16.13%)</title><rect x="604.1" y="867.0" width="190.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.1" y="878.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (140 samples, 16.13%)</title><rect x="604.1" y="851.0" width="190.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.1" y="862.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (140 samples, 16.13%)</title><rect x="604.1" y="835.0" width="190.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.1" y="846.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.accept (140 samples, 16.13%)</title><rect x="604.1" y="819.0" width="190.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.1" y="830.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (140 samples, 16.13%)</title><rect x="604.1" y="803.0" width="190.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.1" y="814.0">jdk/internal/net/http/Htt..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (140 samples, 16.13%)</title><rect x="604.1" y="787.0" width="190.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.1" y="798.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (140 samples, 16.13%)</title><rect x="604.1" y="771.0" width="190.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.1" y="782.0">java/util/concurrent/Comp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.12%)</title><rect x="604.1" y="755.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (139 samples, 16.01%)</title><rect x="605.4" y="755.0" width="189.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.4" y="766.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (139 samples, 16.01%)</title><rect x="605.4" y="739.0" width="189.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.4" y="750.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (138 samples, 15.90%)</title><rect x="606.8" y="723.0" width="187.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="609.8" y="734.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (135 samples, 15.55%)</title><rect x="606.8" y="707.0" width="183.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.8" y="718.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (25 samples, 2.88%)</title><rect x="606.8" y="691.0" width="34.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.8" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (25 samples, 2.88%)</title><rect x="606.8" y="675.0" width="34.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.8" y="686.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (25 samples, 2.88%)</title><rect x="606.8" y="659.0" width="34.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.8" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.setPriority (1 samples, 0.12%)</title><rect x="606.8" y="643.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.setPriority0 (1 samples, 0.12%)</title><rect x="606.8" y="627.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.8" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="606.8" y="611.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="609.8" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="606.8" y="595.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.8" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="606.8" y="579.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="609.8" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="606.8" y="563.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="609.8" y="574.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (24 samples, 2.76%)</title><rect x="608.2" y="643.0" width="32.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.2" y="654.0">ja..</text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (24 samples, 2.76%)</title><rect x="608.2" y="627.0" width="32.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.2" y="638.0">ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (3 samples, 0.35%)</title><rect x="608.2" y="611.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="611.2" y="622.0"></text>
</g>
<g>
<title>JVM_GetStackAccessControlContext (19 samples, 2.19%)</title><rect x="612.2" y="611.0" width="25.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="615.2" y="622.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="617.7" y="595.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="620.7" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.12%)</title><rect x="619.0" y="595.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="622.0" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.12%)</title><rect x="619.0" y="579.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="622.0" y="590.0"></text>
</g>
<g>
<title>frame::entry_frame_is_first() const (1 samples, 0.12%)</title><rect x="620.4" y="595.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="623.4" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.23%)</title><rect x="621.8" y="595.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="624.8" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.23%)</title><rect x="621.8" y="579.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="624.8" y="590.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.23%)</title><rect x="621.8" y="563.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="624.8" y="574.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (10 samples, 1.15%)</title><rect x="624.5" y="595.0" width="13.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="627.5" y="606.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.12%)</title><rect x="631.3" y="579.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="634.3" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.46%)</title><rect x="632.6" y="579.0" width="5.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="635.6" y="590.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.12%)</title><rect x="634.0" y="563.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="637.0" y="574.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.23%)</title><rect x="635.3" y="563.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="638.3" y="574.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.23%)</title><rect x="635.3" y="547.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="638.3" y="558.0"></text>
</g>
<g>
<title>JvmtiVMObjectAllocEventCollector::~JvmtiVMObjectAllocEventCollector() (1 samples, 0.12%)</title><rect x="638.1" y="611.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="641.1" y="622.0"></text>
</g>
<g>
<title>vframeStreamCommon::next() (1 samples, 0.12%)</title><rect x="639.4" y="611.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="642.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.start (110 samples, 12.67%)</title><rect x="640.8" y="691.0" width="149.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.8" y="702.0">java/lang/Thread.st..</text>
</g>
<g>
<title>java/lang/Thread.start0 (110 samples, 12.67%)</title><rect x="640.8" y="675.0" width="149.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.8" y="686.0">java/lang/Thread.st..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.81%)</title><rect x="640.8" y="659.0" width="9.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="643.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="648.9" y="643.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="651.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="648.9" y="627.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="648.9" y="611.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="651.9" y="622.0"></text>
</g>
<g>
<title>JVM_StartThread (36 samples, 4.15%)</title><rect x="650.3" y="659.0" width="48.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="653.3" y="670.0">JVM_..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="650.3" y="643.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="653.3" y="654.0"></text>
</g>
<g>
<title>JavaThread::JavaThread(void (*)(JavaThread*, Thread*), unsigned long) (5 samples, 0.58%)</title><rect x="651.7" y="643.0" width="6.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="654.7" y="654.0"></text>
</g>
<g>
<title>Thread::Thread() (5 samples, 0.58%)</title><rect x="651.7" y="627.0" width="6.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="654.7" y="638.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType, unsigned long) (2 samples, 0.23%)</title><rect x="653.0" y="611.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="656.0" y="622.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.23%)</title><rect x="653.0" y="595.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="656.0" y="606.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.12%)</title><rect x="653.0" y="579.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="656.0" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="654.4" y="579.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="657.4" y="590.0"></text>
</g>
<g>
<title>Thread::SpinAcquire(int volatile*, char const*) (2 samples, 0.23%)</title><rect x="655.7" y="611.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="658.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="657.1" y="595.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="660.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="657.1" y="579.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="660.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="657.1" y="563.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="660.1" y="574.0"></text>
</g>
<g>
<title>JavaThread::prepare(_jobject*, ThreadPriority) (19 samples, 2.19%)</title><rect x="658.5" y="643.0" width="25.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="661.5" y="654.0">J..</text>
</g>
<g>
<title>Events::log(Thread*, char const*, ...) (1 samples, 0.12%)</title><rect x="658.5" y="627.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="661.5" y="638.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.12%)</title><rect x="658.5" y="611.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="661.5" y="622.0"></text>
</g>
<g>
<title>G1BarrierSet::on_thread_attach(JavaThread*) (1 samples, 0.12%)</title><rect x="659.8" y="627.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="662.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="659.8" y="611.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="659.8" y="595.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="662.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="659.8" y="579.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="662.8" y="590.0"></text>
</g>
<g>
<title>Threads::add(JavaThread*, bool) (17 samples, 1.96%)</title><rect x="661.2" y="627.0" width="23.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="664.2" y="638.0">T..</text>
</g>
<g>
<title>ThreadsSMRSupport::add_thread(JavaThread*) (17 samples, 1.96%)</title><rect x="661.2" y="611.0" width="23.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="664.2" y="622.0">T..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.12%)</title><rect x="661.2" y="595.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="664.2" y="606.0"></text>
</g>
<g>
<title>ThreadsSMRSupport::free_list(ThreadsList*) (16 samples, 1.84%)</title><rect x="662.5" y="595.0" width="21.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="665.5" y="606.0">T..</text>
</g>
<g>
<title>Threads::non_java_threads_do(ThreadClosure*) (1 samples, 0.12%)</title><rect x="681.6" y="579.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="684.6" y="590.0"></text>
</g>
<g>
<title>ScanHazardPtrGatherThreadsListClosure::do_thread(Thread*) (1 samples, 0.12%)</title><rect x="681.6" y="563.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="684.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="682.9" y="579.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="682.9" y="563.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="685.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="682.9" y="547.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.9" y="558.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.0] (1 samples, 0.12%)</title><rect x="684.3" y="643.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="687.3" y="654.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.12%)</title><rect x="685.6" y="643.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="688.6" y="654.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.12%)</title><rect x="685.6" y="627.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="688.6" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="685.6" y="611.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="688.6" y="622.0"></text>
</g>
<g>
<title>Thread::allocate(unsigned long, bool, MemoryType) (1 samples, 0.12%)</title><rect x="687.0" y="643.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="690.0" y="654.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.12%)</title><rect x="687.0" y="627.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="690.0" y="638.0"></text>
</g>
<g>
<title>os::create_thread(Thread*, os::ThreadType, unsigned long) (6 samples, 0.69%)</title><rect x="688.4" y="643.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="691.4" y="654.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.12%)</title><rect x="688.4" y="627.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="691.4" y="638.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.12%)</title><rect x="688.4" y="611.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="691.4" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.12%)</title><rect x="688.4" y="595.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="691.4" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="688.4" y="579.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="691.4" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="688.4" y="563.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="691.4" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="688.4" y="547.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.4" y="558.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="688.4" y="531.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="691.4" y="542.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.12%)</title><rect x="688.4" y="515.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="691.4" y="526.0"></text>
</g>
<g>
<title>__pthread_create_2_1 (4 samples, 0.46%)</title><rect x="689.7" y="627.0" width="5.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="692.7" y="638.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.12%)</title><rect x="695.2" y="627.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="698.2" y="638.0"></text>
</g>
<g>
<title>os::set_native_priority(Thread*, int) (2 samples, 0.23%)</title><rect x="696.5" y="643.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="699.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 5.99%)</title><rect x="699.2" y="659.0" width="70.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="702.2" y="670.0">[unknown]</text>
</g>
<g>
<title>__clone (32 samples, 3.69%)</title><rect x="699.2" y="643.0" width="43.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="702.2" y="654.0">__cl..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 3.69%)</title><rect x="699.2" y="627.0" width="43.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="702.2" y="638.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (32 samples, 3.69%)</title><rect x="699.2" y="611.0" width="43.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.2" y="622.0">do_s..</text>
</g>
<g>
<title>__x64_sys_clone (32 samples, 3.69%)</title><rect x="699.2" y="595.0" width="43.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.2" y="606.0">__x6..</text>
</g>
<g>
<title>_do_fork (32 samples, 3.69%)</title><rect x="699.2" y="579.0" width="43.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.2" y="590.0">_do_..</text>
</g>
<g>
<title>copy_process (23 samples, 2.65%)</title><rect x="699.2" y="563.0" width="31.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.2" y="574.0">co..</text>
</g>
<g>
<title>__delayacct_tsk_init (1 samples, 0.12%)</title><rect x="703.3" y="547.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.12%)</title><rect x="703.3" y="531.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="706.3" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.12%)</title><rect x="703.3" y="515.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.3" y="526.0"></text>
</g>
<g>
<title>__memcg_kmem_charge (3 samples, 0.35%)</title><rect x="704.7" y="547.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="707.7" y="558.0"></text>
</g>
<g>
<title>__memcg_kmem_charge_memcg (2 samples, 0.23%)</title><rect x="704.7" y="531.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="707.7" y="542.0"></text>
</g>
<g>
<title>page_counter_try_charge (1 samples, 0.12%)</title><rect x="706.0" y="515.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="709.0" y="526.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.12%)</title><rect x="707.4" y="531.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.4" y="542.0"></text>
</g>
<g>
<title>__vmalloc_node_range (3 samples, 0.35%)</title><rect x="708.8" y="547.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.8" y="558.0"></text>
</g>
<g>
<title>__get_vm_area_node (2 samples, 0.23%)</title><rect x="708.8" y="531.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="711.8" y="542.0"></text>
</g>
<g>
<title>alloc_vmap_area (2 samples, 0.23%)</title><rect x="708.8" y="515.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.8" y="526.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.12%)</title><rect x="711.5" y="531.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="714.5" y="542.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.12%)</title><rect x="711.5" y="515.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="714.5" y="526.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.12%)</title><rect x="711.5" y="499.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="714.5" y="510.0"></text>
</g>
<g>
<title>__zone_watermark_ok (1 samples, 0.12%)</title><rect x="711.5" y="483.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="714.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="712.8" y="547.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.8" y="558.0"></text>
</g>
<g>
<title>_warn_unseeded_randomness (1 samples, 0.12%)</title><rect x="714.2" y="547.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="717.2" y="558.0"></text>
</g>
<g>
<title>alloc_pid (3 samples, 0.35%)</title><rect x="715.6" y="547.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.6" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.12%)</title><rect x="718.3" y="531.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.3" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.12%)</title><rect x="718.3" y="515.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="721.3" y="526.0"></text>
</g>
<g>
<title>arch_dup_task_struct (1 samples, 0.12%)</title><rect x="719.6" y="547.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.6" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="719.6" y="531.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="722.6" y="542.0"></text>
</g>
<g>
<title>cgroup_can_fork (1 samples, 0.12%)</title><rect x="721.0" y="547.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="724.0" y="558.0"></text>
</g>
<g>
<title>pids_can_fork (1 samples, 0.12%)</title><rect x="721.0" y="531.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="724.0" y="542.0"></text>
</g>
<g>
<title>cgroup_post_fork (1 samples, 0.12%)</title><rect x="722.4" y="547.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="725.4" y="558.0"></text>
</g>
<g>
<title>cpu_cgroup_fork (1 samples, 0.12%)</title><rect x="722.4" y="531.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.4" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="722.4" y="515.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="725.4" y="526.0"></text>
</g>
<g>
<title>find_first_bit (1 samples, 0.12%)</title><rect x="723.7" y="547.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="726.7" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="725.1" y="547.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="728.1" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.12%)</title><rect x="725.1" y="531.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="728.1" y="542.0"></text>
</g>
<g>
<title>mod_zone_page_state (1 samples, 0.12%)</title><rect x="726.4" y="547.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="729.4" y="558.0"></text>
</g>
<g>
<title>sched_fork (2 samples, 0.23%)</title><rect x="727.8" y="547.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.8" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="727.8" y="531.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.8" y="542.0"></text>
</g>
<g>
<title>__sched_fork (1 samples, 0.12%)</title><rect x="729.1" y="531.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.1" y="542.0"></text>
</g>
<g>
<title>init_dl_task_timer (1 samples, 0.12%)</title><rect x="729.1" y="515.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="732.1" y="526.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.12%)</title><rect x="729.1" y="499.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="732.1" y="510.0"></text>
</g>
<g>
<title>copy_semundo (1 samples, 0.12%)</title><rect x="730.5" y="563.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="733.5" y="574.0"></text>
</g>
<g>
<title>wake_up_new_task (8 samples, 0.92%)</title><rect x="731.9" y="563.0" width="10.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="734.9" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.92%)</title><rect x="731.9" y="547.0" width="10.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="734.9" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 2.30%)</title><rect x="742.7" y="643.0" width="27.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="745.7" y="654.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 2.07%)</title><rect x="744.1" y="627.0" width="24.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="747.1" y="638.0">e..</text>
</g>
<g>
<title>do_syscall_64 (18 samples, 2.07%)</title><rect x="744.1" y="611.0" width="24.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.1" y="622.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 2.07%)</title><rect x="744.1" y="595.0" width="24.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="747.1" y="606.0">_..</text>
</g>
<g>
<title>do_futex (18 samples, 2.07%)</title><rect x="744.1" y="579.0" width="24.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="747.1" y="590.0">d..</text>
</g>
<g>
<title>futex_wait (18 samples, 2.07%)</title><rect x="744.1" y="563.0" width="24.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="747.1" y="574.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 1.96%)</title><rect x="744.1" y="547.0" width="23.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.1" y="558.0">f..</text>
</g>
<g>
<title>schedule (17 samples, 1.96%)</title><rect x="744.1" y="531.0" width="23.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="747.1" y="542.0">s..</text>
</g>
<g>
<title>__sched_text_start (17 samples, 1.96%)</title><rect x="744.1" y="515.0" width="23.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="747.1" y="526.0">_..</text>
</g>
<g>
<title>finish_task_switch (17 samples, 1.96%)</title><rect x="744.1" y="499.0" width="23.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="747.1" y="510.0">f..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.12%)</title><rect x="767.2" y="547.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="770.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="768.6" y="627.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.6" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="768.6" y="611.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="768.6" y="595.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.6" y="606.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.23%)</title><rect x="769.9" y="659.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="772.9" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 1.27%)</title><rect x="772.6" y="659.0" width="15.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="775.6" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.27%)</title><rect x="772.6" y="643.0" width="15.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="775.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.27%)</title><rect x="772.6" y="627.0" width="15.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="775.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 1.27%)</title><rect x="772.6" y="611.0" width="15.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="775.6" y="622.0"></text>
</g>
<g>
<title>do_futex (11 samples, 1.27%)</title><rect x="772.6" y="595.0" width="15.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="775.6" y="606.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 1.27%)</title><rect x="772.6" y="579.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="775.6" y="590.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 1.15%)</title><rect x="774.0" y="563.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="777.0" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 1.15%)</title><rect x="774.0" y="547.0" width="13.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="777.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 1.15%)</title><rect x="774.0" y="531.0" width="13.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="777.0" y="542.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="787.6" y="659.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="790.6" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.12%)</title><rect x="789.0" y="659.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="792.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.35%)</title><rect x="790.3" y="707.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.3" y="718.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.23%)</title><rect x="790.3" y="691.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="793.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (1 samples, 0.12%)</title><rect x="793.0" y="691.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (91 samples, 10.48%)</title><rect x="794.4" y="1139.0" width="123.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.4" y="1150.0">jdk/internal/ne..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.12%)</title><rect x="795.8" y="1123.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="798.8" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.12%)</title><rect x="795.8" y="1107.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="798.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.12%)</title><rect x="795.8" y="1091.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="798.8" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="795.8" y="1075.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="798.8" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="795.8" y="1059.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="798.8" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="795.8" y="1043.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="798.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.23%)</title><rect x="797.1" y="1123.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.1" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.23%)</title><rect x="797.1" y="1107.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.1" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="798.5" y="1091.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.5" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="798.5" y="1075.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.5" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.12%)</title><rect x="799.8" y="1123.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.8" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (25 samples, 2.88%)</title><rect x="801.2" y="1123.0" width="34.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="1134.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2104524528.accept (25 samples, 2.88%)</title><rect x="801.2" y="1107.0" width="34.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (25 samples, 2.88%)</title><rect x="801.2" y="1091.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.2" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (25 samples, 2.88%)</title><rect x="801.2" y="1075.0" width="34.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.2" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (25 samples, 2.88%)</title><rect x="801.2" y="1059.0" width="34.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (24 samples, 2.76%)</title><rect x="802.6" y="1043.0" width="32.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.6" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (24 samples, 2.76%)</title><rect x="802.6" y="1027.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.6" y="1038.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 2.76%)</title><rect x="802.6" y="1011.0" width="32.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.6" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 2.76%)</title><rect x="802.6" y="995.0" width="32.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.6" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (24 samples, 2.76%)</title><rect x="802.6" y="979.0" width="32.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.6" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (24 samples, 2.76%)</title><rect x="802.6" y="963.0" width="32.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.6" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (24 samples, 2.76%)</title><rect x="802.6" y="947.0" width="32.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.6" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (24 samples, 2.76%)</title><rect x="802.6" y="931.0" width="32.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.6" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 1.38%)</title><rect x="802.6" y="915.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 1.38%)</title><rect x="802.6" y="899.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (12 samples, 1.38%)</title><rect x="802.6" y="883.0" width="16.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 1.38%)</title><rect x="802.6" y="867.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 1.38%)</title><rect x="802.6" y="851.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 1.38%)</title><rect x="802.6" y="835.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 1.38%)</title><rect x="802.6" y="819.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 1.38%)</title><rect x="802.6" y="803.0" width="16.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 1.38%)</title><rect x="802.6" y="787.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 1.38%)</title><rect x="802.6" y="771.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 1.38%)</title><rect x="802.6" y="755.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 1.38%)</title><rect x="802.6" y="739.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 1.38%)</title><rect x="802.6" y="723.0" width="16.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 1.38%)</title><rect x="802.6" y="707.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.6" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.23%)</title><rect x="802.6" y="691.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="805.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 1.15%)</title><rect x="805.3" y="691.0" width="13.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="808.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 1.15%)</title><rect x="805.3" y="675.0" width="13.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 1.15%)</title><rect x="805.3" y="659.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="808.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 1.15%)</title><rect x="805.3" y="643.0" width="13.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="808.3" y="654.0"></text>
</g>
<g>
<title>do_futex (10 samples, 1.15%)</title><rect x="805.3" y="627.0" width="13.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="808.3" y="638.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 1.15%)</title><rect x="805.3" y="611.0" width="13.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="808.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 1.15%)</title><rect x="805.3" y="595.0" width="13.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="808.3" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 1.15%)</title><rect x="805.3" y="579.0" width="13.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="808.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 1.15%)</title><rect x="805.3" y="563.0" width="13.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="808.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (12 samples, 1.38%)</title><rect x="818.9" y="915.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (12 samples, 1.38%)</title><rect x="818.9" y="899.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 1.38%)</title><rect x="818.9" y="883.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (12 samples, 1.38%)</title><rect x="818.9" y="867.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 1.38%)</title><rect x="818.9" y="851.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (12 samples, 1.38%)</title><rect x="818.9" y="835.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (12 samples, 1.38%)</title><rect x="818.9" y="819.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.9" y="830.0"></text>
</g>
<g>
<title>read (12 samples, 1.38%)</title><rect x="818.9" y="803.0" width="16.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="821.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 1.38%)</title><rect x="818.9" y="787.0" width="16.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="821.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 1.38%)</title><rect x="818.9" y="771.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="821.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_read (12 samples, 1.38%)</title><rect x="818.9" y="755.0" width="16.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="821.9" y="766.0"></text>
</g>
<g>
<title>ksys_read (12 samples, 1.38%)</title><rect x="818.9" y="739.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="821.9" y="750.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 1.38%)</title><rect x="818.9" y="723.0" width="16.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="821.9" y="734.0"></text>
</g>
<g>
<title>__vfs_read (10 samples, 1.15%)</title><rect x="818.9" y="707.0" width="13.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="821.9" y="718.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 1.15%)</title><rect x="818.9" y="691.0" width="13.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="821.9" y="702.0"></text>
</g>
<g>
<title>sock_read_iter (10 samples, 1.15%)</title><rect x="818.9" y="675.0" width="13.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.9" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 1.15%)</title><rect x="818.9" y="659.0" width="13.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="821.9" y="670.0"></text>
</g>
<g>
<title>inet6_recvmsg (10 samples, 1.15%)</title><rect x="818.9" y="643.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="821.9" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 1.15%)</title><rect x="818.9" y="627.0" width="13.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="821.9" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.12%)</title><rect x="820.2" y="611.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="823.2" y="622.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="820.2" y="595.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="823.2" y="606.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.12%)</title><rect x="820.2" y="579.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="823.2" y="590.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.12%)</title><rect x="820.2" y="563.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="823.2" y="574.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.12%)</title><rect x="820.2" y="547.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="823.2" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.81%)</title><rect x="821.6" y="611.0" width="9.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.6" y="622.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 0.81%)</title><rect x="821.6" y="595.0" width="9.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.6" y="606.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (7 samples, 0.81%)</title><rect x="821.6" y="579.0" width="9.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.6" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.12%)</title><rect x="821.6" y="563.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="824.6" y="574.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.12%)</title><rect x="821.6" y="547.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="824.6" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.12%)</title><rect x="821.6" y="531.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="824.6" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 0.69%)</title><rect x="822.9" y="563.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="825.9" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.58%)</title><rect x="824.3" y="547.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="827.3" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.58%)</title><rect x="824.3" y="531.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="827.3" y="542.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.58%)</title><rect x="824.3" y="515.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="827.3" y="526.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.12%)</title><rect x="824.3" y="499.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="827.3" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="824.3" y="483.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="827.3" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.12%)</title><rect x="824.3" y="467.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="827.3" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.12%)</title><rect x="824.3" y="451.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="827.3" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.12%)</title><rect x="824.3" y="435.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.3" y="446.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.46%)</title><rect x="825.7" y="499.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="828.7" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.35%)</title><rect x="825.7" y="483.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="828.7" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.35%)</title><rect x="825.7" y="467.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="828.7" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.35%)</title><rect x="825.7" y="451.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="828.7" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.35%)</title><rect x="825.7" y="435.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.7" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.35%)</title><rect x="825.7" y="419.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.7" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.35%)</title><rect x="825.7" y="403.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="828.7" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.35%)</title><rect x="825.7" y="387.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.7" y="398.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.35%)</title><rect x="825.7" y="371.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="828.7" y="382.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.35%)</title><rect x="825.7" y="355.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="828.7" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.35%)</title><rect x="825.7" y="339.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="828.7" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.35%)</title><rect x="825.7" y="323.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.35%)</title><rect x="825.7" y="307.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.7" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.35%)</title><rect x="825.7" y="291.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="828.7" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.35%)</title><rect x="825.7" y="275.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="828.7" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.35%)</title><rect x="825.7" y="259.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.7" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.35%)</title><rect x="825.7" y="243.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="828.7" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.35%)</title><rect x="825.7" y="227.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.7" y="238.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.12%)</title><rect x="827.0" y="211.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="830.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.12%)</title><rect x="828.4" y="211.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="831.4" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="829.7" y="483.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.7" y="494.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.12%)</title><rect x="829.7" y="467.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="832.7" y="478.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.12%)</title><rect x="829.7" y="451.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="832.7" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.12%)</title><rect x="829.7" y="435.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.7" y="446.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.12%)</title><rect x="831.1" y="611.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="834.1" y="622.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.12%)</title><rect x="832.5" y="707.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.5" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.12%)</title><rect x="833.8" y="707.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.8" y="718.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.12%)</title><rect x="833.8" y="691.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="836.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (1 samples, 0.12%)</title><rect x="835.2" y="1123.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.12%)</title><rect x="835.2" y="1107.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.2" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.12%)</title><rect x="835.2" y="1091.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.12%)</title><rect x="835.2" y="1075.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.12%)</title><rect x="835.2" y="1059.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.12%)</title><rect x="835.2" y="1043.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.2" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.12%)</title><rect x="835.2" y="1027.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.12%)</title><rect x="835.2" y="1011.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.12%)</title><rect x="835.2" y="995.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="838.2" y="1006.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.12%)</title><rect x="835.2" y="979.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="838.2" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="835.2" y="963.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.2" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="835.2" y="947.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="838.2" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="835.2" y="931.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="838.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (10 samples, 1.15%)</title><rect x="836.5" y="1123.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1024844896.run (10 samples, 1.15%)</title><rect x="836.5" y="1107.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (10 samples, 1.15%)</title><rect x="836.5" y="1091.0" width="13.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 1.15%)</title><rect x="836.5" y="1075.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 1.15%)</title><rect x="836.5" y="1059.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.12%)</title><rect x="836.5" y="1043.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.12%)</title><rect x="836.5" y="1027.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.12%)</title><rect x="836.5" y="1011.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.12%)</title><rect x="836.5" y="995.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.12%)</title><rect x="836.5" y="979.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.12%)</title><rect x="836.5" y="963.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="839.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.12%)</title><rect x="836.5" y="947.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.12%)</title><rect x="836.5" y="931.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.12%)</title><rect x="836.5" y="915.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 1.04%)</title><rect x="837.9" y="1043.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="840.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (9 samples, 1.04%)</title><rect x="837.9" y="1027.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (9 samples, 1.04%)</title><rect x="837.9" y="1011.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (9 samples, 1.04%)</title><rect x="837.9" y="995.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (9 samples, 1.04%)</title><rect x="837.9" y="979.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="840.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (9 samples, 1.04%)</title><rect x="837.9" y="963.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (8 samples, 0.92%)</title><rect x="839.3" y="947.0" width="10.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.92%)</title><rect x="839.3" y="931.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.92%)</title><rect x="839.3" y="915.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.92%)</title><rect x="839.3" y="899.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.92%)</title><rect x="839.3" y="883.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.92%)</title><rect x="839.3" y="867.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.92%)</title><rect x="839.3" y="851.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.92%)</title><rect x="839.3" y="835.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.92%)</title><rect x="839.3" y="819.0" width="10.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.92%)</title><rect x="839.3" y="803.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.92%)</title><rect x="839.3" y="787.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.92%)</title><rect x="839.3" y="771.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.92%)</title><rect x="839.3" y="755.0" width="10.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="842.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.92%)</title><rect x="839.3" y="739.0" width="10.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="842.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.92%)</title><rect x="839.3" y="723.0" width="10.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.92%)</title><rect x="839.3" y="707.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.3" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.81%)</title><rect x="839.3" y="691.0" width="9.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.3" y="702.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.81%)</title><rect x="839.3" y="675.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="842.3" y="686.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.69%)</title><rect x="840.6" y="659.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="843.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.69%)</title><rect x="840.6" y="643.0" width="8.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="843.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.69%)</title><rect x="840.6" y="627.0" width="8.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="843.6" y="638.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="848.8" y="691.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="851.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.12%)</title><rect x="850.1" y="1123.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.12%)</title><rect x="850.1" y="1107.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.1" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.12%)</title><rect x="850.1" y="1091.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="853.1" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.12%)</title><rect x="850.1" y="1075.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="853.1" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.12%)</title><rect x="850.1" y="1059.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="853.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (1 samples, 0.12%)</title><rect x="851.5" y="1123.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.12%)</title><rect x="851.5" y="1107.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (2 samples, 0.23%)</title><rect x="852.9" y="1123.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.9" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.12%)</title><rect x="854.2" y="1107.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.2" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.12%)</title><rect x="854.2" y="1091.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.12%)</title><rect x="854.2" y="1075.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.2" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.12%)</title><rect x="854.2" y="1059.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="857.2" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="854.2" y="1043.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="857.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (44 samples, 5.07%)</title><rect x="855.6" y="1123.0" width="59.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.6" y="1134.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (44 samples, 5.07%)</title><rect x="855.6" y="1107.0" width="59.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.6" y="1118.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (44 samples, 5.07%)</title><rect x="855.6" y="1091.0" width="59.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.6" y="1102.0">sun/ni..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="855.6" y="1075.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="858.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (32 samples, 3.69%)</title><rect x="856.9" y="1075.0" width="43.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.9" y="1086.0">sun/..</text>
</g>
<g>
<title>epoll_wait (32 samples, 3.69%)</title><rect x="856.9" y="1059.0" width="43.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="859.9" y="1070.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 3.57%)</title><rect x="856.9" y="1043.0" width="42.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="859.9" y="1054.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 3.57%)</title><rect x="856.9" y="1027.0" width="42.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.9" y="1038.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (29 samples, 3.34%)</title><rect x="859.7" y="1011.0" width="39.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.7" y="1022.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (29 samples, 3.34%)</title><rect x="859.7" y="995.0" width="39.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="862.7" y="1006.0">do_..</text>
</g>
<g>
<title>ep_poll (29 samples, 3.34%)</title><rect x="859.7" y="979.0" width="39.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.7" y="990.0">ep_..</text>
</g>
<g>
<title>schedule_hrtimeout_range (27 samples, 3.11%)</title><rect x="859.7" y="963.0" width="36.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="862.7" y="974.0">sch..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 3.11%)</title><rect x="859.7" y="947.0" width="36.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.7" y="958.0">sch..</text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.23%)</title><rect x="859.7" y="931.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.7" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.23%)</title><rect x="859.7" y="915.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.7" y="926.0"></text>
</g>
<g>
<title>schedule (25 samples, 2.88%)</title><rect x="862.4" y="931.0" width="34.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.4" y="942.0">sc..</text>
</g>
<g>
<title>__sched_text_start (25 samples, 2.88%)</title><rect x="862.4" y="915.0" width="34.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.4" y="926.0">__..</text>
</g>
<g>
<title>finish_task_switch (25 samples, 2.88%)</title><rect x="862.4" y="899.0" width="34.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.4" y="910.0">fi..</text>
</g>
<g>
<title>select_estimate_accuracy (2 samples, 0.23%)</title><rect x="896.4" y="963.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.4" y="974.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.12%)</title><rect x="897.7" y="947.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="900.7" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="899.1" y="1043.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="902.1" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="899.1" y="1027.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="902.1" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="899.1" y="1011.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="902.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (8 samples, 0.92%)</title><rect x="900.4" y="1075.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (6 samples, 0.69%)</title><rect x="901.8" y="1059.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (6 samples, 0.69%)</title><rect x="901.8" y="1043.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.8" y="1054.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (2 samples, 0.23%)</title><rect x="901.8" y="1027.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="904.8" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="903.2" y="1011.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="906.2" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="903.2" y="995.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="906.2" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="903.2" y="979.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="906.2" y="990.0"></text>
</g>
<g>
<title>read (4 samples, 0.46%)</title><rect x="904.5" y="1027.0" width="5.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="907.5" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.46%)</title><rect x="904.5" y="1011.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="907.5" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.12%)</title><rect x="904.5" y="995.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="907.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.35%)</title><rect x="905.9" y="995.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="908.9" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (3 samples, 0.35%)</title><rect x="905.9" y="979.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="908.9" y="990.0"></text>
</g>
<g>
<title>ksys_read (3 samples, 0.35%)</title><rect x="905.9" y="963.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="908.9" y="974.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.35%)</title><rect x="905.9" y="947.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="908.9" y="958.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.23%)</title><rect x="905.9" y="931.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="908.9" y="942.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.23%)</title><rect x="905.9" y="915.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="908.9" y="926.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (1 samples, 0.12%)</title><rect x="905.9" y="899.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="908.9" y="910.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.12%)</title><rect x="907.2" y="899.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.2" y="910.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.12%)</title><rect x="907.2" y="883.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="910.2" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.12%)</title><rect x="908.6" y="931.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="911.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.12%)</title><rect x="910.0" y="1059.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.12%)</title><rect x="910.0" y="1043.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.12%)</title><rect x="910.0" y="1027.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.12%)</title><rect x="910.0" y="1011.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.12%)</title><rect x="910.0" y="995.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$Node.&lt;init&gt; (1 samples, 0.12%)</title><rect x="910.0" y="979.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.35%)</title><rect x="911.3" y="1075.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.3" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="914.0" y="1059.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="917.0" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="914.0" y="1043.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="917.0" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="914.0" y="1027.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="917.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.12%)</title><rect x="915.4" y="1123.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.4" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.12%)</title><rect x="915.4" y="1107.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.4" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="916.8" y="1123.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.8" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="916.8" y="1107.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.8" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="916.8" y="1091.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (121 samples, 13.94%)</title><rect x="918.1" y="1139.0" width="164.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.1" y="1150.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.12%)</title><rect x="920.8" y="1123.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.23%)</title><rect x="922.2" y="1123.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (26 samples, 3.00%)</title><rect x="924.9" y="1123.0" width="35.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.9" y="1134.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (25 samples, 2.88%)</title><rect x="926.3" y="1107.0" width="34.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.3" y="1118.0">on..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="929.0" y="1091.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="932.0" y="1102.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.12%)</title><rect x="930.3" y="1091.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="933.3" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (21 samples, 2.42%)</title><rect x="931.7" y="1091.0" width="28.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="934.7" y="1102.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 2.30%)</title><rect x="933.1" y="1075.0" width="27.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="936.1" y="1086.0">e..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 2.30%)</title><rect x="933.1" y="1059.0" width="27.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.1" y="1070.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (20 samples, 2.30%)</title><rect x="933.1" y="1043.0" width="27.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.1" y="1054.0">_..</text>
</g>
<g>
<title>do_epoll_wait (20 samples, 2.30%)</title><rect x="933.1" y="1027.0" width="27.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.1" y="1038.0">d..</text>
</g>
<g>
<title>ep_poll (20 samples, 2.30%)</title><rect x="933.1" y="1011.0" width="27.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="936.1" y="1022.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.46%)</title><rect x="933.1" y="995.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.1" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.46%)</title><rect x="933.1" y="979.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="936.1" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.46%)</title><rect x="933.1" y="963.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="936.1" y="974.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.46%)</title><rect x="933.1" y="947.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.1" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (16 samples, 1.84%)</title><rect x="938.5" y="995.0" width="21.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.5" y="1006.0">s..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 1.84%)</title><rect x="938.5" y="979.0" width="21.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.5" y="990.0">s..</text>
</g>
<g>
<title>schedule (16 samples, 1.84%)</title><rect x="938.5" y="963.0" width="21.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="941.5" y="974.0">s..</text>
</g>
<g>
<title>__sched_text_start (16 samples, 1.84%)</title><rect x="938.5" y="947.0" width="21.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="941.5" y="958.0">_..</text>
</g>
<g>
<title>finish_task_switch (15 samples, 1.73%)</title><rect x="939.9" y="931.0" width="20.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="942.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (90 samples, 10.37%)</title><rect x="960.3" y="1123.0" width="122.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.3" y="1134.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (89 samples, 10.25%)</title><rect x="960.3" y="1107.0" width="120.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.3" y="1118.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (63 samples, 7.26%)</title><rect x="960.3" y="1091.0" width="85.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.3" y="1102.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57 samples, 6.57%)</title><rect x="961.6" y="1075.0" width="77.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.6" y="1086.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57 samples, 6.57%)</title><rect x="961.6" y="1059.0" width="77.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="964.6" y="1070.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (57 samples, 6.57%)</title><rect x="961.6" y="1043.0" width="77.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.6" y="1054.0">RequestHa..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (56 samples, 6.45%)</title><rect x="961.6" y="1027.0" width="76.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.6" y="1038.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="961.6" y="1011.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="961.6" y="995.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="961.6" y="979.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.12%)</title><rect x="961.6" y="963.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.6" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.12%)</title><rect x="961.6" y="947.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.6" y="958.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.12%)</title><rect x="961.6" y="931.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (15 samples, 1.73%)</title><rect x="963.0" y="1011.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (15 samples, 1.73%)</title><rect x="963.0" y="995.0" width="20.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (15 samples, 1.73%)</title><rect x="963.0" y="979.0" width="20.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (15 samples, 1.73%)</title><rect x="963.0" y="963.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 1.73%)</title><rect x="963.0" y="947.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 1.73%)</title><rect x="963.0" y="931.0" width="20.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.12%)</title><rect x="963.0" y="915.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.12%)</title><rect x="963.0" y="899.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="966.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.isHeldExclusively (1 samples, 0.12%)</title><rect x="963.0" y="883.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="966.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 1.61%)</title><rect x="964.3" y="915.0" width="19.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 1.61%)</title><rect x="964.3" y="899.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 1.61%)</title><rect x="964.3" y="883.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 1.61%)</title><rect x="964.3" y="867.0" width="19.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 1.61%)</title><rect x="964.3" y="851.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.3" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.12%)</title><rect x="964.3" y="835.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="967.3" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.12%)</title><rect x="964.3" y="819.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="967.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 1.50%)</title><rect x="965.7" y="835.0" width="17.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="968.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.50%)</title><rect x="965.7" y="819.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="968.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="965.7" y="803.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="968.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 1.38%)</title><rect x="967.1" y="803.0" width="16.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 1.27%)</title><rect x="968.4" y="787.0" width="15.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="971.4" y="798.0"></text>
</g>
<g>
<title>do_futex (11 samples, 1.27%)</title><rect x="968.4" y="771.0" width="15.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="971.4" y="782.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 1.27%)</title><rect x="968.4" y="755.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="971.4" y="766.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 1.27%)</title><rect x="968.4" y="739.0" width="15.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="971.4" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 1.27%)</title><rect x="968.4" y="723.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="971.4" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 1.27%)</title><rect x="968.4" y="707.0" width="15.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="971.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (40 samples, 4.61%)</title><rect x="983.4" y="1011.0" width="54.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="986.4" y="1022.0">ru/ma..</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.12%)</title><rect x="986.1" y="995.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.12%)</title><rect x="986.1" y="979.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.12%)</title><rect x="987.4" y="995.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.4" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="988.8" y="995.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="991.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1 samples, 0.12%)</title><rect x="990.2" y="995.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="993.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (3 samples, 0.35%)</title><rect x="991.5" y="995.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="994.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (3 samples, 0.35%)</title><rect x="991.5" y="979.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (3 samples, 0.35%)</title><rect x="991.5" y="963.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (3 samples, 0.35%)</title><rect x="991.5" y="947.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.35%)</title><rect x="991.5" y="931.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.35%)</title><rect x="991.5" y="915.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.35%)</title><rect x="991.5" y="899.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.35%)</title><rect x="991.5" y="883.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.35%)</title><rect x="991.5" y="867.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.35%)</title><rect x="991.5" y="851.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.35%)</title><rect x="991.5" y="835.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.5" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.35%)</title><rect x="991.5" y="819.0" width="4.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="994.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.35%)</title><rect x="991.5" y="803.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.35%)</title><rect x="991.5" y="787.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.35%)</title><rect x="991.5" y="771.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.5" y="782.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.35%)</title><rect x="991.5" y="755.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.5" y="766.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.35%)</title><rect x="991.5" y="739.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="994.5" y="750.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.23%)</title><rect x="992.9" y="723.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="995.9" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.23%)</title><rect x="992.9" y="707.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="995.9" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.23%)</title><rect x="992.9" y="691.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.forwardRequest (29 samples, 3.34%)</title><rect x="995.6" y="995.0" width="39.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.6" y="1006.0">ru/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (23 samples, 2.65%)</title><rect x="995.6" y="979.0" width="31.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.6" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (23 samples, 2.65%)</title><rect x="995.6" y="963.0" width="31.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.6" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (23 samples, 2.65%)</title><rect x="995.6" y="947.0" width="31.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.6" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (23 samples, 2.65%)</title><rect x="995.6" y="931.0" width="31.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.6" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (16 samples, 1.84%)</title><rect x="995.6" y="915.0" width="21.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.6" y="926.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.12%)</title><rect x="1001.0" y="899.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.12%)</title><rect x="1001.0" y="883.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.12%)</title><rect x="1001.0" y="867.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.12%)</title><rect x="1001.0" y="851.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.12%)</title><rect x="1001.0" y="835.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.12%)</title><rect x="1001.0" y="819.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.0" y="830.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.12%)</title><rect x="1001.0" y="803.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.0" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.46%)</title><rect x="1002.4" y="899.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.46%)</title><rect x="1002.4" y="883.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.4" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (4 samples, 0.46%)</title><rect x="1002.4" y="867.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.4" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.46%)</title><rect x="1002.4" y="851.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.4" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (4 samples, 0.46%)</title><rect x="1002.4" y="835.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.46%)</title><rect x="1002.4" y="819.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.35%)</title><rect x="1002.4" y="803.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.4" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (3 samples, 0.35%)</title><rect x="1002.4" y="787.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.4" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.23%)</title><rect x="1003.8" y="771.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/1172131546.test (2 samples, 0.23%)</title><rect x="1003.8" y="755.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.12%)</title><rect x="1005.1" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/846947180.test (1 samples, 0.12%)</title><rect x="1005.1" y="723.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.12%)</title><rect x="1005.1" y="707.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.1" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.12%)</title><rect x="1005.1" y="691.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.12%)</title><rect x="1005.1" y="675.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1008.1" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.12%)</title><rect x="1005.1" y="659.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1008.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.12%)</title><rect x="1005.1" y="643.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.12%)</title><rect x="1005.1" y="627.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.12%)</title><rect x="1005.1" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.12%)</title><rect x="1005.1" y="595.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.12%)</title><rect x="1005.1" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.12%)</title><rect x="1006.5" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1009.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="1006.5" y="787.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1009.5" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (1 samples, 0.12%)</title><rect x="1006.5" y="771.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.5" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1006.5" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.5" y="766.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="1006.5" y="739.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1009.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (6 samples, 0.69%)</title><rect x="1007.8" y="899.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.8" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (6 samples, 0.69%)</title><rect x="1007.8" y="883.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.8" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.69%)</title><rect x="1007.8" y="867.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.8" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.35%)</title><rect x="1007.8" y="851.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1010.8" y="862.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.12%)</title><rect x="1007.8" y="835.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1010.8" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.12%)</title><rect x="1007.8" y="819.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.8" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.12%)</title><rect x="1007.8" y="803.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.8" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.23%)</title><rect x="1009.2" y="835.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.2" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.12%)</title><rect x="1010.6" y="819.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1013.6" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.12%)</title><rect x="1010.6" y="803.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1013.6" y="814.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.12%)</title><rect x="1010.6" y="787.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1013.6" y="798.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.12%)</title><rect x="1011.9" y="851.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1014.9" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.23%)</title><rect x="1013.3" y="851.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.3" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.23%)</title><rect x="1013.3" y="835.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.3" y="846.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (1 samples, 0.12%)</title><rect x="1014.6" y="819.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.6" y="830.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.12%)</title><rect x="1014.6" y="803.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.12%)</title><rect x="1014.6" y="787.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.12%)</title><rect x="1014.6" y="771.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.12%)</title><rect x="1014.6" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.12%)</title><rect x="1016.0" y="899.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2 samples, 0.23%)</title><rect x="1017.4" y="915.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1020.4" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.12%)</title><rect x="1017.4" y="899.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1018.7" y="899.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.12%)</title><rect x="1018.7" y="883.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="1018.7" y="867.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$127/1743416307.get$Lambda (1 samples, 0.12%)</title><rect x="1018.7" y="851.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1021.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5 samples, 0.58%)</title><rect x="1020.1" y="915.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.58%)</title><rect x="1020.1" y="899.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1023.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (2 samples, 0.23%)</title><rect x="1020.1" y="883.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.35%)</title><rect x="1022.8" y="883.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.35%)</title><rect x="1022.8" y="867.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1025.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1022.8" y="851.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1025.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.23%)</title><rect x="1024.1" y="851.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1027.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.23%)</title><rect x="1024.1" y="835.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.23%)</title><rect x="1024.1" y="819.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.23%)</title><rect x="1024.1" y="803.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1027.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.23%)</title><rect x="1024.1" y="787.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.23%)</title><rect x="1024.1" y="771.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.1" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.23%)</title><rect x="1024.1" y="755.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1027.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.23%)</title><rect x="1024.1" y="739.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1027.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.23%)</title><rect x="1024.1" y="723.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1027.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.23%)</title><rect x="1024.1" y="707.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1027.1" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.23%)</title><rect x="1024.1" y="691.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1027.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.23%)</title><rect x="1024.1" y="675.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1027.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.23%)</title><rect x="1024.1" y="659.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.1" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.23%)</title><rect x="1024.1" y="643.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.1" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.23%)</title><rect x="1024.1" y="627.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.formHttpRequest (6 samples, 0.69%)</title><rect x="1026.9" y="979.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1029.9" y="990.0"></text>
</g>
<g>
<title>java/net/URI.create (4 samples, 0.46%)</title><rect x="1026.9" y="963.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1029.9" y="974.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (4 samples, 0.46%)</title><rect x="1026.9" y="947.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.9" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (4 samples, 0.46%)</title><rect x="1026.9" y="931.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.9" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (4 samples, 0.46%)</title><rect x="1026.9" y="915.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="1026.9" y="899.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="1026.9" y="883.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.9" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.12%)</title><rect x="1026.9" y="867.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.9" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3 samples, 0.35%)</title><rect x="1028.2" y="899.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.2" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.12%)</title><rect x="1028.2" y="883.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.2" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.12%)</title><rect x="1028.2" y="867.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.2" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.12%)</title><rect x="1028.2" y="851.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="1028.2" y="835.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.2" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.23%)</title><rect x="1029.6" y="883.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="1029.6" y="867.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.6" y="878.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.12%)</title><rect x="1030.9" y="867.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.23%)</title><rect x="1032.3" y="963.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1035.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.23%)</title><rect x="1032.3" y="947.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (2 samples, 0.23%)</title><rect x="1032.3" y="931.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/846947180.test (2 samples, 0.23%)</title><rect x="1032.3" y="915.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.23%)</title><rect x="1032.3" y="899.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.3" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.23%)</title><rect x="1032.3" y="883.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.3" y="894.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.12%)</title><rect x="1033.7" y="867.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.7" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.12%)</title><rect x="1033.7" y="851.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.7" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.12%)</title><rect x="1033.7" y="835.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1036.7" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.12%)</title><rect x="1033.7" y="819.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.12%)</title><rect x="1033.7" y="803.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.getNodes (1 samples, 0.12%)</title><rect x="1035.0" y="995.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.12%)</title><rect x="1035.0" y="979.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1038.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1392425346.invoke (1 samples, 0.12%)</title><rect x="1035.0" y="963.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="1035.0" y="947.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1038.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.12%)</title><rect x="1035.0" y="931.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1035.0" y="915.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.0" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1036.4" y="995.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1039.4" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1036.4" y="979.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1039.4" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1036.4" y="963.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1039.4" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1037.7" y="1027.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1040.7" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1037.7" y="1011.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1040.7" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1037.7" y="995.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1040.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.35%)</title><rect x="1039.1" y="1075.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1042.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.35%)</title><rect x="1039.1" y="1059.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="1040.5" y="1043.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="1040.5" y="1027.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="1040.5" y="1011.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.12%)</title><rect x="1040.5" y="995.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.12%)</title><rect x="1041.8" y="1043.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="1043.2" y="1075.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="1043.2" y="1059.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="1043.2" y="1043.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1044.5" y="1075.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1044.5" y="1059.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1047.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1044.5" y="1043.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.12%)</title><rect x="1044.5" y="1027.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.12%)</title><rect x="1044.5" y="1011.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (26 samples, 3.00%)</title><rect x="1045.9" y="1091.0" width="35.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1048.9" y="1102.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (26 samples, 3.00%)</title><rect x="1045.9" y="1075.0" width="35.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1048.9" y="1086.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.23%)</title><rect x="1045.9" y="1059.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1048.9" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.23%)</title><rect x="1045.9" y="1043.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1048.9" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.12%)</title><rect x="1047.3" y="1027.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1050.3" y="1038.0"></text>
</g>
<g>
<title>__recv (22 samples, 2.53%)</title><rect x="1048.6" y="1059.0" width="29.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1051.6" y="1070.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 2.53%)</title><rect x="1048.6" y="1043.0" width="29.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1051.6" y="1054.0">en..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 2.53%)</title><rect x="1048.6" y="1027.0" width="29.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1051.6" y="1038.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 2.53%)</title><rect x="1048.6" y="1011.0" width="29.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.6" y="1022.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (21 samples, 2.42%)</title><rect x="1048.6" y="995.0" width="28.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1051.6" y="1006.0">__..</text>
</g>
<g>
<title>sock_recvmsg (20 samples, 2.30%)</title><rect x="1048.6" y="979.0" width="27.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.6" y="990.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (19 samples, 2.19%)</title><rect x="1048.6" y="963.0" width="25.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1051.6" y="974.0">i..</text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.12%)</title><rect x="1048.6" y="947.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.6" y="958.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 2.07%)</title><rect x="1050.0" y="947.0" width="24.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1053.0" y="958.0">t..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.23%)</title><rect x="1052.7" y="931.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1055.7" y="942.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.23%)</title><rect x="1052.7" y="915.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1055.7" y="926.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.23%)</title><rect x="1052.7" y="899.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1055.7" y="910.0"></text>
</g>
<g>
<title>__skb_ext_put (1 samples, 0.12%)</title><rect x="1054.1" y="883.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1057.1" y="894.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="1054.1" y="867.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1057.1" y="878.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.12%)</title><rect x="1055.4" y="931.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1058.4" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.12%)</title><rect x="1055.4" y="915.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1058.4" y="926.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.12%)</title><rect x="1055.4" y="899.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1058.4" y="910.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.12%)</title><rect x="1056.8" y="931.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1059.8" y="942.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.12%)</title><rect x="1056.8" y="915.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1059.8" y="926.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.12%)</title><rect x="1056.8" y="899.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1059.8" y="910.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.12%)</title><rect x="1056.8" y="883.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1059.8" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.12%)</title><rect x="1056.8" y="867.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1059.8" y="878.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (12 samples, 1.38%)</title><rect x="1058.1" y="931.0" width="16.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.1" y="942.0"></text>
</g>
<g>
<title>tcp_send_ack (12 samples, 1.38%)</title><rect x="1058.1" y="915.0" width="16.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1061.1" y="926.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (12 samples, 1.38%)</title><rect x="1058.1" y="899.0" width="16.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1061.1" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.23%)</title><rect x="1058.1" y="883.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.1" y="894.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.12%)</title><rect x="1058.1" y="867.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.1" y="878.0"></text>
</g>
<g>
<title>memset (1 samples, 0.12%)</title><rect x="1058.1" y="851.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1061.1" y="862.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="1059.5" y="867.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1062.5" y="878.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 1.15%)</title><rect x="1060.9" y="883.0" width="13.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1063.9" y="894.0"></text>
</g>
<g>
<title>ip_queue_xmit (9 samples, 1.04%)</title><rect x="1062.2" y="867.0" width="12.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1065.2" y="878.0"></text>
</g>
<g>
<title>__ip_queue_xmit (8 samples, 0.92%)</title><rect x="1062.2" y="851.0" width="10.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1065.2" y="862.0"></text>
</g>
<g>
<title>ip_local_out (8 samples, 0.92%)</title><rect x="1062.2" y="835.0" width="10.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.2" y="846.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.23%)</title><rect x="1062.2" y="819.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1065.2" y="830.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.23%)</title><rect x="1062.2" y="803.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1065.2" y="814.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.12%)</title><rect x="1062.2" y="787.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1065.2" y="798.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.12%)</title><rect x="1062.2" y="771.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1065.2" y="782.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.12%)</title><rect x="1062.2" y="755.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.2" y="766.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="1063.6" y="787.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1066.6" y="798.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.69%)</title><rect x="1064.9" y="819.0" width="8.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1067.9" y="830.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.69%)</title><rect x="1064.9" y="803.0" width="8.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.9" y="814.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="1064.9" y="787.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1067.9" y="798.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 0.58%)</title><rect x="1066.3" y="787.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1069.3" y="798.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.58%)</title><rect x="1066.3" y="771.0" width="6.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1069.3" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.46%)</title><rect x="1066.3" y="755.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.3" y="766.0"></text>
</g>
<g>
<title>do_softirq.part.0 (4 samples, 0.46%)</title><rect x="1066.3" y="739.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1069.3" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.46%)</title><rect x="1066.3" y="723.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1069.3" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.46%)</title><rect x="1066.3" y="707.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.3" y="718.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.46%)</title><rect x="1066.3" y="691.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1069.3" y="702.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.46%)</title><rect x="1066.3" y="675.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1069.3" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.46%)</title><rect x="1066.3" y="659.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.3" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.46%)</title><rect x="1066.3" y="643.0" width="5.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1069.3" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="1066.3" y="627.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1069.3" y="638.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.35%)</title><rect x="1067.6" y="627.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1070.6" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.23%)</title><rect x="1067.6" y="611.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.6" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.23%)</title><rect x="1067.6" y="595.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1070.6" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.23%)</title><rect x="1067.6" y="579.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1070.6" y="590.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.23%)</title><rect x="1067.6" y="563.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1070.6" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.23%)</title><rect x="1067.6" y="547.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.6" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.23%)</title><rect x="1067.6" y="531.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.6" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.23%)</title><rect x="1067.6" y="515.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1070.6" y="526.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.23%)</title><rect x="1067.6" y="499.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.6" y="510.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.23%)</title><rect x="1067.6" y="483.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.6" y="494.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.23%)</title><rect x="1067.6" y="467.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.6" y="478.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="1067.6" y="451.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.6" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="1067.6" y="435.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.6" y="446.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="1069.0" y="451.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1072.0" y="462.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.12%)</title><rect x="1069.0" y="435.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1072.0" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="1070.4" y="611.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1073.4" y="622.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (1 samples, 0.12%)</title><rect x="1070.4" y="595.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1073.4" y="606.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="1070.4" y="579.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1073.4" y="590.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.12%)</title><rect x="1070.4" y="563.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1073.4" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.12%)</title><rect x="1071.7" y="755.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.7" y="766.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.12%)</title><rect x="1071.7" y="739.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1074.7" y="750.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.12%)</title><rect x="1071.7" y="723.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1074.7" y="734.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="1071.7" y="707.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.7" y="718.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.12%)</title><rect x="1071.7" y="691.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1074.7" y="702.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.12%)</title><rect x="1071.7" y="675.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1074.7" y="686.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="1071.7" y="659.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1074.7" y="670.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.12%)</title><rect x="1073.1" y="851.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1076.1" y="862.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.12%)</title><rect x="1074.4" y="963.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1077.4" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="1075.8" y="979.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1078.8" y="990.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.12%)</title><rect x="1075.8" y="963.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1078.8" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.12%)</title><rect x="1075.8" y="947.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1078.8" y="958.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.12%)</title><rect x="1075.8" y="931.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1078.8" y="942.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.12%)</title><rect x="1077.2" y="995.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1080.2" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.23%)</title><rect x="1078.5" y="1059.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1081.5" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="1081.2" y="1107.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1084.2" y="1118.0"></text>
</g>
<g>
<title>start_thread (79 samples, 9.10%)</title><rect x="1082.6" y="1139.0" width="107.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1085.6" y="1150.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (79 samples, 9.10%)</title><rect x="1082.6" y="1123.0" width="107.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1085.6" y="1134.0">thread_native..</text>
</g>
<g>
<title>Thread::call_run() (79 samples, 9.10%)</title><rect x="1082.6" y="1107.0" width="107.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1085.6" y="1118.0">Thread::call_..</text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.35%)</title><rect x="1082.6" y="1091.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1085.6" y="1102.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.35%)</title><rect x="1082.6" y="1075.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1085.6" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.35%)</title><rect x="1082.6" y="1059.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1085.6" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.35%)</title><rect x="1082.6" y="1043.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1085.6" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.35%)</title><rect x="1082.6" y="1027.0" width="4.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1085.6" y="1038.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (3 samples, 0.35%)</title><rect x="1082.6" y="1011.0" width="4.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1085.6" y="1022.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.35%)</title><rect x="1082.6" y="995.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1085.6" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.23%)</title><rect x="1082.6" y="979.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1085.6" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.23%)</title><rect x="1082.6" y="963.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1085.6" y="974.0"></text>
</g>
<g>
<title>void objArrayOopDesc::oop_iterate_range&lt;G1ScanEvacuatedObjClosure&gt;(G1ScanEvacuatedObjClosure*, int, int) (1 samples, 0.12%)</title><rect x="1084.0" y="947.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.0" y="958.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (1 samples, 0.12%)</title><rect x="1085.3" y="979.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1088.3" y="990.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.12%)</title><rect x="1085.3" y="963.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1088.3" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.12%)</title><rect x="1085.3" y="947.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1088.3" y="958.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (76 samples, 8.76%)</title><rect x="1086.7" y="1091.0" width="103.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.7" y="1102.0">JavaThread::..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (75 samples, 8.64%)</title><rect x="1086.7" y="1075.0" width="101.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.7" y="1086.0">CompileBroke..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (75 samples, 8.64%)</title><rect x="1086.7" y="1059.0" width="101.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.7" y="1070.0">CompileBroke..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (72 samples, 8.29%)</title><rect x="1086.7" y="1043.0" width="97.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.7" y="1054.0">C2Compiler:..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (72 samples, 8.29%)</title><rect x="1086.7" y="1027.0" width="97.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.7" y="1038.0">Compile::Co..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.12%)</title><rect x="1086.7" y="1011.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.7" y="1022.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.12%)</title><rect x="1086.7" y="995.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1089.7" y="1006.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.12%)</title><rect x="1086.7" y="979.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1089.7" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.12%)</title><rect x="1086.7" y="963.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.7" y="974.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.12%)</title><rect x="1086.7" y="947.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.7" y="958.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.12%)</title><rect x="1086.7" y="931.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1089.7" y="942.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.12%)</title><rect x="1086.7" y="915.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1089.7" y="926.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (47 samples, 5.41%)</title><rect x="1088.0" y="1011.0" width="63.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1091.0" y="1022.0">Compile..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.12%)</title><rect x="1088.0" y="995.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1091.0" y="1006.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.12%)</title><rect x="1088.0" y="979.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1091.0" y="990.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.35%)</title><rect x="1089.4" y="995.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1092.4" y="1006.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.23%)</title><rect x="1089.4" y="979.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1092.4" y="990.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.12%)</title><rect x="1089.4" y="963.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1092.4" y="974.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.12%)</title><rect x="1089.4" y="947.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1092.4" y="958.0"></text>
</g>
<g>
<title>DebugInformationRecorder::dump_object_pool(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.12%)</title><rect x="1090.8" y="963.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1093.8" y="974.0"></text>
</g>
<g>
<title>DebugInformationRecorder::serialize_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.12%)</title><rect x="1090.8" y="947.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1093.8" y="958.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.12%)</title><rect x="1090.8" y="931.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1093.8" y="942.0"></text>
</g>
<g>
<title>JVMState::of_depth(int) const (1 samples, 0.12%)</title><rect x="1092.1" y="979.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1095.1" y="990.0"></text>
</g>
<g>
<title>Matcher::match() (6 samples, 0.69%)</title><rect x="1093.5" y="995.0" width="8.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.5" y="1006.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.12%)</title><rect x="1093.5" y="979.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1096.5" y="990.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.58%)</title><rect x="1094.8" y="979.0" width="6.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.8" y="990.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.35%)</title><rect x="1096.2" y="963.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1099.2" y="974.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.12%)</title><rect x="1097.6" y="947.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.6" y="958.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.12%)</title><rect x="1097.6" y="931.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1100.6" y="942.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.12%)</title><rect x="1097.6" y="915.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1100.6" y="926.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (1 samples, 0.12%)</title><rect x="1097.6" y="899.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.6" y="910.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.12%)</title><rect x="1097.6" y="883.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1100.6" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.12%)</title><rect x="1097.6" y="867.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1100.6" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1098.9" y="947.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1101.9" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1098.9" y="931.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1101.9" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1098.9" y="915.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1101.9" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1100.3" y="963.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1103.3" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1100.3" y="947.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1103.3" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1100.3" y="931.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1103.3" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.58%)</title><rect x="1101.6" y="995.0" width="6.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.6" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (1 samples, 0.12%)</title><rect x="1101.6" y="979.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1104.6" y="990.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.12%)</title><rect x="1101.6" y="963.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1104.6" y="974.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.12%)</title><rect x="1101.6" y="947.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1104.6" y="958.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.12%)</title><rect x="1101.6" y="931.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1104.6" y="942.0"></text>
</g>
<g>
<title>Block::succ_prob(unsigned int) (1 samples, 0.12%)</title><rect x="1101.6" y="915.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1104.6" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 0.46%)</title><rect x="1103.0" y="979.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1106.0" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.23%)</title><rect x="1103.0" y="963.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1106.0" y="974.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.12%)</title><rect x="1103.0" y="947.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.0" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1103.0" y="931.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1106.0" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1103.0" y="915.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1106.0" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1103.0" y="899.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1106.0" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.12%)</title><rect x="1104.4" y="947.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.4" y="958.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.12%)</title><rect x="1104.4" y="931.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.4" y="942.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.23%)</title><rect x="1105.7" y="963.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1108.7" y="974.0"></text>
</g>
<g>
<title>PhaseLive::add_livein(Block*, IndexSet*) (1 samples, 0.12%)</title><rect x="1105.7" y="947.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1108.7" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.12%)</title><rect x="1105.7" y="931.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1108.7" y="942.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.12%)</title><rect x="1107.1" y="947.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.1" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.12%)</title><rect x="1107.1" y="931.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1110.1" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (32 samples, 3.69%)</title><rect x="1108.4" y="995.0" width="43.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1111.4" y="1006.0">Phas..</text>
</g>
<g>
<title>LiveRangeMap::compress_uf_map_for_nodes() (1 samples, 0.12%)</title><rect x="1108.4" y="979.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.4" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.12%)</title><rect x="1109.8" y="979.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1112.8" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.12%)</title><rect x="1109.8" y="963.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1112.8" y="974.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.12%)</title><rect x="1109.8" y="947.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.8" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.23%)</title><rect x="1111.2" y="979.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1114.2" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.69%)</title><rect x="1113.9" y="979.0" width="8.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1116.9" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.12%)</title><rect x="1116.6" y="963.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.6" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1116.6" y="947.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1119.6" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1116.6" y="931.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1119.6" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1116.6" y="915.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1119.6" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.12%)</title><rect x="1117.9" y="963.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1120.9" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="1117.9" y="947.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1120.9" y="958.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.12%)</title><rect x="1119.3" y="963.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.3" y="974.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.12%)</title><rect x="1120.7" y="963.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1123.7" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1120.7" y="947.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1123.7" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1120.7" y="931.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.7" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1120.7" y="915.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1123.7" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (1 samples, 0.12%)</title><rect x="1122.0" y="979.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1125.0" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1122.0" y="963.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1125.0" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1122.0" y="947.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.0" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1122.0" y="931.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1125.0" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.12%)</title><rect x="1123.4" y="979.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1126.4" y="990.0"></text>
</g>
<g>
<title>rRegLOper::type() const (1 samples, 0.12%)</title><rect x="1123.4" y="963.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.4" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (3 samples, 0.35%)</title><rect x="1124.7" y="979.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.7" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 0.58%)</title><rect x="1128.8" y="979.0" width="6.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.8" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.35%)</title><rect x="1130.2" y="963.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.2" y="974.0"></text>
</g>
<g>
<title>RegMask::num_registers(unsigned int) (1 samples, 0.12%)</title><rect x="1134.3" y="963.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.3" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.12%)</title><rect x="1135.6" y="979.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.6" y="990.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.12%)</title><rect x="1137.0" y="979.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.0" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.12%)</title><rect x="1137.0" y="963.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1140.0" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1137.0" y="947.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1140.0" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1137.0" y="931.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.0" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1137.0" y="915.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1140.0" y="926.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.58%)</title><rect x="1138.3" y="979.0" width="6.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.3" y="990.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (1 samples, 0.12%)</title><rect x="1139.7" y="963.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.7" y="974.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.23%)</title><rect x="1141.1" y="963.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.1" y="974.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.12%)</title><rect x="1141.1" y="947.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.1" y="958.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.12%)</title><rect x="1141.1" y="931.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1144.1" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="1142.4" y="947.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1145.4" y="958.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.12%)</title><rect x="1143.8" y="963.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.8" y="974.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.35%)</title><rect x="1145.1" y="979.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.1" y="990.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.12%)</title><rect x="1149.2" y="979.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.2" y="990.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.12%)</title><rect x="1150.6" y="979.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.6" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (15 samples, 1.73%)</title><rect x="1151.9" y="1011.0" width="20.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.9" y="1022.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (3 samples, 0.35%)</title><rect x="1151.9" y="995.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.9" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.35%)</title><rect x="1151.9" y="979.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.9" y="990.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.12%)</title><rect x="1151.9" y="963.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.9" y="974.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.12%)</title><rect x="1151.9" y="947.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.9" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.0] (1 samples, 0.12%)</title><rect x="1151.9" y="931.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.9" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.12%)</title><rect x="1151.9" y="915.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.9" y="926.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.12%)</title><rect x="1151.9" y="899.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.9" y="910.0"></text>
</g>
<g>
<title>GrowableArray&lt;float&gt;::grow(int) (1 samples, 0.12%)</title><rect x="1151.9" y="883.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.9" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.12%)</title><rect x="1153.3" y="963.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.3" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.12%)</title><rect x="1153.3" y="947.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.3" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.12%)</title><rect x="1154.7" y="963.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.7" y="974.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.0] (1 samples, 0.12%)</title><rect x="1156.0" y="995.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.0" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.12%)</title><rect x="1157.4" y="995.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.4" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.12%)</title><rect x="1157.4" y="979.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.4" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) [clone .part.0] (1 samples, 0.12%)</title><rect x="1157.4" y="963.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.4" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.0] (1 samples, 0.12%)</title><rect x="1157.4" y="947.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.4" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1157.4" y="931.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.4" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1157.4" y="915.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.4" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1157.4" y="899.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.4" y="910.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.12%)</title><rect x="1158.7" y="995.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.7" y="1006.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.12%)</title><rect x="1158.7" y="979.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.7" y="990.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.12%)</title><rect x="1158.7" y="963.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.7" y="974.0"></text>
</g>
<g>
<title>TypeAryPtr::hash() const (1 samples, 0.12%)</title><rect x="1158.7" y="947.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.7" y="958.0"></text>
</g>
<g>
<title>ciBaseObject::ident() (1 samples, 0.12%)</title><rect x="1158.7" y="931.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.7" y="942.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.12%)</title><rect x="1160.1" y="995.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.1" y="1006.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.12%)</title><rect x="1160.1" y="979.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.1" y="990.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.12%)</title><rect x="1160.1" y="963.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.1" y="974.0"></text>
</g>
<g>
<title>ProjNode::bottom_type() const (1 samples, 0.12%)</title><rect x="1160.1" y="947.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.1" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1160.1" y="931.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.1" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1160.1" y="915.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.1" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1160.1" y="899.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.1" y="910.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.12%)</title><rect x="1160.1" y="883.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.1" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.12%)</title><rect x="1160.1" y="867.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1163.1" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="1160.1" y="851.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.1" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.12%)</title><rect x="1160.1" y="835.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.1" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.12%)</title><rect x="1160.1" y="819.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1163.1" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.12%)</title><rect x="1160.1" y="803.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.1" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.12%)</title><rect x="1160.1" y="787.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1163.1" y="798.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.12%)</title><rect x="1160.1" y="771.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.1" y="782.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.12%)</title><rect x="1160.1" y="755.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1163.1" y="766.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.12%)</title><rect x="1160.1" y="739.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1163.1" y="750.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.12%)</title><rect x="1160.1" y="723.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.1" y="734.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.12%)</title><rect x="1160.1" y="707.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="1160.1" y="691.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.1" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 0.58%)</title><rect x="1161.5" y="995.0" width="6.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.12%)</title><rect x="1161.5" y="979.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.5" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1161.5" y="963.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1164.5" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1161.5" y="947.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1164.5" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1161.5" y="931.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1164.5" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.23%)</title><rect x="1162.8" y="979.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.8" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.12%)</title><rect x="1164.2" y="963.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.2" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.12%)</title><rect x="1164.2" y="947.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.2" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.12%)</title><rect x="1164.2" y="931.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.2" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1164.2" y="915.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1167.2" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1164.2" y="899.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1167.2" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1164.2" y="883.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.2" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.12%)</title><rect x="1165.5" y="979.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.5" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.12%)</title><rect x="1166.9" y="979.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.9" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.12%)</title><rect x="1166.9" y="963.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.9" y="974.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="1166.9" y="947.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.9" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.12%)</title><rect x="1166.9" y="931.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.9" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1166.9" y="915.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1169.9" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1166.9" y="899.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1169.9" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1166.9" y="883.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1169.9" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.35%)</title><rect x="1168.2" y="995.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.2" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.35%)</title><rect x="1168.2" y="979.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.2" y="990.0"></text>
</g>
<g>
<title>ConvI2LNode::Ideal(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="1168.2" y="963.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.2" y="974.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.12%)</title><rect x="1168.2" y="947.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.2" y="958.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.12%)</title><rect x="1168.2" y="931.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.2" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1168.2" y="915.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1171.2" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1168.2" y="899.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.2" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1168.2" y="883.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.2" y="894.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="1169.6" y="963.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.6" y="974.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.0] (1 samples, 0.12%)</title><rect x="1169.6" y="947.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.6" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="931.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.6" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="915.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.6" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="899.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.6" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="883.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.6" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="867.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.6" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="851.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.6" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="835.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.6" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="819.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.6" y="830.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.0] (1 samples, 0.12%)</title><rect x="1169.6" y="803.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.6" y="814.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.12%)</title><rect x="1169.6" y="787.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.6" y="798.0"></text>
</g>
<g>
<title>StoreNode::Identity(PhaseGVN*) (1 samples, 0.12%)</title><rect x="1171.0" y="963.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.0" y="974.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (2 samples, 0.23%)</title><rect x="1172.3" y="1011.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="1022.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (1 samples, 0.12%)</title><rect x="1172.3" y="995.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.3" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1172.3" y="979.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1172.3" y="963.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1172.3" y="947.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1172.3" y="931.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1172.3" y="915.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.3" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1172.3" y="899.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.3" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1172.3" y="883.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.3" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1172.3" y="867.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1172.3" y="851.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1172.3" y="835.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1172.3" y="819.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1172.3" y="803.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.12%)</title><rect x="1172.3" y="787.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.12%)</title><rect x="1172.3" y="771.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.12%)</title><rect x="1172.3" y="755.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>MethodLiveness::init_gen_kill() (1 samples, 0.12%)</title><rect x="1172.3" y="739.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*) (1 samples, 0.12%)</title><rect x="1172.3" y="723.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="734.0"></text>
</g>
<g>
<title>PhaseStringOpts::PhaseStringOpts(PhaseGVN*, Unique_Node_List*) (1 samples, 0.12%)</title><rect x="1173.7" y="995.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.7" y="1006.0"></text>
</g>
<g>
<title>PhaseStringOpts::remove_dead_nodes() (1 samples, 0.12%)</title><rect x="1173.7" y="979.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.7" y="990.0"></text>
</g>
<g>
<title>Compile::gvn_replace_by(Node*, Node*) (1 samples, 0.12%)</title><rect x="1173.7" y="963.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.7" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.81%)</title><rect x="1175.0" y="1011.0" width="9.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.0" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.81%)</title><rect x="1175.0" y="995.0" width="9.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.81%)</title><rect x="1175.0" y="979.0" width="9.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.81%)</title><rect x="1175.0" y="963.0" width="9.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.81%)</title><rect x="1175.0" y="947.0" width="9.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.69%)</title><rect x="1175.0" y="931.0" width="8.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.0" y="942.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.12%)</title><rect x="1175.0" y="915.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.0" y="926.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.12%)</title><rect x="1175.0" y="899.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.0" y="910.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.12%)</title><rect x="1175.0" y="883.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.0" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.12%)</title><rect x="1175.0" y="867.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.0" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.12%)</title><rect x="1175.0" y="851.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.0" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.12%)</title><rect x="1175.0" y="835.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.0" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.12%)</title><rect x="1175.0" y="819.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.0" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.12%)</title><rect x="1175.0" y="803.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.0" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.12%)</title><rect x="1175.0" y="787.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.0" y="798.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.12%)</title><rect x="1175.0" y="771.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.0" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.12%)</title><rect x="1175.0" y="755.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.0" y="766.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.12%)</title><rect x="1175.0" y="739.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.0" y="750.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.12%)</title><rect x="1175.0" y="723.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.0" y="734.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.12%)</title><rect x="1175.0" y="707.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.0" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1175.0" y="691.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1178.0" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1175.0" y="675.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1175.0" y="659.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.0" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.35%)</title><rect x="1176.4" y="915.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.35%)</title><rect x="1176.4" y="899.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.35%)</title><rect x="1176.4" y="883.0" width="4.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.35%)</title><rect x="1176.4" y="867.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.35%)</title><rect x="1176.4" y="851.0" width="4.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.35%)</title><rect x="1176.4" y="835.0" width="4.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.4" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.35%)</title><rect x="1176.4" y="819.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.4" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.35%)</title><rect x="1176.4" y="803.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.35%)</title><rect x="1176.4" y="787.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.35%)</title><rect x="1176.4" y="771.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.35%)</title><rect x="1176.4" y="755.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.35%)</title><rect x="1176.4" y="739.0" width="4.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.4" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.35%)</title><rect x="1176.4" y="723.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.4" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.35%)</title><rect x="1176.4" y="707.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.23%)</title><rect x="1176.4" y="691.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.23%)</title><rect x="1176.4" y="675.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.23%)</title><rect x="1176.4" y="659.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.23%)</title><rect x="1176.4" y="643.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.4" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.23%)</title><rect x="1176.4" y="627.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.4" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.23%)</title><rect x="1176.4" y="611.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.23%)</title><rect x="1176.4" y="595.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1179.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.23%)</title><rect x="1176.4" y="579.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.23%)</title><rect x="1176.4" y="563.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.23%)</title><rect x="1176.4" y="547.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="558.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1176.4" y="531.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.4" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1176.4" y="515.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.4" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1176.4" y="499.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1176.4" y="483.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1176.4" y="467.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1176.4" y="451.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1176.4" y="435.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.4" y="446.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.12%)</title><rect x="1176.4" y="419.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="430.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/ld-2.31.so (1 samples, 0.12%)</title><rect x="1176.4" y="403.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1179.4" y="414.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.12%)</title><rect x="1177.8" y="531.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.8" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.12%)</title><rect x="1177.8" y="515.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.8" y="526.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.12%)</title><rect x="1177.8" y="499.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.12%)</title><rect x="1179.1" y="691.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.1" y="702.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.12%)</title><rect x="1179.1" y="675.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.1" y="686.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.12%)</title><rect x="1179.1" y="659.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.1" y="670.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.12%)</title><rect x="1179.1" y="643.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.1" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.23%)</title><rect x="1180.5" y="915.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.5" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1180.5" y="899.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.5" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1180.5" y="883.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1180.5" y="867.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1180.5" y="851.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1180.5" y="835.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1180.5" y="819.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.5" y="830.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1180.5" y="803.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.5" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1180.5" y="787.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.5" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1180.5" y="771.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1180.5" y="755.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1180.5" y="739.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1180.5" y="723.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1180.5" y="707.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.12%)</title><rect x="1180.5" y="691.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.5" y="702.0"></text>
</g>
<g>
<title>InlineTree::find_subtree_from_root(InlineTree*, JVMState*, ciMethod*) (1 samples, 0.12%)</title><rect x="1180.5" y="675.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.5" y="686.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1181.8" y="899.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.8" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1181.8" y="883.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.8" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1181.8" y="867.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1181.8" y="851.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1181.8" y="835.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1181.8" y="819.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1181.8" y="803.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.8" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1181.8" y="787.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1181.8" y="771.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1181.8" y="755.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1181.8" y="739.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1181.8" y="723.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.12%)</title><rect x="1181.8" y="707.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.12%)</title><rect x="1181.8" y="691.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.8" y="702.0"></text>
</g>
<g>
<title>Compile::alias_type(ciField*) (1 samples, 0.12%)</title><rect x="1181.8" y="675.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.8" y="686.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.12%)</title><rect x="1181.8" y="659.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1181.8" y="643.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1181.8" y="627.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1181.8" y="611.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1184.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.12%)</title><rect x="1183.2" y="931.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.2" y="942.0"></text>
</g>
<g>
<title>TypeInt::singleton() const (1 samples, 0.12%)</title><rect x="1183.2" y="915.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.2" y="926.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.35%)</title><rect x="1184.6" y="1043.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="1054.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (3 samples, 0.35%)</title><rect x="1184.6" y="1027.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.6" y="1038.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 0.35%)</title><rect x="1184.6" y="1011.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="1022.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 0.35%)</title><rect x="1184.6" y="995.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.6" y="1006.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.0] (1 samples, 0.12%)</title><rect x="1184.6" y="979.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.6" y="990.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.12%)</title><rect x="1184.6" y="963.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.6" y="974.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.12%)</title><rect x="1184.6" y="947.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.12%)</title><rect x="1184.6" y="931.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.6" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.12%)</title><rect x="1184.6" y="915.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.6" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.12%)</title><rect x="1184.6" y="899.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.12%)</title><rect x="1184.6" y="883.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.6" y="894.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.12%)</title><rect x="1184.6" y="867.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.6" y="878.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.12%)</title><rect x="1184.6" y="851.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.12%)</title><rect x="1184.6" y="835.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.6" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.12%)</title><rect x="1184.6" y="819.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.6" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.12%)</title><rect x="1184.6" y="803.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="814.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.23%)</title><rect x="1185.9" y="979.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.9" y="990.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.23%)</title><rect x="1185.9" y="963.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="974.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.23%)</title><rect x="1185.9" y="947.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="958.0"></text>
</g>
<g>
<title>LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind) (1 samples, 0.12%)</title><rect x="1187.3" y="931.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.3" y="942.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (1 samples, 0.12%)</title><rect x="1187.3" y="915.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.12%)</title><rect x="1187.3" y="899.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>pthread_setname_np (1 samples, 0.12%)</title><rect x="1188.6" y="1075.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1191.6" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.12%)</title><rect x="1188.6" y="1059.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.6" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.12%)</title><rect x="1188.6" y="1043.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.6" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.12%)</title><rect x="1188.6" y="1027.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1191.6" y="1038.0"></text>
</g>
</g>
</svg>
