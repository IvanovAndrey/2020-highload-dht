<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (13,009 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (7,478 samples, 57.48%)</title><rect x="10.0" y="691.0" width="678.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (22 samples, 0.17%)</title><rect x="10.0" y="675.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 0.17%)</title><rect x="10.0" y="659.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (22 samples, 0.17%)</title><rect x="10.0" y="643.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 0.17%)</title><rect x="10.0" y="627.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (22 samples, 0.17%)</title><rect x="10.0" y="611.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (22 samples, 0.17%)</title><rect x="10.0" y="595.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.17%)</title><rect x="10.0" y="579.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (22 samples, 0.17%)</title><rect x="10.0" y="563.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (22 samples, 0.17%)</title><rect x="10.0" y="547.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (22 samples, 0.17%)</title><rect x="10.0" y="531.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (22 samples, 0.17%)</title><rect x="10.0" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (22 samples, 0.17%)</title><rect x="10.0" y="499.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,456 samples, 57.31%)</title><rect x="12.0" y="675.0" width="676.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,456 samples, 57.31%)</title><rect x="12.0" y="659.0" width="676.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (5,423 samples, 41.69%)</title><rect x="12.0" y="643.0" width="491.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,599 samples, 12.29%)</title><rect x="12.0" y="627.0" width="145.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.0" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (687 samples, 5.28%)</title><rect x="12.0" y="611.0" width="62.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.0" y="622.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (7 samples, 0.05%)</title><rect x="12.0" y="595.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="15.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.apply (680 samples, 5.23%)</title><rect x="12.6" y="595.0" width="61.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.6" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (680 samples, 5.23%)</title><rect x="12.6" y="579.0" width="61.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.6" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (680 samples, 5.23%)</title><rect x="12.6" y="563.0" width="61.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.6" y="574.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (12 samples, 0.09%)</title><rect x="12.8" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (12 samples, 0.09%)</title><rect x="12.8" y="531.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (6 samples, 0.05%)</title><rect x="12.8" y="515.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="15.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="13.4" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="13.4" y="499.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.05%)</title><rect x="13.4" y="483.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="16.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.17%)</title><rect x="13.9" y="547.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.17%)</title><rect x="13.9" y="531.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (14 samples, 0.11%)</title><rect x="13.9" y="515.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="16.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.06%)</title><rect x="15.2" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.06%)</title><rect x="15.2" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.06%)</title><rect x="15.2" y="483.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (627 samples, 4.82%)</title><rect x="15.9" y="547.0" width="56.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.9" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (627 samples, 4.82%)</title><rect x="15.9" y="531.0" width="56.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.9" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (627 samples, 4.82%)</title><rect x="15.9" y="515.0" width="56.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.9" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.09%)</title><rect x="15.9" y="499.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.09%)</title><rect x="15.9" y="483.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.get$Lambda (3 samples, 0.02%)</title><rect x="15.9" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$135 (3 samples, 0.02%)</title><rect x="15.9" y="451.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="18.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.get$Lambda (9 samples, 0.07%)</title><rect x="16.2" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$168 (9 samples, 0.07%)</title><rect x="16.2" y="451.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="19.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (419 samples, 3.22%)</title><rect x="17.0" y="499.0" width="38.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.0" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (419 samples, 3.22%)</title><rect x="17.0" y="483.0" width="38.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.0" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (414 samples, 3.18%)</title><rect x="17.0" y="467.0" width="37.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.0" y="478.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.apply (414 samples, 3.18%)</title><rect x="17.0" y="451.0" width="37.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.0" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (414 samples, 3.18%)</title><rect x="17.0" y="435.0" width="37.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (414 samples, 3.18%)</title><rect x="17.0" y="419.0" width="37.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.0" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.apply (414 samples, 3.18%)</title><rect x="17.0" y="403.0" width="37.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="20.0" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (414 samples, 3.18%)</title><rect x="17.0" y="387.0" width="37.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.0" y="398.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="17.0" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="17.0" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.get$Lambda (3 samples, 0.02%)</title><rect x="17.0" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$181 (3 samples, 0.02%)</title><rect x="17.0" y="323.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9 samples, 0.07%)</title><rect x="17.3" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 0.07%)</title><rect x="17.3" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (6 samples, 0.05%)</title><rect x="17.3" y="339.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="20.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="17.8" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="17.8" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.02%)</title><rect x="17.8" y="307.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.07%)</title><rect x="18.1" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.07%)</title><rect x="18.1" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (5 samples, 0.04%)</title><rect x="18.1" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="21.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="18.5" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="18.5" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.03%)</title><rect x="18.5" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="21.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (393 samples, 3.02%)</title><rect x="18.9" y="371.0" width="35.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.9" y="382.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.05%)</title><rect x="18.9" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.05%)</title><rect x="18.9" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.get$Lambda (5 samples, 0.04%)</title><rect x="18.9" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$178 (5 samples, 0.04%)</title><rect x="18.9" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="21.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (333 samples, 2.56%)</title><rect x="19.4" y="355.0" width="30.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.4" y="366.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (333 samples, 2.56%)</title><rect x="19.4" y="339.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.4" y="350.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.apply (317 samples, 2.44%)</title><rect x="19.6" y="323.0" width="28.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.6" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (317 samples, 2.44%)</title><rect x="19.6" y="307.0" width="28.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.6" y="318.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.08%)</title><rect x="19.8" y="291.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.08%)</title><rect x="19.8" y="275.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.04%)</title><rect x="19.8" y="259.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="22.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="20.2" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="20.2" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.05%)</title><rect x="20.2" y="227.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.02%)</title><rect x="20.8" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="23.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.04%)</title><rect x="21.1" y="291.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (4 samples, 0.03%)</title><rect x="21.1" y="275.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="24.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (5 samples, 0.04%)</title><rect x="21.5" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5 samples, 0.04%)</title><rect x="21.5" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (4 samples, 0.03%)</title><rect x="21.5" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4 samples, 0.03%)</title><rect x="21.5" y="243.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.03%)</title><rect x="21.5" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (4 samples, 0.03%)</title><rect x="21.5" y="211.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="24.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (291 samples, 2.24%)</title><rect x="22.0" y="291.0" width="26.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.0" y="302.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (21 samples, 0.16%)</title><rect x="22.2" y="275.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (21 samples, 0.16%)</title><rect x="22.2" y="259.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (21 samples, 0.16%)</title><rect x="22.2" y="243.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.2" y="254.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.16%)</title><rect x="22.2" y="227.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="25.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (12 samples, 0.09%)</title><rect x="24.2" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.2" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (12 samples, 0.09%)</title><rect x="24.2" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.2" y="270.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.09%)</title><rect x="24.2" y="243.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="27.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.15%)</title><rect x="25.2" y="275.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.15%)</title><rect x="25.2" y="259.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.03%)</title><rect x="25.2" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="28.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.12%)</title><rect x="25.6" y="243.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.6" y="254.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.12%)</title><rect x="25.6" y="227.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="28.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.05%)</title><rect x="27.1" y="275.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.05%)</title><rect x="27.1" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.1" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.05%)</title><rect x="27.1" y="243.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="30.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (185 samples, 1.42%)</title><rect x="27.7" y="275.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.7" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (3 samples, 0.02%)</title><rect x="27.7" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="27.7" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="27.7" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="30.7" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.get$Lambda (3 samples, 0.02%)</title><rect x="27.7" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.7" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$193 (3 samples, 0.02%)</title><rect x="27.7" y="195.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="30.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (93 samples, 0.71%)</title><rect x="28.0" y="259.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (54 samples, 0.42%)</title><rect x="28.0" y="243.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.0" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (54 samples, 0.42%)</title><rect x="28.0" y="227.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.0" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (54 samples, 0.42%)</title><rect x="28.0" y="211.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (54 samples, 0.42%)</title><rect x="28.0" y="195.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.0" y="206.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.42%)</title><rect x="28.0" y="179.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="31.0" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (12 samples, 0.09%)</title><rect x="32.9" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (12 samples, 0.09%)</title><rect x="32.9" y="227.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (12 samples, 0.09%)</title><rect x="32.9" y="211.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (12 samples, 0.09%)</title><rect x="32.9" y="195.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="35.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (8 samples, 0.06%)</title><rect x="33.9" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (3 samples, 0.02%)</title><rect x="33.9" y="227.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="36.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (5 samples, 0.04%)</title><rect x="34.2" y="227.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (5 samples, 0.04%)</title><rect x="34.2" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="37.2" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.test (19 samples, 0.15%)</title><rect x="34.7" y="243.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.7" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (19 samples, 0.15%)</title><rect x="34.7" y="227.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$91/2013559698.test (19 samples, 0.15%)</title><rect x="34.7" y="211.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (19 samples, 0.15%)</title><rect x="34.7" y="195.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.7" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$80/1582071873.test (19 samples, 0.15%)</title><rect x="34.7" y="179.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.7" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (19 samples, 0.15%)</title><rect x="34.7" y="163.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/1616974404.test (19 samples, 0.15%)</title><rect x="34.7" y="147.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (19 samples, 0.15%)</title><rect x="34.7" y="131.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.15%)</title><rect x="34.7" y="115.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.15%)</title><rect x="34.7" y="99.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.08%)</title><rect x="34.7" y="83.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="37.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.07%)</title><rect x="35.6" y="83.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.6" y="94.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.07%)</title><rect x="35.6" y="67.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="38.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (89 samples, 0.68%)</title><rect x="36.4" y="259.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.4" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (89 samples, 0.68%)</title><rect x="36.4" y="243.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.4" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (89 samples, 0.68%)</title><rect x="36.4" y="227.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.4" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.03%)</title><rect x="36.5" y="211.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="39.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.03%)</title><rect x="36.8" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="39.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="37.3" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="37.3" y="195.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (4 samples, 0.03%)</title><rect x="37.3" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.3" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (4 samples, 0.03%)</title><rect x="37.3" y="163.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="40.3" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (4 samples, 0.03%)</title><rect x="37.7" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.7" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (4 samples, 0.03%)</title><rect x="37.7" y="195.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="40.7" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (62 samples, 0.48%)</title><rect x="38.0" y="211.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (62 samples, 0.48%)</title><rect x="38.0" y="195.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.0" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (62 samples, 0.48%)</title><rect x="38.0" y="179.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.08%)</title><rect x="38.0" y="163.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.08%)</title><rect x="38.0" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.0" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (10 samples, 0.08%)</title><rect x="38.0" y="131.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.0" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (10 samples, 0.08%)</title><rect x="38.0" y="115.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="41.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.06%)</title><rect x="38.9" y="163.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.9" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (8 samples, 0.06%)</title><rect x="38.9" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.9" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.06%)</title><rect x="38.9" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.06%)</title><rect x="38.9" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.06%)</title><rect x="38.9" y="99.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.9" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.06%)</title><rect x="38.9" y="83.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.9" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.06%)</title><rect x="38.9" y="67.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.9" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.06%)</title><rect x="38.9" y="51.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.9" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.06%)</title><rect x="38.9" y="35.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="41.9" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (26 samples, 0.20%)</title><rect x="39.7" y="163.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.7" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (26 samples, 0.20%)</title><rect x="39.7" y="147.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (12 samples, 0.09%)</title><rect x="39.7" y="131.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.09%)</title><rect x="39.7" y="115.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.09%)</title><rect x="39.7" y="99.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="42.7" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (14 samples, 0.11%)</title><rect x="40.7" y="131.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.7" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (14 samples, 0.11%)</title><rect x="40.7" y="115.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="43.7" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (18 samples, 0.14%)</title><rect x="42.0" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (18 samples, 0.14%)</title><rect x="42.0" y="147.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="45.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (9 samples, 0.07%)</title><rect x="43.7" y="211.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.07%)</title><rect x="43.7" y="195.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="46.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (10 samples, 0.08%)</title><rect x="44.5" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.06%)</title><rect x="44.6" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (8 samples, 0.06%)</title><rect x="44.6" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (8 samples, 0.06%)</title><rect x="44.6" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.06%)</title><rect x="44.6" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.02%)</title><rect x="44.6" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="44.6" y="179.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="47.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (5 samples, 0.04%)</title><rect x="44.9" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (5 samples, 0.04%)</title><rect x="44.9" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.9" y="190.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="44.9" y="163.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="47.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (10 samples, 0.08%)</title><rect x="45.4" y="275.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (10 samples, 0.08%)</title><rect x="45.4" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.08%)</title><rect x="45.4" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.4" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (10 samples, 0.08%)</title><rect x="45.4" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (10 samples, 0.08%)</title><rect x="45.4" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.08%)</title><rect x="45.4" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.06%)</title><rect x="45.6" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.06%)</title><rect x="45.6" y="163.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.6" y="174.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.06%)</title><rect x="45.6" y="147.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="48.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (23 samples, 0.18%)</title><rect x="46.3" y="275.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.3" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.05%)</title><rect x="46.3" y="259.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="49.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.05%)</title><rect x="46.9" y="259.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.05%)</title><rect x="46.9" y="243.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="49.9" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.08%)</title><rect x="47.5" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.08%)</title><rect x="47.5" y="243.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="50.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.11%)</title><rect x="48.4" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.11%)</title><rect x="48.4" y="307.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.11%)</title><rect x="48.4" y="291.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="51.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (11 samples, 0.08%)</title><rect x="49.6" y="355.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="52.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.02%)</title><rect x="50.6" y="355.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="53.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (40 samples, 0.31%)</title><rect x="50.9" y="355.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.04%)</title><rect x="50.9" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.04%)</title><rect x="50.9" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$171/518686497.get$Lambda (3 samples, 0.02%)</title><rect x="51.1" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$171 (3 samples, 0.02%)</title><rect x="51.1" y="291.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="54.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (3 samples, 0.02%)</title><rect x="51.4" y="339.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="54.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (6 samples, 0.05%)</title><rect x="51.7" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="54.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (11 samples, 0.08%)</title><rect x="52.3" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.08%)</title><rect x="52.3" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.08%)</title><rect x="52.3" y="307.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.08%)</title><rect x="52.3" y="291.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (11 samples, 0.08%)</title><rect x="52.3" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (11 samples, 0.08%)</title><rect x="52.3" y="259.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (11 samples, 0.08%)</title><rect x="52.3" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (11 samples, 0.08%)</title><rect x="52.3" y="227.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (11 samples, 0.08%)</title><rect x="52.3" y="211.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.04%)</title><rect x="52.3" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.04%)</title><rect x="52.3" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$173/2084879101.get$Lambda (3 samples, 0.02%)</title><rect x="52.5" y="163.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$173 (3 samples, 0.02%)</title><rect x="52.5" y="147.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="55.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (3 samples, 0.02%)</title><rect x="52.7" y="195.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="55.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.02%)</title><rect x="53.0" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.02%)</title><rect x="53.0" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (10 samples, 0.08%)</title><rect x="53.3" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.3" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (5 samples, 0.04%)</title><rect x="53.3" y="323.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="56.3" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.03%)</title><rect x="53.7" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="56.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (4 samples, 0.03%)</title><rect x="54.2" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.03%)</title><rect x="54.2" y="323.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="57.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="54.5" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="54.5" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.04%)</title><rect x="54.5" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="57.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.03%)</title><rect x="55.0" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.03%)</title><rect x="55.0" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3 samples, 0.02%)</title><rect x="55.0" y="467.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="58.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (192 samples, 1.48%)</title><rect x="55.4" y="499.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.06%)</title><rect x="55.4" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.06%)</title><rect x="55.4" y="467.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/264389024.get$Lambda (5 samples, 0.04%)</title><rect x="55.4" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$166 (5 samples, 0.04%)</title><rect x="55.4" y="435.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="58.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$167/2108789873.get$Lambda (3 samples, 0.02%)</title><rect x="55.8" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$167 (3 samples, 0.02%)</title><rect x="55.8" y="435.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="58.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.05%)</title><rect x="56.1" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.05%)</title><rect x="56.1" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="56.3" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="56.3" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.04%)</title><rect x="56.3" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="59.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.04%)</title><rect x="56.7" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.04%)</title><rect x="56.7" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="56.7" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="56.7" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.04%)</title><rect x="56.7" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="59.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (172 samples, 1.32%)</title><rect x="57.2" y="483.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (172 samples, 1.32%)</title><rect x="57.2" y="467.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (15 samples, 0.12%)</title><rect x="57.2" y="451.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (151 samples, 1.16%)</title><rect x="58.5" y="451.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.5" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (3 samples, 0.02%)</title><rect x="58.7" y="435.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="61.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (4 samples, 0.03%)</title><rect x="59.0" y="435.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="62.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (13 samples, 0.10%)</title><rect x="59.5" y="435.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (13 samples, 0.10%)</title><rect x="59.5" y="419.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.5" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (13 samples, 0.10%)</title><rect x="59.5" y="403.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="62.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (4 samples, 0.03%)</title><rect x="60.7" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.7" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (4 samples, 0.03%)</title><rect x="60.7" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="63.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (9 samples, 0.07%)</title><rect x="61.1" y="435.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="64.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (9 samples, 0.07%)</title><rect x="61.9" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="64.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (8 samples, 0.06%)</title><rect x="62.7" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="65.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.06%)</title><rect x="63.4" y="435.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="66.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (37 samples, 0.28%)</title><rect x="64.2" y="435.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (5 samples, 0.04%)</title><rect x="64.2" y="419.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="67.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (5 samples, 0.04%)</title><rect x="64.7" y="419.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="67.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (6 samples, 0.05%)</title><rect x="65.1" y="419.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="68.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (4 samples, 0.03%)</title><rect x="65.9" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (4 samples, 0.03%)</title><rect x="65.9" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="68.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (10 samples, 0.08%)</title><rect x="66.6" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (3 samples, 0.02%)</title><rect x="66.8" y="403.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="69.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (4 samples, 0.03%)</title><rect x="67.1" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (27 samples, 0.21%)</title><rect x="67.5" y="435.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (5 samples, 0.04%)</title><rect x="67.5" y="419.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="70.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.02%)</title><rect x="68.1" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (3 samples, 0.02%)</title><rect x="68.1" y="403.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="71.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (17 samples, 0.13%)</title><rect x="68.4" y="419.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (5 samples, 0.04%)</title><rect x="68.4" y="403.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="71.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (3 samples, 0.02%)</title><rect x="68.9" y="403.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="71.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (5 samples, 0.04%)</title><rect x="69.1" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (5 samples, 0.04%)</title><rect x="69.1" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="72.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (4 samples, 0.03%)</title><rect x="69.6" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (3 samples, 0.02%)</title><rect x="69.6" y="387.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="72.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (4 samples, 0.03%)</title><rect x="70.0" y="435.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="70.0" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="70.0" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$161/417104487.get$Lambda (4 samples, 0.03%)</title><rect x="70.0" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$161 (4 samples, 0.03%)</title><rect x="70.0" y="371.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="73.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (6 samples, 0.05%)</title><rect x="70.3" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (6 samples, 0.05%)</title><rect x="70.3" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (6 samples, 0.05%)</title><rect x="70.3" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.05%)</title><rect x="70.3" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.3" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.05%)</title><rect x="70.3" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (6 samples, 0.05%)</title><rect x="70.3" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.05%)</title><rect x="70.3" y="339.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="73.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (15 samples, 0.12%)</title><rect x="70.9" y="435.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1043351526.linkToTargetMethod (6 samples, 0.05%)</title><rect x="70.9" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.05%)</title><rect x="70.9" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.get$Lambda (6 samples, 0.05%)</title><rect x="70.9" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$146 (6 samples, 0.05%)</title><rect x="70.9" y="371.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="73.9" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.07%)</title><rect x="71.4" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.run (9 samples, 0.07%)</title><rect x="71.4" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (9 samples, 0.07%)</title><rect x="71.4" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.4" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (5 samples, 0.04%)</title><rect x="71.4" y="371.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="74.4" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.03%)</title><rect x="71.9" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.9" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (3 samples, 0.02%)</title><rect x="71.9" y="355.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="74.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.05%)</title><rect x="72.2" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.05%)</title><rect x="72.2" y="435.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="75.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (3 samples, 0.02%)</title><rect x="72.8" y="547.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (3 samples, 0.02%)</title><rect x="72.8" y="531.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.02%)</title><rect x="72.8" y="515.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.8" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.02%)</title><rect x="72.8" y="499.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="75.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (14 samples, 0.11%)</title><rect x="73.0" y="547.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (12 samples, 0.09%)</title><rect x="73.0" y="531.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="76.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (912 samples, 7.01%)</title><rect x="74.3" y="611.0" width="82.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.3" y="622.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (912 samples, 7.01%)</title><rect x="74.3" y="595.0" width="82.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.3" y="606.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (902 samples, 6.93%)</title><rect x="74.3" y="579.0" width="81.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.3" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (902 samples, 6.93%)</title><rect x="74.3" y="563.0" width="81.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.3" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (902 samples, 6.93%)</title><rect x="74.3" y="547.0" width="81.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.3" y="558.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (902 samples, 6.93%)</title><rect x="74.3" y="531.0" width="81.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.3" y="542.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (766 samples, 5.89%)</title><rect x="74.3" y="515.0" width="69.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.3" y="526.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (766 samples, 5.89%)</title><rect x="74.3" y="499.0" width="69.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.3" y="510.0">one/nio..</text>
</g>
<g>
<title>byte[] (515 samples, 3.96%)</title><rect x="74.3" y="483.0" width="46.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="77.3" y="494.0">byte[]</text>
</g>
<g>
<title>byte[] (251 samples, 1.93%)</title><rect x="121.0" y="483.0" width="22.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="124.0" y="494.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (136 samples, 1.05%)</title><rect x="143.8" y="515.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.8" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (136 samples, 1.05%)</title><rect x="143.8" y="499.0" width="12.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="146.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (10 samples, 0.08%)</title><rect x="156.1" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (10 samples, 0.08%)</title><rect x="156.1" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (10 samples, 0.08%)</title><rect x="156.1" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.08%)</title><rect x="156.1" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.08%)</title><rect x="156.1" y="515.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="159.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get (2,394 samples, 18.40%)</title><rect x="157.0" y="627.0" width="217.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.0" y="638.0">ru/mail/polis/service/ivanova..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$put$1 (2,394 samples, 18.40%)</title><rect x="157.0" y="611.0" width="217.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.0" y="622.0">ru/mail/polis/service/ivanova..</text>
</g>
<g>
<title>java/lang/String.getBytes (91 samples, 0.70%)</title><rect x="157.0" y="595.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (91 samples, 0.70%)</title><rect x="157.0" y="579.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (91 samples, 0.70%)</title><rect x="157.0" y="563.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="160.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (91 samples, 0.70%)</title><rect x="157.0" y="547.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.0" y="558.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.70%)</title><rect x="157.0" y="531.0" width="8.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="160.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (301 samples, 2.31%)</title><rect x="165.3" y="595.0" width="27.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.3" y="606.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (301 samples, 2.31%)</title><rect x="165.3" y="579.0" width="27.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.3" y="590.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (301 samples, 2.31%)</title><rect x="165.3" y="563.0" width="27.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="168.3" y="574.0">j..</text>
</g>
<g>
<title>one.nio.http.Response (39 samples, 0.30%)</title><rect x="192.6" y="595.0" width="3.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="195.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (284 samples, 2.18%)</title><rect x="196.1" y="595.0" width="25.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.1" y="606.0">o..</text>
</g>
<g>
<title>byte[] (107 samples, 0.82%)</title><rect x="196.1" y="579.0" width="9.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="199.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (70 samples, 0.54%)</title><rect x="205.8" y="579.0" width="6.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="208.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (107 samples, 0.82%)</title><rect x="212.2" y="579.0" width="9.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="215.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsertWithTimestamp (1,679 samples, 12.91%)</title><rect x="221.9" y="595.0" width="152.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.9" y="606.0">ru/mail/polis/dao/R..</text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (417 samples, 3.21%)</title><rect x="221.9" y="579.0" width="37.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.9" y="590.0">ru/..</text>
</g>
<g>
<title>byte[] (255 samples, 1.96%)</title><rect x="221.9" y="563.0" width="23.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="224.9" y="574.0">b..</text>
</g>
<g>
<title>byte[] (162 samples, 1.25%)</title><rect x="245.0" y="563.0" width="14.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampData (941 samples, 7.23%)</title><rect x="259.7" y="579.0" width="85.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.7" y="590.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (487 samples, 3.74%)</title><rect x="259.7" y="563.0" width="44.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.7" y="574.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (487 samples, 3.74%)</title><rect x="259.7" y="547.0" width="44.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.7" y="558.0">java..</text>
</g>
<g>
<title>byte[] (322 samples, 2.48%)</title><rect x="259.7" y="531.0" width="29.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="262.7" y="542.0">by..</text>
</g>
<g>
<title>byte[] (165 samples, 1.27%)</title><rect x="288.9" y="531.0" width="15.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="291.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (454 samples, 3.49%)</title><rect x="303.9" y="563.0" width="41.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.9" y="574.0">ru/..</text>
</g>
<g>
<title>byte[] (234 samples, 1.80%)</title><rect x="303.9" y="547.0" width="21.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="306.9" y="558.0">b..</text>
</g>
<g>
<title>byte[] (220 samples, 1.69%)</title><rect x="325.1" y="547.0" width="20.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (275 samples, 2.11%)</title><rect x="345.1" y="579.0" width="24.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.1" y="590.0">r..</text>
</g>
<g>
<title>byte[] (169 samples, 1.30%)</title><rect x="345.1" y="563.0" width="15.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="348.1" y="574.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.81%)</title><rect x="360.4" y="563.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.toArrayShifted (46 samples, 0.35%)</title><rect x="370.0" y="579.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="373.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (46 samples, 0.35%)</title><rect x="370.0" y="563.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.0" y="574.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.35%)</title><rect x="370.0" y="547.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="373.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get (1,430 samples, 10.99%)</title><rect x="374.2" y="627.0" width="129.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.2" y="638.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$get$0 (1,430 samples, 10.99%)</title><rect x="374.2" y="611.0" width="129.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.2" y="622.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/lang/String.getBytes (117 samples, 0.90%)</title><rect x="374.2" y="595.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (117 samples, 0.90%)</title><rect x="374.2" y="579.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (117 samples, 0.90%)</title><rect x="374.2" y="563.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="377.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (117 samples, 0.90%)</title><rect x="374.2" y="547.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="377.2" y="558.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.90%)</title><rect x="374.2" y="531.0" width="10.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="377.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (348 samples, 2.68%)</title><rect x="384.8" y="595.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.8" y="606.0">on..</text>
</g>
<g>
<title>one.nio.http.Response (50 samples, 0.38%)</title><rect x="384.8" y="579.0" width="4.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="387.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (298 samples, 2.29%)</title><rect x="389.3" y="579.0" width="27.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.3" y="590.0">o..</text>
</g>
<g>
<title>byte[] (115 samples, 0.88%)</title><rect x="389.3" y="563.0" width="10.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="392.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (82 samples, 0.63%)</title><rect x="399.8" y="563.0" width="7.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="402.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.78%)</title><rect x="407.2" y="563.0" width="9.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="410.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (482 samples, 3.71%)</title><rect x="416.4" y="595.0" width="43.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.4" y="606.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (408 samples, 3.14%)</title><rect x="416.4" y="579.0" width="37.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.4" y="590.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (408 samples, 3.14%)</title><rect x="416.4" y="563.0" width="37.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.4" y="574.0">org..</text>
</g>
<g>
<title>byte[] (267 samples, 2.05%)</title><rect x="416.4" y="547.0" width="24.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="419.4" y="558.0">b..</text>
</g>
<g>
<title>byte[] (141 samples, 1.08%)</title><rect x="440.6" y="547.0" width="12.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.toArrayShifted (74 samples, 0.57%)</title><rect x="453.4" y="579.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (74 samples, 0.57%)</title><rect x="453.4" y="563.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.4" y="574.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.57%)</title><rect x="453.4" y="547.0" width="6.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="456.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (483 samples, 3.71%)</title><rect x="460.1" y="595.0" width="43.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.1" y="606.0">ru/m..</text>
</g>
<g>
<title>byte[] (266 samples, 2.04%)</title><rect x="460.1" y="579.0" width="24.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="463.1" y="590.0">b..</text>
</g>
<g>
<title>byte[] (217 samples, 1.67%)</title><rect x="484.2" y="579.0" width="19.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,022 samples, 7.86%)</title><rect x="503.9" y="643.0" width="92.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.9" y="654.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,022 samples, 7.86%)</title><rect x="503.9" y="627.0" width="92.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.9" y="638.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (175 samples, 1.35%)</title><rect x="503.9" y="611.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (175 samples, 1.35%)</title><rect x="503.9" y="595.0" width="15.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (175 samples, 1.35%)</title><rect x="503.9" y="579.0" width="15.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (175 samples, 1.35%)</title><rect x="503.9" y="563.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (136 samples, 1.05%)</title><rect x="503.9" y="547.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (136 samples, 1.05%)</title><rect x="503.9" y="531.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (136 samples, 1.05%)</title><rect x="503.9" y="515.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (136 samples, 1.05%)</title><rect x="503.9" y="499.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (112 samples, 0.86%)</title><rect x="503.9" y="483.0" width="10.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.9" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (112 samples, 0.86%)</title><rect x="503.9" y="467.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.9" y="478.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.86%)</title><rect x="503.9" y="451.0" width="10.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="506.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (24 samples, 0.18%)</title><rect x="514.1" y="483.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.1" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (24 samples, 0.18%)</title><rect x="514.1" y="467.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="517.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (39 samples, 0.30%)</title><rect x="516.2" y="547.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (39 samples, 0.30%)</title><rect x="516.2" y="531.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (39 samples, 0.30%)</title><rect x="516.2" y="515.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.30%)</title><rect x="516.2" y="499.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.2" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.30%)</title><rect x="516.2" y="483.0" width="3.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="519.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.apply (635 samples, 4.88%)</title><rect x="519.8" y="611.0" width="57.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.8" y="622.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$sendToReplicas$2 (635 samples, 4.88%)</title><rect x="519.8" y="595.0" width="57.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.8" y="606.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.formFinalResponse (635 samples, 4.88%)</title><rect x="519.8" y="579.0" width="57.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.8" y="590.0">ru/mai..</text>
</g>
<g>
<title>java/util/Collection.stream (58 samples, 0.45%)</title><rect x="519.8" y="563.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (21 samples, 0.16%)</title><rect x="519.8" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.8" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (21 samples, 0.16%)</title><rect x="519.8" y="531.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.8" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (21 samples, 0.16%)</title><rect x="519.8" y="515.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="522.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (37 samples, 0.28%)</title><rect x="521.7" y="547.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.7" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (37 samples, 0.28%)</title><rect x="521.7" y="531.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="524.7" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (3 samples, 0.02%)</title><rect x="525.0" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="525.0" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="525.0" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.0" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$235/8451200.get$Lambda (3 samples, 0.02%)</title><rect x="525.0" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.0" y="526.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$235 (3 samples, 0.02%)</title><rect x="525.0" y="499.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="528.0" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (172 samples, 1.32%)</title><rect x="525.3" y="563.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.3" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (3 samples, 0.02%)</title><rect x="525.3" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.3" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.02%)</title><rect x="525.3" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.3" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (3 samples, 0.02%)</title><rect x="525.3" y="515.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="528.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica$$Lambda$237/461658586.apply (169 samples, 1.30%)</title><rect x="525.6" y="547.0" width="15.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.lambda$formFinalResponse$2 (169 samples, 1.30%)</title><rect x="525.6" y="531.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.6" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.06%)</title><rect x="525.6" y="515.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="528.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.14%)</title><rect x="526.3" y="515.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.3" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.05%)</title><rect x="526.3" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="529.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.07%)</title><rect x="526.8" y="499.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="529.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="527.7" y="499.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="530.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getData (37 samples, 0.28%)</title><rect x="527.9" y="515.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.9" y="526.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.28%)</title><rect x="527.9" y="499.0" width="3.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="530.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampByData (106 samples, 0.81%)</title><rect x="531.3" y="515.0" width="9.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (60 samples, 0.46%)</title><rect x="531.3" y="499.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.3" y="510.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.46%)</title><rect x="531.3" y="483.0" width="5.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="534.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (46 samples, 0.35%)</title><rect x="536.7" y="499.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.7" y="510.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.35%)</title><rect x="536.7" y="483.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="539.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (14 samples, 0.11%)</title><rect x="540.9" y="563.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.9" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (14 samples, 0.11%)</title><rect x="540.9" y="547.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="543.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (20 samples, 0.15%)</title><rect x="542.2" y="563.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.15%)</title><rect x="542.2" y="547.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (20 samples, 0.15%)</title><rect x="542.2" y="531.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (6 samples, 0.05%)</title><rect x="542.2" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (6 samples, 0.05%)</title><rect x="542.2" y="499.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="545.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (14 samples, 0.11%)</title><rect x="542.7" y="515.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (14 samples, 0.11%)</title><rect x="542.7" y="499.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.7" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.of (14 samples, 0.11%)</title><rect x="542.7" y="483.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.7" y="494.0"></text>
</g>
<g>
<title>java.util.Optional (14 samples, 0.11%)</title><rect x="542.7" y="467.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="545.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (286 samples, 2.20%)</title><rect x="544.0" y="563.0" width="25.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (3 samples, 0.02%)</title><rect x="544.0" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="544.0" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="544.0" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.0" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$236/272885942.get$Lambda (3 samples, 0.02%)</title><rect x="544.0" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.0" y="510.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$236 (3 samples, 0.02%)</title><rect x="544.0" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="547.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (283 samples, 2.18%)</title><rect x="544.3" y="547.0" width="25.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="547.3" y="558.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (275 samples, 2.11%)</title><rect x="544.3" y="531.0" width="24.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.3" y="542.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (275 samples, 2.11%)</title><rect x="544.3" y="515.0" width="24.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.3" y="526.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (262 samples, 2.01%)</title><rect x="544.3" y="499.0" width="23.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.3" y="510.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (260 samples, 2.00%)</title><rect x="544.3" y="483.0" width="23.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (260 samples, 2.00%)</title><rect x="544.3" y="467.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (260 samples, 2.00%)</title><rect x="544.3" y="451.0" width="23.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (260 samples, 2.00%)</title><rect x="544.3" y="435.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$236/272885942.apply (260 samples, 2.00%)</title><rect x="544.3" y="419.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="547.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (260 samples, 2.00%)</title><rect x="544.3" y="403.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$235/8451200.compare (260 samples, 2.00%)</title><rect x="544.3" y="387.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (260 samples, 2.00%)</title><rect x="544.3" y="371.0" width="23.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.3" y="382.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica$$Lambda$234/1096180869.applyAsLong (260 samples, 2.00%)</title><rect x="544.3" y="355.0" width="23.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.3" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.lambda$formFinalResponse$1 (260 samples, 2.00%)</title><rect x="544.3" y="339.0" width="23.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.3" y="350.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.25%)</title><rect x="544.3" y="323.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.25%)</title><rect x="544.3" y="307.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.25%)</title><rect x="544.3" y="291.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="547.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampByData (228 samples, 1.75%)</title><rect x="547.2" y="323.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="550.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (92 samples, 0.71%)</title><rect x="547.2" y="307.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.2" y="318.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.71%)</title><rect x="547.2" y="291.0" width="8.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="550.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (136 samples, 1.05%)</title><rect x="555.5" y="307.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.5" y="318.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.85%)</title><rect x="555.5" y="291.0" width="10.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="558.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (26 samples, 0.20%)</title><rect x="565.5" y="291.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (26 samples, 0.20%)</title><rect x="565.5" y="275.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="568.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (9 samples, 0.07%)</title><rect x="568.0" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (9 samples, 0.07%)</title><rect x="568.0" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.0" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (9 samples, 0.07%)</title><rect x="568.0" y="467.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="571.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (4 samples, 0.03%)</title><rect x="568.8" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (4 samples, 0.03%)</title><rect x="568.8" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="571.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (4 samples, 0.03%)</title><rect x="568.8" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (4 samples, 0.03%)</title><rect x="568.8" y="451.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="571.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (8 samples, 0.06%)</title><rect x="569.2" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.2" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (8 samples, 0.06%)</title><rect x="569.2" y="515.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="572.2" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (18 samples, 0.14%)</title><rect x="569.9" y="563.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="572.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (64 samples, 0.49%)</title><rect x="571.6" y="563.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.6" y="574.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.18%)</title><rect x="571.6" y="547.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="574.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.20%)</title><rect x="573.7" y="547.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="576.7" y="558.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.11%)</title><rect x="576.1" y="547.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="579.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology$$Lambda$133/1116379785.apply (212 samples, 1.63%)</title><rect x="577.4" y="611.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.lambda$forwardRequest$0 (212 samples, 1.63%)</title><rect x="577.4" y="595.0" width="19.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (54 samples, 0.42%)</title><rect x="577.4" y="579.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (54 samples, 0.42%)</title><rect x="577.4" y="563.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.4" y="574.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.22%)</title><rect x="577.4" y="547.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="580.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.19%)</title><rect x="580.0" y="547.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="583.0" y="558.0"></text>
</g>
<g>
<title>one.nio.http.Response (46 samples, 0.35%)</title><rect x="582.3" y="579.0" width="4.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="585.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (112 samples, 0.86%)</title><rect x="586.4" y="579.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.4" y="590.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.33%)</title><rect x="586.4" y="563.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="589.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (31 samples, 0.24%)</title><rect x="590.3" y="563.0" width="2.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="593.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.29%)</title><rect x="593.2" y="563.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="596.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (198 samples, 1.52%)</title><rect x="596.6" y="643.0" width="18.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (185 samples, 1.42%)</title><rect x="596.6" y="627.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="599.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (185 samples, 1.42%)</title><rect x="596.6" y="611.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (185 samples, 1.42%)</title><rect x="596.6" y="595.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (185 samples, 1.42%)</title><rect x="596.6" y="579.0" width="16.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="599.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13 samples, 0.10%)</title><rect x="613.4" y="627.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.10%)</title><rect x="613.4" y="611.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="616.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (13 samples, 0.10%)</title><rect x="613.4" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (13 samples, 0.10%)</title><rect x="613.4" y="579.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="616.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.run (124 samples, 0.95%)</title><rect x="614.6" y="643.0" width="11.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (124 samples, 0.95%)</title><rect x="614.6" y="627.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (124 samples, 0.95%)</title><rect x="614.6" y="611.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (124 samples, 0.95%)</title><rect x="614.6" y="595.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (124 samples, 0.95%)</title><rect x="614.6" y="579.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (124 samples, 0.95%)</title><rect x="614.6" y="563.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (124 samples, 0.95%)</title><rect x="614.6" y="547.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (124 samples, 0.95%)</title><rect x="614.6" y="531.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (124 samples, 0.95%)</title><rect x="614.6" y="515.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (124 samples, 0.95%)</title><rect x="614.6" y="499.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (124 samples, 0.95%)</title><rect x="614.6" y="483.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="617.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (115 samples, 0.88%)</title><rect x="614.6" y="467.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (113 samples, 0.87%)</title><rect x="614.7" y="451.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (6 samples, 0.05%)</title><rect x="614.7" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="617.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (107 samples, 0.82%)</title><rect x="615.3" y="435.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (107 samples, 0.82%)</title><rect x="615.3" y="419.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (107 samples, 0.82%)</title><rect x="615.3" y="403.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (27 samples, 0.21%)</title><rect x="615.3" y="387.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (11 samples, 0.08%)</title><rect x="615.3" y="371.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="618.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.apply (16 samples, 0.12%)</title><rect x="616.3" y="371.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (16 samples, 0.12%)</title><rect x="616.3" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (16 samples, 0.12%)</title><rect x="616.3" y="339.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (14 samples, 0.11%)</title><rect x="616.5" y="323.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="616.5" y="307.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="619.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="616.5" y="291.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/398643824.get$Lambda (3 samples, 0.02%)</title><rect x="616.5" y="275.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$204 (3 samples, 0.02%)</title><rect x="616.5" y="259.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="619.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (11 samples, 0.08%)</title><rect x="616.7" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (11 samples, 0.08%)</title><rect x="616.7" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.04%)</title><rect x="616.7" y="275.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="619.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="617.2" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="620.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="617.2" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.05%)</title><rect x="617.2" y="243.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="620.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (80 samples, 0.61%)</title><rect x="617.7" y="387.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (80 samples, 0.61%)</title><rect x="617.7" y="371.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.apply (80 samples, 0.61%)</title><rect x="617.7" y="355.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (80 samples, 0.61%)</title><rect x="617.7" y="339.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (80 samples, 0.61%)</title><rect x="617.7" y="323.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.apply (80 samples, 0.61%)</title><rect x="617.7" y="307.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (80 samples, 0.61%)</title><rect x="617.7" y="291.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="617.7" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="617.7" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.get$Lambda (3 samples, 0.02%)</title><rect x="617.7" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$199 (3 samples, 0.02%)</title><rect x="617.7" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="620.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.08%)</title><rect x="618.0" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.08%)</title><rect x="618.0" y="259.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (9 samples, 0.07%)</title><rect x="618.0" y="243.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="621.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (66 samples, 0.51%)</title><rect x="619.0" y="275.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="619.0" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="622.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="619.0" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (16 samples, 0.12%)</title><rect x="619.4" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (16 samples, 0.12%)</title><rect x="619.4" y="243.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (16 samples, 0.12%)</title><rect x="619.4" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1949249014.accept (6 samples, 0.05%)</title><rect x="619.4" y="211.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (6 samples, 0.05%)</title><rect x="619.4" y="195.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (6 samples, 0.05%)</title><rect x="619.4" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.03%)</title><rect x="619.5" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="622.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.03%)</title><rect x="619.5" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.03%)</title><rect x="619.5" y="131.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="622.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$198/537816286.accept (6 samples, 0.05%)</title><rect x="619.9" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (6 samples, 0.05%)</title><rect x="619.9" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (6 samples, 0.05%)</title><rect x="619.9" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (6 samples, 0.05%)</title><rect x="619.9" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (6 samples, 0.05%)</title><rect x="619.9" y="147.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.05%)</title><rect x="619.9" y="131.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.05%)</title><rect x="619.9" y="115.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.05%)</title><rect x="619.9" y="99.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.05%)</title><rect x="619.9" y="83.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (6 samples, 0.05%)</title><rect x="619.9" y="67.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (3 samples, 0.02%)</title><rect x="619.9" y="51.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.02%)</title><rect x="619.9" y="35.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.02%)</title><rect x="620.2" y="51.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.2" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.02%)</title><rect x="620.2" y="35.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.2" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="620.5" y="211.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.03%)</title><rect x="620.5" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.5" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.03%)</title><rect x="620.5" y="179.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="623.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (7 samples, 0.05%)</title><rect x="620.8" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (3 samples, 0.02%)</title><rect x="620.8" y="243.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="623.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (4 samples, 0.03%)</title><rect x="621.1" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (4 samples, 0.03%)</title><rect x="621.1" y="227.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.03%)</title><rect x="621.1" y="211.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="624.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.03%)</title><rect x="621.5" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.02%)</title><rect x="621.5" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.02%)</title><rect x="621.5" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.02%)</title><rect x="621.5" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.02%)</title><rect x="621.5" y="195.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.02%)</title><rect x="621.5" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="624.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (3 samples, 0.02%)</title><rect x="621.5" y="163.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="624.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (35 samples, 0.27%)</title><rect x="621.8" y="259.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (3 samples, 0.02%)</title><rect x="621.9" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.02%)</title><rect x="621.9" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.02%)</title><rect x="621.9" y="211.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="624.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (31 samples, 0.24%)</title><rect x="622.2" y="243.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (7 samples, 0.05%)</title><rect x="622.4" y="227.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (6 samples, 0.05%)</title><rect x="622.4" y="211.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (22 samples, 0.17%)</title><rect x="623.0" y="227.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (18 samples, 0.14%)</title><rect x="623.1" y="211.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (6 samples, 0.05%)</title><rect x="623.1" y="195.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="626.1" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.09%)</title><rect x="623.6" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.6" y="206.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.09%)</title><rect x="623.6" y="179.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="626.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="624.7" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.7" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.02%)</title><rect x="624.7" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.7" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.02%)</title><rect x="624.7" y="179.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.02%)</title><rect x="624.7" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="624.7" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="624.7" y="131.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="627.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (9 samples, 0.07%)</title><rect x="625.0" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (9 samples, 0.07%)</title><rect x="625.0" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (9 samples, 0.07%)</title><rect x="625.0" y="435.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (9 samples, 0.07%)</title><rect x="625.0" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="628.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (9 samples, 0.07%)</title><rect x="625.0" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.0" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.07%)</title><rect x="625.0" y="387.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (7 samples, 0.05%)</title><rect x="625.2" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (7 samples, 0.05%)</title><rect x="625.2" y="355.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="628.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (689 samples, 5.30%)</title><rect x="625.8" y="643.0" width="62.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.8" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (689 samples, 5.30%)</title><rect x="625.8" y="627.0" width="62.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.8" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (516 samples, 3.97%)</title><rect x="625.8" y="611.0" width="46.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.8" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (516 samples, 3.97%)</title><rect x="625.8" y="595.0" width="46.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.8" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (516 samples, 3.97%)</title><rect x="625.8" y="579.0" width="46.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.8" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (8 samples, 0.06%)</title><rect x="625.8" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (8 samples, 0.06%)</title><rect x="625.8" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (8 samples, 0.06%)</title><rect x="625.8" y="531.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (8 samples, 0.06%)</title><rect x="625.8" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (6 samples, 0.05%)</title><rect x="625.8" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (6 samples, 0.05%)</title><rect x="625.8" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.05%)</title><rect x="625.8" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.05%)</title><rect x="625.8" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.05%)</title><rect x="625.8" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.8" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.05%)</title><rect x="625.8" y="419.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="628.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (508 samples, 3.90%)</title><rect x="626.5" y="563.0" width="46.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.5" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (508 samples, 3.90%)</title><rect x="626.5" y="547.0" width="46.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.5" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (508 samples, 3.90%)</title><rect x="626.5" y="531.0" width="46.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="629.5" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (508 samples, 3.90%)</title><rect x="626.5" y="515.0" width="46.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.5" y="526.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (257 samples, 1.98%)</title><rect x="626.5" y="499.0" width="23.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="629.5" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (257 samples, 1.98%)</title><rect x="626.5" y="483.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.5" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (257 samples, 1.98%)</title><rect x="626.5" y="467.0" width="23.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.5" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (257 samples, 1.98%)</title><rect x="626.5" y="451.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.5" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (257 samples, 1.98%)</title><rect x="626.5" y="435.0" width="23.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.5" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (257 samples, 1.98%)</title><rect x="626.5" y="419.0" width="23.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.5" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (257 samples, 1.98%)</title><rect x="626.5" y="403.0" width="23.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.5" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (243 samples, 1.87%)</title><rect x="626.5" y="387.0" width="22.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.5" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (243 samples, 1.87%)</title><rect x="626.5" y="371.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.5" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (235 samples, 1.81%)</title><rect x="626.5" y="355.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.5" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.04%)</title><rect x="626.5" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="629.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.apply (218 samples, 1.68%)</title><rect x="627.0" y="339.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (218 samples, 1.68%)</title><rect x="627.0" y="323.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.04%)</title><rect x="627.0" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="630.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.04%)</title><rect x="627.0" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.get$Lambda (5 samples, 0.04%)</title><rect x="627.0" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$222 (5 samples, 0.04%)</title><rect x="627.0" y="259.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="630.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (6 samples, 0.05%)</title><rect x="627.4" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (6 samples, 0.05%)</title><rect x="627.4" y="291.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (4 samples, 0.03%)</title><rect x="627.4" y="275.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="630.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (207 samples, 1.59%)</title><rect x="628.0" y="307.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="628.0" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="628.0" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/2051064248.get$Lambda (3 samples, 0.02%)</title><rect x="628.0" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$221 (3 samples, 0.02%)</title><rect x="628.0" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="631.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (14 samples, 0.11%)</title><rect x="628.3" y="291.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (14 samples, 0.11%)</title><rect x="628.3" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (8 samples, 0.06%)</title><rect x="628.3" y="259.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="631.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="629.0" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.05%)</title><rect x="629.0" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.05%)</title><rect x="629.0" y="227.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="632.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (190 samples, 1.46%)</title><rect x="629.5" y="291.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.5" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$123/285631240.apply (16 samples, 0.12%)</title><rect x="629.5" y="275.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (16 samples, 0.12%)</title><rect x="629.5" y="259.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (16 samples, 0.12%)</title><rect x="629.5" y="243.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (6 samples, 0.05%)</title><rect x="629.5" y="227.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="632.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (10 samples, 0.08%)</title><rect x="630.1" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.05%)</title><rect x="630.1" y="211.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="633.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.03%)</title><rect x="630.6" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="633.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (174 samples, 1.34%)</title><rect x="631.0" y="275.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2017647512.linkToTargetMethod (6 samples, 0.05%)</title><rect x="631.2" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1812561793.invokeStatic (6 samples, 0.05%)</title><rect x="631.2" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.get$Lambda (6 samples, 0.05%)</title><rect x="631.2" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$212 (6 samples, 0.05%)</title><rect x="631.2" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="634.2" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (38 samples, 0.29%)</title><rect x="631.7" y="259.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.11%)</title><rect x="631.7" y="243.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.03%)</title><rect x="631.7" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.7" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.03%)</title><rect x="631.7" y="211.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="634.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.08%)</title><rect x="632.1" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.1" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.08%)</title><rect x="632.1" y="211.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="635.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (18 samples, 0.14%)</title><rect x="633.0" y="243.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.0" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.14%)</title><rect x="633.0" y="227.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (18 samples, 0.14%)</title><rect x="633.0" y="211.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.08%)</title><rect x="633.0" y="195.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.03%)</title><rect x="633.0" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="636.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.03%)</title><rect x="633.0" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.03%)</title><rect x="633.0" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.0" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.03%)</title><rect x="633.0" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.0" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (4 samples, 0.03%)</title><rect x="633.0" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (3 samples, 0.02%)</title><rect x="633.1" y="99.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.1" y="110.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.02%)</title><rect x="633.1" y="83.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.1" y="94.0"></text>
</g>
<g>
<title>java.lang.Long (3 samples, 0.02%)</title><rect x="633.1" y="67.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="636.1" y="78.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.05%)</title><rect x="633.3" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (7 samples, 0.05%)</title><rect x="633.3" y="163.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (7 samples, 0.05%)</title><rect x="633.3" y="147.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="636.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$208/768646236.get (5 samples, 0.04%)</title><rect x="634.0" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.0" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (5 samples, 0.04%)</title><rect x="634.0" y="179.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="637.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (6 samples, 0.05%)</title><rect x="634.6" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.6" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (6 samples, 0.05%)</title><rect x="634.6" y="227.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="637.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.13%)</title><rect x="635.1" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.04%)</title><rect x="635.1" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="635.3" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.02%)</title><rect x="635.3" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.02%)</title><rect x="635.3" y="195.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="638.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.09%)</title><rect x="635.6" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.09%)</title><rect x="635.6" y="227.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.05%)</title><rect x="635.6" y="211.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="638.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="636.2" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="636.2" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="639.2" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.04%)</title><rect x="636.2" y="179.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="639.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (6 samples, 0.05%)</title><rect x="636.7" y="259.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="639.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (7 samples, 0.05%)</title><rect x="637.2" y="259.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="640.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.02%)</title><rect x="637.9" y="259.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="640.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (5 samples, 0.04%)</title><rect x="638.1" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="641.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (5 samples, 0.04%)</title><rect x="638.1" y="243.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="641.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (90 samples, 0.69%)</title><rect x="638.6" y="259.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.run (90 samples, 0.69%)</title><rect x="638.6" y="243.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (90 samples, 0.69%)</title><rect x="638.6" y="227.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.12%)</title><rect x="638.6" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.12%)</title><rect x="638.6" y="195.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.get$Lambda (3 samples, 0.02%)</title><rect x="638.6" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$213 (3 samples, 0.02%)</title><rect x="638.6" y="163.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="641.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1661738971.get$Lambda (5 samples, 0.04%)</title><rect x="638.9" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (5 samples, 0.04%)</title><rect x="638.9" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="641.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/173548741.get$Lambda (8 samples, 0.06%)</title><rect x="639.3" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (8 samples, 0.06%)</title><rect x="639.3" y="163.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="642.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.08%)</title><rect x="640.0" y="211.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.08%)</title><rect x="640.0" y="195.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.04%)</title><rect x="640.0" y="179.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="643.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="640.5" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="643.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.04%)</title><rect x="640.5" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.04%)</title><rect x="640.5" y="147.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="643.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (6 samples, 0.05%)</title><rect x="641.0" y="211.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="644.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (7 samples, 0.05%)</title><rect x="641.5" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.05%)</title><rect x="641.5" y="195.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="644.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (13 samples, 0.10%)</title><rect x="642.1" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (13 samples, 0.10%)</title><rect x="642.1" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.09%)</title><rect x="642.2" y="179.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.09%)</title><rect x="642.2" y="163.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.09%)</title><rect x="642.2" y="147.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.03%)</title><rect x="642.2" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="645.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.06%)</title><rect x="642.6" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.06%)</title><rect x="642.6" y="115.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.6" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.06%)</title><rect x="642.6" y="99.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="645.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (12 samples, 0.09%)</title><rect x="643.3" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.09%)</title><rect x="643.3" y="195.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (12 samples, 0.09%)</title><rect x="643.3" y="179.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.09%)</title><rect x="643.3" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.05%)</title><rect x="643.3" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.05%)</title><rect x="643.3" y="131.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="646.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.05%)</title><rect x="643.9" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.05%)</title><rect x="643.9" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.9" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.05%)</title><rect x="643.9" y="115.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="646.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (26 samples, 0.20%)</title><rect x="644.4" y="211.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (7 samples, 0.05%)</title><rect x="644.4" y="195.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="647.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (19 samples, 0.15%)</title><rect x="645.0" y="195.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.15%)</title><rect x="645.0" y="179.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="648.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (19 samples, 0.15%)</title><rect x="645.0" y="163.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.15%)</title><rect x="645.0" y="147.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="648.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.02%)</title><rect x="645.0" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="645.0" y="115.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="648.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.12%)</title><rect x="645.3" y="131.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.12%)</title><rect x="645.3" y="115.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="648.3" y="126.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.12%)</title><rect x="645.3" y="99.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="648.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.apply (12 samples, 0.09%)</title><rect x="646.8" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (12 samples, 0.09%)</title><rect x="646.8" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (9 samples, 0.07%)</title><rect x="646.8" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.8" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (9 samples, 0.07%)</title><rect x="646.8" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (9 samples, 0.07%)</title><rect x="646.8" y="275.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.8" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (9 samples, 0.07%)</title><rect x="646.8" y="259.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="649.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.02%)</title><rect x="647.6" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.02%)</title><rect x="647.6" y="291.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="650.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.06%)</title><rect x="647.8" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.06%)</title><rect x="647.8" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/516891066.apply (8 samples, 0.06%)</title><rect x="647.8" y="323.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (8 samples, 0.06%)</title><rect x="647.8" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (8 samples, 0.06%)</title><rect x="647.8" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.06%)</title><rect x="647.8" y="275.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="650.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/398643824.apply (14 samples, 0.11%)</title><rect x="648.6" y="387.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (14 samples, 0.11%)</title><rect x="648.6" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (14 samples, 0.11%)</title><rect x="648.6" y="355.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="651.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (251 samples, 1.93%)</title><rect x="649.8" y="499.0" width="22.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.8" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (15 samples, 0.12%)</title><rect x="649.8" y="483.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (15 samples, 0.12%)</title><rect x="649.8" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (15 samples, 0.12%)</title><rect x="649.8" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (15 samples, 0.12%)</title><rect x="649.8" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.12%)</title><rect x="649.8" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.8" y="430.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.12%)</title><rect x="649.8" y="403.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="652.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (8 samples, 0.06%)</title><rect x="651.2" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.06%)</title><rect x="651.2" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.06%)</title><rect x="651.2" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.2" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.06%)</title><rect x="651.2" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.06%)</title><rect x="651.2" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.2" y="430.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.06%)</title><rect x="651.2" y="403.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="654.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (20 samples, 0.15%)</title><rect x="651.9" y="483.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.9" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.02%)</title><rect x="652.0" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="652.0" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.02%)</title><rect x="652.0" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.0" y="446.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="652.0" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="655.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (5 samples, 0.04%)</title><rect x="652.3" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.3" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (5 samples, 0.04%)</title><rect x="652.3" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.3" y="462.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="652.3" y="435.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="655.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.08%)</title><rect x="652.7" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.08%)</title><rect x="652.7" y="451.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.07%)</title><rect x="652.7" y="435.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="655.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (68 samples, 0.52%)</title><rect x="653.7" y="483.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (68 samples, 0.52%)</title><rect x="653.7" y="467.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.7" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (68 samples, 0.52%)</title><rect x="653.7" y="451.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.03%)</title><rect x="653.8" y="435.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="656.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.05%)</title><rect x="654.2" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="657.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (3 samples, 0.02%)</title><rect x="654.7" y="435.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="657.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="655.0" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="655.0" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (3 samples, 0.02%)</title><rect x="655.0" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.0" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.02%)</title><rect x="655.0" y="387.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="658.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (46 samples, 0.35%)</title><rect x="655.4" y="435.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (46 samples, 0.35%)</title><rect x="655.4" y="419.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (46 samples, 0.35%)</title><rect x="655.4" y="403.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.07%)</title><rect x="655.4" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.07%)</title><rect x="655.4" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (9 samples, 0.07%)</title><rect x="655.4" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.4" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (9 samples, 0.07%)</title><rect x="655.4" y="339.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="658.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.03%)</title><rect x="656.2" y="387.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (4 samples, 0.03%)</title><rect x="656.2" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="659.2" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.03%)</title><rect x="656.2" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="656.2" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="656.2" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="656.2" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="656.2" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="656.2" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.2" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="656.2" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="659.2" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (22 samples, 0.17%)</title><rect x="656.6" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.6" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (22 samples, 0.17%)</title><rect x="656.6" y="371.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (10 samples, 0.08%)</title><rect x="656.6" y="355.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.08%)</title><rect x="656.6" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.08%)</title><rect x="656.6" y="323.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="659.6" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (12 samples, 0.09%)</title><rect x="657.5" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.5" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (12 samples, 0.09%)</title><rect x="657.5" y="339.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="660.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.08%)</title><rect x="658.6" y="387.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.08%)</title><rect x="658.6" y="371.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="661.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.03%)</title><rect x="659.5" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.03%)</title><rect x="659.5" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="662.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (140 samples, 1.08%)</title><rect x="659.9" y="483.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.9" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (6 samples, 0.05%)</title><rect x="659.9" y="467.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="662.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.11%)</title><rect x="660.5" y="467.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.11%)</title><rect x="660.5" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.5" y="462.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.11%)</title><rect x="660.5" y="435.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="663.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (16 samples, 0.12%)</title><rect x="661.7" y="467.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.12%)</title><rect x="661.7" y="451.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.05%)</title><rect x="661.7" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="664.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.07%)</title><rect x="662.4" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.4" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.07%)</title><rect x="662.4" y="419.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="665.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (104 samples, 0.80%)</title><rect x="663.2" y="467.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.22%)</title><rect x="663.2" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.22%)</title><rect x="663.2" y="435.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.05%)</title><rect x="663.2" y="419.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="666.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.17%)</title><rect x="663.7" y="419.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.7" y="430.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.17%)</title><rect x="663.7" y="403.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="666.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (15 samples, 0.12%)</title><rect x="665.7" y="451.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (15 samples, 0.12%)</title><rect x="665.7" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.7" y="446.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.08%)</title><rect x="665.7" y="419.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="668.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.04%)</title><rect x="666.6" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="669.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (16 samples, 0.12%)</title><rect x="667.1" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (16 samples, 0.12%)</title><rect x="667.1" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.12%)</title><rect x="667.1" y="419.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.05%)</title><rect x="667.1" y="403.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="670.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.07%)</title><rect x="667.7" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="670.7" y="414.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.07%)</title><rect x="667.7" y="387.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="670.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.13%)</title><rect x="668.5" y="451.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.13%)</title><rect x="668.5" y="435.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.5" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.13%)</title><rect x="668.5" y="419.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.5" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.13%)</title><rect x="668.5" y="403.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.13%)</title><rect x="668.5" y="387.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.5" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.13%)</title><rect x="668.5" y="371.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="671.5" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (28 samples, 0.22%)</title><rect x="670.1" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.1" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.07%)</title><rect x="670.1" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.07%)</title><rect x="670.1" y="419.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="673.1" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (12 samples, 0.09%)</title><rect x="670.9" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="673.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (12 samples, 0.09%)</title><rect x="670.9" y="419.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="673.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$205/782105492.apply (7 samples, 0.05%)</title><rect x="672.0" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (7 samples, 0.05%)</title><rect x="672.0" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.05%)</title><rect x="672.0" y="403.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="675.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (173 samples, 1.33%)</title><rect x="672.6" y="611.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (173 samples, 1.33%)</title><rect x="672.6" y="595.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (173 samples, 1.33%)</title><rect x="672.6" y="579.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (173 samples, 1.33%)</title><rect x="672.6" y="563.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (173 samples, 1.33%)</title><rect x="672.6" y="547.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (86 samples, 0.66%)</title><rect x="672.6" y="531.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.04%)</title><rect x="672.6" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.04%)</title><rect x="672.6" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$172/912126104.get$Lambda (3 samples, 0.02%)</title><rect x="672.6" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="675.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$172 (3 samples, 0.02%)</title><rect x="672.6" y="467.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="675.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (4 samples, 0.03%)</title><rect x="673.1" y="515.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="676.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (5 samples, 0.04%)</title><rect x="673.4" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (5 samples, 0.04%)</title><rect x="673.4" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (3 samples, 0.02%)</title><rect x="673.4" y="483.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="676.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (72 samples, 0.55%)</title><rect x="673.9" y="515.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (72 samples, 0.55%)</title><rect x="673.9" y="499.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.run (32 samples, 0.25%)</title><rect x="673.9" y="483.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (32 samples, 0.25%)</title><rect x="673.9" y="467.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (32 samples, 0.25%)</title><rect x="673.9" y="451.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.06%)</title><rect x="673.9" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.9" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.05%)</title><rect x="673.9" y="419.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.9" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.03%)</title><rect x="673.9" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="676.9" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.03%)</title><rect x="673.9" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="676.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.02%)</title><rect x="674.2" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (3 samples, 0.02%)</title><rect x="674.2" y="387.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="677.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (24 samples, 0.18%)</title><rect x="674.6" y="435.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.6" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.03%)</title><rect x="674.6" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.6" y="430.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.03%)</title><rect x="674.6" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.6" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.03%)</title><rect x="674.6" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.03%)</title><rect x="674.6" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.6" y="382.0"></text>
</g>
<g>
<title>java.time.Instant (4 samples, 0.03%)</title><rect x="674.6" y="355.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="677.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (20 samples, 0.15%)</title><rect x="675.0" y="419.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (9 samples, 0.07%)</title><rect x="675.0" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.0" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.03%)</title><rect x="675.0" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.0" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (4 samples, 0.03%)</title><rect x="675.0" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="678.0" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.03%)</title><rect x="675.0" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.0" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (4 samples, 0.03%)</title><rect x="675.0" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.0" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (4 samples, 0.03%)</title><rect x="675.0" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.0" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (4 samples, 0.03%)</title><rect x="675.0" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="678.0" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.02%)</title><rect x="675.3" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.3" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.02%)</title><rect x="675.3" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.3" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (3 samples, 0.02%)</title><rect x="675.3" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="678.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.02%)</title><rect x="675.8" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.8" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (3 samples, 0.02%)</title><rect x="675.8" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (3 samples, 0.02%)</title><rect x="675.8" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.8" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.02%)</title><rect x="675.8" y="355.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="678.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (8 samples, 0.06%)</title><rect x="676.1" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6 samples, 0.05%)</title><rect x="676.2" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 0.03%)</title><rect x="676.4" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.03%)</title><rect x="676.4" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (4 samples, 0.03%)</title><rect x="676.4" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="679.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (40 samples, 0.31%)</title><rect x="676.8" y="483.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (40 samples, 0.31%)</title><rect x="676.8" y="467.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="679.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (40 samples, 0.31%)</title><rect x="676.8" y="451.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (40 samples, 0.31%)</title><rect x="676.8" y="435.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (40 samples, 0.31%)</title><rect x="676.8" y="419.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (40 samples, 0.31%)</title><rect x="676.8" y="403.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (40 samples, 0.31%)</title><rect x="676.8" y="387.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.accept (40 samples, 0.31%)</title><rect x="676.8" y="371.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (40 samples, 0.31%)</title><rect x="676.8" y="355.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (40 samples, 0.31%)</title><rect x="676.8" y="339.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (40 samples, 0.31%)</title><rect x="676.8" y="323.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (38 samples, 0.29%)</title><rect x="677.0" y="307.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (38 samples, 0.29%)</title><rect x="677.0" y="291.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (38 samples, 0.29%)</title><rect x="677.0" y="275.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (38 samples, 0.29%)</title><rect x="677.0" y="259.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Thread (23 samples, 0.18%)</title><rect x="677.0" y="243.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="680.0" y="254.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (15 samples, 0.12%)</title><rect x="679.1" y="243.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (4 samples, 0.03%)</title><rect x="679.4" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="679.4" y="211.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.4" y="222.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (7 samples, 0.05%)</title><rect x="679.8" y="227.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.8" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (7 samples, 0.05%)</title><rect x="679.8" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.8" y="222.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (7 samples, 0.05%)</title><rect x="679.8" y="195.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.8" y="206.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (6 samples, 0.05%)</title><rect x="679.9" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="682.9" y="190.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (4 samples, 0.03%)</title><rect x="679.9" y="163.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="682.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (87 samples, 0.67%)</title><rect x="680.4" y="531.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (87 samples, 0.67%)</title><rect x="680.4" y="515.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (87 samples, 0.67%)</title><rect x="680.4" y="499.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (87 samples, 0.67%)</title><rect x="680.4" y="483.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (87 samples, 0.67%)</title><rect x="680.4" y="467.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (87 samples, 0.67%)</title><rect x="680.4" y="451.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.run (33 samples, 0.25%)</title><rect x="680.7" y="435.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (33 samples, 0.25%)</title><rect x="680.7" y="419.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (33 samples, 0.25%)</title><rect x="680.7" y="403.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.08%)</title><rect x="680.7" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.05%)</title><rect x="680.7" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.03%)</title><rect x="680.9" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.9" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (4 samples, 0.03%)</title><rect x="680.9" y="339.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="683.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.04%)</title><rect x="681.2" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.04%)</title><rect x="681.2" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.04%)</title><rect x="681.2" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (4 samples, 0.03%)</title><rect x="681.2" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.2" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (4 samples, 0.03%)</title><rect x="681.2" y="307.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="684.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (22 samples, 0.17%)</title><rect x="681.7" y="387.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.7" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.02%)</title><rect x="681.7" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.7" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.02%)</title><rect x="681.7" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.7" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.02%)</title><rect x="681.7" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.7" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.02%)</title><rect x="681.7" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.7" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (3 samples, 0.02%)</title><rect x="681.7" y="307.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="684.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (19 samples, 0.15%)</title><rect x="682.0" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (6 samples, 0.05%)</title><rect x="682.0" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (4 samples, 0.03%)</title><rect x="682.5" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.5" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (4 samples, 0.03%)</title><rect x="682.5" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (4 samples, 0.03%)</title><rect x="682.5" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.5" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.03%)</title><rect x="682.5" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="685.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9 samples, 0.07%)</title><rect x="682.9" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (4 samples, 0.03%)</title><rect x="682.9" y="339.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="685.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5 samples, 0.04%)</title><rect x="683.2" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="686.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (3 samples, 0.02%)</title><rect x="683.2" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.02%)</title><rect x="683.2" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.02%)</title><rect x="683.2" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (3 samples, 0.02%)</title><rect x="683.2" y="275.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="686.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (45 samples, 0.35%)</title><rect x="683.7" y="435.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (45 samples, 0.35%)</title><rect x="683.7" y="419.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (45 samples, 0.35%)</title><rect x="683.7" y="403.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (35 samples, 0.27%)</title><rect x="683.7" y="387.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 0.27%)</title><rect x="683.7" y="371.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (35 samples, 0.27%)</title><rect x="683.7" y="355.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35 samples, 0.27%)</title><rect x="683.7" y="339.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.accept (35 samples, 0.27%)</title><rect x="683.7" y="323.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (35 samples, 0.27%)</title><rect x="683.7" y="307.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (35 samples, 0.27%)</title><rect x="683.7" y="291.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 0.27%)</title><rect x="683.7" y="275.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.02%)</title><rect x="683.7" y="259.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.apply (3 samples, 0.02%)</title><rect x="683.7" y="243.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.02%)</title><rect x="683.7" y="227.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (3 samples, 0.02%)</title><rect x="683.7" y="211.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="686.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32 samples, 0.25%)</title><rect x="683.9" y="259.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (32 samples, 0.25%)</title><rect x="683.9" y="243.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (32 samples, 0.25%)</title><rect x="683.9" y="227.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (32 samples, 0.25%)</title><rect x="683.9" y="211.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.9" y="222.0"></text>
</g>
<g>
<title>java.lang.Thread (19 samples, 0.15%)</title><rect x="683.9" y="195.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="686.9" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (13 samples, 0.10%)</title><rect x="685.7" y="195.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.7" y="206.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (8 samples, 0.06%)</title><rect x="686.1" y="179.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.1" y="190.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (8 samples, 0.06%)</title><rect x="686.1" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.1" y="174.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (8 samples, 0.06%)</title><rect x="686.1" y="147.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.1" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (6 samples, 0.05%)</title><rect x="686.3" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.3" y="142.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (4 samples, 0.03%)</title><rect x="686.5" y="115.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="689.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (10 samples, 0.08%)</title><rect x="686.9" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.9" y="398.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.08%)</title><rect x="686.9" y="371.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="689.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (6 samples, 0.05%)</title><rect x="687.8" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (6 samples, 0.05%)</title><rect x="687.8" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (6 samples, 0.05%)</title><rect x="687.8" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (6 samples, 0.05%)</title><rect x="687.8" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (6 samples, 0.05%)</title><rect x="687.8" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.8" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.02%)</title><rect x="687.8" y="355.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.02%)</title><rect x="688.0" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="688.0" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="691.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="688.0" y="323.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="691.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (783 samples, 6.02%)</title><rect x="688.3" y="691.0" width="71.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.3" y="702.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.08%)</title><rect x="688.3" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="691.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.08%)</title><rect x="688.3" y="659.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1538519397.get$Lambda (7 samples, 0.05%)</title><rect x="688.3" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$185 (7 samples, 0.05%)</title><rect x="688.3" y="627.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="691.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1242618604.get$Lambda (4 samples, 0.03%)</title><rect x="688.9" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$189 (4 samples, 0.03%)</title><rect x="688.9" y="627.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="691.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1043351526.linkToTargetMethod (16 samples, 0.12%)</title><rect x="689.3" y="675.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.12%)</title><rect x="689.3" y="659.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.get$Lambda (16 samples, 0.12%)</title><rect x="689.3" y="643.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$186 (16 samples, 0.12%)</title><rect x="689.3" y="627.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="692.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (168 samples, 1.29%)</title><rect x="690.8" y="675.0" width="15.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2104524528.accept (145 samples, 1.11%)</title><rect x="690.8" y="659.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (145 samples, 1.11%)</title><rect x="690.8" y="643.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (145 samples, 1.11%)</title><rect x="690.8" y="627.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (145 samples, 1.11%)</title><rect x="690.8" y="611.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (145 samples, 1.11%)</title><rect x="690.8" y="595.0" width="13.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (145 samples, 1.11%)</title><rect x="690.8" y="579.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (145 samples, 1.11%)</title><rect x="690.8" y="563.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (145 samples, 1.11%)</title><rect x="690.8" y="547.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (145 samples, 1.11%)</title><rect x="690.8" y="531.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (145 samples, 1.11%)</title><rect x="690.8" y="515.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="693.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (145 samples, 1.11%)</title><rect x="690.8" y="499.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (145 samples, 1.11%)</title><rect x="690.8" y="483.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (23 samples, 0.18%)</title><rect x="690.8" y="467.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (23 samples, 0.18%)</title><rect x="690.8" y="451.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (23 samples, 0.18%)</title><rect x="690.8" y="435.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (13 samples, 0.10%)</title><rect x="690.8" y="419.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (13 samples, 0.10%)</title><rect x="690.8" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (13 samples, 0.10%)</title><rect x="690.8" y="387.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (13 samples, 0.10%)</title><rect x="690.8" y="371.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.10%)</title><rect x="690.8" y="355.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="693.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.08%)</title><rect x="691.9" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="694.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.08%)</title><rect x="691.9" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.08%)</title><rect x="691.9" y="387.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.08%)</title><rect x="691.9" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.08%)</title><rect x="691.9" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (10 samples, 0.08%)</title><rect x="691.9" y="339.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="694.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.07%)</title><rect x="692.8" y="467.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.07%)</title><rect x="692.8" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.07%)</title><rect x="692.8" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (9 samples, 0.07%)</title><rect x="692.8" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (9 samples, 0.07%)</title><rect x="692.8" y="403.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="695.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (113 samples, 0.87%)</title><rect x="693.7" y="467.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (50 samples, 0.38%)</title><rect x="693.7" y="451.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (31 samples, 0.24%)</title><rect x="693.7" y="435.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.7" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (31 samples, 0.24%)</title><rect x="693.7" y="419.0" width="2.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="696.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (19 samples, 0.15%)</title><rect x="696.5" y="435.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.5" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (19 samples, 0.15%)</title><rect x="696.5" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.5" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (19 samples, 0.15%)</title><rect x="696.5" y="403.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="699.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (63 samples, 0.48%)</title><rect x="698.2" y="451.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$152/998016372.get (63 samples, 0.48%)</title><rect x="698.2" y="435.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (63 samples, 0.48%)</title><rect x="698.2" y="419.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (63 samples, 0.48%)</title><rect x="698.2" y="403.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (63 samples, 0.48%)</title><rect x="698.2" y="387.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.2" y="398.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="698.2" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="701.2" y="382.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.46%)</title><rect x="698.5" y="371.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="701.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$191/879344288.accept (23 samples, 0.18%)</title><rect x="703.9" y="659.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (23 samples, 0.18%)</title><rect x="703.9" y="643.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.run (23 samples, 0.18%)</title><rect x="703.9" y="627.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (23 samples, 0.18%)</title><rect x="703.9" y="611.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (23 samples, 0.18%)</title><rect x="703.9" y="595.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (23 samples, 0.18%)</title><rect x="703.9" y="579.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (23 samples, 0.18%)</title><rect x="703.9" y="563.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (23 samples, 0.18%)</title><rect x="703.9" y="547.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="706.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (109 samples, 0.84%)</title><rect x="706.0" y="675.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.0" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (109 samples, 0.84%)</title><rect x="706.0" y="659.0" width="9.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="709.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (39 samples, 0.30%)</title><rect x="715.9" y="675.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (20 samples, 0.15%)</title><rect x="715.9" y="659.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (20 samples, 0.15%)</title><rect x="715.9" y="643.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (20 samples, 0.15%)</title><rect x="715.9" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (20 samples, 0.15%)</title><rect x="715.9" y="611.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (20 samples, 0.15%)</title><rect x="715.9" y="595.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (20 samples, 0.15%)</title><rect x="715.9" y="579.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (20 samples, 0.15%)</title><rect x="715.9" y="563.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="718.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (19 samples, 0.15%)</title><rect x="717.7" y="659.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (19 samples, 0.15%)</title><rect x="717.7" y="643.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="720.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (102 samples, 0.78%)</title><rect x="719.4" y="675.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1024844896.run (60 samples, 0.46%)</title><rect x="719.4" y="659.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (60 samples, 0.46%)</title><rect x="719.4" y="643.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="722.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (60 samples, 0.46%)</title><rect x="719.4" y="627.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (60 samples, 0.46%)</title><rect x="719.4" y="611.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (60 samples, 0.46%)</title><rect x="719.4" y="595.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (60 samples, 0.46%)</title><rect x="719.4" y="579.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (60 samples, 0.46%)</title><rect x="719.4" y="563.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (60 samples, 0.46%)</title><rect x="719.4" y="547.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (60 samples, 0.46%)</title><rect x="719.4" y="531.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (60 samples, 0.46%)</title><rect x="719.4" y="515.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (32 samples, 0.25%)</title><rect x="719.4" y="499.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (32 samples, 0.25%)</title><rect x="719.4" y="483.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (32 samples, 0.25%)</title><rect x="719.4" y="467.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (27 samples, 0.21%)</title><rect x="719.4" y="451.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (27 samples, 0.21%)</title><rect x="719.4" y="435.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.21%)</title><rect x="719.4" y="419.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.21%)</title><rect x="719.4" y="403.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.21%)</title><rect x="719.4" y="387.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.4" y="398.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.21%)</title><rect x="719.4" y="371.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="722.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.04%)</title><rect x="721.9" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.04%)</title><rect x="721.9" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.04%)</title><rect x="721.9" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (5 samples, 0.04%)</title><rect x="721.9" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (5 samples, 0.04%)</title><rect x="721.9" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="724.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (28 samples, 0.22%)</title><rect x="722.3" y="499.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="725.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.22%)</title><rect x="722.3" y="483.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.22%)</title><rect x="722.3" y="467.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (28 samples, 0.22%)</title><rect x="722.3" y="451.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.22%)</title><rect x="722.3" y="435.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (28 samples, 0.22%)</title><rect x="722.3" y="419.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (28 samples, 0.22%)</title><rect x="722.3" y="403.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="725.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$159/2084334116.run (42 samples, 0.32%)</title><rect x="724.9" y="659.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (42 samples, 0.32%)</title><rect x="724.9" y="643.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.15%)</title><rect x="724.9" y="627.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.15%)</title><rect x="724.9" y="611.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.get$Lambda (20 samples, 0.15%)</title><rect x="724.9" y="595.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$192 (20 samples, 0.15%)</title><rect x="724.9" y="579.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="727.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.17%)</title><rect x="726.7" y="627.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 0.17%)</title><rect x="726.7" y="611.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 0.17%)</title><rect x="726.7" y="595.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (22 samples, 0.17%)</title><rect x="726.7" y="579.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="729.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (179 samples, 1.38%)</title><rect x="728.7" y="675.0" width="16.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="731.7" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (22 samples, 0.17%)</title><rect x="728.7" y="659.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.7" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (22 samples, 0.17%)</title><rect x="728.7" y="643.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.7" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (22 samples, 0.17%)</title><rect x="728.7" y="627.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.7" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (22 samples, 0.17%)</title><rect x="728.7" y="611.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.7" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (22 samples, 0.17%)</title><rect x="728.7" y="595.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="731.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (157 samples, 1.21%)</title><rect x="730.7" y="659.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.17%)</title><rect x="730.7" y="643.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.17%)</title><rect x="730.7" y="627.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$224/1515826887.get$Lambda (22 samples, 0.17%)</title><rect x="730.7" y="611.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$224 (22 samples, 0.17%)</title><rect x="730.7" y="595.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="733.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (43 samples, 0.33%)</title><rect x="732.7" y="643.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.7" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (43 samples, 0.33%)</title><rect x="732.7" y="627.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="735.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (12 samples, 0.09%)</title><rect x="736.6" y="643.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (12 samples, 0.09%)</title><rect x="736.6" y="627.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.6" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (12 samples, 0.09%)</title><rect x="736.6" y="611.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="739.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (80 samples, 0.61%)</title><rect x="737.6" y="643.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.6" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (26 samples, 0.20%)</title><rect x="737.6" y="627.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="740.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (54 samples, 0.42%)</title><rect x="740.0" y="627.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.0" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (54 samples, 0.42%)</title><rect x="740.0" y="611.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.0" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (54 samples, 0.42%)</title><rect x="740.0" y="595.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="743.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (94 samples, 0.72%)</title><rect x="744.9" y="675.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.05%)</title><rect x="744.9" y="659.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.05%)</title><rect x="744.9" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$184/1509399046.get$Lambda (7 samples, 0.05%)</title><rect x="744.9" y="627.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$184 (7 samples, 0.05%)</title><rect x="744.9" y="611.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="747.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (57 samples, 0.44%)</title><rect x="745.5" y="659.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (25 samples, 0.19%)</title><rect x="745.5" y="643.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (25 samples, 0.19%)</title><rect x="745.5" y="627.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="748.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (32 samples, 0.25%)</title><rect x="747.8" y="643.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (32 samples, 0.25%)</title><rect x="747.8" y="627.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="750.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (30 samples, 0.23%)</title><rect x="750.7" y="659.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (30 samples, 0.23%)</title><rect x="750.7" y="643.0" width="2.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="753.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (34 samples, 0.26%)</title><rect x="753.4" y="675.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.4" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (34 samples, 0.26%)</title><rect x="753.4" y="659.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (34 samples, 0.26%)</title><rect x="753.4" y="643.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (34 samples, 0.26%)</title><rect x="753.4" y="627.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.11%)</title><rect x="753.4" y="611.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.4" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.11%)</title><rect x="753.4" y="595.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="756.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (20 samples, 0.15%)</title><rect x="754.7" y="611.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (20 samples, 0.15%)</title><rect x="754.7" y="595.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (20 samples, 0.15%)</title><rect x="754.7" y="579.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (20 samples, 0.15%)</title><rect x="754.7" y="563.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.7" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (20 samples, 0.15%)</title><rect x="754.7" y="547.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (20 samples, 0.15%)</title><rect x="754.7" y="531.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="757.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (12 samples, 0.09%)</title><rect x="756.5" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="759.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (12 samples, 0.09%)</title><rect x="756.5" y="659.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (12 samples, 0.09%)</title><rect x="756.5" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (12 samples, 0.09%)</title><rect x="756.5" y="627.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (12 samples, 0.09%)</title><rect x="756.5" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (12 samples, 0.09%)</title><rect x="756.5" y="595.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="759.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (19 samples, 0.15%)</title><rect x="757.6" y="675.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.6" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (19 samples, 0.15%)</title><rect x="757.6" y="659.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (19 samples, 0.15%)</title><rect x="757.6" y="643.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (19 samples, 0.15%)</title><rect x="757.6" y="627.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="760.6" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,746 samples, 36.48%)</title><rect x="759.5" y="691.0" width="430.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.5" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 0.25%)</title><rect x="759.5" y="675.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.5" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (32 samples, 0.25%)</title><rect x="759.5" y="659.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="762.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4,714 samples, 36.24%)</title><rect x="762.4" y="675.0" width="427.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.4" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,714 samples, 36.24%)</title><rect x="762.4" y="659.0" width="427.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.4" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,714 samples, 36.24%)</title><rect x="762.4" y="643.0" width="427.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.4" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,284 samples, 17.56%)</title><rect x="762.4" y="627.0" width="207.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.4" y="638.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,284 samples, 17.56%)</title><rect x="762.4" y="611.0" width="207.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.4" y="622.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,115 samples, 16.26%)</title><rect x="762.4" y="595.0" width="191.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.4" y="606.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (149 samples, 1.15%)</title><rect x="762.4" y="579.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="765.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (149 samples, 1.15%)</title><rect x="762.4" y="563.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (149 samples, 1.15%)</title><rect x="762.4" y="547.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (149 samples, 1.15%)</title><rect x="762.4" y="531.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.53%)</title><rect x="762.4" y="515.0" width="6.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="765.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.61%)</title><rect x="768.7" y="515.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.7" y="526.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.61%)</title><rect x="768.7" y="499.0" width="7.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="771.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (1,966 samples, 15.11%)</title><rect x="775.9" y="579.0" width="178.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.9" y="590.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (169 samples, 1.30%)</title><rect x="775.9" y="563.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (169 samples, 1.30%)</title><rect x="775.9" y="547.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (169 samples, 1.30%)</title><rect x="775.9" y="531.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (94 samples, 0.72%)</title><rect x="775.9" y="515.0" width="8.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="778.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.58%)</title><rect x="784.5" y="515.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="787.5" y="526.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.58%)</title><rect x="784.5" y="499.0" width="6.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="787.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (198 samples, 1.52%)</title><rect x="791.3" y="563.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.get (115 samples, 0.88%)</title><rect x="791.3" y="547.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.37%)</title><rect x="791.3" y="531.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.37%)</title><rect x="791.3" y="515.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get$Lambda (48 samples, 0.37%)</title><rect x="791.3" y="499.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.3" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$232 (48 samples, 0.37%)</title><rect x="791.3" y="483.0" width="4.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="794.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (67 samples, 0.52%)</title><rect x="795.6" y="531.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (67 samples, 0.52%)</title><rect x="795.6" y="515.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (28 samples, 0.22%)</title><rect x="795.6" y="499.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="798.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (39 samples, 0.30%)</title><rect x="798.1" y="499.0" width="3.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="801.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (83 samples, 0.64%)</title><rect x="801.7" y="547.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.28%)</title><rect x="801.7" y="531.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.28%)</title><rect x="801.7" y="515.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get$Lambda (36 samples, 0.28%)</title><rect x="801.7" y="499.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.7" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$119 (36 samples, 0.28%)</title><rect x="801.7" y="483.0" width="3.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="804.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (47 samples, 0.36%)</title><rect x="805.0" y="531.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (47 samples, 0.36%)</title><rect x="805.0" y="515.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (22 samples, 0.17%)</title><rect x="805.0" y="499.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="808.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (25 samples, 0.19%)</title><rect x="806.9" y="499.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="809.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (1,376 samples, 10.58%)</title><rect x="809.2" y="563.0" width="124.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.2" y="574.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.04%)</title><rect x="809.2" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.04%)</title><rect x="809.2" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.get$Lambda (5 samples, 0.04%)</title><rect x="809.2" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.2" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.AsyncServiceImpl$$Lambda$139 (5 samples, 0.04%)</title><rect x="809.2" y="499.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="812.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.09%)</title><rect x="809.7" y="547.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.09%)</title><rect x="809.7" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.09%)</title><rect x="809.7" y="515.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.09%)</title><rect x="809.7" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.7" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.09%)</title><rect x="809.7" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.7" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.09%)</title><rect x="809.7" y="467.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="812.7" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.05%)</title><rect x="810.8" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.8" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.05%)</title><rect x="810.8" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.8" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.05%)</title><rect x="810.8" y="515.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="813.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.04%)</title><rect x="811.4" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (5 samples, 0.04%)</title><rect x="811.4" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (4 samples, 0.03%)</title><rect x="811.4" y="515.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="814.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (8 samples, 0.06%)</title><rect x="811.8" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.06%)</title><rect x="811.8" y="531.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (7 samples, 0.05%)</title><rect x="811.8" y="515.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="814.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (11 samples, 0.08%)</title><rect x="812.6" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.get (4 samples, 0.03%)</title><rect x="812.6" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="812.6" y="515.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="812.6" y="499.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$232/502297085.get$Lambda (3 samples, 0.02%)</title><rect x="812.6" y="483.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.6" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$232 (3 samples, 0.02%)</title><rect x="812.6" y="467.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="815.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (7 samples, 0.05%)</title><rect x="812.9" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.02%)</title><rect x="812.9" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.02%)</title><rect x="812.9" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get$Lambda (3 samples, 0.02%)</title><rect x="812.9" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.9" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$119 (3 samples, 0.02%)</title><rect x="812.9" y="467.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="815.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 0.03%)</title><rect x="813.2" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.03%)</title><rect x="813.2" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.02%)</title><rect x="813.2" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="816.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.getAckResponses (75 samples, 0.58%)</title><rect x="813.6" y="547.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (10 samples, 0.08%)</title><rect x="813.6" y="531.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="816.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (5 samples, 0.04%)</title><rect x="814.5" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="817.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (5 samples, 0.04%)</title><rect x="814.9" y="531.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="817.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (53 samples, 0.41%)</title><rect x="815.4" y="531.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$137/766939021.accept (53 samples, 0.41%)</title><rect x="815.4" y="515.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$1 (53 samples, 0.41%)</title><rect x="815.4" y="499.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.10%)</title><rect x="815.4" y="483.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.10%)</title><rect x="815.4" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.get$Lambda (13 samples, 0.10%)</title><rect x="815.4" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.4" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.Futures$$Lambda$138 (13 samples, 0.10%)</title><rect x="815.4" y="435.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="818.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (40 samples, 0.31%)</title><rect x="816.6" y="483.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (40 samples, 0.31%)</title><rect x="816.6" y="467.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.22%)</title><rect x="816.6" y="451.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="819.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="819.3" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="819.3" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.08%)</title><rect x="819.3" y="419.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="822.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.forwardRequest (1,128 samples, 8.67%)</title><rect x="820.4" y="547.0" width="102.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.4" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (30 samples, 0.23%)</title><rect x="820.4" y="531.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (30 samples, 0.23%)</title><rect x="820.4" y="515.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (20 samples, 0.15%)</title><rect x="820.4" y="499.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="823.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="822.2" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="822.2" y="483.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.08%)</title><rect x="822.2" y="467.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="825.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (708 samples, 5.44%)</title><rect x="823.1" y="531.0" width="64.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.1" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (708 samples, 5.44%)</title><rect x="823.1" y="515.0" width="64.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.1" y="526.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (708 samples, 5.44%)</title><rect x="823.1" y="499.0" width="64.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.1" y="510.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (708 samples, 5.44%)</title><rect x="823.1" y="483.0" width="64.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.1" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (24 samples, 0.18%)</title><rect x="823.3" y="467.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.18%)</title><rect x="823.3" y="451.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (14 samples, 0.11%)</title><rect x="823.3" y="435.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="826.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="824.5" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="824.5" y="419.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.08%)</title><rect x="824.5" y="403.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="827.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (27 samples, 0.21%)</title><rect x="825.5" y="467.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 0.21%)</title><rect x="825.5" y="451.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.13%)</title><rect x="825.5" y="435.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="828.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="827.0" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.08%)</title><rect x="827.0" y="419.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.08%)</title><rect x="827.0" y="403.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="830.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (16 samples, 0.12%)</title><rect x="827.9" y="467.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="830.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (26 samples, 0.20%)</title><rect x="829.4" y="467.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="832.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (352 samples, 2.71%)</title><rect x="831.7" y="467.0" width="31.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.7" y="478.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (39 samples, 0.30%)</title><rect x="831.7" y="451.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.7" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (33 samples, 0.25%)</title><rect x="831.7" y="435.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (19 samples, 0.15%)</title><rect x="831.7" y="419.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.7" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (19 samples, 0.15%)</title><rect x="831.7" y="403.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="834.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (14 samples, 0.11%)</title><rect x="833.4" y="419.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.4" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (14 samples, 0.11%)</title><rect x="833.4" y="403.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="836.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (6 samples, 0.05%)</title><rect x="834.7" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.7" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.05%)</title><rect x="834.7" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.05%)</title><rect x="834.7" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="837.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (6 samples, 0.05%)</title><rect x="834.7" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.7" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (6 samples, 0.05%)</title><rect x="834.7" y="371.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="837.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (146 samples, 1.12%)</title><rect x="835.2" y="451.0" width="13.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (146 samples, 1.12%)</title><rect x="835.2" y="435.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.2" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (4 samples, 0.03%)</title><rect x="835.2" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="838.2" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.09%)</title><rect x="835.6" y="419.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="838.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (16 samples, 0.12%)</title><rect x="836.7" y="419.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="839.7" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (8 samples, 0.06%)</title><rect x="838.1" y="419.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="841.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.12%)</title><rect x="838.9" y="419.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.12%)</title><rect x="838.9" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (15 samples, 0.12%)</title><rect x="838.9" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.9" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (15 samples, 0.12%)</title><rect x="838.9" y="371.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="841.9" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (55 samples, 0.42%)</title><rect x="840.2" y="419.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (55 samples, 0.42%)</title><rect x="840.2" y="403.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (55 samples, 0.42%)</title><rect x="840.2" y="387.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (55 samples, 0.42%)</title><rect x="840.2" y="371.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.2" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (23 samples, 0.18%)</title><rect x="840.2" y="355.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.2" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (16 samples, 0.12%)</title><rect x="840.2" y="339.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.2" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (16 samples, 0.12%)</title><rect x="840.2" y="323.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.2" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.12%)</title><rect x="840.2" y="307.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.2" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.12%)</title><rect x="840.2" y="291.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.2" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.12%)</title><rect x="840.2" y="275.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.2" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.12%)</title><rect x="840.2" y="259.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.12%)</title><rect x="840.2" y="243.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.12%)</title><rect x="840.2" y="227.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="843.2" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (7 samples, 0.05%)</title><rect x="841.7" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.7" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (7 samples, 0.05%)</title><rect x="841.7" y="323.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="844.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.05%)</title><rect x="842.3" y="355.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.05%)</title><rect x="842.3" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (7 samples, 0.05%)</title><rect x="842.3" y="323.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.3" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (7 samples, 0.05%)</title><rect x="842.3" y="307.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="845.3" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (15 samples, 0.12%)</title><rect x="843.0" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (15 samples, 0.12%)</title><rect x="843.0" y="339.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4 samples, 0.03%)</title><rect x="843.0" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="846.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="843.0" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="843.0" y="291.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="846.0" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (11 samples, 0.08%)</title><rect x="843.3" y="323.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.3" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (11 samples, 0.08%)</title><rect x="843.3" y="307.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="846.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.08%)</title><rect x="844.3" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.08%)</title><rect x="844.3" y="339.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="847.3" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (10 samples, 0.08%)</title><rect x="845.2" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="848.2" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (10 samples, 0.08%)</title><rect x="845.2" y="403.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="848.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (26 samples, 0.20%)</title><rect x="846.1" y="419.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="849.1" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.20%)</title><rect x="846.1" y="403.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="849.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (4 samples, 0.03%)</title><rect x="848.5" y="451.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="851.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (119 samples, 0.91%)</title><rect x="848.9" y="451.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.9" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (119 samples, 0.91%)</title><rect x="848.9" y="435.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.9" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (107 samples, 0.82%)</title><rect x="848.9" y="419.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.9" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (107 samples, 0.82%)</title><rect x="848.9" y="403.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.9" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (107 samples, 0.82%)</title><rect x="848.9" y="387.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.9" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (22 samples, 0.17%)</title><rect x="848.9" y="371.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="851.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (31 samples, 0.24%)</title><rect x="850.8" y="371.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.8" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (31 samples, 0.24%)</title><rect x="850.8" y="355.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.8" y="366.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.24%)</title><rect x="850.8" y="339.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="853.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (54 samples, 0.42%)</title><rect x="853.7" y="371.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.42%)</title><rect x="853.7" y="355.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.15%)</title><rect x="853.7" y="339.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="856.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.26%)</title><rect x="855.5" y="339.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="858.5" y="350.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.26%)</title><rect x="855.5" y="323.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="858.5" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (12 samples, 0.09%)</title><rect x="858.6" y="419.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="861.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (21 samples, 0.16%)</title><rect x="859.6" y="451.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (21 samples, 0.16%)</title><rect x="859.6" y="435.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="862.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (23 samples, 0.18%)</title><rect x="861.6" y="451.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.05%)</title><rect x="861.7" y="435.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="864.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.05%)</title><rect x="861.7" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="864.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.12%)</title><rect x="862.3" y="435.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (15 samples, 0.12%)</title><rect x="862.3" y="419.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="865.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (161 samples, 1.24%)</title><rect x="863.6" y="467.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (6 samples, 0.05%)</title><rect x="863.6" y="451.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="866.6" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (18 samples, 0.14%)</title><rect x="864.2" y="451.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/271136818.apply (18 samples, 0.14%)</title><rect x="864.2" y="435.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (9 samples, 0.07%)</title><rect x="864.2" y="419.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="867.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (9 samples, 0.07%)</title><rect x="865.0" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.07%)</title><rect x="865.0" y="403.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="868.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (23 samples, 0.18%)</title><rect x="865.8" y="451.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="868.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (7 samples, 0.05%)</title><rect x="867.9" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="870.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (7 samples, 0.05%)</title><rect x="867.9" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="870.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (6 samples, 0.05%)</title><rect x="868.5" y="451.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.5" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (6 samples, 0.05%)</title><rect x="868.5" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="871.5" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (6 samples, 0.05%)</title><rect x="868.5" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.5" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (6 samples, 0.05%)</title><rect x="868.5" y="403.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="871.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (101 samples, 0.78%)</title><rect x="869.1" y="451.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (101 samples, 0.78%)</title><rect x="869.1" y="435.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (7 samples, 0.05%)</title><rect x="869.1" y="419.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="872.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.05%)</title><rect x="869.7" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="872.7" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (12 samples, 0.09%)</title><rect x="870.3" y="419.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="873.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (53 samples, 0.41%)</title><rect x="871.3" y="419.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (53 samples, 0.41%)</title><rect x="871.3" y="403.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.3" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (53 samples, 0.41%)</title><rect x="871.3" y="387.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.3" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (53 samples, 0.41%)</title><rect x="871.3" y="371.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.3" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (53 samples, 0.41%)</title><rect x="871.3" y="355.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="874.3" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (17 samples, 0.13%)</title><rect x="876.2" y="419.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (17 samples, 0.13%)</title><rect x="876.2" y="403.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (5 samples, 0.04%)</title><rect x="876.2" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (5 samples, 0.04%)</title><rect x="876.2" y="371.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="879.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (12 samples, 0.09%)</title><rect x="876.6" y="387.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (12 samples, 0.09%)</title><rect x="876.6" y="371.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="879.6" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (6 samples, 0.05%)</title><rect x="877.7" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="880.7" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (6 samples, 0.05%)</title><rect x="877.7" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.7" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (6 samples, 0.05%)</title><rect x="877.7" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="880.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (100 samples, 0.77%)</title><rect x="878.2" y="467.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (11 samples, 0.08%)</title><rect x="878.2" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (5 samples, 0.04%)</title><rect x="878.2" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="881.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.05%)</title><rect x="878.7" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.05%)</title><rect x="878.7" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (6 samples, 0.05%)</title><rect x="878.7" y="403.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="881.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.10%)</title><rect x="879.2" y="451.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="882.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (76 samples, 0.58%)</title><rect x="880.4" y="451.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.10%)</title><rect x="880.4" y="435.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.10%)</title><rect x="880.4" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="883.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.get$Lambda (5 samples, 0.04%)</title><rect x="880.4" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (5 samples, 0.04%)</title><rect x="880.4" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="883.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.get$Lambda (8 samples, 0.06%)</title><rect x="880.9" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (8 samples, 0.06%)</title><rect x="880.9" y="387.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="883.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (63 samples, 0.48%)</title><rect x="881.6" y="435.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (63 samples, 0.48%)</title><rect x="881.6" y="419.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (30 samples, 0.23%)</title><rect x="881.6" y="403.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="884.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.25%)</title><rect x="884.3" y="403.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.25%)</title><rect x="884.3" y="387.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="887.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.25%)</title><rect x="884.3" y="371.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="887.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.formHttpRequest (390 samples, 3.00%)</title><rect x="887.3" y="531.0" width="35.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.3" y="542.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.19%)</title><rect x="887.3" y="515.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (25 samples, 0.19%)</title><rect x="887.3" y="499.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (25 samples, 0.19%)</title><rect x="887.3" y="483.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.19%)</title><rect x="887.3" y="467.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (8 samples, 0.06%)</title><rect x="887.3" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.06%)</title><rect x="887.3" y="435.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="890.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.13%)</title><rect x="888.0" y="451.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.13%)</title><rect x="888.0" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="891.0" y="446.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.13%)</title><rect x="888.0" y="419.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="891.0" y="430.0"></text>
</g>
<g>
<title>java/net/URI.create (123 samples, 0.95%)</title><rect x="889.6" y="515.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="892.6" y="526.0"></text>
</g>
<g>
<title>java.net.URI (24 samples, 0.18%)</title><rect x="889.6" y="499.0" width="2.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="892.6" y="510.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (99 samples, 0.76%)</title><rect x="891.8" y="499.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.8" y="510.0"></text>
</g>
<g>
<title>java.net.URI$Parser (11 samples, 0.08%)</title><rect x="891.8" y="483.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="894.8" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (88 samples, 0.68%)</title><rect x="892.8" y="483.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.15%)</title><rect x="892.8" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.15%)</title><rect x="892.8" y="451.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.08%)</title><rect x="892.8" y="435.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="895.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.07%)</title><rect x="893.7" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.7" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.07%)</title><rect x="893.7" y="419.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="896.7" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (69 samples, 0.53%)</title><rect x="894.5" y="467.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 0.27%)</title><rect x="894.5" y="451.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 0.27%)</title><rect x="894.5" y="435.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.11%)</title><rect x="894.5" y="419.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="897.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.16%)</title><rect x="895.7" y="419.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.7" y="430.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.16%)</title><rect x="895.7" y="403.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="898.7" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (34 samples, 0.26%)</title><rect x="897.7" y="451.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="900.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.12%)</title><rect x="897.7" y="435.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.12%)</title><rect x="897.7" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="900.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.04%)</title><rect x="897.7" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="900.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.08%)</title><rect x="898.1" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.1" y="414.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.08%)</title><rect x="898.1" y="387.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="901.1" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (19 samples, 0.15%)</title><rect x="899.0" y="435.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.0" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (19 samples, 0.15%)</title><rect x="899.0" y="419.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.15%)</title><rect x="899.0" y="403.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.15%)</title><rect x="899.0" y="387.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.0" y="398.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.05%)</title><rect x="899.0" y="371.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="902.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.10%)</title><rect x="899.6" y="371.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.6" y="382.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.10%)</title><rect x="899.6" y="355.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="902.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (8 samples, 0.06%)</title><rect x="900.7" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (8 samples, 0.06%)</title><rect x="900.7" y="499.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="903.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (32 samples, 0.25%)</title><rect x="901.5" y="515.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (18 samples, 0.14%)</title><rect x="901.5" y="499.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="904.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (14 samples, 0.11%)</title><rect x="903.1" y="499.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (3 samples, 0.02%)</title><rect x="903.1" y="483.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="906.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (11 samples, 0.08%)</title><rect x="903.4" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.4" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (11 samples, 0.08%)</title><rect x="903.4" y="467.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="906.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (157 samples, 1.21%)</title><rect x="904.4" y="515.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (11 samples, 0.08%)</title><rect x="904.4" y="499.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="907.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (146 samples, 1.12%)</title><rect x="905.4" y="499.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.4" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (139 samples, 1.07%)</title><rect x="905.4" y="483.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (139 samples, 1.07%)</title><rect x="905.4" y="467.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.4" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (5 samples, 0.04%)</title><rect x="905.4" y="451.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="908.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.08%)</title><rect x="905.8" y="451.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="908.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (12 samples, 0.09%)</title><rect x="906.7" y="451.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="909.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (10 samples, 0.08%)</title><rect x="907.8" y="451.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="910.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.12%)</title><rect x="908.7" y="451.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.12%)</title><rect x="908.7" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (16 samples, 0.12%)</title><rect x="908.7" y="419.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.7" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (16 samples, 0.12%)</title><rect x="908.7" y="403.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="911.7" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (11 samples, 0.08%)</title><rect x="910.2" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.2" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (11 samples, 0.08%)</title><rect x="910.2" y="435.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="913.2" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (61 samples, 0.47%)</title><rect x="911.2" y="451.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (61 samples, 0.47%)</title><rect x="911.2" y="435.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.2" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (61 samples, 0.47%)</title><rect x="911.2" y="419.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.06%)</title><rect x="911.2" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.06%)</title><rect x="911.2" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (8 samples, 0.06%)</title><rect x="911.2" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.2" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (8 samples, 0.06%)</title><rect x="911.2" y="355.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="914.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (23 samples, 0.18%)</title><rect x="911.9" y="403.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (23 samples, 0.18%)</title><rect x="911.9" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (23 samples, 0.18%)</title><rect x="911.9" y="371.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (23 samples, 0.18%)</title><rect x="911.9" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (23 samples, 0.18%)</title><rect x="911.9" y="339.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (23 samples, 0.18%)</title><rect x="911.9" y="323.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (23 samples, 0.18%)</title><rect x="911.9" y="307.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.18%)</title><rect x="911.9" y="291.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.9" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.18%)</title><rect x="911.9" y="275.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="914.9" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (14 samples, 0.11%)</title><rect x="914.0" y="403.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.0" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (14 samples, 0.11%)</title><rect x="914.0" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (8 samples, 0.06%)</title><rect x="914.0" y="371.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.06%)</title><rect x="914.0" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.06%)</title><rect x="914.0" y="339.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="917.0" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (6 samples, 0.05%)</title><rect x="914.7" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.7" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (6 samples, 0.05%)</title><rect x="914.7" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="917.7" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.12%)</title><rect x="915.3" y="403.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.12%)</title><rect x="915.3" y="387.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="918.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (14 samples, 0.11%)</title><rect x="916.7" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.11%)</title><rect x="916.7" y="435.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="919.7" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (7 samples, 0.05%)</title><rect x="918.0" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="921.0" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.05%)</title><rect x="918.0" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.0" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.05%)</title><rect x="918.0" y="451.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="921.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (35 samples, 0.27%)</title><rect x="918.6" y="515.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (35 samples, 0.27%)</title><rect x="918.6" y="499.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (35 samples, 0.27%)</title><rect x="918.6" y="483.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.6" y="494.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (35 samples, 0.27%)</title><rect x="918.6" y="467.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.12%)</title><rect x="918.6" y="451.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.12%)</title><rect x="918.6" y="435.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="921.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$120/26136221.apply (19 samples, 0.15%)</title><rect x="920.1" y="451.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (19 samples, 0.15%)</title><rect x="920.1" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.1" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.09%)</title><rect x="920.1" y="419.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="923.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (7 samples, 0.05%)</title><rect x="921.1" y="419.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.05%)</title><rect x="921.1" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="924.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.08%)</title><rect x="921.8" y="515.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="924.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.08%)</title><rect x="921.8" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.08%)</title><rect x="921.8" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="924.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.04%)</title><rect x="921.8" y="467.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="924.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.04%)</title><rect x="922.2" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.2" y="478.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="922.2" y="451.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="925.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.getNodes (125 samples, 0.96%)</title><rect x="922.7" y="547.0" width="11.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (11 samples, 0.08%)</title><rect x="922.7" y="531.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="925.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.05%)</title><rect x="923.9" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.9" y="542.0"></text>
</g>
<g>
<title>java.lang.Integer (7 samples, 0.05%)</title><rect x="923.9" y="515.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="926.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.17%)</title><rect x="924.5" y="531.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1392425346.invoke (22 samples, 0.17%)</title><rect x="924.5" y="515.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.17%)</title><rect x="924.5" y="499.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.17%)</title><rect x="924.5" y="483.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="927.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.17%)</title><rect x="924.5" y="467.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="927.5" y="478.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.17%)</title><rect x="924.5" y="451.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="927.5" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (11 samples, 0.08%)</title><rect x="926.5" y="531.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.05%)</title><rect x="926.5" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="929.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.04%)</title><rect x="927.0" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.0" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (5 samples, 0.04%)</title><rect x="927.0" y="499.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="930.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.put (33 samples, 0.25%)</title><rect x="927.5" y="531.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (33 samples, 0.25%)</title><rect x="927.5" y="515.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="930.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (20 samples, 0.15%)</title><rect x="927.5" y="499.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.5" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (20 samples, 0.15%)</title><rect x="927.5" y="483.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="930.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (13 samples, 0.10%)</title><rect x="929.3" y="499.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.3" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (13 samples, 0.10%)</title><rect x="929.3" y="483.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="932.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (9 samples, 0.07%)</title><rect x="930.5" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.5" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (9 samples, 0.07%)</title><rect x="930.5" y="515.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="933.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (22 samples, 0.17%)</title><rect x="931.3" y="531.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="934.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (22 samples, 0.17%)</title><rect x="931.3" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (22 samples, 0.17%)</title><rect x="931.3" y="499.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.08%)</title><rect x="931.3" y="483.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.08%)</title><rect x="931.3" y="467.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="934.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (12 samples, 0.09%)</title><rect x="932.2" y="483.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.2" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (12 samples, 0.09%)</title><rect x="932.2" y="467.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="935.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.06%)</title><rect x="933.3" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (8 samples, 0.06%)</title><rect x="933.3" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.3" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (8 samples, 0.06%)</title><rect x="933.3" y="499.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="936.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.trySendResponse (223 samples, 1.71%)</title><rect x="934.0" y="563.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.38%)</title><rect x="934.0" y="547.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.38%)</title><rect x="934.0" y="531.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.get$Lambda (50 samples, 0.38%)</title><rect x="934.0" y="515.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.0" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$142 (50 samples, 0.38%)</title><rect x="934.0" y="499.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="937.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (173 samples, 1.33%)</title><rect x="938.6" y="547.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="941.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (173 samples, 1.33%)</title><rect x="938.6" y="531.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (116 samples, 0.89%)</title><rect x="938.6" y="515.0" width="10.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="941.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (57 samples, 0.44%)</title><rect x="949.1" y="515.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (57 samples, 0.44%)</title><rect x="949.1" y="499.0" width="5.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="952.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (169 samples, 1.30%)</title><rect x="954.3" y="595.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (169 samples, 1.30%)</title><rect x="954.3" y="579.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (169 samples, 1.30%)</title><rect x="954.3" y="563.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String (58 samples, 0.45%)</title><rect x="954.3" y="547.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="957.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (111 samples, 0.85%)</title><rect x="959.5" y="547.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.5" y="558.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.85%)</title><rect x="959.5" y="531.0" width="10.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="962.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (742 samples, 5.70%)</title><rect x="969.6" y="627.0" width="67.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.6" y="638.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.Request (104 samples, 0.80%)</title><rect x="969.6" y="611.0" width="9.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="972.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (235 samples, 1.81%)</title><rect x="979.0" y="611.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.0" y="622.0">o..</text>
</g>
<g>
<title>java.lang.String[] (235 samples, 1.81%)</title><rect x="979.0" y="595.0" width="21.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="982.0" y="606.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (403 samples, 3.10%)</title><rect x="1000.3" y="611.0" width="36.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.3" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (403 samples, 3.10%)</title><rect x="1000.3" y="595.0" width="36.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.3" y="606.0">one..</text>
</g>
<g>
<title>char[] (213 samples, 1.64%)</title><rect x="1000.3" y="579.0" width="19.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1003.3" y="590.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.65%)</title><rect x="1019.7" y="579.0" width="7.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1022.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (105 samples, 0.81%)</title><rect x="1027.4" y="579.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (105 samples, 0.81%)</title><rect x="1027.4" y="563.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (105 samples, 0.81%)</title><rect x="1027.4" y="547.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.4" y="558.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.81%)</title><rect x="1027.4" y="531.0" width="9.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1030.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (246 samples, 1.89%)</title><rect x="1036.9" y="627.0" width="22.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.9" y="638.0">o..</text>
</g>
<g>
<title>byte[] (185 samples, 1.42%)</title><rect x="1036.9" y="611.0" width="16.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1039.9" y="622.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.47%)</title><rect x="1053.7" y="611.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1056.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (118 samples, 0.91%)</title><rect x="1059.2" y="627.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (118 samples, 0.91%)</title><rect x="1059.2" y="611.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (118 samples, 0.91%)</title><rect x="1059.2" y="595.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.49%)</title><rect x="1059.2" y="579.0" width="5.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1062.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.42%)</title><rect x="1065.0" y="579.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1068.0" y="590.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.42%)</title><rect x="1065.0" y="563.0" width="4.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1068.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,324 samples, 10.18%)</title><rect x="1069.9" y="627.0" width="120.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.9" y="638.0">one/nio/util/Ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,324 samples, 10.18%)</title><rect x="1069.9" y="611.0" width="120.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.9" y="622.0">one/nio/util/Ut..</text>
</g>
<g>
<title>char[] (623 samples, 4.79%)</title><rect x="1069.9" y="595.0" width="56.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1072.9" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (234 samples, 1.80%)</title><rect x="1126.4" y="595.0" width="21.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1129.4" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (467 samples, 3.59%)</title><rect x="1147.6" y="595.0" width="42.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.6" y="606.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (467 samples, 3.59%)</title><rect x="1147.6" y="579.0" width="42.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.6" y="590.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (467 samples, 3.59%)</title><rect x="1147.6" y="563.0" width="42.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.6" y="574.0">java..</text>
</g>
<g>
<title>byte[] (467 samples, 3.59%)</title><rect x="1147.6" y="547.0" width="42.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1150.6" y="558.0">byte[]</text>
</g>
</g>
</svg>
