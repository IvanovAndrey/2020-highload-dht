<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (5,733 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (3,083 samples, 53.78%)</title><rect x="10.0" y="803.0" width="634.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (36 samples, 0.63%)</title><rect x="10.0" y="787.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36 samples, 0.63%)</title><rect x="10.0" y="771.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (36 samples, 0.63%)</title><rect x="10.0" y="755.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 0.63%)</title><rect x="10.0" y="739.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36 samples, 0.63%)</title><rect x="10.0" y="723.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (36 samples, 0.63%)</title><rect x="10.0" y="707.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.63%)</title><rect x="10.0" y="691.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (36 samples, 0.63%)</title><rect x="10.0" y="675.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (36 samples, 0.63%)</title><rect x="10.0" y="659.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (36 samples, 0.63%)</title><rect x="10.0" y="643.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (36 samples, 0.63%)</title><rect x="10.0" y="627.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (36 samples, 0.63%)</title><rect x="10.0" y="611.0" width="7.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,047 samples, 53.15%)</title><rect x="17.4" y="787.0" width="627.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.4" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,047 samples, 53.15%)</title><rect x="17.4" y="771.0" width="627.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.4" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,206 samples, 38.48%)</title><rect x="17.4" y="755.0" width="454.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.4" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (570 samples, 9.94%)</title><rect x="17.4" y="739.0" width="117.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.4" y="750.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (386 samples, 6.73%)</title><rect x="17.4" y="723.0" width="79.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.4" y="734.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (3 samples, 0.05%)</title><rect x="17.4" y="707.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="20.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.apply (383 samples, 6.68%)</title><rect x="18.0" y="707.0" width="78.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.0" y="718.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (383 samples, 6.68%)</title><rect x="18.0" y="691.0" width="78.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.0" y="702.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (383 samples, 6.68%)</title><rect x="18.0" y="675.0" width="78.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.0" y="686.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="18.0" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="18.0" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.get$Lambda (2 samples, 0.03%)</title><rect x="18.0" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$182 (2 samples, 0.03%)</title><rect x="18.0" y="611.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="21.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5 samples, 0.09%)</title><rect x="18.4" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5 samples, 0.09%)</title><rect x="18.4" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="18.6" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="18.6" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="18.6" y="595.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="21.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (13 samples, 0.23%)</title><rect x="19.5" y="659.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (13 samples, 0.23%)</title><rect x="19.5" y="643.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (8 samples, 0.14%)</title><rect x="19.5" y="627.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="22.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="21.1" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="21.1" y="611.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="21.1" y="595.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="24.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (354 samples, 6.17%)</title><rect x="22.1" y="659.0" width="72.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.1" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (354 samples, 6.17%)</title><rect x="22.1" y="643.0" width="72.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.1" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (354 samples, 6.17%)</title><rect x="22.1" y="627.0" width="72.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.1" y="638.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.16%)</title><rect x="22.1" y="611.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.16%)</title><rect x="22.1" y="595.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.get$Lambda (3 samples, 0.05%)</title><rect x="22.1" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$135 (3 samples, 0.05%)</title><rect x="22.1" y="563.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="25.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.get$Lambda (2 samples, 0.03%)</title><rect x="22.8" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$136 (2 samples, 0.03%)</title><rect x="22.8" y="563.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="25.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.get$Lambda (4 samples, 0.07%)</title><rect x="23.2" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$168 (4 samples, 0.07%)</title><rect x="23.2" y="563.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="26.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (265 samples, 4.62%)</title><rect x="24.0" y="611.0" width="54.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.0" y="622.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (265 samples, 4.62%)</title><rect x="24.0" y="595.0" width="54.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.0" y="606.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (263 samples, 4.59%)</title><rect x="24.0" y="579.0" width="54.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="590.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$168/16973338.apply (263 samples, 4.59%)</title><rect x="24.0" y="563.0" width="54.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.0" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (263 samples, 4.59%)</title><rect x="24.0" y="547.0" width="54.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.0" y="558.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (263 samples, 4.59%)</title><rect x="24.0" y="531.0" width="54.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.0" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$136/1681752132.apply (263 samples, 4.59%)</title><rect x="24.0" y="515.0" width="54.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.0" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (263 samples, 4.59%)</title><rect x="24.0" y="499.0" width="54.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.0" y="510.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9 samples, 0.16%)</title><rect x="24.0" y="483.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9 samples, 0.16%)</title><rect x="24.0" y="467.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (2 samples, 0.03%)</title><rect x="24.0" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="27.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.03%)</title><rect x="24.4" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.apply (2 samples, 0.03%)</title><rect x="24.4" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.03%)</title><rect x="24.4" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.03%)</title><rect x="24.4" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.apply (2 samples, 0.03%)</title><rect x="24.4" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.03%)</title><rect x="24.4" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.03%)</title><rect x="24.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (2 samples, 0.03%)</title><rect x="24.4" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (2 samples, 0.03%)</title><rect x="24.4" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="24.8" y="451.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="24.8" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="24.8" y="419.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="27.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (10 samples, 0.17%)</title><rect x="25.8" y="483.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (10 samples, 0.17%)</title><rect x="25.8" y="467.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (8 samples, 0.14%)</title><rect x="25.8" y="451.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="28.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="27.5" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="30.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="27.5" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="30.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="27.5" y="419.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="30.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (244 samples, 4.26%)</title><rect x="27.9" y="483.0" width="50.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.9" y="494.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="27.9" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="27.9" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.get$Lambda (2 samples, 0.03%)</title><rect x="27.9" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$178 (2 samples, 0.03%)</title><rect x="27.9" y="419.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="30.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (209 samples, 3.65%)</title><rect x="28.3" y="467.0" width="43.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.3" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (209 samples, 3.65%)</title><rect x="28.3" y="451.0" width="43.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.3" y="462.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (5 samples, 0.09%)</title><rect x="28.3" y="435.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="31.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/191791493.apply (202 samples, 3.52%)</title><rect x="29.3" y="435.0" width="41.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.3" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (202 samples, 3.52%)</title><rect x="29.3" y="419.0" width="41.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.3" y="430.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.09%)</title><rect x="29.3" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.09%)</title><rect x="29.3" y="387.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.07%)</title><rect x="29.3" y="371.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="32.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="30.6" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="30.6" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="30.6" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="30.6" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="30.6" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (2 samples, 0.03%)</title><rect x="30.6" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (2 samples, 0.03%)</title><rect x="30.6" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="33.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (5 samples, 0.09%)</title><rect x="31.0" y="403.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5 samples, 0.09%)</title><rect x="31.0" y="387.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.03%)</title><rect x="31.0" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.03%)</title><rect x="31.0" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="31.0" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (2 samples, 0.03%)</title><rect x="31.0" y="323.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="34.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3 samples, 0.05%)</title><rect x="31.4" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3 samples, 0.05%)</title><rect x="31.4" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="31.6" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (2 samples, 0.03%)</title><rect x="31.6" y="323.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="34.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (189 samples, 3.30%)</title><rect x="32.0" y="403.0" width="38.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.0" y="414.0">jdk..</text>
</g>
<g>
<title>java/lang/String.getBytes (15 samples, 0.26%)</title><rect x="32.2" y="387.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="35.2" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (15 samples, 0.26%)</title><rect x="32.2" y="371.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (15 samples, 0.26%)</title><rect x="32.2" y="355.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.2" y="366.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.26%)</title><rect x="32.2" y="339.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="35.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.19%)</title><rect x="35.3" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="38.3" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.19%)</title><rect x="35.3" y="371.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.3" y="382.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.19%)</title><rect x="35.3" y="355.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="38.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (20 samples, 0.35%)</title><rect x="37.6" y="387.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.35%)</title><rect x="37.6" y="371.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.6" y="382.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="37.6" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="40.6" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.30%)</title><rect x="38.2" y="355.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.2" y="366.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.30%)</title><rect x="38.2" y="339.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="41.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="41.7" y="387.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="41.7" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3 samples, 0.05%)</title><rect x="41.7" y="355.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="44.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.03%)</title><rect x="42.3" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.3" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (2 samples, 0.03%)</title><rect x="42.3" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="45.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (110 samples, 1.92%)</title><rect x="42.7" y="387.0" width="22.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.7" y="398.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (3 samples, 0.05%)</title><rect x="42.7" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="42.7" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="42.7" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.7" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.get$Lambda (3 samples, 0.05%)</title><rect x="42.7" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.7" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$193 (3 samples, 0.05%)</title><rect x="42.7" y="307.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="45.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (59 samples, 1.03%)</title><rect x="43.3" y="371.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (40 samples, 0.70%)</title><rect x="43.3" y="355.0" width="8.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.3" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (40 samples, 0.70%)</title><rect x="43.3" y="339.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.3" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (40 samples, 0.70%)</title><rect x="43.3" y="323.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (40 samples, 0.70%)</title><rect x="43.3" y="307.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.3" y="318.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.70%)</title><rect x="43.3" y="291.0" width="8.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="46.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (3 samples, 0.05%)</title><rect x="51.8" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.8" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (2 samples, 0.03%)</title><rect x="51.8" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="54.8" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$193/1578474734.test (15 samples, 0.26%)</title><rect x="52.4" y="355.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.4" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (15 samples, 0.26%)</title><rect x="52.4" y="339.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$91/2013559698.test (15 samples, 0.26%)</title><rect x="52.4" y="323.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (15 samples, 0.26%)</title><rect x="52.4" y="307.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.4" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$80/1582071873.test (15 samples, 0.26%)</title><rect x="52.4" y="291.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.4" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (15 samples, 0.26%)</title><rect x="52.4" y="275.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$79/1616974404.test (15 samples, 0.26%)</title><rect x="52.4" y="259.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (15 samples, 0.26%)</title><rect x="52.4" y="243.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.26%)</title><rect x="52.4" y="227.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.26%)</title><rect x="52.4" y="211.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.12%)</title><rect x="52.4" y="195.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="55.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.14%)</title><rect x="53.8" y="195.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.8" y="206.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="53.8" y="179.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="56.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (48 samples, 0.84%)</title><rect x="55.5" y="371.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (48 samples, 0.84%)</title><rect x="55.5" y="355.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.5" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (48 samples, 0.84%)</title><rect x="55.5" y="339.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.5" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (4 samples, 0.07%)</title><rect x="55.5" y="323.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="58.5" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.07%)</title><rect x="56.3" y="323.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="59.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (3 samples, 0.05%)</title><rect x="57.1" y="323.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="60.1" y="334.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (4 samples, 0.07%)</title><rect x="58.0" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.0" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (4 samples, 0.07%)</title><rect x="58.0" y="307.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="61.0" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (30 samples, 0.52%)</title><rect x="58.8" y="323.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (30 samples, 0.52%)</title><rect x="58.8" y="307.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (30 samples, 0.52%)</title><rect x="58.8" y="291.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="58.8" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="58.8" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (6 samples, 0.10%)</title><rect x="58.8" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.8" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (6 samples, 0.10%)</title><rect x="58.8" y="227.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="61.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="60.0" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (2 samples, 0.03%)</title><rect x="60.0" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="60.0" y="243.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="60.0" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="60.0" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="60.0" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="60.0" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="60.0" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.03%)</title><rect x="60.0" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="63.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (16 samples, 0.28%)</title><rect x="60.4" y="275.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="63.4" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (16 samples, 0.28%)</title><rect x="60.4" y="259.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (11 samples, 0.19%)</title><rect x="60.4" y="243.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.19%)</title><rect x="60.4" y="227.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.4" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.19%)</title><rect x="60.4" y="211.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="63.4" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (5 samples, 0.09%)</title><rect x="62.7" y="243.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (5 samples, 0.09%)</title><rect x="62.7" y="227.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="65.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.10%)</title><rect x="63.7" y="275.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.10%)</title><rect x="63.7" y="259.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="66.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.03%)</title><rect x="65.0" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.0" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (2 samples, 0.03%)</title><rect x="65.0" y="307.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="68.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (7 samples, 0.12%)</title><rect x="65.4" y="387.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.4" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2 samples, 0.03%)</title><rect x="65.4" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.4" y="382.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="65.4" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="68.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="65.8" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (5 samples, 0.09%)</title><rect x="65.8" y="355.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (5 samples, 0.09%)</title><rect x="65.8" y="339.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="65.8" y="323.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.05%)</title><rect x="65.8" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.8" y="318.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.05%)</title><rect x="65.8" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="68.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="66.4" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="66.4" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.4" y="302.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="66.4" y="275.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="69.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (3 samples, 0.05%)</title><rect x="66.8" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.05%)</title><rect x="66.8" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="66.8" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.05%)</title><rect x="66.8" y="339.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (3 samples, 0.05%)</title><rect x="66.8" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="66.8" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="67.0" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.03%)</title><rect x="67.0" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.0" y="286.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="67.0" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="70.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (17 samples, 0.30%)</title><rect x="67.4" y="387.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.4" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.12%)</title><rect x="67.4" y="371.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="70.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.07%)</title><rect x="68.9" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.9" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.07%)</title><rect x="68.9" y="355.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.10%)</title><rect x="69.7" y="371.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.7" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (6 samples, 0.10%)</title><rect x="69.7" y="355.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="72.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="70.9" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="70.9" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="70.9" y="403.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="73.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (6 samples, 0.10%)</title><rect x="71.3" y="467.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="74.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="72.6" y="467.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="75.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (24 samples, 0.42%)</title><rect x="73.2" y="467.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="73.2" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="73.2" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$170/911355061.get$Lambda (2 samples, 0.03%)</title><rect x="73.2" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$170 (2 samples, 0.03%)</title><rect x="73.2" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="76.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (3 samples, 0.05%)</title><rect x="73.8" y="451.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="76.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (2 samples, 0.03%)</title><rect x="74.4" y="451.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="77.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.10%)</title><rect x="75.0" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="75.0" y="435.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.10%)</title><rect x="75.0" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.10%)</title><rect x="75.0" y="403.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.10%)</title><rect x="75.0" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.10%)</title><rect x="75.0" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (6 samples, 0.10%)</title><rect x="75.0" y="355.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.10%)</title><rect x="75.0" y="339.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.10%)</title><rect x="75.0" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (2 samples, 0.03%)</title><rect x="75.2" y="307.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="78.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.05%)</title><rect x="75.7" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.05%)</title><rect x="75.7" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.03%)</title><rect x="75.9" y="275.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.03%)</title><rect x="75.9" y="259.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (8 samples, 0.14%)</title><rect x="76.3" y="451.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.3" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.07%)</title><rect x="76.3" y="435.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="79.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (2 samples, 0.03%)</title><rect x="77.1" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="80.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="77.5" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.5" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="77.5" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.5" y="430.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="77.5" y="403.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="80.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="78.1" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="78.1" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="78.1" y="547.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="81.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.07%)</title><rect x="78.5" y="611.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.07%)</title><rect x="78.5" y="595.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="78.5" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="81.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="79.0" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="79.0" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="79.0" y="547.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="82.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (76 samples, 1.33%)</title><rect x="79.4" y="611.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="79.4" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="79.4" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (73 samples, 1.27%)</title><rect x="80.0" y="595.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (73 samples, 1.27%)</title><rect x="80.0" y="579.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.0" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (6 samples, 0.10%)</title><rect x="80.0" y="563.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="83.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (66 samples, 1.15%)</title><rect x="81.2" y="563.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.2" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="82.0" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="82.0" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.0" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.03%)</title><rect x="82.0" y="515.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="85.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (4 samples, 0.07%)</title><rect x="82.7" y="547.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="85.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (2 samples, 0.03%)</title><rect x="83.5" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="86.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (2 samples, 0.03%)</title><rect x="83.9" y="547.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="86.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="84.3" y="547.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="87.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (19 samples, 0.33%)</title><rect x="84.9" y="547.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (3 samples, 0.05%)</title><rect x="84.9" y="531.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="87.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (3 samples, 0.05%)</title><rect x="85.5" y="531.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="88.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="86.4" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="86.4" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.get$Lambda (2 samples, 0.03%)</title><rect x="86.4" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$164 (2 samples, 0.03%)</title><rect x="86.4" y="483.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="89.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (7 samples, 0.12%)</title><rect x="87.4" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (2 samples, 0.03%)</title><rect x="87.4" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="90.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (4 samples, 0.07%)</title><rect x="88.0" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.03%)</title><rect x="88.4" y="499.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="91.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (23 samples, 0.40%)</title><rect x="88.8" y="547.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (2 samples, 0.03%)</title><rect x="89.0" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="92.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (3 samples, 0.05%)</title><rect x="89.4" y="531.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="92.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (2 samples, 0.03%)</title><rect x="90.1" y="531.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="93.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.03%)</title><rect x="90.5" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (2 samples, 0.03%)</title><rect x="90.5" y="515.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="93.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (13 samples, 0.23%)</title><rect x="90.9" y="531.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (3 samples, 0.05%)</title><rect x="90.9" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="93.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (5 samples, 0.09%)</title><rect x="91.5" y="515.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="94.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (2 samples, 0.03%)</title><rect x="92.5" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.5" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (2 samples, 0.03%)</title><rect x="92.5" y="499.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="95.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.05%)</title><rect x="92.9" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (2 samples, 0.03%)</title><rect x="93.2" y="499.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="96.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (6 samples, 0.10%)</title><rect x="93.6" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.6" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (5 samples, 0.09%)</title><rect x="93.8" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$146/1058008739.run (5 samples, 0.09%)</title><rect x="93.8" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.09%)</title><rect x="93.8" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.8" y="510.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.09%)</title><rect x="93.8" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.8" y="494.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (5 samples, 0.09%)</title><rect x="93.8" y="467.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.8" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.09%)</title><rect x="93.8" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="96.8" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.09%)</title><rect x="93.8" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.8" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.09%)</title><rect x="93.8" y="419.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.8" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (5 samples, 0.09%)</title><rect x="93.8" y="403.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="96.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (8 samples, 0.14%)</title><rect x="95.2" y="659.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (5 samples, 0.09%)</title><rect x="95.2" y="643.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="98.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (3 samples, 0.05%)</title><rect x="96.2" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (3 samples, 0.05%)</title><rect x="96.2" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.2" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="96.2" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.2" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.05%)</title><rect x="96.2" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.2" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="96.2" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.2" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="96.2" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.2" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.05%)</title><rect x="96.2" y="547.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.2" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.05%)</title><rect x="96.2" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.2" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.05%)</title><rect x="96.2" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.05%)</title><rect x="96.2" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.2" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (3 samples, 0.05%)</title><rect x="96.2" y="483.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="99.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (184 samples, 3.21%)</title><rect x="96.9" y="723.0" width="37.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.9" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (184 samples, 3.21%)</title><rect x="96.9" y="707.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.9" y="718.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (173 samples, 3.02%)</title><rect x="96.9" y="691.0" width="35.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.9" y="702.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (173 samples, 3.02%)</title><rect x="96.9" y="675.0" width="35.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.9" y="686.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (173 samples, 3.02%)</title><rect x="96.9" y="659.0" width="35.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.9" y="670.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (173 samples, 3.02%)</title><rect x="96.9" y="643.0" width="35.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.9" y="654.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (127 samples, 2.22%)</title><rect x="96.9" y="627.0" width="26.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.9" y="638.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (127 samples, 2.22%)</title><rect x="96.9" y="611.0" width="26.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.9" y="622.0">o..</text>
</g>
<g>
<title>byte[] (127 samples, 2.22%)</title><rect x="96.9" y="595.0" width="26.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="99.9" y="606.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 0.80%)</title><rect x="123.0" y="627.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.0" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (46 samples, 0.80%)</title><rect x="123.0" y="611.0" width="9.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="126.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (11 samples, 0.19%)</title><rect x="132.5" y="691.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (11 samples, 0.19%)</title><rect x="132.5" y="675.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (11 samples, 0.19%)</title><rect x="132.5" y="659.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.19%)</title><rect x="132.5" y="643.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.19%)</title><rect x="132.5" y="627.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="135.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get (1,636 samples, 28.54%)</title><rect x="134.7" y="739.0" width="336.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.7" y="750.0">ru/mail/polis/service/ivanovandrey/BasicFuctio..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$put$1 (1,636 samples, 28.54%)</title><rect x="134.7" y="723.0" width="336.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.7" y="734.0">ru/mail/polis/service/ivanovandrey/BasicFuctio..</text>
</g>
<g>
<title>java/lang/String.getBytes (66 samples, 1.15%)</title><rect x="134.7" y="707.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (66 samples, 1.15%)</title><rect x="134.7" y="691.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (66 samples, 1.15%)</title><rect x="134.7" y="675.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.7" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 1.15%)</title><rect x="134.7" y="659.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.7" y="670.0"></text>
</g>
<g>
<title>byte[] (66 samples, 1.15%)</title><rect x="134.7" y="643.0" width="13.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="137.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (151 samples, 2.63%)</title><rect x="148.3" y="707.0" width="31.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.3" y="718.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (151 samples, 2.63%)</title><rect x="148.3" y="691.0" width="31.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.3" y="702.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (151 samples, 2.63%)</title><rect x="148.3" y="675.0" width="31.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="151.3" y="686.0">ja..</text>
</g>
<g>
<title>one.nio.http.Response (32 samples, 0.56%)</title><rect x="179.4" y="707.0" width="6.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="182.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (171 samples, 2.98%)</title><rect x="186.0" y="707.0" width="35.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.0" y="718.0">one..</text>
</g>
<g>
<title>byte[] (78 samples, 1.36%)</title><rect x="186.0" y="691.0" width="16.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="189.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (54 samples, 0.94%)</title><rect x="202.0" y="691.0" width="11.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="205.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.68%)</title><rect x="213.2" y="691.0" width="8.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="216.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsertWithTimestamp (1,216 samples, 21.21%)</title><rect x="221.2" y="707.0" width="250.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.2" y="718.0">ru/mail/polis/dao/RocksDBImpl.ups..</text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.&lt;init&gt; (233 samples, 4.06%)</title><rect x="221.2" y="691.0" width="47.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.2" y="702.0">ru/m..</text>
</g>
<g>
<title>byte[] (233 samples, 4.06%)</title><rect x="221.2" y="675.0" width="47.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="224.2" y="686.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/dao/Timestamp.getTimestampData (666 samples, 11.62%)</title><rect x="269.1" y="691.0" width="137.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.1" y="702.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (343 samples, 5.98%)</title><rect x="269.1" y="675.0" width="70.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.1" y="686.0">java/nio..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (343 samples, 5.98%)</title><rect x="269.1" y="659.0" width="70.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.1" y="670.0">java/nio..</text>
</g>
<g>
<title>byte[] (343 samples, 5.98%)</title><rect x="269.1" y="643.0" width="70.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="272.1" y="654.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (323 samples, 5.63%)</title><rect x="339.7" y="675.0" width="66.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.7" y="686.0">ru/mail..</text>
</g>
<g>
<title>byte[] (323 samples, 5.63%)</title><rect x="339.7" y="659.0" width="66.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="342.7" y="670.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (256 samples, 4.47%)</title><rect x="406.2" y="691.0" width="52.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="409.2" y="702.0">ru/ma..</text>
</g>
<g>
<title>byte[] (256 samples, 4.47%)</title><rect x="406.2" y="675.0" width="52.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="409.2" y="686.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.toArrayShifted (61 samples, 1.06%)</title><rect x="458.9" y="691.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.fromByteBufferToByteArray (61 samples, 1.06%)</title><rect x="458.9" y="675.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.9" y="686.0"></text>
</g>
<g>
<title>byte[] (61 samples, 1.06%)</title><rect x="458.9" y="659.0" width="12.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="461.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (313 samples, 5.46%)</title><rect x="471.5" y="755.0" width="64.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.5" y="766.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (313 samples, 5.46%)</title><rect x="471.5" y="739.0" width="64.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.5" y="750.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (86 samples, 1.50%)</title><rect x="471.5" y="723.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (86 samples, 1.50%)</title><rect x="471.5" y="707.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (86 samples, 1.50%)</title><rect x="471.5" y="691.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (86 samples, 1.50%)</title><rect x="471.5" y="675.0" width="17.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.accept (61 samples, 1.06%)</title><rect x="471.5" y="659.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.lambda$trySendResponse$3 (61 samples, 1.06%)</title><rect x="471.5" y="643.0" width="12.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (61 samples, 1.06%)</title><rect x="471.5" y="627.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (61 samples, 1.06%)</title><rect x="471.5" y="611.0" width="12.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (39 samples, 0.68%)</title><rect x="471.5" y="595.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (39 samples, 0.68%)</title><rect x="471.5" y="579.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.5" y="590.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.68%)</title><rect x="471.5" y="563.0" width="8.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="474.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 0.38%)</title><rect x="479.5" y="595.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.5" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22 samples, 0.38%)</title><rect x="479.5" y="579.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="482.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.accept (25 samples, 0.44%)</title><rect x="484.0" y="659.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$0 (25 samples, 0.44%)</title><rect x="484.0" y="643.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (25 samples, 0.44%)</title><rect x="484.0" y="627.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.0" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.44%)</title><rect x="484.0" y="611.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.44%)</title><rect x="484.0" y="595.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="487.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$139/1648730775.apply (91 samples, 1.59%)</title><rect x="489.2" y="723.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$sendToReplicas$2 (91 samples, 1.59%)</title><rect x="489.2" y="707.0" width="18.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Replica.formFinalResponse (91 samples, 1.59%)</title><rect x="489.2" y="691.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.2" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (35 samples, 0.61%)</title><rect x="489.2" y="675.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (10 samples, 0.17%)</title><rect x="489.2" y="659.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="492.2" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (10 samples, 0.17%)</title><rect x="489.2" y="643.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.2" y="654.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (10 samples, 0.17%)</title><rect x="489.2" y="627.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="492.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (25 samples, 0.44%)</title><rect x="491.2" y="659.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.2" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (25 samples, 0.44%)</title><rect x="491.2" y="643.0" width="5.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="494.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (14 samples, 0.24%)</title><rect x="496.4" y="675.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.24%)</title><rect x="496.4" y="659.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (14 samples, 0.24%)</title><rect x="496.4" y="643.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (4 samples, 0.07%)</title><rect x="496.4" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.4" y="638.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (4 samples, 0.07%)</title><rect x="496.4" y="611.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="499.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (10 samples, 0.17%)</title><rect x="497.2" y="627.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (10 samples, 0.17%)</title><rect x="497.2" y="611.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.2" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (10 samples, 0.17%)</title><rect x="497.2" y="595.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.2" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (10 samples, 0.17%)</title><rect x="497.2" y="579.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="500.2" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.14%)</title><rect x="499.2" y="675.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="502.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (34 samples, 0.59%)</title><rect x="500.9" y="675.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.9" y="686.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.24%)</title><rect x="500.9" y="659.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="503.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.19%)</title><rect x="503.8" y="659.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="506.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.16%)</title><rect x="506.0" y="659.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="509.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology$$Lambda$133/1116379785.apply (136 samples, 2.37%)</title><rect x="507.9" y="723.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="510.9" y="734.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.lambda$forwardRequest$0 (136 samples, 2.37%)</title><rect x="507.9" y="707.0" width="28.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.9" y="718.0">r..</text>
</g>
<g>
<title>java/lang/String.valueOf (37 samples, 0.65%)</title><rect x="507.9" y="691.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (37 samples, 0.65%)</title><rect x="507.9" y="675.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.9" y="686.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.28%)</title><rect x="507.9" y="659.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="510.9" y="670.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.37%)</title><rect x="511.2" y="659.0" width="4.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="514.2" y="670.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.38%)</title><rect x="515.5" y="691.0" width="4.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="518.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (77 samples, 1.34%)</title><rect x="520.0" y="691.0" width="15.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.0" y="702.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.66%)</title><rect x="520.0" y="675.0" width="7.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="523.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (24 samples, 0.42%)</title><rect x="527.9" y="675.0" width="4.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="530.9" y="686.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.26%)</title><rect x="532.8" y="675.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="535.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (103 samples, 1.80%)</title><rect x="535.9" y="755.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.9" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (95 samples, 1.66%)</title><rect x="535.9" y="739.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (95 samples, 1.66%)</title><rect x="535.9" y="723.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (95 samples, 1.66%)</title><rect x="535.9" y="707.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (95 samples, 1.66%)</title><rect x="535.9" y="691.0" width="19.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="538.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 0.14%)</title><rect x="555.4" y="739.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.14%)</title><rect x="555.4" y="723.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (8 samples, 0.14%)</title><rect x="555.4" y="707.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (8 samples, 0.14%)</title><rect x="555.4" y="691.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="558.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.run (82 samples, 1.43%)</title><rect x="557.1" y="755.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (82 samples, 1.43%)</title><rect x="557.1" y="739.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (82 samples, 1.43%)</title><rect x="557.1" y="723.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (82 samples, 1.43%)</title><rect x="557.1" y="707.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 1.43%)</title><rect x="557.1" y="691.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (82 samples, 1.43%)</title><rect x="557.1" y="675.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (82 samples, 1.43%)</title><rect x="557.1" y="659.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (82 samples, 1.43%)</title><rect x="557.1" y="643.0" width="16.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (82 samples, 1.43%)</title><rect x="557.1" y="627.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (82 samples, 1.43%)</title><rect x="557.1" y="611.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="560.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (82 samples, 1.43%)</title><rect x="557.1" y="595.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (77 samples, 1.34%)</title><rect x="557.1" y="579.0" width="15.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="557.1" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="557.1" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (75 samples, 1.31%)</title><rect x="557.5" y="563.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (6 samples, 0.10%)</title><rect x="557.5" y="547.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="560.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (69 samples, 1.20%)</title><rect x="558.7" y="547.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (69 samples, 1.20%)</title><rect x="558.7" y="531.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (69 samples, 1.20%)</title><rect x="558.7" y="515.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (17 samples, 0.30%)</title><rect x="558.7" y="499.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (2 samples, 0.03%)</title><rect x="558.7" y="483.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="561.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$199/1679965878.apply (14 samples, 0.24%)</title><rect x="559.1" y="483.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (14 samples, 0.24%)</title><rect x="559.1" y="467.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (14 samples, 0.24%)</title><rect x="559.1" y="451.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="559.1" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="559.1" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (2 samples, 0.03%)</title><rect x="559.1" y="403.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="562.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (12 samples, 0.21%)</title><rect x="559.6" y="435.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="559.6" y="419.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="559.6" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$204/398643824.get$Lambda (4 samples, 0.07%)</title><rect x="559.6" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$204 (4 samples, 0.07%)</title><rect x="559.6" y="371.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="562.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (8 samples, 0.14%)</title><rect x="560.4" y="419.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (8 samples, 0.14%)</title><rect x="560.4" y="403.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (5 samples, 0.09%)</title><rect x="560.4" y="387.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="563.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="561.4" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="561.4" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="561.4" y="355.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="564.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (52 samples, 0.91%)</title><rect x="562.2" y="499.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (52 samples, 0.91%)</title><rect x="562.2" y="483.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$181/38902132.apply (52 samples, 0.91%)</title><rect x="562.2" y="467.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (52 samples, 0.91%)</title><rect x="562.2" y="451.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (52 samples, 0.91%)</title><rect x="562.2" y="435.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$135/257982228.apply (52 samples, 0.91%)</title><rect x="562.2" y="419.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (52 samples, 0.91%)</title><rect x="562.2" y="403.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.12%)</title><rect x="562.2" y="387.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.12%)</title><rect x="562.2" y="371.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.03%)</title><rect x="562.2" y="355.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="565.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="562.6" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (5 samples, 0.09%)</title><rect x="562.6" y="339.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="562.6" y="323.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="565.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (45 samples, 0.78%)</title><rect x="563.7" y="387.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (11 samples, 0.19%)</title><rect x="563.7" y="371.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (11 samples, 0.19%)</title><rect x="563.7" y="355.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (11 samples, 0.19%)</title><rect x="563.7" y="339.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$196/1949249014.accept (4 samples, 0.07%)</title><rect x="563.7" y="323.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (4 samples, 0.07%)</title><rect x="563.7" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (4 samples, 0.07%)</title><rect x="563.7" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="563.7" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="563.7" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$197/592113876.get$Lambda (2 samples, 0.03%)</title><rect x="563.7" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$197 (2 samples, 0.03%)</title><rect x="563.7" y="227.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="566.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.03%)</title><rect x="564.1" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="564.1" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$198/537816286.accept (5 samples, 0.09%)</title><rect x="564.5" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (5 samples, 0.09%)</title><rect x="564.5" y="307.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (5 samples, 0.09%)</title><rect x="564.5" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (5 samples, 0.09%)</title><rect x="564.5" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (5 samples, 0.09%)</title><rect x="564.5" y="259.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.09%)</title><rect x="564.5" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.09%)</title><rect x="564.5" y="227.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.09%)</title><rect x="564.5" y="211.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.09%)</title><rect x="564.5" y="195.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (5 samples, 0.09%)</title><rect x="564.5" y="179.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.03%)</title><rect x="564.5" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="564.5" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.05%)</title><rect x="564.9" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.05%)</title><rect x="564.9" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.05%)</title><rect x="564.9" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.05%)</title><rect x="564.9" y="115.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (3 samples, 0.05%)</title><rect x="564.9" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (3 samples, 0.05%)</title><rect x="564.9" y="83.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (3 samples, 0.05%)</title><rect x="564.9" y="67.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (3 samples, 0.05%)</title><rect x="564.9" y="51.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (3 samples, 0.05%)</title><rect x="564.9" y="35.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="567.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="565.5" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="565.5" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="565.5" y="291.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="568.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (34 samples, 0.59%)</title><rect x="565.9" y="371.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.03%)</title><rect x="566.1" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.03%)</title><rect x="566.1" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="566.1" y="323.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="569.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (31 samples, 0.54%)</title><rect x="566.6" y="355.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (10 samples, 0.17%)</title><rect x="566.8" y="339.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.03%)</title><rect x="566.8" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (2 samples, 0.03%)</title><rect x="566.8" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="569.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (8 samples, 0.14%)</title><rect x="567.2" y="323.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (4 samples, 0.07%)</title><rect x="567.4" y="307.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="570.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.03%)</title><rect x="568.4" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (2 samples, 0.03%)</title><rect x="568.4" y="291.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="571.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (20 samples, 0.35%)</title><rect x="568.8" y="339.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="568.8" y="323.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="571.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (14 samples, 0.24%)</title><rect x="569.2" y="323.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.03%)</title><rect x="569.2" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="572.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.21%)</title><rect x="569.6" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.6" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.21%)</title><rect x="569.6" y="291.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="572.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.07%)</title><rect x="572.1" y="323.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.07%)</title><rect x="572.1" y="307.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.07%)</title><rect x="572.1" y="291.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.07%)</title><rect x="572.1" y="275.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.1" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.07%)</title><rect x="572.1" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.07%)</title><rect x="572.1" y="243.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="575.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.09%)</title><rect x="572.9" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.09%)</title><rect x="572.9" y="563.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (5 samples, 0.09%)</title><rect x="572.9" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (5 samples, 0.09%)</title><rect x="572.9" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (5 samples, 0.09%)</title><rect x="572.9" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.9" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (5 samples, 0.09%)</title><rect x="572.9" y="499.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.03%)</title><rect x="572.9" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.9" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (2 samples, 0.03%)</title><rect x="572.9" y="467.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="575.9" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.05%)</title><rect x="573.3" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.3" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (3 samples, 0.05%)</title><rect x="573.3" y="467.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="576.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (343 samples, 5.98%)</title><rect x="574.0" y="755.0" width="70.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.0" y="766.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (343 samples, 5.98%)</title><rect x="574.0" y="739.0" width="70.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.0" y="750.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (274 samples, 4.78%)</title><rect x="574.0" y="723.0" width="56.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.0" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (274 samples, 4.78%)</title><rect x="574.0" y="707.0" width="56.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.0" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (274 samples, 4.78%)</title><rect x="574.0" y="691.0" width="56.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.0" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (5 samples, 0.09%)</title><rect x="574.0" y="675.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (5 samples, 0.09%)</title><rect x="574.0" y="659.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.09%)</title><rect x="574.0" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.09%)</title><rect x="574.0" y="627.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="577.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (4 samples, 0.07%)</title><rect x="574.0" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (4 samples, 0.07%)</title><rect x="574.0" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="574.0" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.07%)</title><rect x="574.0" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.07%)</title><rect x="574.0" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="577.0" y="558.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="574.0" y="531.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="577.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (269 samples, 4.69%)</title><rect x="575.0" y="675.0" width="55.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.0" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (269 samples, 4.69%)</title><rect x="575.0" y="659.0" width="55.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.0" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (269 samples, 4.69%)</title><rect x="575.0" y="643.0" width="55.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.0" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (269 samples, 4.69%)</title><rect x="575.0" y="627.0" width="55.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.0" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (117 samples, 2.04%)</title><rect x="575.0" y="611.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.0" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (117 samples, 2.04%)</title><rect x="575.0" y="595.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.0" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (117 samples, 2.04%)</title><rect x="575.0" y="579.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.0" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (117 samples, 2.04%)</title><rect x="575.0" y="563.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.0" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (117 samples, 2.04%)</title><rect x="575.0" y="547.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (117 samples, 2.04%)</title><rect x="575.0" y="531.0" width="24.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.0" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (117 samples, 2.04%)</title><rect x="575.0" y="515.0" width="24.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.0" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (116 samples, 2.02%)</title><rect x="575.0" y="499.0" width="23.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.0" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (116 samples, 2.02%)</title><rect x="575.0" y="483.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.0" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (115 samples, 2.01%)</title><rect x="575.0" y="467.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.0" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.apply (110 samples, 1.92%)</title><rect x="575.2" y="451.0" width="22.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.2" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (110 samples, 1.92%)</title><rect x="575.2" y="435.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.2" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="575.2" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="575.2" y="403.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.get$Lambda (2 samples, 0.03%)</title><rect x="575.2" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$222 (2 samples, 0.03%)</title><rect x="575.2" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="578.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (4 samples, 0.07%)</title><rect x="575.6" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.07%)</title><rect x="575.6" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="575.8" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="575.8" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (3 samples, 0.05%)</title><rect x="575.8" y="355.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="578.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (104 samples, 1.81%)</title><rect x="576.4" y="419.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.4" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="576.4" y="403.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="579.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="576.4" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$221/2051064248.get$Lambda (3 samples, 0.05%)</title><rect x="576.4" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="579.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$221 (3 samples, 0.05%)</title><rect x="576.4" y="355.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="579.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.07%)</title><rect x="577.1" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.07%)</title><rect x="577.1" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.05%)</title><rect x="577.1" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="580.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (97 samples, 1.69%)</title><rect x="577.9" y="403.0" width="19.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$123/285631240.apply (5 samples, 0.09%)</title><rect x="577.9" y="387.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (5 samples, 0.09%)</title><rect x="577.9" y="371.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (5 samples, 0.09%)</title><rect x="577.9" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (2 samples, 0.03%)</title><rect x="577.9" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="580.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (3 samples, 0.05%)</title><rect x="578.3" y="339.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="578.5" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="581.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (92 samples, 1.60%)</title><rect x="578.9" y="387.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="578.9" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="578.9" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.get$Lambda (3 samples, 0.05%)</title><rect x="578.9" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$219 (3 samples, 0.05%)</title><rect x="578.9" y="323.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="581.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2017647512.linkToTargetMethod (3 samples, 0.05%)</title><rect x="579.7" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1812561793.invokeStatic (3 samples, 0.05%)</title><rect x="579.7" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.get$Lambda (3 samples, 0.05%)</title><rect x="579.7" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$212 (3 samples, 0.05%)</title><rect x="579.7" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="582.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (16 samples, 0.28%)</title><rect x="580.3" y="371.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.16%)</title><rect x="580.3" y="355.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.07%)</title><rect x="580.3" y="339.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.3" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (4 samples, 0.07%)</title><rect x="580.3" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="583.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.09%)</title><rect x="581.2" y="339.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.2" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.09%)</title><rect x="581.2" y="323.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="584.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (4 samples, 0.07%)</title><rect x="582.2" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.2" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.07%)</title><rect x="582.2" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.2" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.07%)</title><rect x="582.2" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="582.6" y="307.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (2 samples, 0.03%)</title><rect x="582.6" y="291.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.6" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.03%)</title><rect x="582.6" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.6" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (2 samples, 0.03%)</title><rect x="582.6" y="259.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="585.6" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (3 samples, 0.05%)</title><rect x="583.0" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (3 samples, 0.05%)</title><rect x="583.0" y="339.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="586.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.17%)</title><rect x="583.6" y="371.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.07%)</title><rect x="583.6" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (2 samples, 0.03%)</title><rect x="583.6" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="586.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="584.0" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="584.0" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="584.0" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="587.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.10%)</title><rect x="584.5" y="355.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.10%)</title><rect x="584.5" y="339.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.07%)</title><rect x="584.5" y="323.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="587.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="585.3" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="585.3" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="585.3" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="588.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (4 samples, 0.07%)</title><rect x="585.7" y="371.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="588.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (3 samples, 0.05%)</title><rect x="586.5" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="589.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="587.1" y="371.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="590.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.03%)</title><rect x="588.2" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (2 samples, 0.03%)</title><rect x="588.2" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="591.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 0.78%)</title><rect x="588.6" y="371.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$212/558222197.run (45 samples, 0.78%)</title><rect x="588.6" y="355.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (45 samples, 0.78%)</title><rect x="588.6" y="339.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="588.6" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="588.6" y="307.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="591.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1661738971.get$Lambda (2 samples, 0.03%)</title><rect x="588.8" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (2 samples, 0.03%)</title><rect x="588.8" y="275.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="591.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/173548741.get$Lambda (2 samples, 0.03%)</title><rect x="589.2" y="291.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$216 (2 samples, 0.03%)</title><rect x="589.2" y="275.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="592.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.12%)</title><rect x="589.6" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.12%)</title><rect x="589.6" y="307.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (3 samples, 0.05%)</title><rect x="589.6" y="291.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="592.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="590.2" y="291.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="590.2" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="590.2" y="259.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="593.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (5 samples, 0.09%)</title><rect x="591.3" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="591.3" y="307.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="594.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (7 samples, 0.12%)</title><rect x="592.3" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (7 samples, 0.12%)</title><rect x="592.3" y="307.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.10%)</title><rect x="592.5" y="291.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.10%)</title><rect x="592.5" y="275.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (6 samples, 0.10%)</title><rect x="592.5" y="259.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.5" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (5 samples, 0.09%)</title><rect x="592.5" y="243.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="595.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (9 samples, 0.16%)</title><rect x="593.7" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.16%)</title><rect x="593.7" y="307.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (9 samples, 0.16%)</title><rect x="593.7" y="291.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.16%)</title><rect x="593.7" y="275.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.14%)</title><rect x="593.9" y="259.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.14%)</title><rect x="593.9" y="243.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.9" y="254.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="593.9" y="227.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="596.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (11 samples, 0.19%)</title><rect x="595.6" y="323.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (5 samples, 0.09%)</title><rect x="595.6" y="307.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="598.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (6 samples, 0.10%)</title><rect x="596.6" y="307.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="596.6" y="291.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (6 samples, 0.10%)</title><rect x="596.6" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="596.6" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="596.6" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.6" y="254.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="596.6" y="227.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="599.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (4 samples, 0.07%)</title><rect x="597.0" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (4 samples, 0.07%)</title><rect x="597.0" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.0" y="238.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="597.0" y="211.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="600.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$182/1082881682.apply (4 samples, 0.07%)</title><rect x="597.8" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (4 samples, 0.07%)</title><rect x="597.8" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.03%)</title><rect x="597.8" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.8" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2 samples, 0.03%)</title><rect x="597.8" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.8" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="597.8" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.8" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2 samples, 0.03%)</title><rect x="597.8" y="371.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="600.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="598.3" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.03%)</title><rect x="598.3" y="403.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="601.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (152 samples, 2.65%)</title><rect x="599.1" y="611.0" width="31.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.1" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (5 samples, 0.09%)</title><rect x="599.1" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.09%)</title><rect x="599.1" y="579.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.09%)</title><rect x="599.1" y="563.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.09%)</title><rect x="599.1" y="547.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.09%)</title><rect x="599.1" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.1" y="542.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="599.1" y="515.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="602.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (11 samples, 0.19%)</title><rect x="600.1" y="595.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (11 samples, 0.19%)</title><rect x="600.1" y="579.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (11 samples, 0.19%)</title><rect x="600.1" y="563.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (11 samples, 0.19%)</title><rect x="600.1" y="547.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.19%)</title><rect x="600.1" y="531.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.1" y="542.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.19%)</title><rect x="600.1" y="515.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="603.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (7 samples, 0.12%)</title><rect x="602.4" y="595.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.09%)</title><rect x="602.8" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.09%)</title><rect x="602.8" y="563.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="602.8" y="547.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="605.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="603.2" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.2" y="558.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="603.2" y="531.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="606.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (46 samples, 0.80%)</title><rect x="603.8" y="595.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (46 samples, 0.80%)</title><rect x="603.8" y="579.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (46 samples, 0.80%)</title><rect x="603.8" y="563.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.8" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.03%)</title><rect x="603.8" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="606.8" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="604.2" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="607.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.05%)</title><rect x="604.6" y="547.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="607.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="605.5" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="605.5" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (5 samples, 0.09%)</title><rect x="605.5" y="515.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (5 samples, 0.09%)</title><rect x="605.5" y="499.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="608.5" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (28 samples, 0.49%)</title><rect x="606.5" y="547.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (28 samples, 0.49%)</title><rect x="606.5" y="531.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (28 samples, 0.49%)</title><rect x="606.5" y="515.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="606.5" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="609.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="606.5" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.get$Lambda (4 samples, 0.07%)</title><rect x="606.5" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$122 (4 samples, 0.07%)</title><rect x="606.5" y="451.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="609.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (8 samples, 0.14%)</title><rect x="607.3" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (8 samples, 0.14%)</title><rect x="607.3" y="483.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.14%)</title><rect x="607.3" y="467.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.14%)</title><rect x="607.3" y="451.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.14%)</title><rect x="607.3" y="435.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.14%)</title><rect x="607.3" y="419.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.14%)</title><rect x="607.3" y="403.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.14%)</title><rect x="607.3" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.3" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.14%)</title><rect x="607.3" y="371.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="610.3" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (11 samples, 0.19%)</title><rect x="609.0" y="499.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.0" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (11 samples, 0.19%)</title><rect x="609.0" y="483.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (7 samples, 0.12%)</title><rect x="609.0" y="467.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.12%)</title><rect x="609.0" y="451.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.12%)</title><rect x="609.0" y="435.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="612.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (4 samples, 0.07%)</title><rect x="610.4" y="467.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.4" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (4 samples, 0.07%)</title><rect x="610.4" y="451.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="613.4" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.09%)</title><rect x="611.2" y="499.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.09%)</title><rect x="611.2" y="483.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="614.2" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5 samples, 0.09%)</title><rect x="612.2" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (5 samples, 0.09%)</title><rect x="612.2" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="615.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (83 samples, 1.45%)</title><rect x="613.3" y="595.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.3" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (4 samples, 0.07%)</title><rect x="613.3" y="579.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="616.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="614.1" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="614.1" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.1" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="614.1" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="617.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (8 samples, 0.14%)</title><rect x="614.5" y="579.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="614.5" y="563.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.5" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.14%)</title><rect x="614.5" y="547.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.5" y="558.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="614.5" y="531.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="617.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (69 samples, 1.20%)</title><rect x="616.2" y="579.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.33%)</title><rect x="616.2" y="563.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.33%)</title><rect x="616.2" y="547.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.19%)</title><rect x="616.2" y="531.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="619.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (8 samples, 0.14%)</title><rect x="618.4" y="531.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="621.4" y="542.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="618.4" y="515.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="621.4" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (15 samples, 0.26%)</title><rect x="620.1" y="563.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (15 samples, 0.26%)</title><rect x="620.1" y="547.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.1" y="558.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.14%)</title><rect x="620.1" y="531.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="623.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.12%)</title><rect x="621.7" y="531.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="624.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.10%)</title><rect x="623.2" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.10%)</title><rect x="623.2" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="623.2" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.2" y="542.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="623.2" y="515.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="626.2" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="624.0" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.0" y="526.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="624.0" y="499.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="627.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.12%)</title><rect x="624.4" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.12%)</title><rect x="624.4" y="547.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.12%)</title><rect x="624.4" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.12%)</title><rect x="624.4" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.12%)</title><rect x="624.4" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.12%)</title><rect x="624.4" y="483.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="627.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (22 samples, 0.38%)</title><rect x="625.8" y="563.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.16%)</title><rect x="625.8" y="547.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.16%)</title><rect x="625.8" y="531.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="628.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (11 samples, 0.19%)</title><rect x="627.7" y="547.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.7" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (11 samples, 0.19%)</title><rect x="627.7" y="531.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="630.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$205/782105492.apply (2 samples, 0.03%)</title><rect x="629.9" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.03%)</title><rect x="629.9" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (2 samples, 0.03%)</title><rect x="629.9" y="515.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="632.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (69 samples, 1.20%)</title><rect x="630.4" y="723.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (69 samples, 1.20%)</title><rect x="630.4" y="707.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (69 samples, 1.20%)</title><rect x="630.4" y="691.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$164/492686102.run (69 samples, 1.20%)</title><rect x="630.4" y="675.0" width="14.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (69 samples, 1.20%)</title><rect x="630.4" y="659.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="633.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (69 samples, 1.20%)</title><rect x="630.4" y="643.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="630.4" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="630.4" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (3 samples, 0.05%)</title><rect x="630.8" y="627.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="633.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (3 samples, 0.05%)</title><rect x="631.4" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.05%)</title><rect x="631.4" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (2 samples, 0.03%)</title><rect x="631.4" y="595.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="634.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (61 samples, 1.06%)</title><rect x="632.0" y="627.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (61 samples, 1.06%)</title><rect x="632.0" y="611.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$213/373575683.run (21 samples, 0.37%)</title><rect x="632.0" y="595.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (21 samples, 0.37%)</title><rect x="632.0" y="579.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (21 samples, 0.37%)</title><rect x="632.0" y="563.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.09%)</title><rect x="632.0" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.0" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.05%)</title><rect x="632.0" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="632.2" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.2" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (2 samples, 0.03%)</title><rect x="632.2" y="499.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="635.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.03%)</title><rect x="632.6" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="632.6" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="632.6" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (16 samples, 0.28%)</title><rect x="633.0" y="547.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (15 samples, 0.26%)</title><rect x="633.2" y="531.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (7 samples, 0.12%)</title><rect x="633.2" y="515.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.05%)</title><rect x="633.4" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.4" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.05%)</title><rect x="633.4" y="483.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.4" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (3 samples, 0.05%)</title><rect x="633.4" y="467.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="636.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (2 samples, 0.03%)</title><rect x="634.3" y="499.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="637.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.03%)</title><rect x="634.7" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (6 samples, 0.10%)</title><rect x="635.1" y="515.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5 samples, 0.09%)</title><rect x="635.3" y="499.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4 samples, 0.07%)</title><rect x="635.5" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4 samples, 0.07%)</title><rect x="635.5" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (4 samples, 0.07%)</title><rect x="635.5" y="451.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="638.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (40 samples, 0.70%)</title><rect x="636.3" y="595.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (40 samples, 0.70%)</title><rect x="636.3" y="579.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (40 samples, 0.70%)</title><rect x="636.3" y="563.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (40 samples, 0.70%)</title><rect x="636.3" y="547.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (40 samples, 0.70%)</title><rect x="636.3" y="531.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (40 samples, 0.70%)</title><rect x="636.3" y="515.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (40 samples, 0.70%)</title><rect x="636.3" y="499.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="639.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$219/2060346264.accept (40 samples, 0.70%)</title><rect x="636.3" y="483.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (40 samples, 0.70%)</title><rect x="636.3" y="467.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (40 samples, 0.70%)</title><rect x="636.3" y="451.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (40 samples, 0.70%)</title><rect x="636.3" y="435.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.03%)</title><rect x="636.3" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$222/2067968971.apply (2 samples, 0.03%)</title><rect x="636.3" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.03%)</title><rect x="636.3" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (2 samples, 0.03%)</title><rect x="636.3" y="371.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="639.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (38 samples, 0.66%)</title><rect x="636.7" y="419.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (38 samples, 0.66%)</title><rect x="636.7" y="403.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (38 samples, 0.66%)</title><rect x="636.7" y="387.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$ThreadPerTaskExecutor.execute (38 samples, 0.66%)</title><rect x="636.7" y="371.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Thread (22 samples, 0.38%)</title><rect x="636.7" y="355.0" width="4.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="639.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (16 samples, 0.28%)</title><rect x="641.3" y="355.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.3" y="366.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (2 samples, 0.03%)</title><rect x="641.3" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="644.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (6 samples, 0.10%)</title><rect x="641.9" y="339.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="641.9" y="323.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="641.9" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="644.9" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="642.3" y="307.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.3" y="318.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="642.3" y="291.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="645.3" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (7 samples, 0.12%)</title><rect x="643.1" y="339.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="646.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.&lt;init&gt; (7 samples, 0.12%)</title><rect x="643.1" y="323.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.1" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.getContext (7 samples, 0.12%)</title><rect x="643.1" y="307.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.1" y="318.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.optimize (2 samples, 0.03%)</title><rect x="643.1" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.1" y="302.0"></text>
</g>
<g>
<title>java/security/AccessControlContext.combine (2 samples, 0.03%)</title><rect x="643.1" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.1" y="286.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (2 samples, 0.03%)</title><rect x="643.1" y="259.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="646.1" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.getStackAccessControlContext (5 samples, 0.09%)</title><rect x="643.5" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.5" y="302.0"></text>
</g>
<g>
<title>java.security.AccessControlContext (3 samples, 0.05%)</title><rect x="643.5" y="275.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="646.5" y="286.0"></text>
</g>
<g>
<title>java.security.ProtectionDomain[] (2 samples, 0.03%)</title><rect x="644.1" y="275.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="647.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (422 samples, 7.36%)</title><rect x="644.6" y="803.0" width="86.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.6" y="814.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.12%)</title><rect x="644.6" y="787.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.12%)</title><rect x="644.6" y="771.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$185/1538519397.get$Lambda (5 samples, 0.09%)</title><rect x="644.6" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.6" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$185 (5 samples, 0.09%)</title><rect x="644.6" y="739.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="647.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$189/1242618604.get$Lambda (2 samples, 0.03%)</title><rect x="645.6" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.6" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$189 (2 samples, 0.03%)</title><rect x="645.6" y="739.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="648.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1043351526.linkToTargetMethod (7 samples, 0.12%)</title><rect x="646.0" y="787.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.12%)</title><rect x="646.0" y="771.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.get$Lambda (7 samples, 0.12%)</title><rect x="646.0" y="755.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.0" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$186 (7 samples, 0.12%)</title><rect x="646.0" y="739.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="649.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (91 samples, 1.59%)</title><rect x="647.4" y="787.0" width="18.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$187/2104524528.accept (79 samples, 1.38%)</title><rect x="647.4" y="771.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (79 samples, 1.38%)</title><rect x="647.4" y="755.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (79 samples, 1.38%)</title><rect x="647.4" y="739.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (79 samples, 1.38%)</title><rect x="647.4" y="723.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (79 samples, 1.38%)</title><rect x="647.4" y="707.0" width="16.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (79 samples, 1.38%)</title><rect x="647.4" y="691.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 1.38%)</title><rect x="647.4" y="675.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 1.38%)</title><rect x="647.4" y="659.0" width="16.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (79 samples, 1.38%)</title><rect x="647.4" y="643.0" width="16.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (79 samples, 1.38%)</title><rect x="647.4" y="627.0" width="16.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (79 samples, 1.38%)</title><rect x="647.4" y="611.0" width="16.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (79 samples, 1.38%)</title><rect x="647.4" y="595.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 0.30%)</title><rect x="647.4" y="579.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (17 samples, 0.30%)</title><rect x="647.4" y="563.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (17 samples, 0.30%)</title><rect x="647.4" y="547.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (9 samples, 0.16%)</title><rect x="647.4" y="531.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (9 samples, 0.16%)</title><rect x="647.4" y="515.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (9 samples, 0.16%)</title><rect x="647.4" y="499.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (9 samples, 0.16%)</title><rect x="647.4" y="483.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (9 samples, 0.16%)</title><rect x="647.4" y="467.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="650.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.14%)</title><rect x="649.3" y="531.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.14%)</title><rect x="649.3" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.14%)</title><rect x="649.3" y="499.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.14%)</title><rect x="649.3" y="483.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.14%)</title><rect x="649.3" y="467.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.3" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (8 samples, 0.14%)</title><rect x="649.3" y="451.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="652.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.10%)</title><rect x="650.9" y="579.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="650.9" y="563.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="650.9" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (6 samples, 0.10%)</title><rect x="650.9" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (6 samples, 0.10%)</title><rect x="650.9" y="515.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="653.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (56 samples, 0.98%)</title><rect x="652.2" y="579.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (19 samples, 0.33%)</title><rect x="652.2" y="563.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.21%)</title><rect x="652.2" y="547.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (12 samples, 0.21%)</title><rect x="652.2" y="531.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="655.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (7 samples, 0.12%)</title><rect x="654.6" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.6" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (7 samples, 0.12%)</title><rect x="654.6" y="531.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.6" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (7 samples, 0.12%)</title><rect x="654.6" y="515.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="657.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (37 samples, 0.65%)</title><rect x="656.1" y="563.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$152/998016372.get (37 samples, 0.65%)</title><rect x="656.1" y="547.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (37 samples, 0.65%)</title><rect x="656.1" y="531.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.65%)</title><rect x="656.1" y="515.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.65%)</title><rect x="656.1" y="499.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.1" y="510.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.03%)</title><rect x="656.1" y="483.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="659.1" y="494.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.61%)</title><rect x="656.5" y="483.0" width="7.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="659.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$191/879344288.accept (12 samples, 0.21%)</title><rect x="663.7" y="771.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.21%)</title><rect x="663.7" y="755.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$186/414376010.run (12 samples, 0.21%)</title><rect x="663.7" y="739.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.21%)</title><rect x="663.7" y="723.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.21%)</title><rect x="663.7" y="707.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.21%)</title><rect x="663.7" y="691.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12 samples, 0.21%)</title><rect x="663.7" y="675.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.7" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12 samples, 0.21%)</title><rect x="663.7" y="659.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="666.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (38 samples, 0.66%)</title><rect x="666.2" y="787.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.2" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (38 samples, 0.66%)</title><rect x="666.2" y="771.0" width="7.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="669.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (23 samples, 0.40%)</title><rect x="674.0" y="787.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.28%)</title><rect x="674.0" y="771.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (16 samples, 0.28%)</title><rect x="674.0" y="755.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (16 samples, 0.28%)</title><rect x="674.0" y="739.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (16 samples, 0.28%)</title><rect x="674.0" y="723.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="677.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (16 samples, 0.28%)</title><rect x="674.0" y="707.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (16 samples, 0.28%)</title><rect x="674.0" y="691.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.0" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (16 samples, 0.28%)</title><rect x="674.0" y="675.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="677.0" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (7 samples, 0.12%)</title><rect x="677.3" y="771.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.3" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (7 samples, 0.12%)</title><rect x="677.3" y="755.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="680.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (57 samples, 0.99%)</title><rect x="678.7" y="787.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$156/1024844896.run (40 samples, 0.70%)</title><rect x="678.7" y="771.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (40 samples, 0.70%)</title><rect x="678.7" y="755.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.70%)</title><rect x="678.7" y="739.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.70%)</title><rect x="678.7" y="723.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (40 samples, 0.70%)</title><rect x="678.7" y="707.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.70%)</title><rect x="678.7" y="691.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$154/1022927814.run (40 samples, 0.70%)</title><rect x="678.7" y="675.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (40 samples, 0.70%)</title><rect x="678.7" y="659.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (40 samples, 0.70%)</title><rect x="678.7" y="643.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (40 samples, 0.70%)</title><rect x="678.7" y="627.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (30 samples, 0.52%)</title><rect x="678.7" y="611.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (30 samples, 0.52%)</title><rect x="678.7" y="595.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (30 samples, 0.52%)</title><rect x="678.7" y="579.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/111156771.linkToTargetMethod (23 samples, 0.40%)</title><rect x="678.7" y="563.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/576936864.invoke (23 samples, 0.40%)</title><rect x="678.7" y="547.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.40%)</title><rect x="678.7" y="531.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (23 samples, 0.40%)</title><rect x="678.7" y="515.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (23 samples, 0.40%)</title><rect x="678.7" y="499.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.7" y="510.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.40%)</title><rect x="678.7" y="483.0" width="4.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="681.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.12%)</title><rect x="683.5" y="563.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.12%)</title><rect x="683.5" y="547.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.12%)</title><rect x="683.5" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194/1721001208.get$Lambda (7 samples, 0.12%)</title><rect x="683.5" y="515.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$194 (7 samples, 0.12%)</title><rect x="683.5" y="499.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="686.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (10 samples, 0.17%)</title><rect x="684.9" y="611.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.17%)</title><rect x="684.9" y="595.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.17%)</title><rect x="684.9" y="579.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.17%)</title><rect x="684.9" y="563.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.17%)</title><rect x="684.9" y="547.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.17%)</title><rect x="684.9" y="531.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="687.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (10 samples, 0.17%)</title><rect x="684.9" y="515.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="687.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$159/2084334116.run (17 samples, 0.30%)</title><rect x="687.0" y="771.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (17 samples, 0.30%)</title><rect x="687.0" y="755.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.16%)</title><rect x="687.0" y="739.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.16%)</title><rect x="687.0" y="723.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="690.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/506805504.get$Lambda (9 samples, 0.16%)</title><rect x="687.0" y="707.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="690.0" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$192 (9 samples, 0.16%)</title><rect x="687.0" y="691.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="690.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.14%)</title><rect x="688.8" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.14%)</title><rect x="688.8" y="723.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.14%)</title><rect x="688.8" y="707.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.8" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (8 samples, 0.14%)</title><rect x="688.8" y="691.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="691.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (111 samples, 1.94%)</title><rect x="690.5" y="787.0" width="22.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.5" y="798.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (19 samples, 0.33%)</title><rect x="690.5" y="771.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.5" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (19 samples, 0.33%)</title><rect x="690.5" y="755.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.5" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (19 samples, 0.33%)</title><rect x="690.5" y="739.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.5" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (19 samples, 0.33%)</title><rect x="690.5" y="723.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.5" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (19 samples, 0.33%)</title><rect x="690.5" y="707.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="693.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (92 samples, 1.60%)</title><rect x="694.4" y="771.0" width="18.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.17%)</title><rect x="694.4" y="755.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.17%)</title><rect x="694.4" y="739.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$224/1515826887.get$Lambda (10 samples, 0.17%)</title><rect x="694.4" y="723.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$224 (10 samples, 0.17%)</title><rect x="694.4" y="707.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="697.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (31 samples, 0.54%)</title><rect x="696.4" y="755.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.4" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (31 samples, 0.54%)</title><rect x="696.4" y="739.0" width="6.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="699.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (11 samples, 0.19%)</title><rect x="702.8" y="755.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.8" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (11 samples, 0.19%)</title><rect x="702.8" y="739.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.8" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (11 samples, 0.19%)</title><rect x="702.8" y="723.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="705.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (40 samples, 0.70%)</title><rect x="705.1" y="755.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.1" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (22 samples, 0.38%)</title><rect x="705.1" y="739.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="708.1" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (18 samples, 0.31%)</title><rect x="709.6" y="739.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.6" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (18 samples, 0.31%)</title><rect x="709.6" y="723.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.6" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (18 samples, 0.31%)</title><rect x="709.6" y="707.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="712.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (63 samples, 1.10%)</title><rect x="713.3" y="787.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.12%)</title><rect x="713.3" y="771.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="716.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.12%)</title><rect x="713.3" y="755.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$184/1509399046.get$Lambda (7 samples, 0.12%)</title><rect x="713.3" y="739.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.3" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$184 (7 samples, 0.12%)</title><rect x="713.3" y="723.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="716.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (31 samples, 0.54%)</title><rect x="714.7" y="771.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (10 samples, 0.17%)</title><rect x="714.7" y="755.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.7" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (10 samples, 0.17%)</title><rect x="714.7" y="739.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="717.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (21 samples, 0.37%)</title><rect x="716.8" y="755.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (21 samples, 0.37%)</title><rect x="716.8" y="739.0" width="4.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="719.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (25 samples, 0.44%)</title><rect x="721.1" y="771.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.1" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (25 samples, 0.44%)</title><rect x="721.1" y="755.0" width="5.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="724.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (15 samples, 0.26%)</title><rect x="726.3" y="787.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (15 samples, 0.26%)</title><rect x="726.3" y="771.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.3" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (15 samples, 0.26%)</title><rect x="726.3" y="755.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (15 samples, 0.26%)</title><rect x="726.3" y="739.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.3" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (9 samples, 0.16%)</title><rect x="726.3" y="723.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.3" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (9 samples, 0.16%)</title><rect x="726.3" y="707.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="729.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (6 samples, 0.10%)</title><rect x="728.1" y="723.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.1" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.10%)</title><rect x="728.1" y="707.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.1" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.10%)</title><rect x="728.1" y="691.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.1" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6 samples, 0.10%)</title><rect x="728.1" y="675.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (6 samples, 0.10%)</title><rect x="728.1" y="659.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.1" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (6 samples, 0.10%)</title><rect x="728.1" y="643.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="731.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (2 samples, 0.03%)</title><rect x="729.4" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.03%)</title><rect x="729.4" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (2 samples, 0.03%)</title><rect x="729.4" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.03%)</title><rect x="729.4" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.03%)</title><rect x="729.4" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="732.4" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.03%)</title><rect x="729.4" y="707.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="732.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (8 samples, 0.14%)</title><rect x="729.8" y="787.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.14%)</title><rect x="729.8" y="771.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (8 samples, 0.14%)</title><rect x="729.8" y="755.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.8" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (8 samples, 0.14%)</title><rect x="729.8" y="739.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="732.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,228 samples, 38.86%)</title><rect x="731.4" y="803.0" width="458.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.4" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (89 samples, 1.55%)</title><rect x="731.4" y="787.0" width="18.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.4" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (89 samples, 1.55%)</title><rect x="731.4" y="771.0" width="18.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="734.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,139 samples, 37.31%)</title><rect x="749.7" y="787.0" width="440.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="752.7" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,139 samples, 37.31%)</title><rect x="749.7" y="771.0" width="440.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.7" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,139 samples, 37.31%)</title><rect x="749.7" y="755.0" width="440.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.7" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (988 samples, 17.23%)</title><rect x="749.7" y="739.0" width="203.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.7" y="750.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (988 samples, 17.23%)</title><rect x="749.7" y="723.0" width="203.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.7" y="734.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (927 samples, 16.17%)</title><rect x="749.7" y="707.0" width="190.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.7" y="718.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (48 samples, 0.84%)</title><rect x="749.7" y="691.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (48 samples, 0.84%)</title><rect x="749.7" y="675.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.84%)</title><rect x="749.7" y="659.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.84%)</title><rect x="749.7" y="643.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="752.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.45%)</title><rect x="749.7" y="627.0" width="5.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="752.7" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.38%)</title><rect x="755.1" y="627.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.1" y="638.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.38%)</title><rect x="755.1" y="611.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="758.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (879 samples, 15.33%)</title><rect x="759.6" y="691.0" width="180.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.6" y="702.0">ru/mail/polis/service/i..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (48 samples, 0.84%)</title><rect x="759.6" y="675.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (48 samples, 0.84%)</title><rect x="759.6" y="659.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (48 samples, 0.84%)</title><rect x="759.6" y="643.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.6" y="654.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.33%)</title><rect x="759.6" y="627.0" width="3.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="762.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.51%)</title><rect x="763.5" y="627.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="766.5" y="638.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.51%)</title><rect x="763.5" y="611.0" width="6.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="766.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (72 samples, 1.26%)</title><rect x="769.5" y="675.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (72 samples, 1.26%)</title><rect x="769.5" y="659.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.44%)</title><rect x="769.5" y="643.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.44%)</title><rect x="769.5" y="627.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="772.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get$Lambda (25 samples, 0.44%)</title><rect x="769.5" y="611.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$119 (25 samples, 0.44%)</title><rect x="769.5" y="595.0" width="5.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="772.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (47 samples, 0.82%)</title><rect x="774.6" y="643.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (47 samples, 0.82%)</title><rect x="774.6" y="627.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (23 samples, 0.40%)</title><rect x="774.6" y="611.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="777.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (24 samples, 0.42%)</title><rect x="779.4" y="611.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="782.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (675 samples, 11.77%)</title><rect x="784.3" y="675.0" width="138.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.3" y="686.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.12%)</title><rect x="784.7" y="659.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.12%)</title><rect x="784.7" y="643.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.12%)</title><rect x="784.7" y="627.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.12%)</title><rect x="784.7" y="611.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.12%)</title><rect x="784.7" y="595.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.12%)</title><rect x="784.7" y="579.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="787.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.12%)</title><rect x="786.2" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.10%)</title><rect x="786.2" y="643.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="789.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (6 samples, 0.10%)</title><rect x="786.2" y="627.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="789.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (4 samples, 0.07%)</title><rect x="787.6" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4 samples, 0.07%)</title><rect x="787.6" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="787.8" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.8" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.05%)</title><rect x="787.8" y="611.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="790.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (7 samples, 0.12%)</title><rect x="788.4" y="659.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7 samples, 0.12%)</title><rect x="788.4" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (7 samples, 0.12%)</title><rect x="788.4" y="627.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="791.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (6 samples, 0.10%)</title><rect x="789.9" y="659.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.put (6 samples, 0.10%)</title><rect x="789.9" y="643.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="789.9" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="789.9" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$119/469315489.get$Lambda (2 samples, 0.03%)</title><rect x="789.9" y="595.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.9" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$119 (2 samples, 0.03%)</title><rect x="789.9" y="579.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="792.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (4 samples, 0.07%)</title><rect x="790.3" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (4 samples, 0.07%)</title><rect x="790.3" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.3" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.05%)</title><rect x="790.5" y="595.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="793.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.getAckResponses (38 samples, 0.66%)</title><rect x="791.1" y="659.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (4 samples, 0.07%)</title><rect x="791.3" y="643.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="794.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (30 samples, 0.52%)</title><rect x="792.3" y="643.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$137/766939021.accept (30 samples, 0.52%)</title><rect x="792.3" y="627.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures.lambda$getAckResponses$1 (30 samples, 0.52%)</title><rect x="792.3" y="611.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.17%)</title><rect x="792.3" y="595.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.17%)</title><rect x="792.3" y="579.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Futures$$Lambda$138/1132252705.get$Lambda (10 samples, 0.17%)</title><rect x="792.3" y="563.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.Futures$$Lambda$138 (10 samples, 0.17%)</title><rect x="792.3" y="547.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="795.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (20 samples, 0.35%)</title><rect x="794.4" y="595.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.35%)</title><rect x="794.4" y="579.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (8 samples, 0.14%)</title><rect x="794.4" y="563.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="797.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (3 samples, 0.05%)</title><rect x="796.0" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (3 samples, 0.05%)</title><rect x="796.0" y="547.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="799.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.16%)</title><rect x="796.7" y="563.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.16%)</title><rect x="796.7" y="547.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.16%)</title><rect x="796.7" y="531.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="798.5" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.forwardRequest (538 samples, 9.38%)</title><rect x="798.9" y="659.0" width="110.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.9" y="670.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (13 samples, 0.23%)</title><rect x="798.9" y="643.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (13 samples, 0.23%)</title><rect x="798.9" y="627.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (6 samples, 0.10%)</title><rect x="798.9" y="611.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="801.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.12%)</title><rect x="800.2" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.12%)</title><rect x="800.2" y="595.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.12%)</title><rect x="800.2" y="579.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="803.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (346 samples, 6.04%)</title><rect x="801.6" y="643.0" width="71.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.6" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (346 samples, 6.04%)</title><rect x="801.6" y="627.0" width="71.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.6" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (346 samples, 6.04%)</title><rect x="801.6" y="611.0" width="71.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.6" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (346 samples, 6.04%)</title><rect x="801.6" y="595.0" width="71.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.6" y="606.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.07%)</title><rect x="801.6" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.07%)</title><rect x="801.6" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$131/1332309156.get$Lambda (4 samples, 0.07%)</title><rect x="801.6" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$131 (4 samples, 0.07%)</title><rect x="801.6" y="531.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="804.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.19%)</title><rect x="802.4" y="579.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.19%)</title><rect x="802.4" y="563.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (7 samples, 0.12%)</title><rect x="802.4" y="547.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="805.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="803.9" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="803.9" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="803.9" y="515.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (8 samples, 0.14%)</title><rect x="804.7" y="579.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (8 samples, 0.14%)</title><rect x="804.7" y="563.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (4 samples, 0.07%)</title><rect x="804.7" y="547.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="807.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="805.5" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.07%)</title><rect x="805.5" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (4 samples, 0.07%)</title><rect x="805.5" y="515.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="808.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (8 samples, 0.14%)</title><rect x="806.3" y="579.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="809.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (13 samples, 0.23%)</title><rect x="808.0" y="579.0" width="2.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="811.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (171 samples, 2.98%)</title><rect x="810.7" y="579.0" width="35.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.7" y="590.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (18 samples, 0.31%)</title><rect x="810.7" y="563.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.7" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.23%)</title><rect x="810.7" y="547.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.7" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (6 samples, 0.10%)</title><rect x="810.7" y="531.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.7" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (6 samples, 0.10%)</title><rect x="810.7" y="515.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="813.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.12%)</title><rect x="811.9" y="531.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.9" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (7 samples, 0.12%)</title><rect x="811.9" y="515.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="814.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.09%)</title><rect x="813.3" y="547.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.09%)</title><rect x="813.3" y="531.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.09%)</title><rect x="813.3" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1884122755.get (5 samples, 0.09%)</title><rect x="813.3" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.3" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (5 samples, 0.09%)</title><rect x="813.3" y="483.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="816.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (83 samples, 1.45%)</title><rect x="814.4" y="563.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (83 samples, 1.45%)</title><rect x="814.4" y="547.0" width="17.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.4" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (2 samples, 0.03%)</title><rect x="814.4" y="531.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="817.4" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.12%)</title><rect x="815.0" y="531.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="818.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (2 samples, 0.03%)</title><rect x="816.4" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="819.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.10%)</title><rect x="816.8" y="531.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.10%)</title><rect x="816.8" y="515.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (6 samples, 0.10%)</title><rect x="816.8" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.8" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (6 samples, 0.10%)</title><rect x="816.8" y="483.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="819.8" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (42 samples, 0.73%)</title><rect x="818.1" y="531.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (42 samples, 0.73%)</title><rect x="818.1" y="515.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (42 samples, 0.73%)</title><rect x="818.1" y="499.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (42 samples, 0.73%)</title><rect x="818.1" y="483.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (19 samples, 0.33%)</title><rect x="818.1" y="467.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (10 samples, 0.17%)</title><rect x="818.1" y="451.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (10 samples, 0.17%)</title><rect x="818.1" y="435.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.17%)</title><rect x="818.1" y="419.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.17%)</title><rect x="818.1" y="403.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.17%)</title><rect x="818.1" y="387.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.1" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.17%)</title><rect x="818.1" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.1" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.17%)</title><rect x="818.1" y="355.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="821.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.17%)</title><rect x="818.1" y="339.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="821.1" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (9 samples, 0.16%)</title><rect x="820.1" y="451.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.1" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (9 samples, 0.16%)</title><rect x="820.1" y="435.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="823.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (18 samples, 0.31%)</title><rect x="822.2" y="467.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (18 samples, 0.31%)</title><rect x="822.2" y="451.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (12 samples, 0.21%)</title><rect x="822.2" y="435.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.21%)</title><rect x="822.2" y="419.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.21%)</title><rect x="822.2" y="403.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="825.2" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (6 samples, 0.10%)</title><rect x="824.7" y="435.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.7" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (6 samples, 0.10%)</title><rect x="824.7" y="419.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="827.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.07%)</title><rect x="825.9" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.07%)</title><rect x="825.9" y="451.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="828.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (11 samples, 0.19%)</title><rect x="826.7" y="531.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.7" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (11 samples, 0.19%)</title><rect x="826.7" y="515.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="829.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (12 samples, 0.21%)</title><rect x="829.0" y="531.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.0" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (12 samples, 0.21%)</title><rect x="829.0" y="515.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="832.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (44 samples, 0.77%)</title><rect x="831.5" y="563.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.5" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (44 samples, 0.77%)</title><rect x="831.5" y="547.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.5" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 0.72%)</title><rect x="831.5" y="531.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.5" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (41 samples, 0.72%)</title><rect x="831.5" y="515.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.5" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (41 samples, 0.72%)</title><rect x="831.5" y="499.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.5" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (9 samples, 0.16%)</title><rect x="831.5" y="483.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="834.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.23%)</title><rect x="833.3" y="483.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.3" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.23%)</title><rect x="833.3" y="467.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.3" y="478.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.23%)</title><rect x="833.3" y="451.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="836.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (19 samples, 0.33%)</title><rect x="836.0" y="483.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.33%)</title><rect x="836.0" y="467.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="839.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.16%)</title><rect x="836.0" y="451.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="839.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.17%)</title><rect x="837.8" y="451.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.8" y="462.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.17%)</title><rect x="837.8" y="435.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="840.8" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (3 samples, 0.05%)</title><rect x="839.9" y="531.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="842.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (9 samples, 0.16%)</title><rect x="840.5" y="563.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.16%)</title><rect x="840.5" y="547.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="843.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (17 samples, 0.30%)</title><rect x="842.4" y="563.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.4" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.12%)</title><rect x="842.4" y="547.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="845.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.05%)</title><rect x="843.8" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.05%)</title><rect x="843.8" y="531.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="846.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.12%)</title><rect x="844.4" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.12%)</title><rect x="844.4" y="531.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="847.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (85 samples, 1.48%)</title><rect x="845.9" y="579.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (3 samples, 0.05%)</title><rect x="845.9" y="563.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="848.9" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.map (11 samples, 0.19%)</title><rect x="846.5" y="563.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$126/271136818.apply (11 samples, 0.19%)</title><rect x="846.5" y="547.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (6 samples, 0.10%)</title><rect x="846.5" y="531.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="849.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (5 samples, 0.09%)</title><rect x="847.7" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (5 samples, 0.09%)</title><rect x="847.7" y="515.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="850.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (13 samples, 0.23%)</title><rect x="848.7" y="563.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="851.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.03%)</title><rect x="851.4" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="854.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (2 samples, 0.03%)</title><rect x="851.4" y="547.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="854.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (2 samples, 0.03%)</title><rect x="851.8" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.8" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.03%)</title><rect x="851.8" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.8" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="851.8" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.8" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (2 samples, 0.03%)</title><rect x="851.8" y="515.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="854.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (54 samples, 0.94%)</title><rect x="852.2" y="563.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (54 samples, 0.94%)</title><rect x="852.2" y="547.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.2" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (7 samples, 0.12%)</title><rect x="852.2" y="531.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="855.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.12%)</title><rect x="853.7" y="531.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="856.7" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (4 samples, 0.07%)</title><rect x="855.1" y="531.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="858.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (23 samples, 0.40%)</title><rect x="855.9" y="531.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (23 samples, 0.40%)</title><rect x="855.9" y="515.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="858.9" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (23 samples, 0.40%)</title><rect x="855.9" y="499.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.9" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (23 samples, 0.40%)</title><rect x="855.9" y="483.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.9" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (23 samples, 0.40%)</title><rect x="855.9" y="467.0" width="4.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="858.9" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (8 samples, 0.14%)</title><rect x="860.7" y="531.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (8 samples, 0.14%)</title><rect x="860.7" y="515.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.03%)</title><rect x="860.7" y="499.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="863.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (2 samples, 0.03%)</title><rect x="860.7" y="483.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="863.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (6 samples, 0.10%)</title><rect x="861.1" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="864.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (6 samples, 0.10%)</title><rect x="861.1" y="483.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="864.1" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.09%)</title><rect x="862.3" y="531.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.3" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.09%)</title><rect x="862.3" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.3" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.09%)</title><rect x="862.3" y="499.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="865.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (46 samples, 0.80%)</title><rect x="863.4" y="579.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="866.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.10%)</title><rect x="863.4" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.4" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (3 samples, 0.05%)</title><rect x="863.4" y="547.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="866.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.05%)</title><rect x="864.0" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.05%)</title><rect x="864.0" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3 samples, 0.05%)</title><rect x="864.0" y="515.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="867.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (5 samples, 0.09%)</title><rect x="864.6" y="563.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="867.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (35 samples, 0.61%)</title><rect x="865.6" y="563.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="868.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.09%)</title><rect x="865.6" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.09%)</title><rect x="865.6" y="531.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1461880985.get$Lambda (2 samples, 0.03%)</title><rect x="865.6" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$128 (2 samples, 0.03%)</title><rect x="865.6" y="499.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="868.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/2044585418.get$Lambda (3 samples, 0.05%)</title><rect x="866.0" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (3 samples, 0.05%)</title><rect x="866.0" y="499.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="869.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (30 samples, 0.52%)</title><rect x="866.6" y="547.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (30 samples, 0.52%)</title><rect x="866.6" y="531.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (17 samples, 0.30%)</title><rect x="866.6" y="515.0" width="3.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="869.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.23%)</title><rect x="870.1" y="515.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.23%)</title><rect x="870.1" y="499.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.23%)</title><rect x="870.1" y="483.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="873.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.formHttpRequest (179 samples, 3.12%)</title><rect x="872.8" y="643.0" width="36.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.8" y="654.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.23%)</title><rect x="872.8" y="627.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (13 samples, 0.23%)</title><rect x="872.8" y="611.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (13 samples, 0.23%)</title><rect x="872.8" y="595.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.23%)</title><rect x="872.8" y="579.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.03%)</title><rect x="872.8" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="872.8" y="547.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="875.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.19%)</title><rect x="873.2" y="563.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.19%)</title><rect x="873.2" y="547.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.2" y="558.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.19%)</title><rect x="873.2" y="531.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="876.2" y="542.0"></text>
</g>
<g>
<title>java/net/URI.create (58 samples, 1.01%)</title><rect x="875.5" y="627.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.5" y="638.0"></text>
</g>
<g>
<title>java.net.URI (12 samples, 0.21%)</title><rect x="875.5" y="611.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="878.5" y="622.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (46 samples, 0.80%)</title><rect x="878.0" y="611.0" width="9.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.0" y="622.0"></text>
</g>
<g>
<title>java.net.URI$Parser (5 samples, 0.09%)</title><rect x="878.0" y="595.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="881.0" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (41 samples, 0.72%)</title><rect x="879.0" y="595.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.14%)</title><rect x="879.0" y="579.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="879.0" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="882.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="879.0" y="547.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="882.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.10%)</title><rect x="879.4" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.4" y="558.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="879.4" y="531.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="882.4" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (33 samples, 0.58%)</title><rect x="880.6" y="579.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.28%)</title><rect x="880.6" y="563.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.28%)</title><rect x="880.6" y="547.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.12%)</title><rect x="880.6" y="531.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="883.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.16%)</title><rect x="882.1" y="531.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="885.1" y="542.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.16%)</title><rect x="882.1" y="515.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="885.1" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (17 samples, 0.30%)</title><rect x="883.9" y="563.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.19%)</title><rect x="883.9" y="547.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.19%)</title><rect x="883.9" y="531.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="886.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.09%)</title><rect x="883.9" y="515.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="886.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.10%)</title><rect x="885.0" y="515.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="888.0" y="526.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.10%)</title><rect x="885.0" y="499.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="888.0" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.10%)</title><rect x="886.2" y="547.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="889.2" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (6 samples, 0.10%)</title><rect x="886.2" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.10%)</title><rect x="886.2" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="886.2" y="499.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.03%)</title><rect x="886.2" y="483.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="889.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="886.6" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.6" y="494.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="886.6" y="467.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="889.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (5 samples, 0.09%)</title><rect x="887.4" y="627.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (5 samples, 0.09%)</title><rect x="887.4" y="611.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="890.4" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (9 samples, 0.16%)</title><rect x="888.5" y="627.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (5 samples, 0.09%)</title><rect x="888.5" y="611.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="891.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.07%)</title><rect x="889.5" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (3 samples, 0.05%)</title><rect x="889.7" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.05%)</title><rect x="889.7" y="579.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="892.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (77 samples, 1.34%)</title><rect x="890.3" y="627.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.3" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (5 samples, 0.09%)</title><rect x="890.3" y="611.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="893.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (72 samples, 1.26%)</title><rect x="891.3" y="611.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.3" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (60 samples, 1.05%)</title><rect x="891.3" y="595.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.3" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (60 samples, 1.05%)</title><rect x="891.3" y="579.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.3" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (4 samples, 0.07%)</title><rect x="891.3" y="563.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="894.3" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (6 samples, 0.10%)</title><rect x="892.2" y="563.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="895.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (3 samples, 0.05%)</title><rect x="893.4" y="563.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="896.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.05%)</title><rect x="894.0" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="897.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.05%)</title><rect x="894.0" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.get$Lambda (3 samples, 0.05%)</title><rect x="894.0" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.0" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$121 (3 samples, 0.05%)</title><rect x="894.0" y="515.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="897.0" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (7 samples, 0.12%)</title><rect x="894.6" y="563.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.6" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (7 samples, 0.12%)</title><rect x="894.6" y="547.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="897.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (33 samples, 0.58%)</title><rect x="896.1" y="563.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.1" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$121/38800100.accept (33 samples, 0.58%)</title><rect x="896.1" y="547.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (33 samples, 0.58%)</title><rect x="896.1" y="531.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (14 samples, 0.24%)</title><rect x="896.1" y="515.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$122/1720694412.accept (14 samples, 0.24%)</title><rect x="896.1" y="499.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="899.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (14 samples, 0.24%)</title><rect x="896.1" y="483.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.1" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.24%)</title><rect x="896.1" y="467.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (14 samples, 0.24%)</title><rect x="896.1" y="451.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.24%)</title><rect x="896.1" y="435.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (14 samples, 0.24%)</title><rect x="896.1" y="419.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.24%)</title><rect x="896.1" y="403.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.24%)</title><rect x="896.1" y="387.0" width="2.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="899.1" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (12 samples, 0.21%)</title><rect x="899.0" y="515.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.0" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (12 samples, 0.21%)</title><rect x="899.0" y="499.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (4 samples, 0.07%)</title><rect x="899.0" y="483.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.07%)</title><rect x="899.0" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.07%)</title><rect x="899.0" y="451.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="902.0" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.14%)</title><rect x="899.8" y="483.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.8" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.14%)</title><rect x="899.8" y="467.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="902.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.12%)</title><rect x="901.4" y="515.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.12%)</title><rect x="901.4" y="499.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="904.4" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (4 samples, 0.07%)</title><rect x="902.9" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (4 samples, 0.07%)</title><rect x="902.9" y="547.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="905.9" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (12 samples, 0.21%)</title><rect x="903.7" y="595.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.7" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (12 samples, 0.21%)</title><rect x="903.7" y="579.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.7" y="590.0"></text>
</g>
<g>
<title>java.util.Optional (12 samples, 0.21%)</title><rect x="903.7" y="563.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="906.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (9 samples, 0.16%)</title><rect x="906.2" y="627.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (9 samples, 0.16%)</title><rect x="906.2" y="611.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (9 samples, 0.16%)</title><rect x="906.2" y="595.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="909.2" y="606.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (9 samples, 0.16%)</title><rect x="906.2" y="579.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.09%)</title><rect x="906.2" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.09%)</title><rect x="906.2" y="547.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="909.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$120/26136221.apply (4 samples, 0.07%)</title><rect x="907.2" y="563.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="910.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (4 samples, 0.07%)</title><rect x="907.2" y="547.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.2" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (3 samples, 0.05%)</title><rect x="907.2" y="531.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="910.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.14%)</title><rect x="908.0" y="627.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.14%)</title><rect x="908.0" y="611.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="908.0" y="595.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="908.0" y="579.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="911.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="908.8" y="579.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.8" y="590.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="908.8" y="563.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="911.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/Util.getNodes (66 samples, 1.15%)</title><rect x="909.7" y="659.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.07%)</title><rect x="909.7" y="643.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="912.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.03%)</title><rect x="910.5" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (2 samples, 0.03%)</title><rect x="910.5" y="627.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="913.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.21%)</title><rect x="910.9" y="643.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1392425346.invoke (12 samples, 0.21%)</title><rect x="910.9" y="627.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.21%)</title><rect x="910.9" y="611.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.21%)</title><rect x="910.9" y="595.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.21%)</title><rect x="910.9" y="579.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.9" y="590.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.21%)</title><rect x="910.9" y="563.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="913.9" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.10%)</title><rect x="913.4" y="643.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.4" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.09%)</title><rect x="913.4" y="627.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="916.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.03%)</title><rect x="914.6" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.6" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (2 samples, 0.03%)</title><rect x="914.6" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="917.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.30%)</title><rect x="915.0" y="643.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (17 samples, 0.30%)</title><rect x="915.0" y="627.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (10 samples, 0.17%)</title><rect x="915.0" y="611.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.0" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (10 samples, 0.17%)</title><rect x="915.0" y="595.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="918.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (7 samples, 0.12%)</title><rect x="917.1" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.1" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (7 samples, 0.12%)</title><rect x="917.1" y="595.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="920.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.07%)</title><rect x="918.5" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="921.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (4 samples, 0.07%)</title><rect x="918.5" y="627.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="921.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (17 samples, 0.30%)</title><rect x="919.3" y="643.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.30%)</title><rect x="919.3" y="627.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (17 samples, 0.30%)</title><rect x="919.3" y="611.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (9 samples, 0.16%)</title><rect x="919.3" y="595.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (9 samples, 0.16%)</title><rect x="919.3" y="579.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="922.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (8 samples, 0.14%)</title><rect x="921.2" y="595.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="924.2" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (8 samples, 0.14%)</title><rect x="921.2" y="579.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="924.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.03%)</title><rect x="922.8" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="922.8" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.8" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (2 samples, 0.03%)</title><rect x="922.8" y="611.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="925.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions.trySendResponse (84 samples, 1.47%)</title><rect x="923.2" y="675.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="926.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.28%)</title><rect x="923.2" y="659.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="926.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.28%)</title><rect x="923.2" y="643.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="926.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/BasicFuctions$$Lambda$142/1513129397.get$Lambda (16 samples, 0.28%)</title><rect x="923.2" y="627.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.2" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.BasicFuctions$$Lambda$142 (16 samples, 0.28%)</title><rect x="923.2" y="611.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="926.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (68 samples, 1.19%)</title><rect x="926.5" y="659.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (68 samples, 1.19%)</title><rect x="926.5" y="643.0" width="14.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="929.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (35 samples, 0.61%)</title><rect x="926.5" y="627.0" width="7.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="929.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (32 samples, 0.56%)</title><rect x="933.7" y="627.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="936.7" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (32 samples, 0.56%)</title><rect x="933.7" y="611.0" width="6.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="936.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (61 samples, 1.06%)</title><rect x="940.5" y="707.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (61 samples, 1.06%)</title><rect x="940.5" y="691.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (61 samples, 1.06%)</title><rect x="940.5" y="675.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.51%)</title><rect x="940.5" y="659.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="943.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.56%)</title><rect x="946.5" y="659.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.5" y="670.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.56%)</title><rect x="946.5" y="643.0" width="6.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="949.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (277 samples, 4.83%)</title><rect x="953.1" y="739.0" width="57.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="956.1" y="750.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (59 samples, 1.03%)</title><rect x="953.1" y="723.0" width="12.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="956.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (72 samples, 1.26%)</title><rect x="965.2" y="723.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.2" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (72 samples, 1.26%)</title><rect x="965.2" y="707.0" width="14.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (146 samples, 2.55%)</title><rect x="980.1" y="723.0" width="30.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.1" y="734.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (146 samples, 2.55%)</title><rect x="980.1" y="707.0" width="30.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.1" y="718.0">on..</text>
</g>
<g>
<title>char[] (78 samples, 1.36%)</title><rect x="980.1" y="691.0" width="16.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="983.1" y="702.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.52%)</title><rect x="996.1" y="691.0" width="6.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="999.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.66%)</title><rect x="1002.3" y="691.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1005.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (38 samples, 0.66%)</title><rect x="1002.3" y="675.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (38 samples, 0.66%)</title><rect x="1002.3" y="659.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.3" y="670.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.66%)</title><rect x="1002.3" y="643.0" width="7.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1005.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (177 samples, 3.09%)</title><rect x="1010.1" y="739.0" width="36.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1013.1" y="750.0">one..</text>
</g>
<g>
<title>byte[] (177 samples, 3.09%)</title><rect x="1010.1" y="723.0" width="36.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1013.1" y="734.0">byt..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (53 samples, 0.92%)</title><rect x="1046.5" y="739.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.92%)</title><rect x="1046.5" y="723.0" width="10.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.92%)</title><rect x="1046.5" y="707.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.31%)</title><rect x="1046.5" y="691.0" width="3.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1049.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.61%)</title><rect x="1050.2" y="691.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.2" y="702.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.61%)</title><rect x="1050.2" y="675.0" width="7.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1053.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (644 samples, 11.23%)</title><rect x="1057.4" y="739.0" width="132.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.4" y="750.0">one/nio/util/Utf..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (644 samples, 11.23%)</title><rect x="1057.4" y="723.0" width="132.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1060.4" y="734.0">one/nio/util/Utf..</text>
</g>
<g>
<title>char[] (321 samples, 5.60%)</title><rect x="1057.4" y="707.0" width="66.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1060.4" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (127 samples, 2.22%)</title><rect x="1123.5" y="707.0" width="26.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1126.5" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (196 samples, 3.42%)</title><rect x="1149.7" y="707.0" width="40.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.7" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (196 samples, 3.42%)</title><rect x="1149.7" y="691.0" width="40.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1152.7" y="702.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (196 samples, 3.42%)</title><rect x="1149.7" y="675.0" width="40.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1152.7" y="686.0">jav..</text>
</g>
<g>
<title>byte[] (196 samples, 3.42%)</title><rect x="1149.7" y="659.0" width="40.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1152.7" y="670.0">byt..</text>
</g>
</g>
</svg>
