<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (1,689 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=3350] (138 samples, 8.17%)</title><rect x="10.0" y="915.0" width="96.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="926.0">[NIO Select..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="10.0" y="899.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.12%)</title><rect x="10.0" y="883.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.12%)</title><rect x="10.0" y="867.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="10.0" y="851.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) [clone .part.0] (1 samples, 0.06%)</title><rect x="10.7" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.7" y="862.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.06%)</title><rect x="10.7" y="835.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="13.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="11.4" y="899.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.4" y="910.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="11.4" y="883.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="14.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="11.4" y="867.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="14.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="11.4" y="851.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="14.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="11.4" y="835.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="14.4" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="11.4" y="819.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="14.4" y="830.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="11.4" y="803.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="14.4" y="814.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.06%)</title><rect x="11.4" y="787.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="14.4" y="798.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.06%)</title><rect x="11.4" y="771.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="14.4" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="11.4" y="755.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="14.4" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (135 samples, 7.99%)</title><rect x="12.1" y="899.0" width="94.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.1" y="910.0">one/nio/ser..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="12.8" y="883.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="15.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 2.78%)</title><rect x="13.5" y="883.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.5" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (47 samples, 2.78%)</title><rect x="13.5" y="867.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.5" y="878.0">on..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="14.2" y="851.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="17.2" y="862.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.12%)</title><rect x="14.9" y="851.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="17.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 2.49%)</title><rect x="16.3" y="851.0" width="29.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="19.3" y="862.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 2.37%)</title><rect x="17.0" y="835.0" width="27.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="20.0" y="846.0">e..</text>
</g>
<g>
<title>do_syscall_64 (40 samples, 2.37%)</title><rect x="17.0" y="819.0" width="27.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="20.0" y="830.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (40 samples, 2.37%)</title><rect x="17.0" y="803.0" width="27.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="20.0" y="814.0">_..</text>
</g>
<g>
<title>do_epoll_wait (40 samples, 2.37%)</title><rect x="17.0" y="787.0" width="27.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="20.0" y="798.0">d..</text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="17.0" y="771.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.0" y="782.0"></text>
</g>
<g>
<title>ep_poll (39 samples, 2.31%)</title><rect x="17.7" y="771.0" width="27.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="20.7" y="782.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.59%)</title><rect x="19.8" y="755.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="22.8" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.53%)</title><rect x="20.5" y="739.0" width="6.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.5" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.41%)</title><rect x="21.2" y="723.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="24.2" y="734.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.36%)</title><rect x="21.9" y="707.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.9" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.12%)</title><rect x="23.3" y="691.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="26.3" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.12%)</title><rect x="24.7" y="691.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.7" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.06%)</title><rect x="26.1" y="723.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="29.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (25 samples, 1.48%)</title><rect x="26.8" y="755.0" width="17.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="29.8" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (25 samples, 1.48%)</title><rect x="26.8" y="739.0" width="17.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.8" y="750.0"></text>
</g>
<g>
<title>schedule (25 samples, 1.48%)</title><rect x="26.8" y="723.0" width="17.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.8" y="734.0"></text>
</g>
<g>
<title>__schedule (24 samples, 1.42%)</title><rect x="27.5" y="707.0" width="16.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="30.5" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 1.42%)</title><rect x="27.5" y="691.0" width="16.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.5" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.06%)</title><rect x="44.2" y="755.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="44.9" y="835.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.9" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="44.9" y="819.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="47.9" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="44.9" y="803.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.9" y="814.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.06%)</title><rect x="45.6" y="851.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="48.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (84 samples, 4.97%)</title><rect x="46.3" y="883.0" width="58.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.3" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (83 samples, 4.91%)</title><rect x="47.0" y="867.0" width="58.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.0" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (30 samples, 1.78%)</title><rect x="47.0" y="851.0" width="21.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 0.65%)</title><rect x="47.7" y="835.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 0.65%)</title><rect x="47.7" y="819.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.7" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (8 samples, 0.47%)</title><rect x="47.7" y="803.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.12%)</title><rect x="47.7" y="787.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.12%)</title><rect x="47.7" y="771.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="47.7" y="755.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.06%)</title><rect x="48.4" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.4" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="48.4" y="723.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="51.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.put (6 samples, 0.36%)</title><rect x="49.1" y="787.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.36%)</title><rect x="49.1" y="771.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.36%)</title><rect x="49.1" y="755.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.36%)</title><rect x="49.1" y="739.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.36%)</title><rect x="49.1" y="723.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="49.1" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.30%)</title><rect x="49.8" y="707.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="52.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.30%)</title><rect x="49.8" y="691.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.30%)</title><rect x="49.8" y="675.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.8" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="49.8" y="659.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="52.8" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="49.8" y="643.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="52.8" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.24%)</title><rect x="50.5" y="659.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="53.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.24%)</title><rect x="50.5" y="643.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="53.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.24%)</title><rect x="50.5" y="627.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.24%)</title><rect x="50.5" y="611.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="53.5" y="622.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="50.5" y="595.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="53.5" y="606.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.24%)</title><rect x="50.5" y="579.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.5" y="590.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.24%)</title><rect x="50.5" y="563.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.5" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.24%)</title><rect x="50.5" y="547.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.5" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.24%)</title><rect x="50.5" y="531.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.18%)</title><rect x="53.3" y="803.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.18%)</title><rect x="53.3" y="787.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="53.3" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.12%)</title><rect x="54.0" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.12%)</title><rect x="54.0" y="755.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.12%)</title><rect x="54.0" y="739.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.24%)</title><rect x="55.4" y="835.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="55.4" y="819.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="55.4" y="803.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.12%)</title><rect x="56.8" y="819.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.06%)</title><rect x="58.2" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="58.2" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="58.2" y="803.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.65%)</title><rect x="58.9" y="835.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="65.2" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="65.2" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="65.9" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.06%)</title><rect x="65.9" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.9" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="65.9" y="787.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="68.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="66.6" y="835.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="66.6" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="67.3" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (53 samples, 3.14%)</title><rect x="68.0" y="851.0" width="37.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.0" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (48 samples, 2.84%)</title><rect x="68.0" y="835.0" width="33.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.0" y="846.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.18%)</title><rect x="68.0" y="819.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="71.0" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.12%)</title><rect x="68.0" y="803.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="71.0" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="69.4" y="803.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="72.4" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="69.4" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="72.4" y="798.0"></text>
</g>
<g>
<title>__recv (43 samples, 2.55%)</title><rect x="70.1" y="819.0" width="30.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="73.1" y="830.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 2.19%)</title><rect x="72.9" y="803.0" width="25.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="75.9" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (37 samples, 2.19%)</title><rect x="72.9" y="787.0" width="25.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.9" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (33 samples, 1.95%)</title><rect x="75.7" y="771.0" width="23.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.7" y="782.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (33 samples, 1.95%)</title><rect x="75.7" y="755.0" width="23.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.7" y="766.0">_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="76.4" y="739.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.4" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (30 samples, 1.78%)</title><rect x="77.1" y="739.0" width="20.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.1" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (25 samples, 1.48%)</title><rect x="77.1" y="723.0" width="17.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="80.1" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="77.1" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.1" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="77.8" y="707.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="80.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (23 samples, 1.36%)</title><rect x="78.5" y="707.0" width="16.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="81.5" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.47%)</title><rect x="81.3" y="691.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="84.3" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="81.3" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="84.3" y="686.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.30%)</title><rect x="82.0" y="675.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.0" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.12%)</title><rect x="82.7" y="659.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.7" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.12%)</title><rect x="84.1" y="659.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.1" y="670.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.12%)</title><rect x="84.1" y="643.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="87.1" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.12%)</title><rect x="85.5" y="675.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="88.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="86.9" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.9" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="87.5" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.5" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.47%)</title><rect x="88.2" y="691.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.2" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.47%)</title><rect x="88.2" y="675.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.2" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.30%)</title><rect x="90.3" y="659.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.3" y="670.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.24%)</title><rect x="90.3" y="643.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.3" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.18%)</title><rect x="91.0" y="627.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.0" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.06%)</title><rect x="93.1" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.1" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="93.1" y="627.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.1" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="93.8" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="96.8" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.30%)</title><rect x="94.5" y="723.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.5" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.24%)</title><rect x="95.2" y="707.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="98.2" y="718.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="95.2" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="98.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.18%)</title><rect x="95.9" y="691.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="98.9" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="98.0" y="739.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="98.0" y="723.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="98.7" y="803.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="101.7" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="98.7" y="787.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="101.7" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="98.7" y="771.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.7" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.12%)</title><rect x="100.1" y="819.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="103.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.30%)</title><rect x="101.5" y="835.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.5" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.12%)</title><rect x="105.0" y="883.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="108.0" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="105.0" y="867.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="108.0" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="105.7" y="867.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="108.7" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="105.7" y="851.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="108.7" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=3351] (132 samples, 7.82%)</title><rect x="106.4" y="915.0" width="92.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="109.4" y="926.0">[NIO Select..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="106.4" y="899.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="109.4" y="910.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="106.4" y="883.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="109.4" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="106.4" y="867.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="109.4" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="106.4" y="851.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="109.4" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="106.4" y="835.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="109.4" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (131 samples, 7.76%)</title><rect x="107.1" y="899.0" width="91.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.1" y="910.0">one/nio/ser..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="107.1" y="883.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="110.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 2.37%)</title><rect x="107.8" y="883.0" width="28.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.8" y="894.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (39 samples, 2.31%)</title><rect x="108.5" y="867.0" width="27.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.5" y="878.0">o..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="109.9" y="851.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="112.9" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="109.9" y="835.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="112.9" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="109.9" y="819.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="112.9" y="830.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 2.13%)</title><rect x="110.6" y="851.0" width="25.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="113.6" y="862.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 2.07%)</title><rect x="111.3" y="835.0" width="24.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.3" y="846.0">e..</text>
</g>
<g>
<title>do_syscall_64 (35 samples, 2.07%)</title><rect x="111.3" y="819.0" width="24.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.3" y="830.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (32 samples, 1.89%)</title><rect x="112.7" y="803.0" width="22.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="115.7" y="814.0">_..</text>
</g>
<g>
<title>do_epoll_wait (32 samples, 1.89%)</title><rect x="112.7" y="787.0" width="22.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="115.7" y="798.0">d..</text>
</g>
<g>
<title>ep_poll (32 samples, 1.89%)</title><rect x="112.7" y="771.0" width="22.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="115.7" y="782.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 0.36%)</title><rect x="113.4" y="755.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="116.4" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.30%)</title><rect x="114.1" y="739.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="117.1" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.30%)</title><rect x="114.1" y="723.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="117.1" y="734.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.18%)</title><rect x="114.8" y="707.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.8" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.12%)</title><rect x="115.5" y="691.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="118.5" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="116.9" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="119.9" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="117.6" y="755.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.6" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (24 samples, 1.42%)</title><rect x="118.3" y="755.0" width="16.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="121.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 1.42%)</title><rect x="118.3" y="739.0" width="16.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="121.3" y="750.0"></text>
</g>
<g>
<title>schedule (24 samples, 1.42%)</title><rect x="118.3" y="723.0" width="16.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="121.3" y="734.0"></text>
</g>
<g>
<title>__schedule (24 samples, 1.42%)</title><rect x="118.3" y="707.0" width="16.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.3" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 1.42%)</title><rect x="118.3" y="691.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.3" y="702.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.06%)</title><rect x="135.1" y="803.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (85 samples, 5.03%)</title><rect x="135.8" y="883.0" width="59.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.8" y="894.0">one/ni..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="135.8" y="867.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="138.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (84 samples, 4.97%)</title><rect x="136.5" y="867.0" width="58.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.5" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43 samples, 2.55%)</title><rect x="136.5" y="851.0" width="30.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.5" y="862.0">on..</text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="137.2" y="835.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 1.01%)</title><rect x="137.9" y="835.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 1.01%)</title><rect x="137.9" y="819.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.9" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (14 samples, 0.83%)</title><rect x="137.9" y="803.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.18%)</title><rect x="137.9" y="787.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.18%)</title><rect x="137.9" y="771.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="137.9" y="755.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.12%)</title><rect x="137.9" y="739.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.06%)</title><rect x="139.2" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="139.2" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="139.2" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.put (11 samples, 0.65%)</title><rect x="139.9" y="787.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.59%)</title><rect x="140.6" y="771.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.59%)</title><rect x="140.6" y="755.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="140.6" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="140.6" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="140.6" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="140.6" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.06%)</title><rect x="140.6" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="141.3" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="141.3" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.47%)</title><rect x="142.0" y="739.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.47%)</title><rect x="142.0" y="723.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.47%)</title><rect x="142.0" y="707.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.47%)</title><rect x="142.0" y="691.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.47%)</title><rect x="142.0" y="675.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.0" y="686.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.06%)</title><rect x="142.0" y="659.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="145.0" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="142.7" y="659.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="145.7" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="142.7" y="643.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="145.7" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.36%)</title><rect x="143.4" y="659.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="146.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.36%)</title><rect x="143.4" y="643.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="146.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.36%)</title><rect x="143.4" y="627.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="146.4" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.36%)</title><rect x="143.4" y="611.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.4" y="622.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.30%)</title><rect x="144.1" y="595.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="147.1" y="606.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.30%)</title><rect x="144.1" y="579.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="147.1" y="590.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.24%)</title><rect x="144.8" y="563.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="147.8" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.24%)</title><rect x="144.8" y="547.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="147.8" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.24%)</title><rect x="144.8" y="531.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.18%)</title><rect x="147.6" y="803.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.18%)</title><rect x="147.6" y="787.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="147.6" y="771.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.12%)</title><rect x="148.3" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.12%)</title><rect x="148.3" y="755.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.12%)</title><rect x="148.3" y="739.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.3" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="149.0" y="723.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="152.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.18%)</title><rect x="149.7" y="835.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="149.7" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="149.7" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="149.7" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="150.4" y="819.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="150.4" y="803.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.12%)</title><rect x="151.8" y="835.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.12%)</title><rect x="151.8" y="819.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="151.8" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.8" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="151.8" y="787.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="151.8" y="771.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="154.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="151.8" y="755.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="152.5" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.83%)</title><rect x="153.2" y="835.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.30%)</title><rect x="157.4" y="819.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.30%)</title><rect x="157.4" y="803.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="160.9" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.12%)</title><rect x="160.9" y="803.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.9" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="161.6" y="787.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="164.6" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="162.3" y="819.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.3" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="162.3" y="803.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="165.3" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="162.3" y="787.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="165.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.30%)</title><rect x="163.0" y="835.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.30%)</title><rect x="163.0" y="819.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="165.8" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="165.8" y="787.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="165.8" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.8" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="165.8" y="755.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="168.8" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="165.8" y="739.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="168.8" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="165.8" y="723.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="168.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (41 samples, 2.43%)</title><rect x="166.5" y="851.0" width="28.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.5" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (39 samples, 2.31%)</title><rect x="166.5" y="835.0" width="27.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.5" y="846.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="166.5" y="819.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="169.5" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.53%)</title><rect x="167.2" y="819.0" width="6.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="170.2" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.12%)</title><rect x="167.9" y="803.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="170.9" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="168.6" y="787.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="171.6" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="168.6" y="771.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="171.6" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="168.6" y="755.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="171.6" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.12%)</title><rect x="169.3" y="803.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="172.3" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="170.7" y="803.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="173.7" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.12%)</title><rect x="171.4" y="803.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="174.4" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="172.1" y="787.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="175.1" y="798.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.06%)</title><rect x="172.8" y="803.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="175.8" y="814.0"></text>
</g>
<g>
<title>__recv (26 samples, 1.54%)</title><rect x="173.5" y="819.0" width="18.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="176.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 1.42%)</title><rect x="174.9" y="803.0" width="16.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 1.42%)</title><rect x="174.9" y="787.0" width="16.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="177.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (24 samples, 1.42%)</title><rect x="174.9" y="771.0" width="16.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.9" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (24 samples, 1.42%)</title><rect x="174.9" y="755.0" width="16.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="177.9" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (23 samples, 1.36%)</title><rect x="175.6" y="739.0" width="16.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.6" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (22 samples, 1.30%)</title><rect x="175.6" y="723.0" width="15.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="178.6" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="175.6" y="707.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="178.6" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 1.24%)</title><rect x="176.3" y="707.0" width="14.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.3" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.18%)</title><rect x="178.4" y="691.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="181.4" y="702.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.18%)</title><rect x="178.4" y="675.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="181.4" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="178.4" y="659.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="181.4" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.12%)</title><rect x="179.1" y="659.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.1" y="670.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.12%)</title><rect x="179.1" y="643.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="182.1" y="654.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="180.5" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="183.5" y="702.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="181.2" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="184.2" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="181.9" y="691.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.9" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="182.6" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="185.6" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.41%)</title><rect x="183.3" y="691.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.3" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.36%)</title><rect x="184.0" y="675.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.0" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.24%)</title><rect x="185.4" y="659.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.4" y="670.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.18%)</title><rect x="185.4" y="643.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.4" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.12%)</title><rect x="186.1" y="627.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="189.1" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.06%)</title><rect x="187.5" y="643.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="190.5" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="187.5" y="627.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="190.5" y="638.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="188.2" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="191.2" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="188.9" y="691.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="191.9" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.12%)</title><rect x="189.6" y="691.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.6" y="702.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.12%)</title><rect x="189.6" y="675.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="192.6" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.06%)</title><rect x="190.9" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.9" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="190.9" y="707.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="193.9" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="190.9" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="193.9" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.18%)</title><rect x="191.6" y="819.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="194.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.12%)</title><rect x="193.7" y="835.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.7" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.24%)</title><rect x="195.1" y="883.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="198.1" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="195.1" y="867.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="198.1" y="878.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.18%)</title><rect x="195.8" y="867.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="198.8" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="197.2" y="851.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="200.2" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="197.9" y="883.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="200.9" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="197.9" y="867.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.9" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="197.9" y="851.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.9" y="862.0"></text>
</g>
<g>
<title>[async_worker-0 tid=3359] (711 samples, 42.10%)</title><rect x="198.6" y="915.0" width="496.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="201.6" y="926.0">[async_worker-0 tid=3359]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="198.6" y="899.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="201.6" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="198.6" y="883.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="201.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="198.6" y="867.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="201.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="198.6" y="851.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="201.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="198.6" y="835.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="201.6" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="198.6" y="819.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.6" y="830.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="198.6" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="201.6" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="198.6" y="787.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="201.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (710 samples, 42.04%)</title><rect x="199.3" y="899.0" width="496.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.3" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (710 samples, 42.04%)</title><rect x="199.3" y="883.0" width="496.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.3" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (710 samples, 42.04%)</title><rect x="199.3" y="867.0" width="496.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.3" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 1.30%)</title><rect x="199.3" y="851.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (20 samples, 1.18%)</title><rect x="200.0" y="835.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.77%)</title><rect x="200.0" y="819.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.06%)</title><rect x="200.0" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.06%)</title><rect x="200.7" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.06%)</title><rect x="200.7" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.65%)</title><rect x="201.4" y="803.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.65%)</title><rect x="201.4" y="787.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="204.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.65%)</title><rect x="201.4" y="771.0" width="7.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="204.4" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.65%)</title><rect x="201.4" y="755.0" width="7.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="204.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.65%)</title><rect x="201.4" y="739.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="204.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.65%)</title><rect x="201.4" y="723.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.47%)</title><rect x="203.5" y="707.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="206.5" y="718.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.41%)</title><rect x="203.5" y="691.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="206.5" y="702.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.41%)</title><rect x="203.5" y="675.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="206.5" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.36%)</title><rect x="203.5" y="659.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="206.5" y="670.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.36%)</title><rect x="203.5" y="643.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="206.5" y="654.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.36%)</title><rect x="203.5" y="627.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="206.5" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.36%)</title><rect x="203.5" y="611.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="206.5" y="622.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.06%)</title><rect x="207.7" y="659.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="208.4" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="211.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.41%)</title><rect x="209.1" y="819.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.41%)</title><rect x="209.1" y="803.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.41%)</title><rect x="209.1" y="787.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.41%)</title><rect x="209.1" y="771.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.41%)</title><rect x="209.1" y="755.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.41%)</title><rect x="209.1" y="739.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="212.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.36%)</title><rect x="209.8" y="723.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="212.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.36%)</title><rect x="209.8" y="707.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="212.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.36%)</title><rect x="209.8" y="691.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="212.8" y="702.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.36%)</title><rect x="209.8" y="675.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="212.8" y="686.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.36%)</title><rect x="209.8" y="659.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="212.8" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.06%)</title><rect x="209.8" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="212.8" y="654.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.30%)</title><rect x="210.5" y="643.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="213.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.24%)</title><rect x="211.2" y="627.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="214.2" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.24%)</title><rect x="211.2" y="611.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.06%)</title><rect x="214.0" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="217.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.run (688 samples, 40.73%)</title><rect x="214.7" y="851.0" width="480.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.7" y="862.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1 (688 samples, 40.73%)</title><rect x="214.7" y="835.0" width="480.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.7" y="846.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (166 samples, 9.83%)</title><rect x="215.4" y="819.0" width="116.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.4" y="830.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (163 samples, 9.65%)</title><rect x="215.4" y="803.0" width="113.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.4" y="814.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.18%)</title><rect x="215.4" y="787.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.18%)</title><rect x="215.4" y="771.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.06%)</title><rect x="215.4" y="755.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="215.4" y="739.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="218.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="215.4" y="723.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="218.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="215.4" y="707.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="218.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="215.4" y="691.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="218.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="216.1" y="755.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="216.1" y="739.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="216.1" y="723.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (160 samples, 9.47%)</title><rect x="217.5" y="787.0" width="111.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.5" y="798.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (160 samples, 9.47%)</title><rect x="217.5" y="771.0" width="111.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.5" y="782.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (160 samples, 9.47%)</title><rect x="217.5" y="755.0" width="111.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.5" y="766.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (160 samples, 9.47%)</title><rect x="217.5" y="739.0" width="111.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.5" y="750.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.41%)</title><rect x="218.2" y="723.0" width="4.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="221.2" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="218.9" y="707.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="221.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.30%)</title><rect x="219.6" y="707.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="222.6" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="221.7" y="691.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="224.7" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="222.4" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="225.4" y="702.0"></text>
</g>
<g>
<title>send (150 samples, 8.88%)</title><rect x="223.1" y="723.0" width="104.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="226.1" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (145 samples, 8.58%)</title><rect x="224.5" y="707.0" width="101.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="227.5" y="718.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (145 samples, 8.58%)</title><rect x="224.5" y="691.0" width="101.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="227.5" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (134 samples, 7.93%)</title><rect x="225.9" y="675.0" width="93.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="228.9" y="686.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (131 samples, 7.76%)</title><rect x="225.9" y="659.0" width="91.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="228.9" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (126 samples, 7.46%)</title><rect x="227.3" y="643.0" width="88.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.3" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="228.0" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="231.0" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (123 samples, 7.28%)</title><rect x="228.7" y="627.0" width="85.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.7" y="638.0">inet6_send..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="229.4" y="611.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.4" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (121 samples, 7.16%)</title><rect x="230.1" y="611.0" width="84.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="233.1" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.12%)</title><rect x="230.8" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.8" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="232.2" y="595.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.2" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="232.2" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="235.2" y="590.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.06%)</title><rect x="232.9" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.9" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.06%)</title><rect x="233.6" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="236.6" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (114 samples, 6.75%)</title><rect x="234.3" y="595.0" width="79.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.3" y="606.0">tcp_sendm..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.06%)</title><rect x="237.1" y="579.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.1" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="237.8" y="579.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.8" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="237.8" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.30%)</title><rect x="238.5" y="579.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="241.5" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.24%)</title><rect x="238.5" y="563.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="241.5" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="238.5" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.12%)</title><rect x="239.2" y="547.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="239.2" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.2" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="239.9" y="531.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="242.9" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="240.6" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="243.6" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.06%)</title><rect x="241.2" y="563.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="244.2" y="574.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.06%)</title><rect x="241.9" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.9" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.06%)</title><rect x="242.6" y="579.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="245.6" y="590.0"></text>
</g>
<g>
<title>tcp_push (100 samples, 5.92%)</title><rect x="243.3" y="579.0" width="69.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.3" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (100 samples, 5.92%)</title><rect x="243.3" y="563.0" width="69.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="246.3" y="574.0">__tcp_p..</text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.06%)</title><rect x="243.3" y="547.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="246.3" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.06%)</title><rect x="244.0" y="547.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="247.0" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (98 samples, 5.80%)</title><rect x="244.7" y="547.0" width="68.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="247.7" y="558.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (92 samples, 5.45%)</title><rect x="245.4" y="531.0" width="64.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="248.4" y="542.0">__tcp_t..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.06%)</title><rect x="246.1" y="515.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.1" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (87 samples, 5.15%)</title><rect x="246.8" y="515.0" width="60.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.8" y="526.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (86 samples, 5.09%)</title><rect x="246.8" y="499.0" width="60.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="249.8" y="510.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (86 samples, 5.09%)</title><rect x="246.8" y="483.0" width="60.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="249.8" y="494.0">ip_loc..</text>
</g>
<g>
<title>ip_output (86 samples, 5.09%)</title><rect x="246.8" y="467.0" width="60.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.8" y="478.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (86 samples, 5.09%)</title><rect x="246.8" y="451.0" width="60.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.8" y="462.0">ip_fin..</text>
</g>
<g>
<title>__ip_finish_output (84 samples, 4.97%)</title><rect x="246.8" y="435.0" width="58.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="249.8" y="446.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (84 samples, 4.97%)</title><rect x="246.8" y="419.0" width="58.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="249.8" y="430.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (74 samples, 4.38%)</title><rect x="248.9" y="403.0" width="51.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.9" y="414.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (74 samples, 4.38%)</title><rect x="248.9" y="387.0" width="51.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="251.9" y="398.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (70 samples, 4.14%)</title><rect x="251.7" y="371.0" width="48.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="254.7" y="382.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (70 samples, 4.14%)</title><rect x="251.7" y="355.0" width="48.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.7" y="366.0">__so..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="253.8" y="339.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="256.8" y="350.0"></text>
</g>
<g>
<title>net_rx_action (66 samples, 3.91%)</title><rect x="254.5" y="339.0" width="46.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.5" y="350.0">net_..</text>
</g>
<g>
<title>process_backlog (66 samples, 3.91%)</title><rect x="254.5" y="323.0" width="46.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="257.5" y="334.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (65 samples, 3.85%)</title><rect x="254.5" y="307.0" width="45.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.5" y="318.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (65 samples, 3.85%)</title><rect x="254.5" y="291.0" width="45.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="257.5" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="255.2" y="275.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="258.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (63 samples, 3.73%)</title><rect x="255.9" y="275.0" width="44.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="258.9" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.06%)</title><rect x="255.9" y="259.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="258.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (62 samples, 3.67%)</title><rect x="256.6" y="259.0" width="43.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="259.6" y="270.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (62 samples, 3.67%)</title><rect x="256.6" y="243.0" width="43.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="259.6" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (62 samples, 3.67%)</title><rect x="256.6" y="227.0" width="43.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="259.6" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (62 samples, 3.67%)</title><rect x="256.6" y="211.0" width="43.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="259.6" y="222.0">ip_p..</text>
</g>
<g>
<title>sock_put (1 samples, 0.06%)</title><rect x="257.3" y="195.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="260.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (60 samples, 3.55%)</title><rect x="258.0" y="195.0" width="41.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.0" y="206.0">tcp..</text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.12%)</title><rect x="258.0" y="179.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="261.0" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.12%)</title><rect x="258.0" y="163.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="261.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (58 samples, 3.43%)</title><rect x="259.4" y="179.0" width="40.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="262.4" y="190.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (58 samples, 3.43%)</title><rect x="259.4" y="163.0" width="40.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="262.4" y="174.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.18%)</title><rect x="260.1" y="147.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="263.1" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.18%)</title><rect x="260.1" y="131.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="263.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="260.8" y="115.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="263.8" y="126.0"></text>
</g>
<g>
<title>lock_timer_base (2 samples, 0.12%)</title><rect x="260.8" y="99.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="263.8" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="262.2" y="147.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="265.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.47%)</title><rect x="262.9" y="147.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.9" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.06%)</title><rect x="263.6" y="131.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="266.6" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.06%)</title><rect x="264.3" y="131.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="267.3" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.24%)</title><rect x="265.0" y="131.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="268.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.12%)</title><rect x="265.7" y="115.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="268.7" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="265.7" y="99.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="268.7" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="265.7" y="83.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="268.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="266.4" y="99.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="269.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="266.4" y="83.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="269.4" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="266.4" y="67.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.4" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="266.4" y="51.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.4" y="62.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="267.1" y="115.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="270.1" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.06%)</title><rect x="267.8" y="131.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="270.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (45 samples, 2.66%)</title><rect x="268.5" y="147.0" width="31.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.5" y="158.0">tc..</text>
</g>
<g>
<title>sock_def_readable (45 samples, 2.66%)</title><rect x="268.5" y="131.0" width="31.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="271.5" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="269.2" y="115.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="272.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 2.55%)</title><rect x="269.9" y="115.0" width="30.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.9" y="126.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (42 samples, 2.49%)</title><rect x="270.6" y="99.0" width="29.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.6" y="110.0">__..</text>
</g>
<g>
<title>__lock_text_start (42 samples, 2.49%)</title><rect x="270.6" y="83.0" width="29.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="273.6" y="94.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.06%)</title><rect x="299.9" y="307.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.9" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.41%)</title><rect x="300.6" y="403.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.6" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.41%)</title><rect x="300.6" y="387.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="303.6" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.30%)</title><rect x="302.0" y="371.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="305.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.18%)</title><rect x="302.7" y="355.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="305.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.06%)</title><rect x="302.7" y="339.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="305.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="303.4" y="339.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="306.4" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="303.4" y="323.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="306.4" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="303.4" y="307.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="306.4" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.06%)</title><rect x="304.1" y="339.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.1" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.06%)</title><rect x="304.8" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.8" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.12%)</title><rect x="305.5" y="435.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="308.5" y="446.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.06%)</title><rect x="306.9" y="499.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.9" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="307.6" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="310.6" y="526.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.06%)</title><rect x="308.3" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="311.3" y="526.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.06%)</title><rect x="309.0" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="312.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="309.7" y="531.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="312.7" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.18%)</title><rect x="310.4" y="531.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.4" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.12%)</title><rect x="311.1" y="515.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="314.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="311.1" y="499.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.1" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="311.1" y="483.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.1" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.06%)</title><rect x="311.8" y="467.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="314.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="311.8" y="451.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.8" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.06%)</title><rect x="312.5" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="315.5" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="313.2" y="579.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="316.2" y="590.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.06%)</title><rect x="313.2" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.2" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="313.9" y="595.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="316.9" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="314.6" y="627.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="317.6" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="314.6" y="611.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.6" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="314.6" y="595.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="317.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.18%)</title><rect x="315.3" y="643.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="318.3" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.12%)</title><rect x="315.3" y="627.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="318.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="315.3" y="611.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="318.3" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="315.3" y="595.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="318.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="316.7" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="319.7" y="638.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="317.4" y="659.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="320.4" y="670.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="318.1" y="659.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="321.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="318.8" y="659.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="321.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.53%)</title><rect x="319.5" y="675.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="322.5" y="686.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.53%)</title><rect x="319.5" y="659.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="322.5" y="670.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.53%)</title><rect x="319.5" y="643.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="322.5" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.53%)</title><rect x="319.5" y="627.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="322.5" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.18%)</title><rect x="325.8" y="707.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.18%)</title><rect x="325.8" y="691.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="328.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="325.8" y="675.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="328.8" y="686.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.12%)</title><rect x="327.9" y="723.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="330.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="328.6" y="707.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="331.6" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="328.6" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="331.6" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="328.6" y="675.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="331.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.18%)</title><rect x="329.3" y="803.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.18%)</title><rect x="329.3" y="787.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="330.0" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="330.0" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="330.0" y="739.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="333.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="330.0" y="723.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="333.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="330.0" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.0" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="330.7" y="755.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="333.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="330.7" y="739.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="333.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="330.7" y="723.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="333.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.12%)</title><rect x="331.4" y="819.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (515 samples, 30.49%)</title><rect x="332.8" y="819.0" width="359.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.8" y="830.0">ru/mail/polis/dao/RocksDBImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (513 samples, 30.37%)</title><rect x="332.8" y="803.0" width="358.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.8" y="814.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (513 samples, 30.37%)</title><rect x="332.8" y="787.0" width="358.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.8" y="798.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="334.2" y="771.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="337.2" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (475 samples, 28.12%)</title><rect x="334.9" y="771.0" width="331.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="337.9" y="782.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.18%)</title><rect x="335.6" y="755.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="338.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="336.3" y="739.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="336.3" y="723.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="339.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="336.3" y="707.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="339.3" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.24%)</title><rect x="337.7" y="755.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="340.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.24%)</title><rect x="337.7" y="739.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.24%)</title><rect x="337.7" y="723.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="340.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.24%)</title><rect x="337.7" y="707.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="340.7" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.06%)</title><rect x="340.5" y="755.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="343.5" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="340.5" y="739.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="340.5" y="723.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="343.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="340.5" y="707.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="343.5" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.06%)</title><rect x="341.2" y="755.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="344.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="341.2" y="739.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="341.2" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="344.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="341.2" y="707.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.18%)</title><rect x="341.9" y="755.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="344.9" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (462 samples, 27.35%)</title><rect x="343.9" y="755.0" width="322.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="346.9" y="766.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, r..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.24%)</title><rect x="343.9" y="739.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="346.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.18%)</title><rect x="344.6" y="723.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="347.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.18%)</title><rect x="344.6" y="707.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="347.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="344.6" y="691.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="347.6" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.12%)</title><rect x="346.7" y="739.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="349.7" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="346.7" y="723.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="349.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="346.7" y="707.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="346.7" y="691.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="349.7" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.24%)</title><rect x="348.1" y="739.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="351.1" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.06%)</title><rect x="349.5" y="723.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="352.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="350.2" y="723.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="353.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="350.2" y="707.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="353.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="350.2" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="353.2" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.36%)</title><rect x="350.9" y="739.0" width="4.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="353.9" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="352.3" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="355.3" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="353.0" y="723.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="356.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="353.7" y="723.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="353.7" y="707.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="356.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="353.7" y="691.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="356.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (436 samples, 25.81%)</title><rect x="355.1" y="739.0" width="304.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="358.1" y="750.0">rocksdb::DB::Put(rocksdb::WriteOptions co..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="355.1" y="723.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="358.1" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="355.8" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="358.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="355.8" y="691.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="358.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="355.8" y="675.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="358.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="356.5" y="723.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="359.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (433 samples, 25.64%)</title><rect x="357.2" y="723.0" width="302.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="360.2" y="734.0">rocksdb::DBImpl::Put(rocksdb::WriteOption..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (427 samples, 25.28%)</title><rect x="357.2" y="707.0" width="298.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="360.2" y="718.0">rocksdb::DB::Put(rocksdb::WriteOptions c..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.12%)</title><rect x="357.2" y="691.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="360.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="357.2" y="675.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="360.2" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="357.2" y="659.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="360.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="357.2" y="643.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="360.2" y="654.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.12%)</title><rect x="358.6" y="691.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="361.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="358.6" y="675.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="361.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="358.6" y="659.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="361.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="358.6" y="643.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.12%)</title><rect x="360.0" y="691.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="363.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (404 samples, 23.92%)</title><rect x="361.4" y="691.0" width="282.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="364.4" y="702.0">rocksdb::DBImpl::Write(rocksdb::WriteO..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="361.4" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="364.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="361.4" y="659.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="364.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="361.4" y="643.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="364.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="361.4" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="364.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="362.1" y="675.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="365.1" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="362.8" y="675.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="365.8" y="686.0"></text>
</g>
<g>
<title>pthread_cond_destroy (1 samples, 0.06%)</title><rect x="363.5" y="675.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="366.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.06%)</title><rect x="364.2" y="675.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="367.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (390 samples, 23.09%)</title><rect x="364.9" y="675.0" width="272.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="367.9" y="686.0">rocksdb::DBImpl::WriteImpl(rocksdb::..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.12%)</title><rect x="369.1" y="659.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="372.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="369.8" y="643.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="369.8" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="372.8" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="369.8" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.8" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="369.8" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="372.8" y="606.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="369.8" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.8" y="590.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="369.8" y="563.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.8" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="369.8" y="547.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="372.8" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="369.8" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="372.8" y="542.0"></text>
</g>
<g>
<title>__sched_yield (52 samples, 3.08%)</title><rect x="370.5" y="659.0" width="36.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="373.5" y="670.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 2.84%)</title><rect x="373.3" y="643.0" width="33.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="376.3" y="654.0">en..</text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.06%)</title><rect x="373.3" y="627.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="376.3" y="638.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="374.0" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="377.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 2.72%)</title><rect x="374.7" y="627.0" width="32.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="377.7" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_sched_yield (39 samples, 2.31%)</title><rect x="378.9" y="611.0" width="27.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="381.9" y="622.0">_..</text>
</g>
<g>
<title>do_sched_yield (39 samples, 2.31%)</title><rect x="378.9" y="595.0" width="27.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="381.9" y="606.0">d..</text>
</g>
<g>
<title>schedule (39 samples, 2.31%)</title><rect x="378.9" y="579.0" width="27.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.9" y="590.0">s..</text>
</g>
<g>
<title>__schedule (39 samples, 2.31%)</title><rect x="378.9" y="563.0" width="27.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.9" y="574.0">_..</text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="405.4" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="408.4" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.06%)</title><rect x="406.1" y="611.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.1" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.12%)</title><rect x="406.8" y="659.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="409.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="407.5" y="643.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="410.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="407.5" y="627.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="410.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="407.5" y="611.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="410.5" y="622.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="408.2" y="659.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="411.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.12%)</title><rect x="408.9" y="659.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="411.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.06%)</title><rect x="410.3" y="659.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="413.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (89 samples, 5.27%)</title><rect x="411.0" y="659.0" width="62.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="414.0" y="670.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (88 samples, 5.21%)</title><rect x="411.0" y="643.0" width="61.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="414.0" y="654.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.06%)</title><rect x="411.0" y="627.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="414.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (86 samples, 5.09%)</title><rect x="411.7" y="627.0" width="60.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="414.7" y="638.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (11 samples, 0.65%)</title><rect x="411.7" y="611.0" width="7.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="414.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.18%)</title><rect x="417.3" y="595.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="420.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.18%)</title><rect x="417.3" y="579.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="420.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="417.3" y="563.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="420.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="419.4" y="611.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="422.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.06%)</title><rect x="420.1" y="611.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="423.1" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="420.1" y="595.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="420.1" y="579.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="420.1" y="563.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="423.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (64 samples, 3.79%)</title><rect x="420.8" y="611.0" width="44.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="423.8" y="622.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.18%)</title><rect x="422.2" y="595.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="425.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="422.9" y="579.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="422.9" y="563.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="425.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="422.9" y="547.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="425.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.06%)</title><rect x="424.3" y="595.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="427.3" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="424.3" y="579.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="427.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="424.3" y="563.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="424.3" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (57 samples, 3.37%)</title><rect x="425.0" y="595.0" width="39.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="428.0" y="606.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="425.0" y="579.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="428.0" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="425.0" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="428.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="425.0" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="428.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="425.0" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="428.0" y="542.0"></text>
</g>
<g>
<title>__write (55 samples, 3.26%)</title><rect x="425.7" y="579.0" width="38.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="428.7" y="590.0">__w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 3.20%)</title><rect x="425.7" y="563.0" width="37.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="428.7" y="574.0">ent..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="425.7" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 3.14%)</title><rect x="426.4" y="547.0" width="37.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.4" y="558.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (51 samples, 3.02%)</title><rect x="427.1" y="531.0" width="35.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.1" y="542.0">__x..</text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.06%)</title><rect x="427.1" y="515.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="430.1" y="526.0"></text>
</g>
<g>
<title>ksys_write (50 samples, 2.96%)</title><rect x="427.8" y="515.0" width="34.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="430.8" y="526.0">ks..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.12%)</title><rect x="427.8" y="499.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="430.8" y="510.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="427.8" y="483.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="430.8" y="494.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="427.8" y="467.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="430.8" y="478.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="429.2" y="499.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="432.2" y="510.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.12%)</title><rect x="429.9" y="499.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="432.9" y="510.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.06%)</title><rect x="431.3" y="499.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="434.3" y="510.0"></text>
</g>
<g>
<title>vfs_write (44 samples, 2.61%)</title><rect x="432.0" y="499.0" width="30.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="435.0" y="510.0">vf..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.06%)</title><rect x="434.1" y="483.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="437.1" y="494.0"></text>
</g>
<g>
<title>__vfs_write (37 samples, 2.19%)</title><rect x="434.8" y="483.0" width="25.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.8" y="494.0">_..</text>
</g>
<g>
<title>new_sync_write (37 samples, 2.19%)</title><rect x="434.8" y="467.0" width="25.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="437.8" y="478.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (37 samples, 2.19%)</title><rect x="434.8" y="451.0" width="25.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="437.8" y="462.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (36 samples, 2.13%)</title><rect x="434.8" y="435.0" width="25.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="437.8" y="446.0">_..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.06%)</title><rect x="434.8" y="419.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="437.8" y="430.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.12%)</title><rect x="435.5" y="419.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="438.5" y="430.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.06%)</title><rect x="435.5" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.5" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="435.5" y="387.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.5" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="435.5" y="371.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="438.5" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.06%)</title><rect x="435.5" y="355.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="438.5" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.06%)</title><rect x="435.5" y="339.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.5" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.06%)</title><rect x="435.5" y="323.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="438.5" y="334.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.06%)</title><rect x="435.5" y="307.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="438.5" y="318.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.06%)</title><rect x="435.5" y="291.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.5" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.06%)</title><rect x="436.2" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="439.2" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (33 samples, 1.95%)</title><rect x="436.9" y="419.0" width="23.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="439.9" y="430.0">g..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="436.9" y="403.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="439.9" y="414.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.06%)</title><rect x="436.9" y="387.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="439.9" y="398.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="436.9" y="371.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="439.9" y="382.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="436.9" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.9" y="366.0"></text>
</g>
<g>
<title>ext4_da_write_begin (13 samples, 0.77%)</title><rect x="437.6" y="403.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.6" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.12%)</title><rect x="438.3" y="387.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.3" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.06%)</title><rect x="438.3" y="371.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.3" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="438.3" y="355.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.3" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="439.0" y="371.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.0" y="382.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.18%)</title><rect x="439.7" y="387.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="442.7" y="398.0"></text>
</g>
<g>
<title>create_empty_buffers (2 samples, 0.12%)</title><rect x="439.7" y="371.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.7" y="382.0"></text>
</g>
<g>
<title>alloc_page_buffers (2 samples, 0.12%)</title><rect x="439.7" y="355.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.7" y="366.0"></text>
</g>
<g>
<title>alloc_buffer_head (2 samples, 0.12%)</title><rect x="439.7" y="339.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.7" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="439.7" y="323.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.7" y="334.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.06%)</title><rect x="440.4" y="323.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.4" y="334.0"></text>
</g>
<g>
<title>ext4_da_get_block_prep (1 samples, 0.06%)</title><rect x="441.1" y="371.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="444.1" y="382.0"></text>
</g>
<g>
<title>ext4_da_map_blocks.constprop.0 (1 samples, 0.06%)</title><rect x="441.1" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="444.1" y="366.0"></text>
</g>
<g>
<title>ext4_es_lookup_extent (1 samples, 0.06%)</title><rect x="441.1" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.1" y="350.0"></text>
</g>
<g>
<title>percpu_counter_add_batch (1 samples, 0.06%)</title><rect x="441.1" y="323.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.1" y="334.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (5 samples, 0.30%)</title><rect x="441.8" y="387.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="444.8" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.24%)</title><rect x="441.8" y="371.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="444.8" y="382.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.24%)</title><rect x="441.8" y="355.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="444.8" y="366.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.06%)</title><rect x="441.8" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.8" y="350.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.18%)</title><rect x="442.5" y="339.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="445.5" y="350.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.06%)</title><rect x="444.6" y="371.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="447.6" y="382.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.12%)</title><rect x="445.3" y="387.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.3" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (13 samples, 0.77%)</title><rect x="446.6" y="403.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="449.6" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.18%)</title><rect x="446.6" y="387.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.6" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.12%)</title><rect x="446.6" y="371.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="449.6" y="382.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.12%)</title><rect x="446.6" y="355.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="449.6" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.12%)</title><rect x="446.6" y="339.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="449.6" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="446.6" y="323.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="449.6" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="448.0" y="371.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="451.0" y="382.0"></text>
</g>
<g>
<title>generic_write_end (9 samples, 0.53%)</title><rect x="448.7" y="387.0" width="6.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="451.7" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (9 samples, 0.53%)</title><rect x="448.7" y="371.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="451.7" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (9 samples, 0.53%)</title><rect x="448.7" y="355.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.7" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (9 samples, 0.53%)</title><rect x="448.7" y="339.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.7" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (9 samples, 0.53%)</title><rect x="448.7" y="323.0" width="6.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="451.7" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (7 samples, 0.41%)</title><rect x="448.7" y="307.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="451.7" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (4 samples, 0.24%)</title><rect x="450.1" y="291.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="453.1" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (4 samples, 0.24%)</title><rect x="450.1" y="275.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="453.1" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.06%)</title><rect x="450.8" y="259.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="453.8" y="270.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.12%)</title><rect x="451.5" y="259.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="454.5" y="270.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.12%)</title><rect x="451.5" y="243.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="454.5" y="254.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.06%)</title><rect x="452.9" y="291.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.9" y="302.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.06%)</title><rect x="452.9" y="275.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.9" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.06%)</title><rect x="453.6" y="307.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.6" y="318.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.06%)</title><rect x="454.3" y="307.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.3" y="318.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.06%)</title><rect x="455.0" y="387.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="458.0" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.06%)</title><rect x="455.7" y="403.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="458.7" y="414.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (4 samples, 0.24%)</title><rect x="456.4" y="403.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="459.4" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.18%)</title><rect x="457.1" y="387.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="460.1" y="398.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.06%)</title><rect x="459.2" y="403.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="462.2" y="414.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.06%)</title><rect x="459.9" y="435.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="462.9" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.18%)</title><rect x="460.6" y="483.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.6" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="460.6" y="467.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="463.6" y="478.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.12%)</title><rect x="461.3" y="467.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.3" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="461.3" y="451.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.3" y="462.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="461.3" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="464.3" y="446.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="462.0" y="451.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.0" y="462.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.06%)</title><rect x="462.7" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.7" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="463.4" y="563.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="463.4" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="466.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="463.4" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="464.1" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="467.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="464.1" y="563.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="467.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="464.1" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="467.1" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="464.8" y="595.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="467.8" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="464.8" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.8" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="464.8" y="563.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="467.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="465.5" y="611.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="468.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="466.2" y="611.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="469.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (7 samples, 0.41%)</title><rect x="466.9" y="611.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="469.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="467.6" y="595.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="470.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="467.6" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="470.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="467.6" y="563.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="467.6" y="547.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.6" y="558.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.06%)</title><rect x="468.3" y="595.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="471.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="469.0" y="595.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="472.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="469.7" y="595.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="472.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="471.1" y="595.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="474.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="471.8" y="627.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="474.8" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="471.8" y="611.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.8" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="471.8" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="474.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="472.5" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="475.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="472.5" y="627.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="472.5" y="611.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="472.5" y="595.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="475.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.24%)</title><rect x="473.2" y="659.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="476.2" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="473.9" y="643.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="476.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="473.9" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="473.9" y="611.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="473.9" y="595.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.9" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.12%)</title><rect x="474.6" y="643.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="477.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="474.6" y="627.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="477.6" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="474.6" y="611.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="474.6" y="595.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="477.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.06%)</title><rect x="476.0" y="659.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="479.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (177 samples, 10.48%)</title><rect x="476.7" y="659.0" width="123.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="479.7" y="670.0">rocksdb::WriteB..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (173 samples, 10.24%)</title><rect x="477.4" y="643.0" width="120.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="480.4" y="654.0">rocksdb::WriteB..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="477.4" y="627.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="480.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.06%)</title><rect x="478.8" y="627.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="481.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="478.8" y="611.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="478.8" y="595.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="481.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="478.8" y="579.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="481.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.06%)</title><rect x="479.5" y="627.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="482.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (169 samples, 10.01%)</title><rect x="480.2" y="627.0" width="118.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="483.2" y="638.0">rocksdb::Write..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (166 samples, 9.83%)</title><rect x="480.9" y="611.0" width="116.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="483.9" y="622.0">rocksdb::MemTa..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.06%)</title><rect x="480.9" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="483.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="480.9" y="579.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="480.9" y="563.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="483.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="480.9" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (165 samples, 9.77%)</title><rect x="481.6" y="595.0" width="115.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="484.6" y="606.0">rocksdb::MemTa..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (1 samples, 0.06%)</title><rect x="483.0" y="579.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="486.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (158 samples, 9.35%)</title><rect x="483.7" y="579.0" width="110.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="486.7" y="590.0">rocksdb::MemT..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (1 samples, 0.06%)</title><rect x="484.4" y="563.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="487.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.06%)</title><rect x="484.4" y="547.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="487.4" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="484.4" y="531.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.4" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="484.4" y="515.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.4" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="484.4" y="499.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.4" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (149 samples, 8.82%)</title><rect x="485.1" y="563.0" width="104.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="488.1" y="574.0">bool rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (137 samples, 8.11%)</title><rect x="488.6" y="547.0" width="95.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="491.6" y="558.0">/tmp/libroc..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (90 samples, 5.33%)</title><rect x="512.3" y="531.0" width="62.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="515.3" y="542.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (12 samples, 0.71%)</title><rect x="513.0" y="515.0" width="8.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="516.0" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.18%)</title><rect x="519.3" y="499.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="522.3" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.18%)</title><rect x="519.3" y="483.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="522.3" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="519.3" y="467.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="522.3" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (6 samples, 0.36%)</title><rect x="521.4" y="515.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="524.4" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (18 samples, 1.07%)</title><rect x="525.6" y="515.0" width="12.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="528.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="536.8" y="499.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="539.8" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="536.8" y="483.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="539.8" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="536.8" y="467.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.8" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="538.2" y="515.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="541.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (51 samples, 3.02%)</title><rect x="538.9" y="515.0" width="35.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="541.9" y="526.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (7 samples, 0.41%)</title><rect x="545.9" y="499.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="548.9" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="550.0" y="483.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.0" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="550.0" y="467.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="553.0" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="550.0" y="451.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="553.0" y="462.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (18 samples, 1.07%)</title><rect x="550.7" y="499.0" width="12.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="553.7" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.30%)</title><rect x="559.8" y="483.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.8" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.30%)</title><rect x="559.8" y="467.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="562.8" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.30%)</title><rect x="559.8" y="451.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="562.8" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.77%)</title><rect x="563.3" y="499.0" width="9.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="566.3" y="510.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.12%)</title><rect x="572.4" y="499.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="575.4" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="573.8" y="499.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="576.8" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="573.8" y="483.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="576.8" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="573.8" y="467.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="576.8" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="574.5" y="515.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="577.5" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="574.5" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.5" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="574.5" y="483.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="577.5" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="575.2" y="531.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="578.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.12%)</title><rect x="575.9" y="531.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="578.9" y="542.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="576.6" y="515.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="579.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (10 samples, 0.59%)</title><rect x="577.3" y="531.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="580.3" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (10 samples, 0.59%)</title><rect x="577.3" y="515.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.3" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.59%)</title><rect x="577.3" y="499.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.18%)</title><rect x="584.3" y="547.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="587.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.24%)</title><rect x="586.4" y="547.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="589.4" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.12%)</title><rect x="587.1" y="531.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="590.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="588.5" y="531.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="591.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.06%)</title><rect x="589.2" y="563.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="592.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="589.2" y="547.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="589.2" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="592.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="589.2" y="515.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="592.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.06%)</title><rect x="589.9" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="592.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.24%)</title><rect x="590.6" y="563.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="593.6" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (1 samples, 0.06%)</title><rect x="590.6" y="547.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="593.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.18%)</title><rect x="591.3" y="547.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="594.3" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="592.7" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="595.7" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="592.7" y="515.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="595.7" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="592.7" y="499.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.06%)</title><rect x="593.4" y="563.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="596.4" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="593.4" y="547.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="596.4" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="593.4" y="531.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="596.4" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="593.4" y="515.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="596.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.06%)</title><rect x="594.1" y="579.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="597.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.06%)</title><rect x="594.8" y="579.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="597.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() [clone .plt] (1 samples, 0.06%)</title><rect x="595.5" y="579.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="598.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.06%)</title><rect x="596.2" y="579.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="599.2" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="596.2" y="563.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="599.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="596.2" y="547.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="599.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="596.2" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="599.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.06%)</title><rect x="596.9" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="599.9" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="597.6" y="611.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.6" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="597.6" y="595.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.6" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="597.6" y="579.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (2 samples, 0.12%)</title><rect x="598.3" y="643.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="601.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="599.7" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="602.7" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="599.7" y="627.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.7" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="599.7" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="602.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (23 samples, 1.36%)</title><rect x="600.3" y="659.0" width="16.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="603.3" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.06%)</title><rect x="600.3" y="643.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="603.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (1 samples, 0.06%)</title><rect x="601.0" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="604.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.06%)</title><rect x="601.7" y="643.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="604.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.06%)</title><rect x="601.7" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="604.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (20 samples, 1.18%)</title><rect x="602.4" y="643.0" width="14.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="605.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (20 samples, 1.18%)</title><rect x="602.4" y="627.0" width="14.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="605.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (19 samples, 1.12%)</title><rect x="602.4" y="611.0" width="13.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="605.4" y="622.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.06%)</title><rect x="602.4" y="595.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="605.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.06%)</title><rect x="603.1" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="606.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (17 samples, 1.01%)</title><rect x="603.8" y="595.0" width="11.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="606.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (17 samples, 1.01%)</title><rect x="603.8" y="579.0" width="11.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="606.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.06%)</title><rect x="603.8" y="563.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="606.8" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="603.8" y="547.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="606.8" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="603.8" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="606.8" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="603.8" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="606.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (16 samples, 0.95%)</title><rect x="604.5" y="563.0" width="11.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="607.5" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (16 samples, 0.95%)</title><rect x="604.5" y="547.0" width="11.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="607.5" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (16 samples, 0.95%)</title><rect x="604.5" y="531.0" width="11.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="607.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (5 samples, 0.30%)</title><rect x="612.2" y="515.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="615.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.30%)</title><rect x="612.2" y="499.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="615.2" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="614.3" y="483.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="617.3" y="494.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.06%)</title><rect x="615.0" y="483.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="618.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.06%)</title><rect x="615.7" y="611.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="618.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.06%)</title><rect x="616.4" y="659.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="619.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="617.1" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="620.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 0.47%)</title><rect x="617.8" y="659.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="620.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.06%)</title><rect x="622.0" y="643.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="625.0" y="654.0"></text>
</g>
<g>
<title>std::condition_variable::condition_variable() (1 samples, 0.06%)</title><rect x="622.7" y="643.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (11 samples, 0.65%)</title><rect x="623.4" y="659.0" width="7.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="626.4" y="670.0"></text>
</g>
<g>
<title>__sched_yield (10 samples, 0.59%)</title><rect x="623.4" y="643.0" width="7.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="626.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.59%)</title><rect x="623.4" y="627.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="626.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.59%)</title><rect x="623.4" y="611.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="626.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (8 samples, 0.47%)</title><rect x="624.8" y="595.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="627.8" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (8 samples, 0.47%)</title><rect x="624.8" y="579.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.8" y="590.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.47%)</title><rect x="624.8" y="563.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="627.8" y="574.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.47%)</title><rect x="624.8" y="547.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="627.8" y="558.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (1 samples, 0.06%)</title><rect x="630.4" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="633.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.06%)</title><rect x="631.1" y="659.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="634.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="631.1" y="643.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="634.1" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="631.1" y="627.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.1" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="631.1" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="634.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.06%)</title><rect x="631.8" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="634.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.12%)</title><rect x="632.5" y="659.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="635.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.06%)</title><rect x="633.2" y="643.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="636.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="633.2" y="627.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="636.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="633.2" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="633.2" y="595.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.06%)</title><rect x="633.9" y="659.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="636.9" y="670.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (4 samples, 0.24%)</title><rect x="634.6" y="659.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="637.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="636.7" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="639.7" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="636.7" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.7" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="636.7" y="611.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.12%)</title><rect x="637.4" y="675.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="640.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.12%)</title><rect x="638.8" y="675.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="641.8" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="639.5" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="642.5" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="639.5" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.5" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="639.5" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="642.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="640.2" y="675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="643.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.06%)</title><rect x="640.9" y="675.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="643.9" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="640.9" y="659.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="640.9" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="643.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="640.9" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="643.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.06%)</title><rect x="641.6" y="675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="644.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.06%)</title><rect x="642.3" y="675.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="645.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.06%)</title><rect x="643.0" y="675.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="646.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.30%)</title><rect x="643.7" y="691.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="646.7" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.18%)</title><rect x="645.1" y="675.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.18%)</title><rect x="645.1" y="659.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="648.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="645.1" y="643.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.36%)</title><rect x="647.2" y="691.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="650.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.18%)</title><rect x="647.2" y="675.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="650.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="647.9" y="659.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="650.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="647.9" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="650.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="647.9" y="627.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="650.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="649.3" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="652.3" y="686.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.06%)</title><rect x="649.3" y="659.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="652.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="649.3" y="643.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="652.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="649.3" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="649.3" y="611.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="652.3" y="622.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="650.0" y="675.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="653.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="650.7" y="675.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.7" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="650.7" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="653.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="650.7" y="643.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="653.7" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="651.3" y="691.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="654.3" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="651.3" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="654.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="651.3" y="659.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="651.3" y="643.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.3" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (4 samples, 0.24%)</title><rect x="652.0" y="691.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="655.0" y="702.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.06%)</title><rect x="654.8" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="657.8" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="654.8" y="675.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="654.8" y="659.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="654.8" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="657.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.12%)</title><rect x="655.5" y="707.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="658.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="656.2" y="691.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="659.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="656.2" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="659.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="656.2" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="659.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="656.9" y="707.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="659.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="656.9" y="691.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="659.9" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="656.9" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="659.9" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="656.9" y="659.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="659.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.12%)</title><rect x="657.6" y="707.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="660.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() [clone .plt] (1 samples, 0.06%)</title><rect x="659.0" y="707.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="662.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (4 samples, 0.24%)</title><rect x="659.7" y="739.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="662.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.30%)</title><rect x="662.5" y="739.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="665.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="666.0" y="739.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="669.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="666.0" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="669.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="666.0" y="707.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="669.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.89%)</title><rect x="666.7" y="771.0" width="10.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="669.7" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.12%)</title><rect x="666.7" y="755.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="669.7" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.06%)</title><rect x="668.1" y="755.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="671.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="668.1" y="739.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="671.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="668.1" y="723.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="671.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="668.1" y="707.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="671.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="668.8" y="755.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="671.8" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.06%)</title><rect x="668.8" y="739.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="671.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.47%)</title><rect x="669.5" y="755.0" width="5.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="672.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.47%)</title><rect x="669.5" y="739.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="672.5" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="669.5" y="723.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="672.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.41%)</title><rect x="670.2" y="723.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="673.2" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.24%)</title><rect x="672.3" y="707.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="675.3" y="718.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.18%)</title><rect x="672.3" y="691.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="675.3" y="702.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.18%)</title><rect x="672.3" y="675.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="675.3" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="672.3" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="675.3" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="672.3" y="643.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="675.3" y="654.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="672.3" y="627.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="675.3" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="672.3" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="675.3" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="673.0" y="659.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="676.0" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="673.0" y="643.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="676.0" y="654.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.06%)</title><rect x="673.7" y="659.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="676.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="674.4" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="677.4" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.06%)</title><rect x="675.1" y="755.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="678.1" y="766.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="675.8" y="755.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="678.8" y="766.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.06%)</title><rect x="676.5" y="755.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="679.5" y="766.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="676.5" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="679.5" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.18%)</title><rect x="677.2" y="771.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="680.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="678.6" y="755.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="681.6" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="678.6" y="739.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="681.6" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="678.6" y="723.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.65%)</title><rect x="679.3" y="771.0" width="7.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="682.3" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.65%)</title><rect x="679.3" y="755.0" width="7.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="682.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.65%)</title><rect x="679.3" y="739.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.65%)</title><rect x="679.3" y="723.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="682.3" y="734.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.65%)</title><rect x="679.3" y="707.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="682.3" y="718.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.65%)</title><rect x="679.3" y="691.0" width="7.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.59%)</title><rect x="680.0" y="675.0" width="7.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="683.0" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.59%)</title><rect x="680.0" y="659.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="683.0" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.59%)</title><rect x="680.0" y="643.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="683.0" y="654.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.30%)</title><rect x="687.0" y="771.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="690.0" y="782.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.24%)</title><rect x="687.7" y="755.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="690.7" y="766.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.24%)</title><rect x="687.7" y="739.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="690.7" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="689.8" y="723.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="692.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="689.8" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="692.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="689.8" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="692.8" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.06%)</title><rect x="690.5" y="771.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="693.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (2 samples, 0.12%)</title><rect x="691.2" y="803.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.2" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.12%)</title><rect x="691.2" y="787.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.2" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.12%)</title><rect x="691.2" y="771.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="691.9" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.9" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="691.9" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (4 samples, 0.24%)</title><rect x="692.6" y="819.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.12%)</title><rect x="692.6" y="803.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.12%)</title><rect x="692.6" y="787.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.12%)</title><rect x="692.6" y="771.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.6" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.12%)</title><rect x="692.6" y="755.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.6" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="692.6" y="739.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="695.6" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="692.6" y="723.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="695.6" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="692.6" y="707.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="695.6" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="692.6" y="691.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="695.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.06%)</title><rect x="693.3" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="694.0" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="694.0" y="787.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="694.0" y="771.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="694.0" y="755.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="694.0" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.12%)</title><rect x="694.0" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.0" y="734.0"></text>
</g>
<g>
<title>[async_worker-1 tid=3360] (708 samples, 41.92%)</title><rect x="695.4" y="915.0" width="494.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="698.4" y="926.0">[async_worker-1 tid=3360]</text>
</g>
<g>
<title>java/lang/Thread.run (708 samples, 41.92%)</title><rect x="695.4" y="899.0" width="494.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.4" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (708 samples, 41.92%)</title><rect x="695.4" y="883.0" width="494.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.4" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (708 samples, 41.92%)</title><rect x="695.4" y="867.0" width="494.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.4" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="695.4" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.4" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="695.4" y="835.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="698.4" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="695.4" y="819.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="698.4" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="695.4" y="803.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (27 samples, 1.60%)</title><rect x="696.1" y="851.0" width="18.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (26 samples, 1.54%)</title><rect x="696.1" y="835.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (21 samples, 1.24%)</title><rect x="696.1" y="819.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.06%)</title><rect x="696.1" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 1.18%)</title><rect x="696.8" y="803.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 1.18%)</title><rect x="696.8" y="787.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.8" y="798.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="696.8" y="771.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="699.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.12%)</title><rect x="697.5" y="771.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="700.5" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="697.5" y="755.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="700.5" y="766.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="698.2" y="755.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="701.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.01%)</title><rect x="698.9" y="771.0" width="11.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="701.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (15 samples, 0.89%)</title><rect x="698.9" y="755.0" width="10.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="701.9" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.89%)</title><rect x="698.9" y="739.0" width="10.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="701.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.89%)</title><rect x="698.9" y="723.0" width="10.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.89%)</title><rect x="698.9" y="707.0" width="10.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.9" y="718.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.89%)</title><rect x="698.9" y="691.0" width="10.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="701.9" y="702.0"></text>
</g>
<g>
<title>futex_wait (15 samples, 0.89%)</title><rect x="698.9" y="675.0" width="10.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="701.9" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.83%)</title><rect x="698.9" y="659.0" width="9.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="701.9" y="670.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.83%)</title><rect x="698.9" y="643.0" width="9.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="701.9" y="654.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.83%)</title><rect x="698.9" y="627.0" width="9.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.9" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.83%)</title><rect x="698.9" y="611.0" width="9.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.9" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="708.6" y="659.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="711.6" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.12%)</title><rect x="709.3" y="755.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="712.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="710.7" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="710.7" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.06%)</title><rect x="710.7" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.06%)</title><rect x="710.7" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="710.7" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="710.7" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="710.7" y="723.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="713.7" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="710.7" y="707.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="713.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.24%)</title><rect x="711.4" y="819.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.24%)</title><rect x="711.4" y="803.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.24%)</title><rect x="711.4" y="787.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.24%)</title><rect x="711.4" y="771.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.24%)</title><rect x="711.4" y="755.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.24%)</title><rect x="711.4" y="739.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="714.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.18%)</title><rect x="712.1" y="723.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.18%)</title><rect x="712.1" y="707.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.18%)</title><rect x="712.1" y="691.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="715.1" y="702.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.18%)</title><rect x="712.1" y="675.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="715.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.18%)</title><rect x="712.1" y="659.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="715.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.18%)</title><rect x="712.1" y="643.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.1" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.18%)</title><rect x="712.1" y="627.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.1" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="712.8" y="611.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.8" y="622.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="714.2" y="835.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="717.2" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="714.2" y="819.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="717.2" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="714.2" y="803.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="717.2" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="714.2" y="787.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="717.2" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="714.9" y="851.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="717.9" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="715.6" y="851.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="718.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.run (678 samples, 40.14%)</title><rect x="716.3" y="851.0" width="473.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.3" y="862.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/20..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1 (678 samples, 40.14%)</title><rect x="716.3" y="835.0" width="473.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.3" y="846.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="716.3" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="716.3" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.3" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="717.0" y="819.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="720.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (191 samples, 11.31%)</title><rect x="718.4" y="819.0" width="133.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.4" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (185 samples, 10.95%)</title><rect x="718.4" y="803.0" width="129.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.4" y="814.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="718.4" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="718.4" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.06%)</title><rect x="718.4" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 10.89%)</title><rect x="719.1" y="787.0" width="128.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.1" y="798.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (183 samples, 10.83%)</title><rect x="719.8" y="771.0" width="127.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.8" y="782.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (183 samples, 10.83%)</title><rect x="719.8" y="755.0" width="127.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.8" y="766.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (183 samples, 10.83%)</title><rect x="719.8" y="739.0" width="127.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.8" y="750.0">one/nio/net/Nati..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.12%)</title><rect x="720.5" y="723.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="723.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="721.2" y="707.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="724.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="721.2" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="724.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="721.2" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="724.2" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.30%)</title><rect x="721.9" y="723.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="724.9" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="722.6" y="707.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="725.6" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.12%)</title><rect x="723.3" y="707.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="726.3" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="724.0" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="727.0" y="702.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.06%)</title><rect x="724.7" y="707.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="727.7" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="725.4" y="723.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="728.4" y="734.0"></text>
</g>
<g>
<title>send (170 samples, 10.07%)</title><rect x="726.1" y="723.0" width="118.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="729.1" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (167 samples, 9.89%)</title><rect x="728.2" y="707.0" width="116.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="731.2" y="718.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (167 samples, 9.89%)</title><rect x="728.2" y="691.0" width="116.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="731.2" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.06%)</title><rect x="729.6" y="675.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="732.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (158 samples, 9.35%)</title><rect x="730.3" y="675.0" width="110.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="733.3" y="686.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (158 samples, 9.35%)</title><rect x="730.3" y="659.0" width="110.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.3" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (154 samples, 9.12%)</title><rect x="731.0" y="643.0" width="107.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="734.0" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (152 samples, 9.00%)</title><rect x="731.7" y="627.0" width="106.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="734.7" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="733.8" y="611.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="736.8" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (148 samples, 8.76%)</title><rect x="734.5" y="611.0" width="103.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="737.5" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.12%)</title><rect x="734.5" y="595.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="737.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="735.9" y="595.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.9" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="736.6" y="595.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.6" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="736.6" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.6" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.12%)</title><rect x="737.3" y="595.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="740.3" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="737.3" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="740.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="738.0" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.0" y="590.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="738.0" y="563.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="741.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.06%)</title><rect x="738.7" y="595.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="741.7" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.12%)</title><rect x="739.4" y="595.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.4" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (139 samples, 8.23%)</title><rect x="740.8" y="595.0" width="97.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="743.8" y="606.0">tcp_sendmsg..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.06%)</title><rect x="742.2" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="745.2" y="590.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.06%)</title><rect x="742.9" y="579.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="745.9" y="590.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="743.6" y="579.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="746.6" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.71%)</title><rect x="744.3" y="579.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="747.3" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.71%)</title><rect x="744.3" y="563.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="747.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.36%)</title><rect x="745.0" y="547.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="748.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.30%)</title><rect x="745.7" y="531.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="748.7" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.18%)</title><rect x="747.1" y="515.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="750.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.24%)</title><rect x="749.2" y="547.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="752.2" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.06%)</title><rect x="752.0" y="547.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="755.0" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.06%)</title><rect x="752.7" y="579.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="755.7" y="590.0"></text>
</g>
<g>
<title>tcp_push (116 samples, 6.87%)</title><rect x="753.4" y="579.0" width="81.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="756.4" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (116 samples, 6.87%)</title><rect x="753.4" y="563.0" width="81.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.4" y="574.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.06%)</title><rect x="753.4" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="756.4" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (115 samples, 6.81%)</title><rect x="754.0" y="547.0" width="80.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="757.0" y="558.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (106 samples, 6.28%)</title><rect x="757.5" y="531.0" width="74.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="760.5" y="542.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (102 samples, 6.04%)</title><rect x="758.9" y="515.0" width="71.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="761.9" y="526.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (101 samples, 5.98%)</title><rect x="758.9" y="499.0" width="70.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="761.9" y="510.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (101 samples, 5.98%)</title><rect x="758.9" y="483.0" width="70.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.9" y="494.0">ip_local..</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="760.3" y="467.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="763.3" y="478.0"></text>
</g>
<g>
<title>ip_output (98 samples, 5.80%)</title><rect x="761.0" y="467.0" width="68.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="764.0" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (98 samples, 5.80%)</title><rect x="761.0" y="451.0" width="68.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="764.0" y="462.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.18%)</title><rect x="761.7" y="435.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.7" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (94 samples, 5.57%)</title><rect x="763.8" y="435.0" width="65.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="766.8" y="446.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (94 samples, 5.57%)</title><rect x="763.8" y="419.0" width="65.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="766.8" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (88 samples, 5.21%)</title><rect x="765.2" y="403.0" width="61.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.2" y="414.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (88 samples, 5.21%)</title><rect x="765.2" y="387.0" width="61.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="768.2" y="398.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (88 samples, 5.21%)</title><rect x="765.2" y="371.0" width="61.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.2" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (87 samples, 5.15%)</title><rect x="765.2" y="355.0" width="60.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="768.2" y="366.0">__soft..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.06%)</title><rect x="766.6" y="339.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="769.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (83 samples, 4.91%)</title><rect x="767.3" y="339.0" width="58.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.3" y="350.0">net_rx..</text>
</g>
<g>
<title>process_backlog (83 samples, 4.91%)</title><rect x="767.3" y="323.0" width="58.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="770.3" y="334.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (82 samples, 4.85%)</title><rect x="768.0" y="307.0" width="57.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="771.0" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (82 samples, 4.85%)</title><rect x="768.0" y="291.0" width="57.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.0" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="768.7" y="275.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (78 samples, 4.62%)</title><rect x="769.4" y="275.0" width="54.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="772.4" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (77 samples, 4.56%)</title><rect x="769.4" y="259.0" width="53.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="772.4" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (77 samples, 4.56%)</title><rect x="769.4" y="243.0" width="53.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="772.4" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (77 samples, 4.56%)</title><rect x="769.4" y="227.0" width="53.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.4" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (77 samples, 4.56%)</title><rect x="769.4" y="211.0" width="53.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.4" y="222.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="769.4" y="195.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="772.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (76 samples, 4.50%)</title><rect x="770.1" y="195.0" width="53.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="773.1" y="206.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="770.1" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="773.1" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="770.8" y="179.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="771.5" y="179.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="774.5" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.06%)</title><rect x="771.5" y="163.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="772.2" y="179.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="775.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (72 samples, 4.26%)</title><rect x="772.9" y="179.0" width="50.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="775.9" y="190.0">tcp_v..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.06%)</title><rect x="772.9" y="163.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.9" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="773.6" y="163.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="776.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (70 samples, 4.14%)</title><rect x="774.3" y="163.0" width="48.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="777.3" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_ack (14 samples, 0.83%)</title><rect x="775.0" y="147.0" width="9.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.0" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.65%)</title><rect x="776.4" y="131.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="779.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.36%)</title><rect x="778.5" y="115.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="781.5" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.18%)</title><rect x="778.5" y="99.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="781.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.18%)</title><rect x="778.5" y="83.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="781.5" y="94.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.18%)</title><rect x="780.6" y="99.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.6" y="110.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.18%)</title><rect x="780.6" y="83.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="783.6" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="782.0" y="67.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="785.0" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="782.0" y="51.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="782.0" y="35.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="785.0" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.06%)</title><rect x="782.7" y="115.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="785.7" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.06%)</title><rect x="783.4" y="115.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="786.4" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.06%)</title><rect x="784.1" y="131.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="787.1" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (55 samples, 3.26%)</title><rect x="784.8" y="147.0" width="38.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.8" y="158.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (55 samples, 3.26%)</title><rect x="784.8" y="131.0" width="38.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.8" y="142.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (55 samples, 3.26%)</title><rect x="784.8" y="115.0" width="38.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.8" y="126.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (55 samples, 3.26%)</title><rect x="784.8" y="99.0" width="38.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="787.8" y="110.0">__w..</text>
</g>
<g>
<title>__lock_text_start (55 samples, 3.26%)</title><rect x="784.8" y="83.0" width="38.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="787.8" y="94.0">__l..</text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.06%)</title><rect x="823.2" y="259.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="826.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.06%)</title><rect x="823.9" y="275.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="826.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="824.6" y="275.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="827.6" y="286.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.06%)</title><rect x="825.3" y="339.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="826.0" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="829.0" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.24%)</title><rect x="826.7" y="403.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="829.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.24%)</title><rect x="826.7" y="387.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="829.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.12%)</title><rect x="828.1" y="371.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="828.8" y="355.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="831.8" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.06%)</title><rect x="828.8" y="339.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="831.8" y="350.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.06%)</title><rect x="829.5" y="499.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="832.5" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="830.2" y="515.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="833.2" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.06%)</title><rect x="830.2" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="833.2" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.06%)</title><rect x="830.9" y="515.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="833.9" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.06%)</title><rect x="831.6" y="531.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="834.6" y="542.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="832.3" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.3" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="833.0" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="836.0" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="833.0" y="515.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="836.0" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="833.0" y="499.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="836.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="833.0" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.0" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="833.0" y="467.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="836.0" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.06%)</title><rect x="833.7" y="531.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="836.7" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.06%)</title><rect x="834.4" y="579.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="837.4" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.24%)</title><rect x="835.1" y="579.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="838.1" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.12%)</title><rect x="835.1" y="563.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.1" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.12%)</title><rect x="836.5" y="563.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="839.5" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="837.2" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.2" y="558.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.06%)</title><rect x="837.9" y="627.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="840.9" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.18%)</title><rect x="838.6" y="643.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="841.6" y="654.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.18%)</title><rect x="838.6" y="627.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="841.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.18%)</title><rect x="838.6" y="611.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="841.6" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.18%)</title><rect x="838.6" y="595.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="841.6" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.36%)</title><rect x="840.7" y="675.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="843.7" y="686.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.36%)</title><rect x="840.7" y="659.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="843.7" y="670.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.36%)</title><rect x="840.7" y="643.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="843.7" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.30%)</title><rect x="841.4" y="627.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="844.4" y="638.0"></text>
</g>
<g>
<title>send@plt (4 samples, 0.24%)</title><rect x="844.9" y="723.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="847.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="847.0" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="850.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="847.0" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="850.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="847.0" y="675.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="850.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.30%)</title><rect x="847.7" y="803.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.30%)</title><rect x="847.7" y="787.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.30%)</title><rect x="847.7" y="771.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.12%)</title><rect x="848.4" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="848.4" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="848.4" y="723.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="851.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="848.4" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="851.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="848.4" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="849.1" y="739.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="852.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="849.1" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="852.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="849.1" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="849.8" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="849.8" y="739.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.8" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.06%)</title><rect x="849.8" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.8" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="849.8" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.06%)</title><rect x="850.5" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.5" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="851.2" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="854.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (483 samples, 28.60%)</title><rect x="851.9" y="819.0" width="337.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.9" y="830.0">ru/mail/polis/dao/RocksDBImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (481 samples, 28.48%)</title><rect x="852.6" y="803.0" width="336.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.6" y="814.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (481 samples, 28.48%)</title><rect x="852.6" y="787.0" width="336.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.6" y="798.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="854.7" y="771.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="857.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="854.7" y="755.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="854.7" y="739.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="857.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="854.7" y="723.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="857.7" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (436 samples, 25.81%)</title><rect x="855.4" y="771.0" width="304.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="858.4" y="782.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.12%)</title><rect x="855.4" y="755.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="858.4" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="856.7" y="755.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="859.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="856.7" y="739.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="856.7" y="723.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="859.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="856.7" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="859.7" y="718.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.06%)</title><rect x="857.4" y="755.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="860.4" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.06%)</title><rect x="858.1" y="755.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="861.1" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.18%)</title><rect x="858.8" y="755.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="861.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="860.2" y="739.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="860.2" y="723.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="863.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="860.2" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="863.2" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.12%)</title><rect x="860.9" y="755.0" width="1.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="863.9" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.12%)</title><rect x="862.3" y="755.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="865.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="863.0" y="739.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="866.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="863.0" y="723.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="866.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="863.0" y="707.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="866.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="863.7" y="755.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="866.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="863.7" y="739.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="866.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="863.7" y="723.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="866.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="863.7" y="707.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="866.7" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (423 samples, 25.04%)</title><rect x="864.4" y="755.0" width="295.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="867.4" y="766.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.18%)</title><rect x="864.4" y="739.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="867.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="865.8" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="868.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="865.8" y="707.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="868.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="865.8" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="868.8" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="866.5" y="739.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="869.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="866.5" y="723.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="869.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="866.5" y="707.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="869.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="866.5" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="869.5" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.12%)</title><rect x="867.2" y="739.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="870.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="867.9" y="723.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="867.9" y="707.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="870.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="867.9" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.9" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="868.6" y="739.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="871.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="868.6" y="723.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="871.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="868.6" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="868.6" y="691.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="871.6" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.36%)</title><rect x="869.3" y="739.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="872.3" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.06%)</title><rect x="871.4" y="723.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="874.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="872.1" y="723.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="875.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="872.1" y="707.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="872.1" y="691.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="875.1" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (15 samples, 0.89%)</title><rect x="873.5" y="739.0" width="10.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="876.5" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.24%)</title><rect x="876.3" y="723.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="879.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="878.4" y="707.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="881.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="878.4" y="691.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="881.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="878.4" y="675.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="881.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.24%)</title><rect x="879.1" y="723.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="882.1" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="880.5" y="707.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="883.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="880.5" y="691.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="883.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="880.5" y="675.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="883.5" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.12%)</title><rect x="881.9" y="723.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="884.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="881.9" y="707.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="884.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="881.9" y="691.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="881.9" y="675.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="884.9" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="883.3" y="723.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="886.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="883.3" y="707.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="886.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="883.3" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="886.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (389 samples, 23.03%)</title><rect x="884.0" y="739.0" width="271.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="887.0" y="750.0">rocksdb::DB::Put(rocksdb::WriteOptio..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="884.0" y="723.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="887.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (387 samples, 22.91%)</title><rect x="885.4" y="723.0" width="270.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="888.4" y="734.0">rocksdb::DBImpl::Put(rocksdb::WriteO..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (383 samples, 22.68%)</title><rect x="885.4" y="707.0" width="267.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="888.4" y="718.0">rocksdb::DB::Put(rocksdb::WriteOptio..</text>
</g>
<g>
<title>cfree (2 samples, 0.12%)</title><rect x="885.4" y="691.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="888.4" y="702.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.06%)</title><rect x="886.8" y="691.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="889.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.12%)</title><rect x="887.5" y="691.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="890.5" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="888.2" y="675.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="891.2" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="888.2" y="659.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="891.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="888.2" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (362 samples, 21.43%)</title><rect x="888.9" y="691.0" width="252.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="891.9" y="702.0">rocksdb::DBImpl::Write(rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.06%)</title><rect x="888.9" y="675.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="891.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.06%)</title><rect x="889.6" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="892.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="889.6" y="659.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="892.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="889.6" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="892.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="889.6" y="627.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.12%)</title><rect x="890.3" y="675.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="893.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (353 samples, 20.90%)</title><rect x="891.7" y="675.0" width="246.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="894.7" y="686.0">rocksdb::DBImpl::WriteImpl(rocksd..</text>
</g>
<g>
<title>__sched_yield (49 samples, 2.90%)</title><rect x="898.0" y="659.0" width="34.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="901.0" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 2.31%)</title><rect x="904.3" y="643.0" width="27.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="907.3" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (39 samples, 2.31%)</title><rect x="904.3" y="627.0" width="27.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="907.3" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_sched_yield (33 samples, 1.95%)</title><rect x="908.4" y="611.0" width="23.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="911.4" y="622.0">_..</text>
</g>
<g>
<title>do_sched_yield (33 samples, 1.95%)</title><rect x="908.4" y="595.0" width="23.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="911.4" y="606.0">d..</text>
</g>
<g>
<title>schedule (33 samples, 1.95%)</title><rect x="908.4" y="579.0" width="23.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="911.4" y="590.0">s..</text>
</g>
<g>
<title>__schedule (33 samples, 1.95%)</title><rect x="908.4" y="563.0" width="23.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="911.4" y="574.0">_..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="931.5" y="643.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="934.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="931.5" y="627.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="931.5" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="934.5" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="932.2" y="659.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="935.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.18%)</title><rect x="932.9" y="659.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="935.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="933.6" y="643.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="933.6" y="627.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="933.6" y="611.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="936.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (96 samples, 5.68%)</title><rect x="935.0" y="659.0" width="67.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="938.0" y="670.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (3 samples, 0.18%)</title><rect x="935.7" y="643.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="938.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Append(rocksdb::WriteBatch*, rocksdb::WriteBatch const*, bool) (1 samples, 0.06%)</title><rect x="936.4" y="627.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="939.4" y="638.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.06%)</title><rect x="936.4" y="611.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="939.4" y="622.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="937.1" y="627.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="940.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (90 samples, 5.33%)</title><rect x="937.8" y="643.0" width="62.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="940.8" y="654.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.06%)</title><rect x="937.8" y="627.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="940.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (88 samples, 5.21%)</title><rect x="938.5" y="627.0" width="61.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="941.5" y="638.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (2 samples, 0.12%)</title><rect x="940.6" y="611.0" width="1.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="943.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.06%)</title><rect x="942.0" y="611.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="945.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (74 samples, 4.38%)</title><rect x="942.7" y="611.0" width="51.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="945.7" y="622.0">rocks..</text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.06%)</title><rect x="944.8" y="595.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="947.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="944.8" y="579.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="944.8" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="947.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="944.8" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="947.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="945.5" y="595.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="948.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="946.2" y="595.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="949.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.06%)</title><rect x="946.9" y="595.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="949.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (67 samples, 3.97%)</title><rect x="947.6" y="595.0" width="46.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="950.6" y="606.0">rock..</text>
</g>
<g>
<title>__write (63 samples, 3.73%)</title><rect x="949.0" y="579.0" width="44.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="952.0" y="590.0">__wr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 3.61%)</title><rect x="949.7" y="563.0" width="42.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="952.7" y="574.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (61 samples, 3.61%)</title><rect x="949.7" y="547.0" width="42.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.7" y="558.0">do_s..</text>
</g>
<g>
<title>__x64_sys_write (56 samples, 3.32%)</title><rect x="953.2" y="531.0" width="39.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.2" y="542.0">__x..</text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="953.2" y="515.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.2" y="526.0"></text>
</g>
<g>
<title>ksys_write (55 samples, 3.26%)</title><rect x="953.9" y="515.0" width="38.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="956.9" y="526.0">ksy..</text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.06%)</title><rect x="953.9" y="499.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="956.9" y="510.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.24%)</title><rect x="954.6" y="499.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="957.6" y="510.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.24%)</title><rect x="954.6" y="483.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.6" y="494.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.24%)</title><rect x="954.6" y="467.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.6" y="478.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="957.4" y="499.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="960.4" y="510.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="958.8" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="961.8" y="510.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="959.4" y="499.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.4" y="510.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="960.1" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="963.1" y="510.0"></text>
</g>
<g>
<title>vfs_write (45 samples, 2.66%)</title><rect x="960.8" y="499.0" width="31.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.8" y="510.0">vf..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.06%)</title><rect x="960.8" y="483.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.8" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="960.8" y="467.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="963.8" y="478.0"></text>
</g>
<g>
<title>__vfs_write (40 samples, 2.37%)</title><rect x="961.5" y="483.0" width="28.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.5" y="494.0">_..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.06%)</title><rect x="961.5" y="467.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="964.5" y="478.0"></text>
</g>
<g>
<title>new_sync_write (39 samples, 2.31%)</title><rect x="962.2" y="467.0" width="27.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="965.2" y="478.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (39 samples, 2.31%)</title><rect x="962.2" y="451.0" width="27.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="965.2" y="462.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (38 samples, 2.25%)</title><rect x="962.9" y="435.0" width="26.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="965.9" y="446.0">_..</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.06%)</title><rect x="962.9" y="419.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="965.9" y="430.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.12%)</title><rect x="963.6" y="419.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="966.6" y="430.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.12%)</title><rect x="963.6" y="403.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="966.6" y="414.0"></text>
</g>
<g>
<title>timestamp_truncate (2 samples, 0.12%)</title><rect x="963.6" y="387.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="966.6" y="398.0"></text>
</g>
<g>
<title>generic_perform_write (34 samples, 2.01%)</title><rect x="965.0" y="419.0" width="23.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.0" y="430.0">g..</text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.06%)</title><rect x="965.0" y="403.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="968.0" y="414.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="965.7" y="403.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="968.7" y="414.0"></text>
</g>
<g>
<title>ext4_da_write_begin (11 samples, 0.65%)</title><rect x="966.4" y="403.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="969.4" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.30%)</title><rect x="966.4" y="387.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="969.4" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (5 samples, 0.30%)</title><rect x="966.4" y="371.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="969.4" y="382.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.06%)</title><rect x="966.4" y="355.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="969.4" y="366.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.06%)</title><rect x="967.1" y="355.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="970.1" y="366.0"></text>
</g>
<g>
<title>start_this_handle (3 samples, 0.18%)</title><rect x="967.8" y="355.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="970.8" y="366.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.12%)</title><rect x="968.5" y="339.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.5" y="350.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.12%)</title><rect x="969.9" y="387.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.9" y="398.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.18%)</title><rect x="971.3" y="387.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="974.3" y="398.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="971.3" y="371.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="974.3" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.12%)</title><rect x="972.0" y="371.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.0" y="382.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.12%)</title><rect x="972.0" y="355.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="975.0" y="366.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.06%)</title><rect x="972.0" y="339.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="975.0" y="350.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.06%)</title><rect x="972.7" y="339.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.7" y="350.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="973.4" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.4" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (20 samples, 1.18%)</title><rect x="974.1" y="403.0" width="14.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="977.1" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.24%)</title><rect x="974.1" y="387.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.1" y="398.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.06%)</title><rect x="974.1" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.1" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.18%)</title><rect x="974.8" y="371.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="977.8" y="382.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.12%)</title><rect x="974.8" y="355.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="977.8" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="974.8" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="977.8" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="974.8" y="323.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="977.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="975.5" y="339.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.5" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="976.2" y="355.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="979.2" y="366.0"></text>
</g>
<g>
<title>generic_write_end (16 samples, 0.95%)</title><rect x="976.9" y="387.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="979.9" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (14 samples, 0.83%)</title><rect x="976.9" y="371.0" width="9.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="979.9" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (14 samples, 0.83%)</title><rect x="976.9" y="355.0" width="9.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="979.9" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.06%)</title><rect x="976.9" y="339.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="979.9" y="350.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.06%)</title><rect x="976.9" y="323.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.9" y="334.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (13 samples, 0.77%)</title><rect x="977.6" y="339.0" width="9.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="980.6" y="350.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.06%)</title><rect x="977.6" y="323.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.6" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (7 samples, 0.41%)</title><rect x="978.3" y="323.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="981.3" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (6 samples, 0.36%)</title><rect x="978.3" y="307.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="981.3" y="318.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.06%)</title><rect x="979.7" y="291.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="982.7" y="302.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="979.7" y="275.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="982.7" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.12%)</title><rect x="980.4" y="291.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="983.4" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (2 samples, 0.12%)</title><rect x="980.4" y="275.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="983.4" y="286.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="980.4" y="259.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="983.4" y="270.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.06%)</title><rect x="981.1" y="259.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="984.1" y="270.0"></text>
</g>
<g>
<title>from_kprojid (1 samples, 0.06%)</title><rect x="981.8" y="291.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="984.8" y="302.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.06%)</title><rect x="981.8" y="275.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="984.8" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.06%)</title><rect x="982.5" y="307.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="985.5" y="318.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.30%)</title><rect x="983.2" y="323.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="986.2" y="334.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.24%)</title><rect x="983.2" y="307.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="986.2" y="318.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.12%)</title><rect x="983.2" y="291.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="986.2" y="302.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.12%)</title><rect x="983.2" y="275.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.2" y="286.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="983.9" y="259.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="986.9" y="270.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.12%)</title><rect x="984.6" y="291.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.6" y="302.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.06%)</title><rect x="986.0" y="307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="989.0" y="318.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.06%)</title><rect x="986.0" y="291.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.0" y="302.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.06%)</title><rect x="986.0" y="275.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="989.0" y="286.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.06%)</title><rect x="986.7" y="371.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="989.7" y="382.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.06%)</title><rect x="986.7" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="989.7" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="987.4" y="371.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="990.4" y="382.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.06%)</title><rect x="988.1" y="403.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="991.1" y="414.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.06%)</title><rect x="988.8" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="991.8" y="430.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="989.5" y="483.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.5" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.18%)</title><rect x="990.2" y="483.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.2" y="494.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.18%)</title><rect x="990.2" y="467.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.2" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.18%)</title><rect x="990.2" y="451.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="993.2" y="462.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.18%)</title><rect x="990.2" y="435.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="993.2" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="992.3" y="563.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="992.3" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="995.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="992.3" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="995.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="993.0" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="996.0" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="993.0" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="996.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="993.0" y="547.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="996.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="993.0" y="531.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="996.0" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="993.7" y="579.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="993.7" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="996.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="993.7" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (8 samples, 0.47%)</title><rect x="994.4" y="611.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.4" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="994.4" y="595.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="997.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="994.4" y="579.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="997.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="994.4" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="997.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="994.4" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="997.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.12%)</title><rect x="995.1" y="595.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="998.1" y="606.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.06%)</title><rect x="996.5" y="595.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="999.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.18%)</title><rect x="997.2" y="595.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1000.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="998.6" y="579.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="998.6" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1001.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="998.6" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1001.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="999.3" y="595.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1002.3" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="999.3" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="999.3" y="563.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1002.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="999.3" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1002.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.06%)</title><rect x="1000.0" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1003.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="1000.7" y="643.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1003.7" y="654.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.06%)</title><rect x="1001.4" y="643.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1004.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.12%)</title><rect x="1002.1" y="659.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1005.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1002.8" y="643.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1005.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1002.8" y="627.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1005.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1002.8" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1005.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.06%)</title><rect x="1003.5" y="659.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1006.5" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1003.5" y="643.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1006.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1003.5" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1006.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1003.5" y="611.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1006.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1003.5" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1006.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (151 samples, 8.94%)</title><rect x="1004.2" y="659.0" width="105.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.2" y="670.0">rocksdb::Writ..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (150 samples, 8.88%)</title><rect x="1004.2" y="643.0" width="104.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1007.2" y="654.0">rocksdb::Wri..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="1004.2" y="627.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1007.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.06%)</title><rect x="1004.9" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1007.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.06%)</title><rect x="1005.6" y="627.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1008.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (147 samples, 8.70%)</title><rect x="1006.3" y="627.0" width="102.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.3" y="638.0">rocksdb::Wri..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (141 samples, 8.35%)</title><rect x="1006.3" y="611.0" width="98.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1009.3" y="622.0">rocksdb::Mem..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (141 samples, 8.35%)</title><rect x="1006.3" y="595.0" width="98.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1009.3" y="606.0">rocksdb::Mem..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) [clone .plt] (1 samples, 0.06%)</title><rect x="1006.3" y="579.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.3" y="590.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.06%)</title><rect x="1007.0" y="579.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1010.0" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1007.0" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1010.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1007.0" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1010.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1007.0" y="531.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1010.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.12%)</title><rect x="1007.7" y="579.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (135 samples, 7.99%)</title><rect x="1009.1" y="579.0" width="94.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.1" y="590.0">rocksdb::Me..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (2 samples, 0.12%)</title><rect x="1009.1" y="563.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1012.1" y="574.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1009.1" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1012.1" y="558.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1009.1" y="531.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.1" y="542.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1009.1" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1012.1" y="526.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1009.1" y="499.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.1" y="510.0"></text>
</g>
<g>
<title>down_read_trylock (1 samples, 0.06%)</title><rect x="1009.1" y="483.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.1" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1009.8" y="547.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.8" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1009.8" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1012.8" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1009.8" y="515.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.8" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (129 samples, 7.64%)</title><rect x="1010.4" y="563.0" width="90.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1013.4" y="574.0">bool rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (124 samples, 7.34%)</title><rect x="1012.5" y="547.0" width="86.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1015.5" y="558.0">/tmp/libro..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (81 samples, 4.80%)</title><rect x="1032.1" y="531.0" width="56.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1035.1" y="542.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (8 samples, 0.47%)</title><rect x="1032.1" y="515.0" width="5.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1035.1" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="1036.3" y="499.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1039.3" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="1036.3" y="483.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1039.3" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="1036.3" y="467.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1039.3" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (7 samples, 0.41%)</title><rect x="1037.7" y="515.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1040.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (18 samples, 1.07%)</title><rect x="1042.6" y="515.0" width="12.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1045.6" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.12%)</title><rect x="1055.2" y="515.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1058.2" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1055.9" y="499.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1058.9" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1055.9" y="483.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1058.9" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1055.9" y="467.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1058.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (45 samples, 2.66%)</title><rect x="1056.6" y="515.0" width="31.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1059.6" y="526.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (7 samples, 0.41%)</title><rect x="1067.0" y="499.0" width="4.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1070.0" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="1070.5" y="483.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1073.5" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="1070.5" y="467.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1073.5" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="1070.5" y="451.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1073.5" y="462.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.59%)</title><rect x="1071.9" y="499.0" width="7.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1074.9" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1078.2" y="483.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1081.2" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1078.2" y="467.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1081.2" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1078.2" y="451.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.2" y="462.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.12%)</title><rect x="1078.9" y="499.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1081.9" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1079.6" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1082.6" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1079.6" y="467.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1082.6" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1079.6" y="451.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1082.6" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.36%)</title><rect x="1080.3" y="499.0" width="4.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1083.3" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1083.8" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.8" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1083.8" y="467.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1086.8" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1083.8" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.8" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="1084.5" y="499.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1087.5" y="510.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.06%)</title><rect x="1085.2" y="499.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1088.2" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.18%)</title><rect x="1085.9" y="499.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1088.9" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.18%)</title><rect x="1085.9" y="483.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1088.9" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="1085.9" y="467.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1088.9" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1088.0" y="515.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1091.0" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1088.0" y="499.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1091.0" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1088.0" y="483.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1091.0" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1088.7" y="531.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1091.7" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1088.7" y="515.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1091.7" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1088.7" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1091.7" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1088.7" y="483.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1091.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.24%)</title><rect x="1089.4" y="531.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1092.4" y="542.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="1091.5" y="515.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1094.5" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (10 samples, 0.59%)</title><rect x="1092.2" y="531.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1095.2" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (10 samples, 0.59%)</title><rect x="1092.2" y="515.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1095.2" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.59%)</title><rect x="1092.2" y="499.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1095.2" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="1099.2" y="547.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1102.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1099.9" y="547.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1102.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.06%)</title><rect x="1100.6" y="563.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.06%)</title><rect x="1101.3" y="563.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1104.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1101.3" y="547.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1104.3" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1101.3" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1104.3" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1101.3" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1104.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (1 samples, 0.06%)</title><rect x="1102.0" y="563.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1105.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.06%)</title><rect x="1102.7" y="563.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1105.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.06%)</title><rect x="1102.7" y="547.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1105.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.06%)</title><rect x="1103.4" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1104.1" y="579.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1107.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1104.1" y="563.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1104.1" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1107.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.18%)</title><rect x="1104.8" y="611.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1107.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) [clone .plt] (1 samples, 0.06%)</title><rect x="1106.9" y="611.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.12%)</title><rect x="1107.6" y="611.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1108.3" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1111.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1108.3" y="579.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1111.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1108.3" y="563.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="1109.0" y="643.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1112.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (18 samples, 1.07%)</title><rect x="1109.7" y="659.0" width="12.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1112.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (17 samples, 1.01%)</title><rect x="1110.4" y="643.0" width="11.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1113.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (17 samples, 1.01%)</title><rect x="1110.4" y="627.0" width="11.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1113.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 0.95%)</title><rect x="1111.1" y="611.0" width="11.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (15 samples, 0.89%)</title><rect x="1111.1" y="595.0" width="10.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1114.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (15 samples, 0.89%)</title><rect x="1111.1" y="579.0" width="10.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.1" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (1 samples, 0.06%)</title><rect x="1111.1" y="563.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1114.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (14 samples, 0.83%)</title><rect x="1111.8" y="563.0" width="9.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1114.8" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (14 samples, 0.83%)</title><rect x="1111.8" y="547.0" width="9.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1114.8" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (14 samples, 0.83%)</title><rect x="1111.8" y="531.0" width="9.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1114.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (9 samples, 0.53%)</title><rect x="1115.2" y="515.0" width="6.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1118.2" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="1115.2" y="499.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1118.2" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.12%)</title><rect x="1115.9" y="499.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1118.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.36%)</title><rect x="1117.3" y="499.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1120.3" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (1 samples, 0.06%)</title><rect x="1119.4" y="483.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1122.4" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.12%)</title><rect x="1120.1" y="483.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1123.1" y="494.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos(rocksdb::MemTable* const&amp;) (1 samples, 0.06%)</title><rect x="1121.5" y="595.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.06%)</title><rect x="1122.2" y="659.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1122.2" y="643.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1122.2" y="627.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1125.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1122.2" y="611.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1125.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 0.47%)</title><rect x="1122.9" y="659.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.9" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.12%)</title><rect x="1126.4" y="643.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1129.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.06%)</title><rect x="1127.8" y="643.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.06%)</title><rect x="1128.5" y="659.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (6 samples, 0.36%)</title><rect x="1129.2" y="659.0" width="4.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1132.2" y="670.0"></text>
</g>
<g>
<title>__sched_yield (5 samples, 0.30%)</title><rect x="1129.2" y="643.0" width="3.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1132.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.30%)</title><rect x="1129.2" y="627.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.30%)</title><rect x="1129.2" y="611.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1132.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (4 samples, 0.24%)</title><rect x="1129.9" y="595.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.9" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (4 samples, 0.24%)</title><rect x="1129.9" y="579.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.9" y="590.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.24%)</title><rect x="1129.9" y="563.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.9" y="574.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.24%)</title><rect x="1129.9" y="547.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1132.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.06%)</title><rect x="1132.7" y="643.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1135.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1132.7" y="627.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1132.7" y="611.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1132.7" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.06%)</title><rect x="1133.4" y="659.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.06%)</title><rect x="1134.1" y="659.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.1" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1134.1" y="643.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1137.1" y="654.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.12%)</title><rect x="1134.8" y="659.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.18%)</title><rect x="1136.2" y="659.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.2" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.18%)</title><rect x="1136.2" y="643.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1139.2" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.18%)</title><rect x="1136.2" y="627.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1139.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="1138.3" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.06%)</title><rect x="1139.0" y="675.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="1139.7" y="675.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1142.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.06%)</title><rect x="1140.4" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1140.4" y="659.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1143.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1140.4" y="643.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1143.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1140.4" y="627.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1143.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.06%)</title><rect x="1141.1" y="675.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1144.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.06%)</title><rect x="1141.8" y="691.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.8" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1141.8" y="675.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1144.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1141.8" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1144.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1141.8" y="643.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) [clone .plt] (1 samples, 0.06%)</title><rect x="1142.5" y="691.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.06%)</title><rect x="1143.2" y="691.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.36%)</title><rect x="1143.9" y="691.0" width="4.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.12%)</title><rect x="1143.9" y="675.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.06%)</title><rect x="1145.3" y="675.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="1146.0" y="675.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.06%)</title><rect x="1146.0" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.0" y="670.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.06%)</title><rect x="1146.7" y="659.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1149.7" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="1147.4" y="675.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1147.4" y="659.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1150.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1147.4" y="643.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1147.4" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="1148.1" y="691.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.12%)</title><rect x="1148.8" y="691.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.8" y="702.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.06%)</title><rect x="1150.2" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1150.2" y="675.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1153.2" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1150.2" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1153.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1150.2" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1153.2" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.12%)</title><rect x="1150.9" y="691.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.9" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1152.3" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1155.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1152.3" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1155.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1152.3" y="659.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1155.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="1153.0" y="707.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.12%)</title><rect x="1153.7" y="707.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1154.4" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1157.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1154.4" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1157.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1154.4" y="659.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1157.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="1155.1" y="707.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.06%)</title><rect x="1155.8" y="739.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.24%)</title><rect x="1156.5" y="739.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1158.6" y="723.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1161.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1158.6" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1161.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1158.6" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1159.3" y="739.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1159.3" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1162.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1159.3" y="707.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.77%)</title><rect x="1160.0" y="771.0" width="9.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1163.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.18%)</title><rect x="1160.0" y="755.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1163.0" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.36%)</title><rect x="1162.1" y="755.0" width="4.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1165.1" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.36%)</title><rect x="1162.1" y="739.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.36%)</title><rect x="1162.1" y="723.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.1" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.24%)</title><rect x="1163.5" y="707.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1166.5" y="718.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.24%)</title><rect x="1163.5" y="691.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1166.5" y="702.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.24%)</title><rect x="1163.5" y="675.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1166.5" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.18%)</title><rect x="1164.2" y="659.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.2" y="670.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.18%)</title><rect x="1164.2" y="643.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.2" y="654.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.18%)</title><rect x="1164.2" y="627.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.2" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="1165.5" y="611.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1168.5" y="622.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.06%)</title><rect x="1166.2" y="755.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1166.2" y="739.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1166.2" y="723.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1166.2" y="707.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.2" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.18%)</title><rect x="1166.9" y="755.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.9" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1168.3" y="739.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1168.3" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1168.3" y="707.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1171.3" y="718.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.12%)</title><rect x="1169.0" y="771.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1172.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 1.12%)</title><rect x="1170.4" y="771.0" width="13.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1173.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 1.07%)</title><rect x="1171.1" y="755.0" width="12.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1174.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="1171.1" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1174.1" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 1.01%)</title><rect x="1171.8" y="739.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1174.8" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 1.01%)</title><rect x="1171.8" y="723.0" width="11.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1174.8" y="734.0"></text>
</g>
<g>
<title>do_futex (17 samples, 1.01%)</title><rect x="1171.8" y="707.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1174.8" y="718.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 1.01%)</title><rect x="1171.8" y="691.0" width="11.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1174.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 1.01%)</title><rect x="1171.8" y="675.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1174.8" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 1.01%)</title><rect x="1171.8" y="659.0" width="11.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.8" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 1.01%)</title><rect x="1171.8" y="643.0" width="11.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1174.8" y="654.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.41%)</title><rect x="1183.7" y="771.0" width="4.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1186.7" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="1184.4" y="755.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1187.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1184.4" y="739.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1187.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1184.4" y="723.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1187.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1184.4" y="707.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.4" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="1184.4" y="691.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1187.4" y="702.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="1184.4" y="675.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1187.4" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="1184.4" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.30%)</title><rect x="1185.1" y="755.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1188.1" y="766.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.30%)</title><rect x="1185.1" y="739.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1188.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.06%)</title><rect x="1188.6" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.06%)</title><rect x="1188.6" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.06%)</title><rect x="1188.6" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (1 samples, 0.06%)</title><rect x="1189.3" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="1189.3" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="1189.3" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1189.3" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="1189.3" y="723.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.3" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1189.3" y="707.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.3" y="718.0"></text>
</g>
</g>
</svg>
