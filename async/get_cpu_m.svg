<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (2,632 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=1740] (1,316 samples, 50.00%)</title><rect x="10.0" y="963.0" width="590.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="974.0">[NIO Selector #0 tid=1740]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,316 samples, 50.00%)</title><rect x="10.0" y="947.0" width="590.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.23%)</title><rect x="10.0" y="931.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.23%)</title><rect x="10.0" y="915.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (197 samples, 7.48%)</title><rect x="12.7" y="931.0" width="88.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.7" y="942.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.04%)</title><rect x="14.0" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="14.0" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.0" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (193 samples, 7.33%)</title><rect x="14.5" y="915.0" width="86.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.5" y="926.0">one/nio/ne..</text>
</g>
<g>
<title>clock_gettime (4 samples, 0.15%)</title><rect x="15.4" y="899.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="18.4" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="16.7" y="883.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="19.7" y="894.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.04%)</title><rect x="17.2" y="899.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="20.2" y="910.0"></text>
</g>
<g>
<title>epoll_wait (186 samples, 7.07%)</title><rect x="17.6" y="899.0" width="83.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="20.6" y="910.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (183 samples, 6.95%)</title><rect x="18.5" y="883.0" width="82.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="21.5" y="894.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (183 samples, 6.95%)</title><rect x="18.5" y="867.0" width="82.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="21.5" y="878.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (178 samples, 6.76%)</title><rect x="20.3" y="851.0" width="79.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="23.3" y="862.0">__x64_sys..</text>
</g>
<g>
<title>do_epoll_wait (178 samples, 6.76%)</title><rect x="20.3" y="835.0" width="79.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="23.3" y="846.0">do_epoll_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="20.3" y="819.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.3" y="830.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="20.3" y="803.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="23.3" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="20.3" y="787.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.3" y="798.0"></text>
</g>
<g>
<title>ep_poll (176 samples, 6.69%)</title><rect x="21.2" y="819.0" width="78.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="24.2" y="830.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (17 samples, 0.65%)</title><rect x="22.6" y="803.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="25.6" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.42%)</title><rect x="25.2" y="787.0" width="5.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="28.2" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.23%)</title><rect x="27.0" y="771.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="30.0" y="782.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.11%)</title><rect x="27.9" y="755.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.9" y="766.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="27.9" y="739.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="30.9" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="28.8" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="31.8" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="29.3" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="32.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="29.7" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="32.7" y="782.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="30.2" y="803.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.2" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.11%)</title><rect x="30.6" y="803.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.6" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (151 samples, 5.74%)</title><rect x="32.0" y="803.0" width="67.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="35.0" y="814.0">schedul..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (151 samples, 5.74%)</title><rect x="32.0" y="787.0" width="67.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.0" y="798.0">schedul..</text>
</g>
<g>
<title>schedule (150 samples, 5.70%)</title><rect x="32.4" y="771.0" width="67.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.4" y="782.0">schedule</text>
</g>
<g>
<title>__schedule (150 samples, 5.70%)</title><rect x="32.4" y="755.0" width="67.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="35.4" y="766.0">__sched..</text>
</g>
<g>
<title>finish_task_switch (149 samples, 5.66%)</title><rect x="32.9" y="739.0" width="66.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="35.9" y="750.0">finish_..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="99.7" y="803.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="102.7" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.04%)</title><rect x="100.1" y="851.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="100.6" y="883.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.6" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="100.6" y="867.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.6" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="100.6" y="851.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="103.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,113 samples, 42.29%)</title><rect x="101.0" y="931.0" width="499.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.0" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,112 samples, 42.25%)</title><rect x="101.5" y="915.0" width="498.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.5" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,036 samples, 39.36%)</title><rect x="101.9" y="899.0" width="464.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.9" y="910.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,011 samples, 38.41%)</title><rect x="103.3" y="883.0" width="453.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.3" y="894.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,007 samples, 38.26%)</title><rect x="103.7" y="867.0" width="451.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.7" y="878.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1,001 samples, 38.03%)</title><rect x="103.7" y="851.0" width="448.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.7" y="862.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (356 samples, 13.53%)</title><rect x="103.7" y="835.0" width="159.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.7" y="846.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (342 samples, 12.99%)</title><rect x="104.6" y="819.0" width="153.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.6" y="830.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (30 samples, 1.14%)</title><rect x="104.6" y="803.0" width="13.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.6" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="106.4" y="787.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="109.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (23 samples, 0.87%)</title><rect x="107.3" y="787.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.30%)</title><rect x="107.3" y="771.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.11%)</title><rect x="109.5" y="755.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.08%)</title><rect x="110.0" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (15 samples, 0.57%)</title><rect x="110.9" y="771.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (15 samples, 0.57%)</title><rect x="110.9" y="755.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (15 samples, 0.57%)</title><rect x="110.9" y="739.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.27%)</title><rect x="114.5" y="723.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.04%)</title><rect x="116.7" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="117.2" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="117.2" y="691.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="117.2" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="120.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="117.6" y="787.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.6" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="117.6" y="771.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="120.6" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="117.6" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="120.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (312 samples, 11.85%)</title><rect x="118.0" y="803.0" width="139.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.0" y="814.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (312 samples, 11.85%)</title><rect x="118.0" y="787.0" width="139.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.0" y="798.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (312 samples, 11.85%)</title><rect x="118.0" y="771.0" width="139.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.0" y="782.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (312 samples, 11.85%)</title><rect x="118.0" y="755.0" width="139.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.0" y="766.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="118.9" y="739.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="121.9" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.19%)</title><rect x="119.4" y="739.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="122.4" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="119.4" y="723.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="122.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.15%)</title><rect x="119.8" y="723.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="122.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="121.2" y="707.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="124.2" y="718.0"></text>
</g>
<g>
<title>send (302 samples, 11.47%)</title><rect x="121.6" y="739.0" width="135.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="124.6" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (292 samples, 11.09%)</title><rect x="125.7" y="723.0" width="130.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.7" y="734.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (292 samples, 11.09%)</title><rect x="125.7" y="707.0" width="130.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="128.7" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (278 samples, 10.56%)</title><rect x="128.8" y="691.0" width="124.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="131.8" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (276 samples, 10.49%)</title><rect x="129.3" y="675.0" width="123.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="132.3" y="686.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="130.6" y="659.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="133.6" y="670.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="131.5" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="134.5" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (268 samples, 10.18%)</title><rect x="131.9" y="659.0" width="120.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="134.9" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="132.8" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.8" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (260 samples, 9.88%)</title><rect x="133.3" y="643.0" width="116.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.3" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="133.3" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="136.3" y="638.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="133.7" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="136.7" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (258 samples, 9.80%)</title><rect x="134.2" y="627.0" width="115.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="137.2" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.08%)</title><rect x="134.6" y="611.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="137.6" y="622.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="135.5" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="136.0" y="611.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.0" y="622.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="136.4" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="139.4" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="136.9" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.9" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.04%)</title><rect x="137.3" y="611.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="140.3" y="622.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="137.8" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.8" y="622.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.08%)</title><rect x="138.2" y="611.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (244 samples, 9.27%)</title><rect x="139.1" y="611.0" width="109.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="142.1" y="622.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="141.8" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.8" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.08%)</title><rect x="141.8" y="579.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.8" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.15%)</title><rect x="142.7" y="595.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="145.7" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.08%)</title><rect x="143.2" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.2" y="590.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="144.1" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="147.1" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="144.5" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="147.5" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="144.5" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="147.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.34%)</title><rect x="144.9" y="595.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="147.9" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.34%)</title><rect x="144.9" y="579.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="147.9" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (4 samples, 0.15%)</title><rect x="145.4" y="563.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="148.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.11%)</title><rect x="145.4" y="547.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.4" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="146.3" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="149.3" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="146.7" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.7" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.11%)</title><rect x="147.2" y="563.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.2" y="574.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="148.5" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="151.5" y="574.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="148.5" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="151.5" y="558.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.11%)</title><rect x="149.0" y="595.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="152.0" y="606.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="149.9" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.9" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.08%)</title><rect x="150.3" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="153.3" y="606.0"></text>
</g>
<g>
<title>tcp_push (211 samples, 8.02%)</title><rect x="151.2" y="595.0" width="94.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.2" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (211 samples, 8.02%)</title><rect x="151.2" y="579.0" width="94.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="154.2" y="590.0">__tcp_push_..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="151.2" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="154.2" y="574.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="151.7" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.7" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (209 samples, 7.94%)</title><rect x="152.1" y="563.0" width="93.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="155.1" y="574.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (186 samples, 7.07%)</title><rect x="153.5" y="547.0" width="83.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="156.5" y="558.0">__tcp_tra..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="156.6" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="159.6" y="542.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="157.1" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="160.1" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="157.5" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="160.5" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="157.9" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="160.9" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (171 samples, 6.50%)</title><rect x="158.4" y="531.0" width="76.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="161.4" y="542.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (171 samples, 6.50%)</title><rect x="158.4" y="515.0" width="76.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="161.4" y="526.0">__ip_que..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.08%)</title><rect x="159.7" y="499.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="162.7" y="510.0"></text>
</g>
<g>
<title>ip_local_out (164 samples, 6.23%)</title><rect x="160.6" y="499.0" width="73.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.6" y="510.0">ip_local..</text>
</g>
<g>
<title>ip_output (164 samples, 6.23%)</title><rect x="160.6" y="483.0" width="73.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="163.6" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (163 samples, 6.19%)</title><rect x="161.1" y="467.0" width="73.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="164.1" y="478.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="161.1" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.1" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (162 samples, 6.16%)</title><rect x="161.5" y="451.0" width="72.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="164.5" y="462.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (161 samples, 6.12%)</title><rect x="162.0" y="435.0" width="72.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.0" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (141 samples, 5.36%)</title><rect x="163.3" y="419.0" width="63.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.3" y="430.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (140 samples, 5.32%)</title><rect x="163.8" y="403.0" width="62.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="166.8" y="414.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (139 samples, 5.28%)</title><rect x="164.2" y="387.0" width="62.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="167.2" y="398.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (139 samples, 5.28%)</title><rect x="164.2" y="371.0" width="62.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="167.2" y="382.0">__soft..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="166.5" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="169.5" y="366.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.11%)</title><rect x="166.9" y="355.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="169.9" y="366.0"></text>
</g>
<g>
<title>net_rx_action (129 samples, 4.90%)</title><rect x="168.3" y="355.0" width="57.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.3" y="366.0">net_rx..</text>
</g>
<g>
<title>process_backlog (128 samples, 4.86%)</title><rect x="168.7" y="339.0" width="57.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="171.7" y="350.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (122 samples, 4.64%)</title><rect x="170.9" y="323.0" width="54.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="173.9" y="334.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.11%)</title><rect x="171.4" y="307.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="174.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (118 samples, 4.48%)</title><rect x="172.7" y="307.0" width="52.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="175.7" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.19%)</title><rect x="172.7" y="291.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="175.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv (113 samples, 4.29%)</title><rect x="175.0" y="291.0" width="50.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.0" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="175.9" y="275.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (110 samples, 4.18%)</title><rect x="176.3" y="275.0" width="49.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="179.3" y="286.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (108 samples, 4.10%)</title><rect x="176.8" y="259.0" width="48.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="179.8" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (107 samples, 4.07%)</title><rect x="176.8" y="243.0" width="47.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.8" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (105 samples, 3.99%)</title><rect x="176.8" y="227.0" width="47.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.8" y="238.0">ip_p..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="177.7" y="211.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="180.7" y="222.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="178.1" y="211.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="181.1" y="222.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="178.6" y="211.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="181.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="179.0" y="211.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.0" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (99 samples, 3.76%)</title><rect x="179.5" y="211.0" width="44.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.5" y="222.0">tcp_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="180.4" y="195.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="183.4" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="180.8" y="195.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.8" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.08%)</title><rect x="180.8" y="179.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="183.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.15%)</title><rect x="181.7" y="195.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="184.7" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="182.2" y="179.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.2" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="182.6" y="179.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="185.6" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="183.1" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="186.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (89 samples, 3.38%)</title><rect x="183.5" y="195.0" width="39.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="186.5" y="206.0">tcp..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="183.5" y="179.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.5" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.15%)</title><rect x="184.0" y="179.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.0" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="185.7" y="179.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="188.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (83 samples, 3.15%)</title><rect x="186.2" y="179.0" width="37.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.2" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.23%)</title><rect x="189.3" y="163.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="192.3" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.23%)</title><rect x="189.3" y="147.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.3" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="189.3" y="131.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.15%)</title><rect x="190.2" y="131.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.2" y="142.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.15%)</title><rect x="190.2" y="115.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="193.2" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.15%)</title><rect x="190.2" y="99.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.2" y="110.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="192.0" y="163.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.0" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="192.5" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="195.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (29 samples, 1.10%)</title><rect x="192.9" y="163.0" width="13.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="195.9" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="195.2" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.2" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="195.6" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.6" y="158.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="196.1" y="147.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="199.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (18 samples, 0.68%)</title><rect x="196.5" y="147.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.42%)</title><rect x="197.4" y="131.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.4" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.11%)</title><rect x="197.4" y="115.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="200.4" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="198.3" y="99.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="201.3" y="110.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.23%)</title><rect x="198.7" y="115.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="201.7" y="126.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.19%)</title><rect x="199.2" y="99.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="202.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="201.0" y="83.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="204.0" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="201.0" y="67.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="204.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="201.0" y="51.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="204.0" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.04%)</title><rect x="201.0" y="35.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.0" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="201.4" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="204.4" y="126.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="201.9" y="115.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="204.9" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.08%)</title><rect x="202.3" y="131.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="205.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.11%)</title><rect x="203.2" y="131.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.2" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="204.6" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.6" y="158.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="205.0" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="208.0" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="205.5" y="147.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="208.5" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (32 samples, 1.22%)</title><rect x="205.9" y="163.0" width="14.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="208.9" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (32 samples, 1.22%)</title><rect x="205.9" y="147.0" width="14.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="208.9" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (32 samples, 1.22%)</title><rect x="205.9" y="131.0" width="14.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="208.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 1.14%)</title><rect x="205.9" y="115.0" width="13.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="208.9" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (30 samples, 1.14%)</title><rect x="205.9" y="99.0" width="13.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="208.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.08%)</title><rect x="219.4" y="115.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="222.4" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.15%)</title><rect x="220.3" y="163.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="223.3" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="220.7" y="147.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="223.7" y="158.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="221.2" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="224.2" y="158.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="221.6" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="224.6" y="158.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="222.1" y="163.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.1" y="174.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="222.5" y="163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="225.5" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="223.0" y="163.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="223.4" y="195.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="226.4" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.08%)</title><rect x="223.9" y="227.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="226.9" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="224.7" y="243.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="227.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="225.2" y="259.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="228.2" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="225.6" y="323.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="228.6" y="334.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="226.1" y="355.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="229.1" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.65%)</title><rect x="226.5" y="419.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="229.5" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.53%)</title><rect x="226.5" y="403.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="229.5" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.23%)</title><rect x="227.9" y="387.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="230.9" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.19%)</title><rect x="227.9" y="371.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.9" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.08%)</title><rect x="228.3" y="355.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.3" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="229.2" y="355.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="232.2" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.08%)</title><rect x="229.2" y="339.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.2" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.08%)</title><rect x="229.2" y="323.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="232.2" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="230.1" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="230.6" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.6" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.15%)</title><rect x="231.0" y="387.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.0" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="232.4" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.4" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="232.4" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="235.4" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.08%)</title><rect x="232.8" y="403.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.8" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="233.7" y="403.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.7" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.08%)</title><rect x="234.2" y="499.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.2" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="235.1" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="238.1" y="542.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="235.5" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="238.5" y="542.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="236.0" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="239.0" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="236.4" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="239.4" y="542.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="236.4" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.4" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.08%)</title><rect x="236.9" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="239.9" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="237.8" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.8" y="558.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.08%)</title><rect x="238.2" y="547.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.2" y="558.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="239.1" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="242.1" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.34%)</title><rect x="239.5" y="547.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="242.5" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (2 samples, 0.08%)</title><rect x="240.0" y="531.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.0" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.23%)</title><rect x="240.9" y="531.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.9" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.23%)</title><rect x="240.9" y="515.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.19%)</title><rect x="241.3" y="499.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="244.3" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="242.7" y="483.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="245.7" y="494.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.04%)</title><rect x="243.6" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="246.6" y="558.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="244.0" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.0" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.08%)</title><rect x="244.5" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="247.5" y="558.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="244.5" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="244.9" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.9" y="542.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="244.9" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="247.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="245.4" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="248.4" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.23%)</title><rect x="245.8" y="595.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.8" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="245.8" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.8" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.19%)</title><rect x="246.3" y="579.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="249.3" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.08%)</title><rect x="247.2" y="563.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.2" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="248.1" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="251.1" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="248.5" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.5" y="622.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="249.4" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="252.4" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.19%)</title><rect x="249.9" y="643.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="252.9" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="250.3" y="627.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.11%)</title><rect x="250.8" y="627.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="253.8" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.11%)</title><rect x="250.8" y="611.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.8" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="252.1" y="659.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.1" y="670.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="252.1" y="643.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="255.1" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="252.1" y="627.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="255.1" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="252.5" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.5" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="253.0" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="256.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.27%)</title><rect x="253.4" y="691.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.4" y="702.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="253.4" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="256.4" y="686.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.23%)</title><rect x="253.9" y="675.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="256.9" y="686.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.23%)</title><rect x="253.9" y="659.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.9" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.23%)</title><rect x="253.9" y="643.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="256.6" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="256.6" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="259.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="256.6" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.6" y="702.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.08%)</title><rect x="257.0" y="739.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="260.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.38%)</title><rect x="257.9" y="819.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.38%)</title><rect x="257.9" y="803.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.38%)</title><rect x="257.9" y="787.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="258.4" y="771.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="261.4" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="258.4" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="261.4" y="766.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.11%)</title><rect x="258.8" y="771.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="261.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.11%)</title><rect x="260.2" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.11%)</title><rect x="260.2" y="755.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.11%)</title><rect x="260.2" y="739.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.2" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.11%)</title><rect x="260.2" y="723.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.11%)</title><rect x="260.2" y="707.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="261.5" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="261.5" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.04%)</title><rect x="262.0" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.08%)</title><rect x="262.4" y="819.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.4" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="262.9" y="803.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="265.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="262.9" y="787.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="262.9" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="265.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (7 samples, 0.27%)</title><rect x="263.3" y="835.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.19%)</title><rect x="263.3" y="819.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="263.3" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="263.3" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.15%)</title><rect x="263.8" y="803.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.15%)</title><rect x="263.8" y="787.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="266.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.15%)</title><rect x="263.8" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.8" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="264.2" y="755.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="267.2" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="264.7" y="755.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="267.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.08%)</title><rect x="265.5" y="819.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="266.4" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.get (637 samples, 24.20%)</title><rect x="266.9" y="835.0" width="285.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.9" y="846.0">ru/mail/polis/service/ivanovandrey/Ser..</text>
</g>
<g>
<title>java/lang/String.isEmpty (3 samples, 0.11%)</title><rect x="267.3" y="819.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="270.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.04%)</title><rect x="268.7" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="268.7" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (629 samples, 23.90%)</title><rect x="269.1" y="819.0" width="282.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.1" y="830.0">ru/mail/polis/dao/RocksDBImpl.get</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="269.1" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.1" y="814.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="269.1" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.04%)</title><rect x="269.1" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.1" y="782.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="269.1" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.1" y="766.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="269.1" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.04%)</title><rect x="269.1" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.1" y="734.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.04%)</title><rect x="269.1" y="707.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="272.1" y="718.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.04%)</title><rect x="269.1" y="691.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="272.1" y="702.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="269.1" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="272.1" y="686.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="269.1" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="272.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (622 samples, 23.63%)</title><rect x="269.6" y="803.0" width="278.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.6" y="814.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (622 samples, 23.63%)</title><rect x="269.6" y="787.0" width="278.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.6" y="798.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.08%)</title><rect x="269.6" y="771.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="272.6" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (602 samples, 22.87%)</title><rect x="270.5" y="771.0" width="269.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="273.5" y="782.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="270.5" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="273.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (5 samples, 0.19%)</title><rect x="270.9" y="755.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="273.9" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.11%)</title><rect x="273.2" y="755.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="276.2" y="766.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.08%)</title><rect x="274.5" y="755.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="277.5" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="275.0" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="275.0" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="278.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="275.0" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="278.0" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.11%)</title><rect x="275.4" y="755.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="278.4" y="766.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="276.8" y="755.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="279.8" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (4 samples, 0.15%)</title><rect x="277.2" y="755.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="280.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="278.1" y="739.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="278.1" y="723.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="281.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="278.1" y="707.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="281.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.08%)</title><rect x="279.0" y="755.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="282.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (3 samples, 0.11%)</title><rect x="279.9" y="755.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="282.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="281.2" y="755.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="284.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="281.7" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="284.7" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (570 samples, 21.66%)</title><rect x="282.1" y="755.0" width="255.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="285.1" y="766.0">rocksdb_get_helper(JNIEnv_*, rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="284.4" y="739.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="287.4" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="284.8" y="739.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="287.8" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="285.3" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="288.3" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.11%)</title><rect x="285.7" y="739.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="288.7" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="286.2" y="723.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="289.2" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="287.1" y="739.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="290.1" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="288.0" y="739.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="291.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="288.4" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="291.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="288.4" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="291.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="288.4" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (510 samples, 19.38%)</title><rect x="288.9" y="739.0" width="228.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="291.9" y="750.0">rocksdb::DB::Get(rocksdb::Read..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="288.9" y="723.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="291.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (505 samples, 19.19%)</title><rect x="289.3" y="723.0" width="226.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="292.3" y="734.0">rocksdb::DB::Get(rocksdb::Read..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (2 samples, 0.08%)</title><rect x="290.7" y="707.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="293.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (6 samples, 0.23%)</title><rect x="291.6" y="707.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="294.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="291.6" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="294.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (3 samples, 0.11%)</title><rect x="292.0" y="691.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="295.0" y="702.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.04%)</title><rect x="292.0" y="675.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="295.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (2 samples, 0.08%)</title><rect x="292.4" y="675.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="295.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="292.9" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="292.9" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="295.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="292.9" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="295.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="293.3" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="296.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (1 samples, 0.04%)</title><rect x="293.8" y="691.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="296.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (491 samples, 18.66%)</title><rect x="294.2" y="707.0" width="220.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="297.2" y="718.0">rocksdb::DBImpl::Get(rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (487 samples, 18.50%)</title><rect x="294.2" y="691.0" width="218.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="297.2" y="702.0">rocksdb::DBImpl::Get(rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.19%)</title><rect x="294.7" y="675.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="297.7" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="296.9" y="675.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="299.9" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="296.9" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="299.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="296.9" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="299.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="296.9" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="299.9" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.27%)</title><rect x="297.4" y="675.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="300.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.08%)</title><rect x="300.5" y="675.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="303.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (2 samples, 0.08%)</title><rect x="301.4" y="675.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="304.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.11%)</title><rect x="302.3" y="675.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="305.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.08%)</title><rect x="303.7" y="675.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="306.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (450 samples, 17.10%)</title><rect x="304.6" y="675.0" width="201.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="307.6" y="686.0">rocksdb::DBImpl::GetImpl(r..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="308.6" y="659.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="311.6" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="309.0" y="659.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="312.0" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="309.5" y="659.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="312.5" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="310.4" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="313.4" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.30%)</title><rect x="310.8" y="659.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="313.8" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.08%)</title><rect x="314.4" y="659.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="317.4" y="670.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="315.3" y="659.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="318.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() [clone .plt] (1 samples, 0.04%)</title><rect x="315.8" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="318.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (7 samples, 0.27%)</title><rect x="316.2" y="659.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="319.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="316.7" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="319.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() [clone .plt] (3 samples, 0.11%)</title><rect x="317.1" y="643.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="320.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.08%)</title><rect x="318.4" y="643.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="321.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="318.9" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="321.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="319.3" y="659.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="322.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (7 samples, 0.27%)</title><rect x="320.2" y="659.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="323.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (5 samples, 0.19%)</title><rect x="320.2" y="643.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="323.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="320.2" y="627.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="323.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (3 samples, 0.11%)</title><rect x="320.7" y="627.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="323.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.11%)</title><rect x="320.7" y="611.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="323.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() [clone .plt] (1 samples, 0.04%)</title><rect x="322.0" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="325.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="322.0" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="325.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="322.0" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="322.0" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="325.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="322.5" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="325.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="322.9" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="325.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="323.4" y="659.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="326.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (1 samples, 0.04%)</title><rect x="323.8" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="326.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="324.3" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="327.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.04%)</title><rect x="324.7" y="659.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (77 samples, 2.93%)</title><rect x="325.2" y="659.0" width="34.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="328.2" y="670.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (2 samples, 0.08%)</title><rect x="326.1" y="643.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="329.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (73 samples, 2.77%)</title><rect x="327.0" y="643.0" width="32.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="330.0" y="654.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (73 samples, 2.77%)</title><rect x="327.0" y="627.0" width="32.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="330.0" y="638.0">/t..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (69 samples, 2.62%)</title><rect x="327.4" y="611.0" width="31.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="330.4" y="622.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (8 samples, 0.30%)</title><rect x="336.4" y="595.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="339.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.30%)</title><rect x="340.0" y="595.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="343.0" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="343.6" y="595.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="346.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (29 samples, 1.10%)</title><rect x="344.0" y="595.0" width="13.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="347.0" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (5 samples, 0.19%)</title><rect x="348.9" y="579.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="351.9" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (11 samples, 0.42%)</title><rect x="351.2" y="579.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="354.2" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="355.7" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="358.7" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="355.7" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="358.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="355.7" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="358.7" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="356.1" y="579.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="359.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="356.6" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="359.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="356.6" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="359.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="356.6" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.11%)</title><rect x="357.0" y="595.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="360.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.11%)</title><rect x="357.0" y="579.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.11%)</title><rect x="357.0" y="563.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="358.4" y="611.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="361.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (1 samples, 0.04%)</title><rect x="359.7" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="362.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) [clone .plt] (1 samples, 0.04%)</title><rect x="360.1" y="659.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="363.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (1 samples, 0.04%)</title><rect x="360.6" y="659.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="363.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (324 samples, 12.31%)</title><rect x="361.0" y="659.0" width="145.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="364.0" y="670.0">rocksdb::Version::..</text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="366.9" y="643.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="369.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.04%)</title><rect x="368.2" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="371.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (2 samples, 0.08%)</title><rect x="368.7" y="643.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="371.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="369.6" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="372.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (303 samples, 11.51%)</title><rect x="370.0" y="643.0" width="135.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="373.0" y="654.0">rocksdb::TableCac..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (4 samples, 0.15%)</title><rect x="370.5" y="627.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="373.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="372.2" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="375.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (274 samples, 10.41%)</title><rect x="372.7" y="627.0" width="122.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="375.7" y="638.0">rocksdb::BlockB..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (4 samples, 0.15%)</title><rect x="379.9" y="611.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="382.9" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="381.7" y="611.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="384.7" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="382.6" y="611.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="385.6" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="383.0" y="611.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="386.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="383.0" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="383.0" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="386.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="383.0" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="386.0" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="383.5" y="611.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="386.5" y="622.0"></text>
</g>
<g>
<title>cfree (3 samples, 0.11%)</title><rect x="385.3" y="611.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="388.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (3 samples, 0.11%)</title><rect x="386.6" y="611.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="389.6" y="622.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.04%)</title><rect x="386.6" y="595.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="389.6" y="606.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="387.0" y="595.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="390.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="387.5" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="390.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.04%)</title><rect x="387.9" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="390.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::FullFilterKeyMayMatch(rocksdb::ReadOptions const&amp;, rocksdb::FilterBlockReader*, rocksdb::Slice const&amp;, bool, rocksdb::SliceTransform const*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.04%)</title><rect x="388.4" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="391.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (2 samples, 0.08%)</title><rect x="388.8" y="611.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="391.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="389.7" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="392.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (1 samples, 0.04%)</title><rect x="390.2" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="393.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="390.6" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="393.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.08%)</title><rect x="391.1" y="611.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="394.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.08%)</title><rect x="392.0" y="611.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="395.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) [clone .plt] (1 samples, 0.04%)</title><rect x="392.9" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="395.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (53 samples, 2.01%)</title><rect x="393.3" y="611.0" width="23.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="396.3" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) [clone .plt] (1 samples, 0.04%)</title><rect x="395.1" y="595.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="398.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="395.1" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="398.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="395.1" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="395.1" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="398.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (1 samples, 0.04%)</title><rect x="395.6" y="595.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="398.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (1 samples, 0.04%)</title><rect x="395.6" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="398.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (2 samples, 0.08%)</title><rect x="396.0" y="595.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="399.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (43 samples, 1.63%)</title><rect x="396.9" y="595.0" width="19.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="399.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (42 samples, 1.60%)</title><rect x="396.9" y="579.0" width="18.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="399.9" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="397.4" y="563.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="400.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="397.8" y="563.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="400.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (3 samples, 0.11%)</title><rect x="398.3" y="563.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="401.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (2 samples, 0.08%)</title><rect x="399.6" y="563.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="402.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::Value(rocksdb::Cache::Handle*) (1 samples, 0.04%)</title><rect x="400.5" y="563.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="403.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (33 samples, 1.25%)</title><rect x="400.9" y="563.0" width="14.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="403.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (30 samples, 1.14%)</title><rect x="400.9" y="547.0" width="13.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="403.9" y="558.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (6 samples, 0.23%)</title><rect x="401.4" y="531.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="404.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="403.6" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="406.6" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="403.6" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="406.6" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="403.6" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.6" y="494.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits@plt (2 samples, 0.08%)</title><rect x="404.1" y="531.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="407.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="405.0" y="531.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="408.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="405.4" y="531.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="408.4" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="405.4" y="515.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="408.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="405.9" y="531.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="408.9" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="405.9" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="408.9" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="405.9" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="408.9" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="405.9" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (15 samples, 0.57%)</title><rect x="406.3" y="531.0" width="6.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="409.3" y="542.0"></text>
</g>
<g>
<title>malloc_usable_size (3 samples, 0.11%)</title><rect x="406.3" y="515.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="409.3" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.08%)</title><rect x="407.7" y="515.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="410.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="408.1" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.1" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="408.1" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="411.1" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="408.1" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="411.1" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.08%)</title><rect x="408.6" y="515.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="411.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="409.0" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.0" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="409.0" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="412.0" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="409.0" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="412.0" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (2 samples, 0.08%)</title><rect x="409.5" y="515.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="412.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="410.4" y="515.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="413.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.19%)</title><rect x="410.8" y="515.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="413.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.19%)</title><rect x="410.8" y="499.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="413.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.08%)</title><rect x="413.0" y="531.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="416.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="413.9" y="531.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="416.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="414.4" y="547.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="417.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.04%)</title><rect x="414.8" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="417.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.04%)</title><rect x="415.3" y="547.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="418.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="415.7" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="418.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="416.2" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="419.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="416.6" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="416.6" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="419.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="416.6" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="419.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (129 samples, 4.90%)</title><rect x="417.1" y="611.0" width="57.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="420.1" y="622.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="420.7" y="595.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="423.7" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="421.1" y="595.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="424.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="421.6" y="595.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="424.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (99 samples, 3.76%)</title><rect x="422.5" y="595.0" width="44.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="425.5" y="606.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="428.7" y="579.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="431.7" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.19%)</title><rect x="429.2" y="579.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="432.2" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (7 samples, 0.27%)</title><rect x="431.4" y="579.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="434.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.23%)</title><rect x="434.6" y="579.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="437.6" y="590.0"></text>
</g>
<g>
<title>memcpy (8 samples, 0.30%)</title><rect x="437.3" y="579.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="440.3" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="440.4" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="443.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="440.4" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="440.4" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (29 samples, 1.10%)</title><rect x="440.8" y="579.0" width="13.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="443.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="452.9" y="563.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="452.9" y="547.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="455.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="452.9" y="531.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (29 samples, 1.10%)</title><rect x="453.8" y="579.0" width="13.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="456.8" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (3 samples, 0.11%)</title><rect x="457.0" y="563.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="460.0" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.38%)</title><rect x="458.3" y="563.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="461.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="461.9" y="547.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.9" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="461.9" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="464.9" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="461.9" y="515.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="464.9" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.34%)</title><rect x="462.8" y="563.0" width="4.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="465.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (6 samples, 0.23%)</title><rect x="466.8" y="595.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="469.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="469.1" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="469.1" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="472.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="469.1" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (12 samples, 0.46%)</title><rect x="469.5" y="595.0" width="5.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="472.5" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.15%)</title><rect x="471.8" y="579.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="474.8" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="473.6" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="476.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="474.0" y="579.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="477.0" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="474.5" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.5" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="474.5" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="477.5" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="474.5" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="477.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (4 samples, 0.15%)</title><rect x="474.9" y="611.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="477.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (2 samples, 0.08%)</title><rect x="476.7" y="611.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="479.7" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="477.2" y="595.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="480.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (31 samples, 1.18%)</title><rect x="477.6" y="611.0" width="13.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="480.6" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (2 samples, 0.08%)</title><rect x="483.9" y="595.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="486.9" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="484.8" y="595.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="487.8" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="485.7" y="595.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="488.7" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="486.1" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="489.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="486.1" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="489.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="486.1" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="486.6" y="595.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="489.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="487.0" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="490.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="487.0" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="487.0" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="490.0" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="487.5" y="595.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="490.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="487.9" y="595.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="490.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="487.9" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="490.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="487.9" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="490.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="487.9" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="488.4" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="491.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.04%)</title><rect x="488.4" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="491.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="488.4" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="491.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="488.4" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="488.4" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="491.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.19%)</title><rect x="488.8" y="595.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="491.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="490.2" y="579.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="493.2" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="490.6" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="493.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="490.6" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="490.6" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.6" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="491.1" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="494.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="491.1" y="579.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="494.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="491.1" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="494.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (3 samples, 0.11%)</title><rect x="491.5" y="611.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="494.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.04%)</title><rect x="492.8" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="495.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="493.3" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="496.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (1 samples, 0.04%)</title><rect x="493.7" y="611.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="496.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.11%)</title><rect x="494.2" y="611.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="497.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="495.1" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="495.1" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="498.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="495.1" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (2 samples, 0.08%)</title><rect x="495.5" y="627.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="498.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (3 samples, 0.11%)</title><rect x="496.4" y="627.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="499.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="497.8" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="500.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.08%)</title><rect x="498.2" y="627.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="501.2" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="498.7" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="498.7" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="498.7" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="501.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.04%)</title><rect x="499.1" y="627.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="502.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="499.6" y="627.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="502.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="499.6" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="502.6" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="499.6" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.6" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="499.6" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="500.0" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="503.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (2 samples, 0.08%)</title><rect x="500.5" y="627.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="503.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() [clone .plt] (1 samples, 0.04%)</title><rect x="501.4" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="504.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (4 samples, 0.15%)</title><rect x="501.8" y="627.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="504.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() [clone .plt] (1 samples, 0.04%)</title><rect x="503.6" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="506.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (4 samples, 0.15%)</title><rect x="504.1" y="627.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="507.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="505.9" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="505.9" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="508.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="505.9" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="508.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="506.3" y="675.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="509.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) [clone .plt] (1 samples, 0.04%)</title><rect x="507.2" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="510.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="507.2" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="510.2" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="507.2" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="510.2" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="507.2" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="510.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.04%)</title><rect x="507.6" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="510.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) [clone .plt] (1 samples, 0.04%)</title><rect x="508.1" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="511.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (3 samples, 0.11%)</title><rect x="508.5" y="675.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="511.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="509.9" y="675.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="512.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() [clone .plt] (1 samples, 0.04%)</title><rect x="510.3" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="513.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.08%)</title><rect x="510.8" y="675.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="513.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (1 samples, 0.04%)</title><rect x="511.7" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="514.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.04%)</title><rect x="512.1" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="515.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (4 samples, 0.15%)</title><rect x="512.6" y="691.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="515.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (2 samples, 0.08%)</title><rect x="514.4" y="707.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="517.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="515.3" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="518.3" y="718.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.11%)</title><rect x="515.7" y="723.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="518.7" y="734.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="517.1" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="520.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (5 samples, 0.19%)</title><rect x="517.5" y="739.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="520.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (39 samples, 1.48%)</title><rect x="519.7" y="739.0" width="17.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="522.7" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="520.2" y="723.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="523.2" y="734.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="521.5" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="524.5" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="522.0" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="525.0" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="522.4" y="723.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="525.4" y="734.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="522.4" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="525.4" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="522.9" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="522.9" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="525.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="522.9" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.9" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (25 samples, 0.95%)</title><rect x="523.3" y="723.0" width="11.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="526.3" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="525.6" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="528.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="526.0" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="529.0" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 0.68%)</title><rect x="526.5" y="707.0" width="8.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="529.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (12 samples, 0.46%)</title><rect x="528.7" y="691.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="531.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.27%)</title><rect x="528.7" y="675.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="531.7" y="686.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="528.7" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="531.7" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="529.2" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="532.2" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.08%)</title><rect x="529.6" y="659.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="532.6" y="670.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (3 samples, 0.11%)</title><rect x="530.5" y="659.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="533.5" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="531.9" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="534.9" y="686.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.08%)</title><rect x="532.3" y="675.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="535.3" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="533.2" y="675.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="536.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="534.1" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="537.1" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.23%)</title><rect x="534.5" y="723.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="537.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="536.8" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="539.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="536.8" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="539.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="536.8" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="539.8" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="537.2" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="540.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="537.2" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="537.2" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="540.2" y="718.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (5 samples, 0.19%)</title><rect x="537.7" y="755.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="540.7" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="539.9" y="755.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="542.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="540.4" y="771.0" width="4.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="543.4" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.15%)</title><rect x="540.4" y="755.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="543.4" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.08%)</title><rect x="542.2" y="755.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="545.2" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (4 samples, 0.15%)</title><rect x="543.1" y="755.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="546.1" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.15%)</title><rect x="544.9" y="771.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="547.9" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="546.2" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="549.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="546.2" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="549.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="546.2" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="549.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.04%)</title><rect x="546.6" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="549.6" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="547.1" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="550.1" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (2 samples, 0.08%)</title><rect x="547.5" y="771.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="550.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (6 samples, 0.23%)</title><rect x="548.4" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (6 samples, 0.23%)</title><rect x="548.4" y="787.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.11%)</title><rect x="548.4" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.11%)</title><rect x="548.4" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.4" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (3 samples, 0.11%)</title><rect x="548.4" y="739.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.4" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.11%)</title><rect x="548.4" y="723.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="551.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.11%)</title><rect x="549.8" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="549.8" y="755.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="549.8" y="739.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="549.8" y="723.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="549.8" y="707.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="550.7" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="553.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="550.7" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="553.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="550.7" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="553.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.strToByteBuffer (2 samples, 0.08%)</title><rect x="551.1" y="819.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="551.1" y="803.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="551.1" y="787.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="551.1" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="554.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="551.1" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.1" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="551.1" y="739.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="551.1" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="551.1" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="552.0" y="819.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="555.0" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="552.0" y="803.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.0" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="552.0" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="555.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.11%)</title><rect x="552.5" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.11%)</title><rect x="553.8" y="851.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="554.7" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="554.7" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.11%)</title><rect x="555.2" y="867.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.2" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="556.1" y="851.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="559.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="556.1" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="559.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="556.1" y="819.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="559.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.49%)</title><rect x="556.5" y="883.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.38%)</title><rect x="557.0" y="867.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.19%)</title><rect x="559.2" y="851.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.19%)</title><rect x="559.2" y="835.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.08%)</title><rect x="559.7" y="819.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1 samples, 0.04%)</title><rect x="559.7" y="803.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.7" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="560.1" y="803.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="563.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="560.1" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="560.1" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="563.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="560.5" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.5" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="561.0" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="564.0" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="561.0" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="564.0" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="561.0" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="564.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="561.4" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="561.4" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.4" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="561.9" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.9" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.15%)</title><rect x="562.3" y="883.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="562.3" y="867.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="562.3" y="851.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.11%)</title><rect x="562.3" y="835.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.11%)</title><rect x="562.3" y="819.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.3" y="830.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.11%)</title><rect x="562.3" y="803.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="563.7" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.04%)</title><rect x="563.7" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.19%)</title><rect x="564.1" y="883.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.19%)</title><rect x="564.1" y="867.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (75 samples, 2.85%)</title><rect x="566.4" y="899.0" width="33.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="569.4" y="910.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (75 samples, 2.85%)</title><rect x="566.4" y="883.0" width="33.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.4" y="894.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.61%)</title><rect x="567.7" y="867.0" width="7.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="570.7" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="567.7" y="851.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="570.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.08%)</title><rect x="569.1" y="851.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="572.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="569.5" y="835.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.5" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="569.5" y="819.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="572.5" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="569.5" y="803.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="572.5" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.42%)</title><rect x="570.0" y="851.0" width="4.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="573.0" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="572.2" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="575.2" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.19%)</title><rect x="572.7" y="835.0" width="2.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="575.7" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="574.0" y="819.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.0" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="574.0" y="803.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="577.0" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="574.0" y="787.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.0" y="798.0"></text>
</g>
<g>
<title>__recv (54 samples, 2.05%)</title><rect x="574.9" y="867.0" width="24.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="577.9" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.79%)</title><rect x="577.6" y="851.0" width="21.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.6" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (47 samples, 1.79%)</title><rect x="577.6" y="835.0" width="21.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.6" y="846.0">d..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.04%)</title><rect x="578.0" y="819.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="581.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (45 samples, 1.71%)</title><rect x="578.5" y="819.0" width="20.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="581.5" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (44 samples, 1.67%)</title><rect x="578.5" y="803.0" width="19.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="581.5" y="814.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.11%)</title><rect x="579.4" y="787.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="582.4" y="798.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.08%)</title><rect x="580.7" y="787.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.7" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (34 samples, 1.29%)</title><rect x="581.6" y="787.0" width="15.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.6" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (30 samples, 1.14%)</title><rect x="581.6" y="771.0" width="13.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.6" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (30 samples, 1.14%)</title><rect x="581.6" y="755.0" width="13.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.6" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.23%)</title><rect x="583.4" y="739.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="586.4" y="750.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.23%)</title><rect x="583.4" y="723.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="586.4" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="583.4" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="586.4" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.15%)</title><rect x="583.9" y="707.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.9" y="718.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.15%)</title><rect x="583.9" y="691.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.9" y="702.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="585.7" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="588.7" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="586.1" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="589.1" y="750.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="586.6" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.6" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.11%)</title><rect x="587.0" y="739.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="587.0" y="723.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="590.0" y="734.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (2 samples, 0.08%)</title><rect x="587.0" y="707.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.0" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="587.9" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="590.9" y="734.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.08%)</title><rect x="588.3" y="739.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.3" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="588.3" y="723.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="591.3" y="734.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="588.3" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.3" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="588.8" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="591.8" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.38%)</title><rect x="589.2" y="739.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.2" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.38%)</title><rect x="589.2" y="723.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="592.2" y="734.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="590.1" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.1" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.27%)</title><rect x="590.6" y="707.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="593.6" y="718.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.23%)</title><rect x="590.6" y="691.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="593.6" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.23%)</title><rect x="590.6" y="675.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="593.6" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="593.3" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="596.3" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.08%)</title><rect x="593.7" y="739.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="596.7" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="594.6" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.6" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.15%)</title><rect x="595.1" y="771.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="598.1" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.15%)</title><rect x="595.1" y="755.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="598.1" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.15%)</title><rect x="595.1" y="739.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="598.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.11%)</title><rect x="596.9" y="787.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.9" y="798.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.11%)</title><rect x="596.9" y="771.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="599.9" y="782.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.11%)</title><rect x="596.9" y="755.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="599.9" y="766.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.11%)</title><rect x="596.9" y="739.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="599.9" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="598.2" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="601.2" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="598.7" y="851.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="601.7" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="598.7" y="835.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="601.7" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="598.7" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.7" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="599.1" y="867.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.1" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="599.1" y="851.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="602.1" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="599.1" y="835.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="602.1" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=1741] (1,316 samples, 50.00%)</title><rect x="600.0" y="963.0" width="590.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="603.0" y="974.0">[NIO Selector #1 tid=1741]</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.08%)</title><rect x="600.0" y="947.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.0" y="958.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,314 samples, 49.92%)</title><rect x="600.9" y="947.0" width="589.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.9" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.23%)</title><rect x="600.9" y="931.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.23%)</title><rect x="600.9" y="915.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (175 samples, 6.65%)</title><rect x="603.6" y="931.0" width="78.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.6" y="942.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.04%)</title><rect x="604.5" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="604.5" y="899.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (172 samples, 6.53%)</title><rect x="604.9" y="915.0" width="77.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.9" y="926.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.15%)</title><rect x="606.3" y="899.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="609.3" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="607.6" y="883.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="610.6" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="607.6" y="867.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="610.6" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="607.6" y="851.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.6" y="862.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.11%)</title><rect x="608.1" y="899.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="611.1" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="609.0" y="883.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="612.0" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="609.0" y="867.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="612.0" y="878.0"></text>
</g>
<g>
<title>epoll_wait (162 samples, 6.16%)</title><rect x="609.4" y="899.0" width="72.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="612.4" y="910.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (155 samples, 5.89%)</title><rect x="612.6" y="883.0" width="69.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.6" y="894.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.15%)</title><rect x="612.6" y="867.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (151 samples, 5.74%)</title><rect x="614.3" y="867.0" width="67.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="617.3" y="878.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (148 samples, 5.62%)</title><rect x="615.7" y="851.0" width="66.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="618.7" y="862.0">__x64_s..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="615.7" y="835.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="618.7" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (147 samples, 5.59%)</title><rect x="616.1" y="835.0" width="65.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="619.1" y="846.0">do_epol..</text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="616.1" y="819.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="619.1" y="830.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="616.1" y="803.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="619.1" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="616.6" y="803.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="619.6" y="814.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="616.6" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="619.6" y="798.0"></text>
</g>
<g>
<title>ep_poll (144 samples, 5.47%)</title><rect x="617.0" y="819.0" width="64.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.0" y="830.0">ep_poll</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="619.3" y="803.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="622.3" y="814.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.04%)</title><rect x="619.7" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="622.7" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (20 samples, 0.76%)</title><rect x="620.2" y="803.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="623.2" y="814.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="621.5" y="787.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="624.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (15 samples, 0.57%)</title><rect x="622.0" y="787.0" width="6.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="625.0" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (9 samples, 0.34%)</title><rect x="624.2" y="771.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="627.2" y="782.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.23%)</title><rect x="625.1" y="755.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="628.1" y="766.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.11%)</title><rect x="626.0" y="739.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.0" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="627.3" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="630.3" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="627.8" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="630.8" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="628.2" y="771.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.2" y="782.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="628.7" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.7" y="798.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="628.7" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.7" y="782.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.08%)</title><rect x="629.1" y="803.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="632.1" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (115 samples, 4.37%)</title><rect x="630.0" y="803.0" width="51.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="633.0" y="814.0">sched..</text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="630.0" y="787.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.0" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (114 samples, 4.33%)</title><rect x="630.5" y="787.0" width="51.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.5" y="798.0">sched..</text>
</g>
<g>
<title>__schedule (2 samples, 0.08%)</title><rect x="630.5" y="771.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="633.5" y="782.0"></text>
</g>
<g>
<title>schedule (112 samples, 4.26%)</title><rect x="631.4" y="771.0" width="50.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="634.4" y="782.0">sched..</text>
</g>
<g>
<title>__schedule (112 samples, 4.26%)</title><rect x="631.4" y="755.0" width="50.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="634.4" y="766.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (112 samples, 4.26%)</title><rect x="631.4" y="739.0" width="50.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="634.4" y="750.0">finis..</text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="681.6" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,133 samples, 43.05%)</title><rect x="682.0" y="931.0" width="508.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.0" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,133 samples, 43.05%)</title><rect x="682.0" y="915.0" width="508.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.0" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,047 samples, 39.78%)</title><rect x="683.4" y="899.0" width="469.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.4" y="910.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,022 samples, 38.83%)</title><rect x="683.4" y="883.0" width="458.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.4" y="894.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="685.6" y="867.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="688.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,015 samples, 38.56%)</title><rect x="686.1" y="867.0" width="455.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.1" y="878.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1,010 samples, 38.37%)</title><rect x="686.1" y="851.0" width="452.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.1" y="862.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (320 samples, 12.16%)</title><rect x="686.5" y="835.0" width="143.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.5" y="846.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (308 samples, 11.70%)</title><rect x="686.5" y="819.0" width="138.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.5" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.65%)</title><rect x="686.5" y="803.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.5" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="687.9" y="787.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="690.9" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="687.9" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="690.9" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="687.9" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="690.9" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="687.9" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="690.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.49%)</title><rect x="688.3" y="787.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.27%)</title><rect x="688.3" y="771.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="691.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.19%)</title><rect x="689.2" y="755.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.11%)</title><rect x="690.1" y="739.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.23%)</title><rect x="691.5" y="771.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.23%)</title><rect x="691.5" y="755.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.23%)</title><rect x="691.5" y="739.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="694.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="693.3" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.3" y="734.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.04%)</title><rect x="693.7" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (291 samples, 11.06%)</title><rect x="694.1" y="803.0" width="130.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.1" y="814.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (291 samples, 11.06%)</title><rect x="694.1" y="787.0" width="130.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.1" y="798.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (291 samples, 11.06%)</title><rect x="694.1" y="771.0" width="130.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.1" y="782.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (291 samples, 11.06%)</title><rect x="694.1" y="755.0" width="130.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.1" y="766.0">one/nio/net/Nati..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="695.0" y="739.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="698.0" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.11%)</title><rect x="695.5" y="739.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="698.5" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="695.5" y="723.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="698.5" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="695.9" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="698.9" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="696.4" y="723.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="699.4" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="696.4" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="699.4" y="718.0"></text>
</g>
<g>
<title>send (285 samples, 10.83%)</title><rect x="696.8" y="739.0" width="127.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="699.8" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (274 samples, 10.41%)</title><rect x="700.4" y="723.0" width="122.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.4" y="734.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.11%)</title><rect x="700.4" y="707.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="703.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (271 samples, 10.30%)</title><rect x="701.8" y="707.0" width="121.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="704.8" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (261 samples, 9.92%)</title><rect x="703.1" y="691.0" width="117.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.1" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (261 samples, 9.92%)</title><rect x="703.1" y="675.0" width="117.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="706.1" y="686.0">__sys_sendto</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.08%)</title><rect x="703.6" y="659.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="706.6" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (258 samples, 9.80%)</title><rect x="704.5" y="659.0" width="115.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="707.5" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (258 samples, 9.80%)</title><rect x="704.5" y="643.0" width="115.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="707.5" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="704.9" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="707.9" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (255 samples, 9.69%)</title><rect x="705.4" y="627.0" width="114.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="708.4" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.15%)</title><rect x="705.4" y="611.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="707.2" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="710.2" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="707.6" y="611.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.6" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="707.6" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="710.6" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="708.0" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="711.0" y="606.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.08%)</title><rect x="708.5" y="611.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="708.9" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.9" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="708.9" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="711.9" y="590.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="709.4" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.4" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="709.8" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.8" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (244 samples, 9.27%)</title><rect x="710.3" y="611.0" width="109.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.3" y="622.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.19%)</title><rect x="711.6" y="595.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="714.6" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.19%)</title><rect x="711.6" y="579.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="714.6" y="590.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="713.9" y="595.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="714.3" y="595.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="717.3" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.11%)</title><rect x="714.8" y="595.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.8" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.08%)</title><rect x="714.8" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="717.8" y="590.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="715.7" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="718.7" y="590.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="716.1" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="719.1" y="606.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.04%)</title><rect x="716.6" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="719.6" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (22 samples, 0.84%)</title><rect x="717.0" y="595.0" width="9.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="720.0" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.72%)</title><rect x="718.4" y="579.0" width="8.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.4" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.38%)</title><rect x="719.3" y="563.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="722.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.19%)</title><rect x="719.3" y="547.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="722.3" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="720.6" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="723.6" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="721.0" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="724.0" y="542.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.11%)</title><rect x="721.5" y="547.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.5" y="558.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="722.8" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.8" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="723.3" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="726.3" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="723.7" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.7" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.15%)</title><rect x="724.2" y="563.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="727.2" y="574.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="726.0" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="729.0" y="574.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="726.0" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="729.0" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="726.4" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="729.4" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.11%)</title><rect x="726.9" y="595.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="729.9" y="606.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="727.8" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.8" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="728.2" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="731.2" y="606.0"></text>
</g>
<g>
<title>tcp_push (197 samples, 7.48%)</title><rect x="728.7" y="595.0" width="88.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="731.7" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (195 samples, 7.41%)</title><rect x="729.1" y="579.0" width="87.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="732.1" y="590.0">__tcp_push..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="729.1" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="732.1" y="574.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="729.6" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="732.6" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="730.0" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="733.0" y="574.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.04%)</title><rect x="730.5" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="733.5" y="574.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="730.9" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="733.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (190 samples, 7.22%)</title><rect x="731.4" y="563.0" width="85.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="734.4" y="574.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (172 samples, 6.53%)</title><rect x="733.2" y="547.0" width="77.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="736.2" y="558.0">__tcp_tra..</text>
</g>
<g>
<title>ip_queue_xmit (161 samples, 6.12%)</title><rect x="736.7" y="531.0" width="72.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.7" y="542.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (158 samples, 6.00%)</title><rect x="737.2" y="515.0" width="70.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.2" y="526.0">__ip_que..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="738.5" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="741.5" y="510.0"></text>
</g>
<g>
<title>ip_local_out (153 samples, 5.81%)</title><rect x="739.0" y="499.0" width="68.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="742.0" y="510.0">ip_loca..</text>
</g>
<g>
<title>ip_output (151 samples, 5.74%)</title><rect x="739.4" y="483.0" width="67.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.4" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (150 samples, 5.70%)</title><rect x="739.9" y="467.0" width="67.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.9" y="478.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="739.9" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="742.9" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (148 samples, 5.62%)</title><rect x="740.8" y="451.0" width="66.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="743.8" y="462.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (146 samples, 5.55%)</title><rect x="741.7" y="435.0" width="65.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="744.7" y="446.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (128 samples, 4.86%)</title><rect x="743.0" y="419.0" width="57.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="746.0" y="430.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (128 samples, 4.86%)</title><rect x="743.0" y="403.0" width="57.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="746.0" y="414.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (125 samples, 4.75%)</title><rect x="744.4" y="387.0" width="56.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="747.4" y="398.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (124 samples, 4.71%)</title><rect x="744.4" y="371.0" width="55.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="747.4" y="382.0">__sof..</text>
</g>
<g>
<title>net_rx_action (117 samples, 4.45%)</title><rect x="747.1" y="355.0" width="52.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.1" y="366.0">net_r..</text>
</g>
<g>
<title>process_backlog (116 samples, 4.41%)</title><rect x="747.5" y="339.0" width="52.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="750.5" y="350.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (112 samples, 4.26%)</title><rect x="749.3" y="323.0" width="50.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.3" y="334.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="749.3" y="307.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="752.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (111 samples, 4.22%)</title><rect x="749.7" y="307.0" width="49.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="752.7" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="750.2" y="291.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv (107 samples, 4.07%)</title><rect x="751.1" y="291.0" width="48.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.1" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="751.1" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="754.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.08%)</title><rect x="751.5" y="275.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="754.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (104 samples, 3.95%)</title><rect x="752.4" y="275.0" width="46.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.4" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (104 samples, 3.95%)</title><rect x="752.4" y="259.0" width="46.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.4" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (104 samples, 3.95%)</title><rect x="752.4" y="243.0" width="46.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="755.4" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (104 samples, 3.95%)</title><rect x="752.4" y="227.0" width="46.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="755.4" y="238.0">ip_p..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="753.3" y="211.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="756.3" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="753.8" y="211.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="756.8" y="222.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="754.2" y="211.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="757.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (99 samples, 3.76%)</title><rect x="754.7" y="211.0" width="44.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.7" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.23%)</title><rect x="756.5" y="195.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="759.5" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.08%)</title><rect x="758.3" y="179.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="761.3" y="190.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="759.2" y="195.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="762.2" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="759.6" y="195.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="762.6" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.08%)</title><rect x="760.1" y="195.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="763.1" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="760.1" y="179.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="763.1" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="760.5" y="179.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.5" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.08%)</title><rect x="760.9" y="195.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="763.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (83 samples, 3.15%)</title><rect x="761.8" y="195.0" width="37.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="764.8" y="206.0">tcp..</text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.08%)</title><rect x="762.3" y="179.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="765.3" y="190.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="763.2" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.2" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="763.6" y="179.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="766.6" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="764.5" y="179.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="767.5" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="765.0" y="179.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.0" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (75 samples, 2.85%)</title><rect x="765.4" y="179.0" width="33.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="768.4" y="190.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.11%)</title><rect x="767.2" y="163.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="770.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.11%)</title><rect x="767.2" y="147.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="770.2" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="767.2" y="131.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="770.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="767.7" y="131.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.7" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="767.7" y="115.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="770.7" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="767.7" y="99.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="770.7" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.08%)</title><rect x="768.6" y="163.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.6" y="174.0"></text>
</g>
<g>
<title>tcp_ack (36 samples, 1.37%)</title><rect x="769.5" y="163.0" width="16.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="772.5" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="772.6" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.6" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="773.1" y="147.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="776.1" y="158.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="773.5" y="147.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="776.5" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="774.0" y="147.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="777.0" y="158.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="774.4" y="147.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="777.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="774.8" y="147.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="777.8" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (20 samples, 0.76%)</title><rect x="775.3" y="147.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="778.3" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.38%)</title><rect x="778.0" y="131.0" width="4.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.0" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="778.0" y="115.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="781.0" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="778.0" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.0" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="778.0" y="83.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.27%)</title><rect x="778.4" y="115.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="781.4" y="126.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.23%)</title><rect x="778.9" y="99.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.9" y="110.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="779.3" y="83.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="782.3" y="94.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.15%)</title><rect x="779.8" y="83.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="782.8" y="94.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.15%)</title><rect x="779.8" y="67.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.8" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.11%)</title><rect x="780.2" y="51.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="783.2" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.04%)</title><rect x="781.1" y="35.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="784.1" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="781.6" y="115.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="784.6" y="126.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="782.0" y="115.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="785.0" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="782.5" y="131.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="785.5" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="782.9" y="131.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="785.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.04%)</title><rect x="783.8" y="131.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.8" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="784.3" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="787.3" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.08%)</title><rect x="784.7" y="147.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.7" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="785.6" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="788.6" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (27 samples, 1.03%)</title><rect x="786.1" y="163.0" width="12.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="789.1" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 1.03%)</title><rect x="786.1" y="147.0" width="12.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="789.1" y="158.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.08%)</title><rect x="786.1" y="131.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (25 samples, 0.95%)</title><rect x="787.0" y="131.0" width="11.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="790.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.95%)</title><rect x="787.0" y="115.0" width="11.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="790.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (25 samples, 0.95%)</title><rect x="787.0" y="99.0" width="11.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="790.0" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="798.2" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="801.2" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="798.6" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="801.6" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="799.1" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="802.1" y="302.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="799.5" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="802.5" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="800.0" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="803.0" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.57%)</title><rect x="800.4" y="419.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="803.4" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.53%)</title><rect x="800.4" y="403.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="803.4" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="801.7" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="804.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.23%)</title><rect x="802.2" y="387.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="805.2" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="802.2" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="805.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.11%)</title><rect x="802.6" y="371.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="805.6" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="802.6" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="805.6" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="803.1" y="355.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="806.1" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.08%)</title><rect x="803.1" y="339.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="806.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.08%)</title><rect x="803.1" y="323.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.1" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.08%)</title><rect x="804.0" y="371.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="807.0" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="804.9" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="807.9" y="398.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="805.3" y="387.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="808.3" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.08%)</title><rect x="805.8" y="387.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="808.8" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="805.8" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="808.8" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="805.8" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="808.8" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="806.2" y="371.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="809.2" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="806.7" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="809.7" y="414.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="807.1" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.1" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="807.6" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="810.6" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="808.0" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="811.0" y="526.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.04%)</title><rect x="808.5" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="811.5" y="526.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="808.9" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="811.9" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="809.4" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="812.4" y="542.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="809.8" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="812.8" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="810.3" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="813.3" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="810.7" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.7" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.23%)</title><rect x="811.2" y="547.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="814.2" y="558.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="811.2" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.2" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="811.6" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="814.6" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.15%)</title><rect x="812.1" y="531.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="815.1" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="813.0" y="515.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="816.0" y="526.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="813.0" y="499.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="816.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="813.0" y="483.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="816.0" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="813.9" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="816.9" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.11%)</title><rect x="814.3" y="547.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.3" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="815.6" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.6" y="558.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="815.6" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="818.6" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="816.1" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="819.1" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="816.5" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="819.5" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.23%)</title><rect x="817.0" y="595.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.0" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.11%)</title><rect x="817.0" y="579.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="820.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.11%)</title><rect x="818.3" y="579.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="821.3" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.08%)</title><rect x="818.3" y="563.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="821.3" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="819.2" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.04%)</title><rect x="819.7" y="627.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="822.7" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.27%)</title><rect x="820.1" y="691.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="823.1" y="702.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.27%)</title><rect x="820.1" y="675.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="823.1" y="686.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.27%)</title><rect x="820.1" y="659.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="823.1" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.27%)</title><rect x="820.1" y="643.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="823.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.11%)</title><rect x="823.3" y="723.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="826.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.11%)</title><rect x="823.3" y="707.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="826.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.11%)</title><rect x="823.3" y="691.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="826.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.46%)</title><rect x="824.6" y="819.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.46%)</title><rect x="824.6" y="803.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="827.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.46%)</title><rect x="824.6" y="787.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="827.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="824.6" y="771.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="827.6" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="824.6" y="755.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="827.6" y="766.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.11%)</title><rect x="825.5" y="771.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="828.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="826.4" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="829.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="826.4" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="829.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="826.4" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="829.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.11%)</title><rect x="826.9" y="771.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.11%)</title><rect x="826.9" y="755.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.9" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.11%)</title><rect x="826.9" y="739.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.9" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.11%)</title><rect x="826.9" y="723.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="827.3" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.15%)</title><rect x="828.2" y="771.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="829.5" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.5" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="829.5" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.38%)</title><rect x="830.0" y="835.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.23%)</title><rect x="830.0" y="819.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.11%)</title><rect x="830.0" y="803.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.11%)</title><rect x="830.0" y="787.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="833.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.11%)</title><rect x="830.0" y="771.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.0" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.11%)</title><rect x="830.0" y="755.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="833.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.11%)</title><rect x="831.3" y="803.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.11%)</title><rect x="831.3" y="787.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.11%)</title><rect x="831.3" y="771.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.11%)</title><rect x="831.3" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="832.2" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="832.2" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="835.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="832.2" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="835.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.15%)</title><rect x="832.7" y="819.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.get (679 samples, 25.80%)</title><rect x="834.5" y="835.0" width="304.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.5" y="846.0">ru/mail/polis/service/ivanovandrey/Servic..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.11%)</title><rect x="834.9" y="819.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (674 samples, 25.61%)</title><rect x="836.3" y="819.0" width="302.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.3" y="830.0">ru/mail/polis/dao/RocksDBImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (669 samples, 25.42%)</title><rect x="836.3" y="803.0" width="299.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.3" y="814.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (669 samples, 25.42%)</title><rect x="836.3" y="787.0" width="299.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.3" y="798.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (644 samples, 24.47%)</title><rect x="836.7" y="771.0" width="288.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="839.7" y="782.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (2 samples, 0.08%)</title><rect x="837.2" y="755.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="840.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="838.1" y="755.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="841.1" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.08%)</title><rect x="838.5" y="755.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="841.5" y="766.0"></text>
</g>
<g>
<title>cfree (5 samples, 0.19%)</title><rect x="839.4" y="755.0" width="2.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="842.4" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.15%)</title><rect x="841.6" y="755.0" width="1.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="844.6" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="843.4" y="755.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="846.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (7 samples, 0.27%)</title><rect x="843.9" y="755.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="846.9" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="846.6" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="849.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="846.6" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="846.6" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="849.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="847.0" y="755.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="850.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="847.5" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="850.5" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (617 samples, 23.44%)</title><rect x="847.9" y="755.0" width="276.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="850.9" y="766.0">rocksdb_get_helper(JNIEnv_*, rocksdb:..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="850.2" y="739.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="853.2" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.08%)</title><rect x="850.6" y="739.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="853.6" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.23%)</title><rect x="851.5" y="739.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="854.5" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="853.8" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="856.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.23%)</title><rect x="854.2" y="739.0" width="2.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="857.2" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.11%)</title><rect x="854.2" y="723.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="857.2" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.08%)</title><rect x="855.5" y="723.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="858.5" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="856.4" y="723.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="859.4" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="856.9" y="739.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="859.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (563 samples, 21.39%)</title><rect x="857.8" y="739.0" width="252.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="860.8" y="750.0">rocksdb::DB::Get(rocksdb::ReadOpti..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (4 samples, 0.15%)</title><rect x="858.2" y="723.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="861.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (554 samples, 21.05%)</title><rect x="860.0" y="723.0" width="248.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="863.0" y="734.0">rocksdb::DB::Get(rocksdb::ReadOpt..</text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.04%)</title><rect x="860.9" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="863.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (8 samples, 0.30%)</title><rect x="861.4" y="707.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="864.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetHash(rocksdb::Cache::Handle*) const (1 samples, 0.04%)</title><rect x="861.8" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="864.8" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="861.8" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="864.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="861.8" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="864.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="861.8" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (4 samples, 0.15%)</title><rect x="862.3" y="691.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="865.3" y="702.0"></text>
</g>
<g>
<title>malloc_usable_size (2 samples, 0.08%)</title><rect x="862.3" y="675.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="865.3" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="862.7" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="865.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="862.7" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="865.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="862.7" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Insert(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="863.2" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="866.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="863.6" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="866.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (2 samples, 0.08%)</title><rect x="864.1" y="691.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="867.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (537 samples, 20.40%)</title><rect x="865.0" y="707.0" width="240.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="868.0" y="718.0">rocksdb::DBImpl::Get(rocksdb::Re..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (531 samples, 20.17%)</title><rect x="865.0" y="691.0" width="238.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="868.0" y="702.0">rocksdb::DBImpl::Get(rocksdb::Re..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="865.0" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="868.0" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="865.4" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="868.4" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.23%)</title><rect x="865.9" y="675.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="868.9" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="868.5" y="675.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="871.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.04%)</title><rect x="869.0" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="872.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (1 samples, 0.04%)</title><rect x="869.4" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="872.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.04%)</title><rect x="869.9" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="872.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="870.3" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="873.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (5 samples, 0.19%)</title><rect x="870.8" y="675.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="873.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (492 samples, 18.69%)</title><rect x="873.0" y="675.0" width="220.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="876.0" y="686.0">rocksdb::DBImpl::GetImpl(rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="881.1" y="659.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="884.1" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.11%)</title><rect x="881.6" y="659.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="884.6" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.30%)</title><rect x="882.9" y="659.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="885.9" y="670.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="886.5" y="659.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="889.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (8 samples, 0.30%)</title><rect x="886.9" y="659.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="889.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.08%)</title><rect x="888.3" y="643.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="891.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (1 samples, 0.04%)</title><rect x="889.2" y="643.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="892.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="889.6" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="892.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="890.1" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="893.1" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="890.1" y="627.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="893.1" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="890.1" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="893.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="890.5" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="893.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="891.0" y="659.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="894.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="891.0" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="894.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="891.0" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="894.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="891.0" y="611.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="894.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="891.4" y="643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="894.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.15%)</title><rect x="891.9" y="659.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="894.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.04%)</title><rect x="893.7" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (2 samples, 0.08%)</title><rect x="894.1" y="659.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="897.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (133 samples, 5.05%)</title><rect x="895.0" y="659.0" width="59.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.0" y="670.0">rocksd..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="896.3" y="643.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="899.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (129 samples, 4.90%)</title><rect x="896.8" y="643.0" width="57.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="899.8" y="654.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (129 samples, 4.90%)</title><rect x="896.8" y="627.0" width="57.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="899.8" y="638.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="897.2" y="611.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="900.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (126 samples, 4.79%)</title><rect x="897.7" y="611.0" width="56.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="900.7" y="622.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (8 samples, 0.30%)</title><rect x="913.8" y="595.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="916.8" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (10 samples, 0.38%)</title><rect x="917.4" y="595.0" width="4.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="920.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="921.5" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.5" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="921.5" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.5" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="921.5" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="924.5" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (15 samples, 0.57%)</title><rect x="921.9" y="595.0" width="6.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="924.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="928.6" y="595.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="931.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (53 samples, 2.01%)</title><rect x="929.1" y="595.0" width="23.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="932.1" y="606.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (3 samples, 0.11%)</title><rect x="935.3" y="579.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="938.3" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (19 samples, 0.72%)</title><rect x="936.7" y="579.0" width="8.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="939.7" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="944.3" y="563.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="944.3" y="547.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="947.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="944.3" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.3" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="945.2" y="579.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="948.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.46%)</title><rect x="946.1" y="579.0" width="5.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="949.1" y="590.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="951.5" y="579.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="954.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="951.9" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="954.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="951.9" y="563.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="954.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="951.9" y="547.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="954.9" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.11%)</title><rect x="952.8" y="595.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="955.8" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.11%)</title><rect x="952.8" y="579.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="955.8" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.11%)</title><rect x="952.8" y="563.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="954.2" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="957.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (5 samples, 0.19%)</title><rect x="954.6" y="659.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="957.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (3 samples, 0.11%)</title><rect x="956.9" y="659.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="959.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="957.8" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="960.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="957.8" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="960.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="957.8" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="960.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="958.2" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="961.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.11%)</title><rect x="958.7" y="659.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="961.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (1 samples, 0.04%)</title><rect x="960.0" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="963.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.08%)</title><rect x="960.5" y="659.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="963.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="961.4" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="964.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="961.8" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="964.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatchNano::StopWatchNano(rocksdb::Env*, bool) (3 samples, 0.11%)</title><rect x="962.2" y="659.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="965.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (1 samples, 0.04%)</title><rect x="963.6" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="966.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.04%)</title><rect x="964.0" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="967.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (285 samples, 10.83%)</title><rect x="964.5" y="659.0" width="127.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="967.5" y="670.0">rocksdb::Version..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="968.5" y="643.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="971.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*, bool*, rocksdb::MergeContext*, bool, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*, unsigned long) (3 samples, 0.11%)</title><rect x="969.0" y="643.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="972.0" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="969.9" y="627.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="972.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.08%)</title><rect x="970.3" y="643.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="973.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() [clone .plt] (1 samples, 0.04%)</title><rect x="971.2" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="974.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="971.7" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="974.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="971.7" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="974.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="971.7" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="974.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="971.7" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="974.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, rocksdb::HistogramImpl*, bool, int, unsigned long) (268 samples, 10.18%)</title><rect x="972.1" y="643.0" width="120.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="975.1" y="654.0">rocksdb::TableC..</text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.04%)</title><rect x="973.0" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="976.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, rocksdb::SliceTransform const*, bool) (247 samples, 9.38%)</title><rect x="973.5" y="627.0" width="110.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="976.5" y="638.0">rocksdb::Bloc..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (3 samples, 0.11%)</title><rect x="976.1" y="611.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="979.1" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="977.5" y="611.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="980.5" y="622.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="977.9" y="611.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="980.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="978.8" y="611.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="981.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (3 samples, 0.11%)</title><rect x="980.2" y="611.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="983.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (2 samples, 0.08%)</title><rect x="980.2" y="595.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="983.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="981.1" y="595.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="984.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (3 samples, 0.11%)</title><rect x="981.5" y="611.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="984.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.04%)</title><rect x="982.9" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="985.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status() const (1 samples, 0.04%)</title><rect x="983.3" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="986.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="983.8" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="986.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.08%)</title><rect x="984.2" y="611.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="987.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (58 samples, 2.20%)</title><rect x="985.1" y="611.0" width="26.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="988.1" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="987.4" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="990.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.08%)</title><rect x="987.8" y="595.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="990.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (2 samples, 0.08%)</title><rect x="987.8" y="579.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="990.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (3 samples, 0.11%)</title><rect x="988.7" y="595.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="991.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (47 samples, 1.79%)</title><rect x="990.0" y="595.0" width="21.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="993.0" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.04%)</title><rect x="990.9" y="579.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="993.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="991.4" y="579.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="994.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (40 samples, 1.52%)</title><rect x="991.8" y="579.0" width="18.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="994.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.04%)</title><rect x="992.7" y="563.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="995.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.04%)</title><rect x="993.2" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="996.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::Value(rocksdb::Cache::Handle*) (2 samples, 0.08%)</title><rect x="993.6" y="563.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="996.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (34 samples, 1.29%)</title><rect x="994.5" y="563.0" width="15.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (31 samples, 1.18%)</title><rect x="995.0" y="547.0" width="13.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.0" y="558.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (5 samples, 0.19%)</title><rect x="995.0" y="531.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="998.0" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="997.2" y="531.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1000.2" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="997.7" y="531.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1000.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.04%)</title><rect x="998.1" y="531.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1001.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="998.1" y="515.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1001.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (1 samples, 0.04%)</title><rect x="998.6" y="531.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1001.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (16 samples, 0.61%)</title><rect x="999.0" y="531.0" width="7.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.0" y="542.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="999.0" y="515.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1002.0" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="999.0" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1002.0" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="999.0" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1002.0" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="999.0" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1002.0" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.19%)</title><rect x="999.5" y="515.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1002.5" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1000.8" y="499.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1003.8" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1000.8" y="483.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1003.8" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1000.8" y="467.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1003.8" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.04%)</title><rect x="1001.7" y="515.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1004.7" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1002.2" y="515.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1005.2" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.04%)</title><rect x="1002.6" y="515.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1005.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1002.6" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1005.6" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1002.6" y="483.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1005.6" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1002.6" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1005.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::LRU_Remove(rocksdb::LRUHandle*) (2 samples, 0.08%)</title><rect x="1003.0" y="515.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1006.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) [clone .plt] (1 samples, 0.04%)</title><rect x="1003.9" y="515.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1006.9" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1003.9" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1006.9" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1003.9" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1006.9" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1003.9" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1006.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.15%)</title><rect x="1004.4" y="515.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1007.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (4 samples, 0.15%)</title><rect x="1004.4" y="499.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1007.4" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1005.7" y="483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1008.7" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1005.7" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.7" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1005.7" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1008.7" y="462.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.08%)</title><rect x="1006.2" y="531.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1009.2" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1006.6" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1009.6" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1006.6" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.6" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1006.6" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1009.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.11%)</title><rect x="1007.1" y="531.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1010.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="1008.4" y="531.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1011.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (2 samples, 0.08%)</title><rect x="1008.9" y="547.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1011.9" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1009.3" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.3" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1009.3" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.3" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1009.3" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1012.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.11%)</title><rect x="1009.8" y="579.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1012.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1010.7" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1013.7" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1010.7" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1013.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1010.7" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (89 samples, 3.38%)</title><rect x="1011.1" y="611.0" width="39.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1014.1" y="622.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="1014.3" y="595.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1017.3" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="1014.7" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1017.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1015.6" y="595.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1018.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (66 samples, 2.51%)</title><rect x="1016.5" y="595.0" width="29.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1019.5" y="606.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (5 samples, 0.19%)</title><rect x="1017.4" y="579.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1020.4" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.15%)</title><rect x="1019.6" y="579.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1022.6" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.11%)</title><rect x="1021.4" y="579.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1024.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.27%)</title><rect x="1022.8" y="579.0" width="3.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1025.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1025.0" y="563.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1025.0" y="547.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1028.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1025.0" y="531.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1028.0" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="1025.9" y="579.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1028.9" y="590.0"></text>
</g>
<g>
<title>memcpy (3 samples, 0.11%)</title><rect x="1026.4" y="579.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1029.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1027.3" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1027.3" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1030.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1027.3" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.3" y="542.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.04%)</title><rect x="1027.7" y="579.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1030.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (14 samples, 0.53%)</title><rect x="1028.2" y="579.0" width="6.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1031.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (26 samples, 0.99%)</title><rect x="1034.4" y="579.0" width="11.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1037.4" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (4 samples, 0.15%)</title><rect x="1037.1" y="563.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1040.1" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 0.38%)</title><rect x="1038.9" y="563.0" width="4.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1041.9" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.15%)</title><rect x="1043.4" y="563.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1046.4" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1044.7" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1047.7" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1044.7" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1047.7" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1044.7" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1047.7" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="1045.2" y="563.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1048.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1045.2" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1048.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1045.2" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1048.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1045.2" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1048.2" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1045.6" y="563.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1048.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1045.6" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1048.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1045.6" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1048.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.08%)</title><rect x="1046.1" y="595.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 0.34%)</title><rect x="1047.0" y="595.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1050.0" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.04%)</title><rect x="1048.3" y="579.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1051.3" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1048.8" y="579.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1051.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.11%)</title><rect x="1049.2" y="579.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1052.2" y="590.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="1050.6" y="579.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1053.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="1051.0" y="611.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (4 samples, 0.15%)</title><rect x="1051.5" y="611.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1054.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::DelegateCleanupsTo(rocksdb::Cleanable*) (2 samples, 0.08%)</title><rect x="1052.4" y="595.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1055.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.04%)</title><rect x="1052.8" y="579.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1055.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (65 samples, 2.47%)</title><rect x="1053.3" y="611.0" width="29.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1056.3" y="622.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (2 samples, 0.08%)</title><rect x="1062.2" y="595.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1065.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.30%)</title><rect x="1063.1" y="595.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1066.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1065.8" y="579.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1068.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1065.8" y="563.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1068.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1065.8" y="547.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1068.8" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (6 samples, 0.23%)</title><rect x="1066.7" y="595.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1069.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.30%)</title><rect x="1069.4" y="595.0" width="3.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1072.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1072.5" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1075.5" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1072.5" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.5" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1072.5" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1075.5" y="558.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.08%)</title><rect x="1073.0" y="595.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1076.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (2 samples, 0.08%)</title><rect x="1073.9" y="595.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) [clone .plt] (1 samples, 0.04%)</title><rect x="1074.8" y="595.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1077.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (3 samples, 0.11%)</title><rect x="1075.2" y="595.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1078.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="1075.2" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1078.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (2 samples, 0.08%)</title><rect x="1075.7" y="579.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1078.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (10 samples, 0.38%)</title><rect x="1076.6" y="595.0" width="4.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1079.6" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="1077.9" y="579.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1080.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.19%)</title><rect x="1078.8" y="579.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1081.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.11%)</title><rect x="1081.1" y="595.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1084.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.11%)</title><rect x="1081.1" y="579.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1084.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.11%)</title><rect x="1081.1" y="563.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1084.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.15%)</title><rect x="1082.4" y="611.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1085.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (2 samples, 0.08%)</title><rect x="1084.2" y="627.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (2 samples, 0.08%)</title><rect x="1085.1" y="627.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1088.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.08%)</title><rect x="1086.0" y="627.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (1 samples, 0.04%)</title><rect x="1086.9" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1089.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.08%)</title><rect x="1087.3" y="627.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1090.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::value() const (2 samples, 0.08%)</title><rect x="1088.2" y="627.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::~DataBlockIter() (1 samples, 0.04%)</title><rect x="1089.1" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::SaveValue(rocksdb::ParsedInternalKey const&amp;, rocksdb::Slice const&amp;, bool*, rocksdb::Cleanable*) (1 samples, 0.04%)</title><rect x="1089.6" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1092.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1090.0" y="627.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1093.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() [clone .plt] (2 samples, 0.08%)</title><rect x="1090.5" y="627.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1093.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1091.4" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1094.4" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1091.8" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1094.8" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1091.8" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1094.8" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1091.8" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1094.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::Version::IsFilterSkipped(int, bool) (3 samples, 0.11%)</title><rect x="1092.3" y="659.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1095.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1093.2" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1096.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1093.2" y="627.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1096.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1093.2" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1096.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="1093.6" y="675.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1096.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.11%)</title><rect x="1094.5" y="675.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1097.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="1095.9" y="675.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1098.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.04%)</title><rect x="1096.7" y="675.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (8 samples, 0.30%)</title><rect x="1097.2" y="675.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1100.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1099.9" y="659.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1102.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1099.9" y="643.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1102.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1099.9" y="627.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="1100.8" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1103.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (4 samples, 0.15%)</title><rect x="1101.2" y="675.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1104.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1102.6" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1105.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1102.6" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1102.6" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1105.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (6 samples, 0.23%)</title><rect x="1103.0" y="691.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (4 samples, 0.15%)</title><rect x="1105.7" y="707.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1108.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="1107.5" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1110.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.04%)</title><rect x="1108.0" y="707.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1111.0" y="718.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1108.4" y="723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.4" y="734.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.11%)</title><rect x="1108.9" y="723.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1111.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.11%)</title><rect x="1110.2" y="739.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1113.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (29 samples, 1.10%)</title><rect x="1111.5" y="739.0" width="13.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1114.5" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.11%)</title><rect x="1112.0" y="723.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1115.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1112.9" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1115.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1112.9" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1115.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1112.9" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.9" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1113.3" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1116.3" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="1113.8" y="723.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1116.8" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="1114.7" y="723.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1117.7" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (18 samples, 0.68%)</title><rect x="1115.6" y="723.0" width="8.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1118.6" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.08%)</title><rect x="1117.4" y="707.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.4" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.46%)</title><rect x="1118.3" y="707.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.30%)</title><rect x="1120.1" y="691.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.19%)</title><rect x="1120.1" y="675.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1123.1" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1120.5" y="659.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1123.5" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="1121.0" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.0" y="670.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.08%)</title><rect x="1121.4" y="659.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.4" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.08%)</title><rect x="1122.3" y="675.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1125.3" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1123.2" y="675.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1126.2" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="1123.6" y="723.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1126.6" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="1123.6" y="707.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1126.6" y="718.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.08%)</title><rect x="1124.5" y="755.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="1125.4" y="771.0" width="3.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1128.4" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="1125.4" y="755.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1128.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1125.9" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1125.9" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1128.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1125.9" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1128.9" y="718.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (5 samples, 0.19%)</title><rect x="1126.3" y="755.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1128.1" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1131.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1128.1" y="723.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1131.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1128.1" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1131.1" y="718.0"></text>
</g>
<g>
<title>__libc_malloc (6 samples, 0.23%)</title><rect x="1128.6" y="771.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1131.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.08%)</title><rect x="1131.3" y="771.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (2 samples, 0.08%)</title><rect x="1132.2" y="771.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1132.6" y="755.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1135.6" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1132.6" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1135.6" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1132.6" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1135.6" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (5 samples, 0.19%)</title><rect x="1133.1" y="771.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1136.1" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.04%)</title><rect x="1135.3" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.3" y="782.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1135.8" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (5 samples, 0.19%)</title><rect x="1136.2" y="803.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (5 samples, 0.19%)</title><rect x="1136.2" y="787.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="1136.6" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.6" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="1136.6" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.6" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.04%)</title><rect x="1136.6" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.6" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.11%)</title><rect x="1137.1" y="771.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1137.1" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.11%)</title><rect x="1137.1" y="739.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1140.1" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1138.0" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="1138.0" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.strToByteBuffer (1 samples, 0.04%)</title><rect x="1138.4" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="1138.4" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="1138.4" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="1138.9" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.15%)</title><rect x="1139.3" y="851.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1142.3" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="1140.2" y="835.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1140.2" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1140.7" y="819.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="1140.7" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="1140.7" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="1141.1" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15 samples, 0.57%)</title><rect x="1141.6" y="883.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.34%)</title><rect x="1142.0" y="867.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.19%)</title><rect x="1143.8" y="851.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1146.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.19%)</title><rect x="1143.8" y="835.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="1146.1" y="867.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="1146.1" y="851.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1147.0" y="835.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1150.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1147.0" y="819.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1150.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1147.0" y="803.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="1147.9" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.9" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1147.9" y="851.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1147.9" y="835.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1147.9" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1150.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.15%)</title><rect x="1148.3" y="883.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.3" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="1148.3" y="867.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.15%)</title><rect x="1148.3" y="851.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.15%)</title><rect x="1148.3" y="835.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (4 samples, 0.15%)</title><rect x="1148.3" y="819.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1150.1" y="883.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1150.1" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1150.1" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1150.1" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.1" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1150.1" y="819.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1153.1" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1150.1" y="803.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1153.1" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1150.1" y="787.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="1150.5" y="883.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="1150.5" y="867.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.5" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1152.3" y="883.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.3" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1152.3" y="867.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1155.3" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1152.3" y="851.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (83 samples, 3.15%)</title><rect x="1152.8" y="899.0" width="37.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.8" y="910.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (83 samples, 3.15%)</title><rect x="1152.8" y="883.0" width="37.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.8" y="894.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1154.1" y="867.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1157.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.84%)</title><rect x="1154.6" y="867.0" width="9.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1157.6" y="878.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="1154.6" y="851.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1157.6" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.15%)</title><rect x="1155.5" y="851.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.5" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.08%)</title><rect x="1157.3" y="851.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1160.3" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="1158.2" y="851.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1161.2" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1158.2" y="835.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1158.2" y="819.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1158.2" y="803.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.2" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.38%)</title><rect x="1159.1" y="851.0" width="4.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1162.1" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="1159.1" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.1" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.11%)</title><rect x="1159.5" y="835.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.5" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.15%)</title><rect x="1160.9" y="835.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1163.9" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1162.7" y="835.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1165.7" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1162.7" y="819.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1165.7" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1162.7" y="803.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1165.7" y="814.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.04%)</title><rect x="1163.5" y="851.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1166.5" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="1164.0" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.0" y="862.0"></text>
</g>
<g>
<title>__recv (57 samples, 2.17%)</title><rect x="1164.4" y="867.0" width="25.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1167.4" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 1.98%)</title><rect x="1164.4" y="851.0" width="23.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1167.4" y="862.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.08%)</title><rect x="1164.4" y="835.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1167.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.90%)</title><rect x="1165.3" y="835.0" width="22.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1168.3" y="846.0">d..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.04%)</title><rect x="1168.0" y="819.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1171.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (43 samples, 1.63%)</title><rect x="1168.5" y="819.0" width="19.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.5" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (43 samples, 1.63%)</title><rect x="1168.5" y="803.0" width="19.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1171.5" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (37 samples, 1.41%)</title><rect x="1169.4" y="787.0" width="16.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.4" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="1169.4" y="771.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1172.4" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (31 samples, 1.18%)</title><rect x="1169.8" y="771.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1172.8" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 1.18%)</title><rect x="1169.8" y="755.0" width="13.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.8" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.15%)</title><rect x="1171.6" y="739.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1174.6" y="750.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.08%)</title><rect x="1172.1" y="723.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1175.1" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1173.0" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1176.0" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="1173.0" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.11%)</title><rect x="1173.4" y="739.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.4" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.19%)</title><rect x="1174.8" y="739.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1177.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.19%)</title><rect x="1174.8" y="723.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.8" y="734.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (5 samples, 0.19%)</title><rect x="1174.8" y="707.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1177.8" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.42%)</title><rect x="1177.0" y="739.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.0" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.38%)</title><rect x="1177.4" y="723.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.4" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.30%)</title><rect x="1178.3" y="707.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.3" y="718.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.19%)</title><rect x="1178.3" y="691.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.3" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.19%)</title><rect x="1178.3" y="675.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1181.3" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1180.6" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.6" y="702.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.08%)</title><rect x="1181.0" y="691.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.0" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.08%)</title><rect x="1181.0" y="675.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.0" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="1181.9" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.9" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.11%)</title><rect x="1182.4" y="739.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.11%)</title><rect x="1182.4" y="723.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1182.4" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.08%)</title><rect x="1182.8" y="707.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.8" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.19%)</title><rect x="1183.7" y="771.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.7" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1183.7" y="755.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.7" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.15%)</title><rect x="1184.2" y="755.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1187.2" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.15%)</title><rect x="1184.2" y="739.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.2" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.15%)</title><rect x="1186.0" y="787.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1189.0" y="798.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="1186.0" y="771.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="1186.0" y="755.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1189.0" y="766.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="1186.0" y="739.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1189.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="1186.9" y="771.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.9" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.19%)</title><rect x="1187.8" y="851.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.19%)</title><rect x="1187.8" y="835.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.19%)</title><rect x="1187.8" y="819.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.8" y="830.0"></text>
</g>
</g>
</svg>
