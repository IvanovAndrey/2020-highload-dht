<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="310" onload="init(evt)" viewBox="0 0 1200 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="293"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="293"> </text>
<g id="frames">
<g>
<title>all (2,052 samples, 100.00%)</title><rect x="10.0" y="259.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="270.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 #0 tid=3352] (7 samples, 0.34%)</title><rect x="10.0" y="243.0" width="4.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (7 samples, 0.34%)</title><rect x="10.0" y="227.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (7 samples, 0.34%)</title><rect x="10.0" y="211.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (7 samples, 0.34%)</title><rect x="10.0" y="195.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (7 samples, 0.34%)</title><rect x="10.0" y="179.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.05%)</title><rect x="10.0" y="163.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.29%)</title><rect x="10.6" y="163.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.6" y="174.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=3350] (548 samples, 26.71%)</title><rect x="14.0" y="243.0" width="315.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="17.0" y="254.0">[NIO Selector #0 tid=3350]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (548 samples, 26.71%)</title><rect x="14.0" y="227.0" width="315.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.0" y="238.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (28 samples, 1.36%)</title><rect x="14.0" y="211.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.0" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (28 samples, 1.36%)</title><rect x="14.0" y="195.0" width="16.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.0" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (520 samples, 25.34%)</title><rect x="30.1" y="211.0" width="299.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.1" y="222.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (520 samples, 25.34%)</title><rect x="30.1" y="195.0" width="299.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.1" y="206.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (520 samples, 25.34%)</title><rect x="30.1" y="179.0" width="299.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.1" y="190.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (88 samples, 4.29%)</title><rect x="30.1" y="163.0" width="50.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.1" y="174.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (88 samples, 4.29%)</title><rect x="30.1" y="147.0" width="50.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.1" y="158.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (58 samples, 2.83%)</title><rect x="30.1" y="131.0" width="33.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.1" y="142.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (37 samples, 1.80%)</title><rect x="30.1" y="115.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.1" y="126.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 1.80%)</title><rect x="30.1" y="99.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.1" y="110.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 1.80%)</title><rect x="30.1" y="83.0" width="21.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.1" y="94.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 1.80%)</title><rect x="30.1" y="67.0" width="21.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.1" y="78.0">j..</text>
</g>
<g>
<title>java.lang.String (18 samples, 0.88%)</title><rect x="30.1" y="51.0" width="10.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="33.1" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.93%)</title><rect x="40.5" y="51.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.5" y="62.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.93%)</title><rect x="40.5" y="35.0" width="10.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="43.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.put (21 samples, 1.02%)</title><rect x="51.4" y="115.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.4" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 1.02%)</title><rect x="51.4" y="99.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.4" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 1.02%)</title><rect x="51.4" y="83.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.get$Lambda (21 samples, 1.02%)</title><rect x="51.4" y="67.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.4" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.AsyncServiceImpl$$Lambda$68 (21 samples, 1.02%)</title><rect x="51.4" y="51.0" width="12.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="54.4" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (30 samples, 1.46%)</title><rect x="63.5" y="131.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 1.46%)</title><rect x="63.5" y="115.0" width="17.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 1.46%)</title><rect x="63.5" y="99.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="66.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.78%)</title><rect x="63.5" y="83.0" width="9.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="66.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.68%)</title><rect x="72.7" y="83.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.7" y="94.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.68%)</title><rect x="72.7" y="67.0" width="8.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="75.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (213 samples, 10.38%)</title><rect x="80.7" y="163.0" width="122.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="83.7" y="174.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one.nio.http.Request (32 samples, 1.56%)</title><rect x="80.7" y="147.0" width="18.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="83.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (67 samples, 3.27%)</title><rect x="99.1" y="147.0" width="38.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.1" y="158.0">one..</text>
</g>
<g>
<title>java.lang.String[] (67 samples, 3.27%)</title><rect x="99.1" y="131.0" width="38.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="102.1" y="142.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 5.56%)</title><rect x="137.7" y="147.0" width="65.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.7" y="158.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (114 samples, 5.56%)</title><rect x="137.7" y="131.0" width="65.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.7" y="142.0">one/nio..</text>
</g>
<g>
<title>char[] (65 samples, 3.17%)</title><rect x="137.7" y="115.0" width="37.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="140.7" y="126.0">cha..</text>
</g>
<g>
<title>java.lang.String (24 samples, 1.17%)</title><rect x="175.0" y="115.0" width="13.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="178.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 1.22%)</title><rect x="188.8" y="115.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 1.22%)</title><rect x="188.8" y="99.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 1.22%)</title><rect x="188.8" y="83.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.8" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 1.22%)</title><rect x="188.8" y="67.0" width="14.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="191.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (21 samples, 1.02%)</title><rect x="203.2" y="163.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.2" y="174.0"></text>
</g>
<g>
<title>byte[] (21 samples, 1.02%)</title><rect x="203.2" y="147.0" width="12.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="206.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (44 samples, 2.14%)</title><rect x="215.3" y="163.0" width="25.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.3" y="174.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (44 samples, 2.14%)</title><rect x="215.3" y="147.0" width="25.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.3" y="158.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 2.14%)</title><rect x="215.3" y="131.0" width="25.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.3" y="142.0">j..</text>
</g>
<g>
<title>java.lang.String (25 samples, 1.22%)</title><rect x="215.3" y="115.0" width="14.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="218.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.93%)</title><rect x="229.7" y="115.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.7" y="126.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.93%)</title><rect x="229.7" y="99.0" width="10.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="232.7" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (154 samples, 7.50%)</title><rect x="240.6" y="163.0" width="88.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="243.6" y="174.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (154 samples, 7.50%)</title><rect x="240.6" y="147.0" width="88.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="243.6" y="158.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (77 samples, 3.75%)</title><rect x="240.6" y="131.0" width="44.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="243.6" y="142.0">char[]</text>
</g>
<g>
<title>java.lang.String (21 samples, 1.02%)</title><rect x="284.9" y="131.0" width="12.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="287.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 2.73%)</title><rect x="296.9" y="131.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.9" y="142.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 2.73%)</title><rect x="296.9" y="115.0" width="32.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.9" y="126.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (56 samples, 2.73%)</title><rect x="296.9" y="99.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.9" y="110.0">ja..</text>
</g>
<g>
<title>byte[] (56 samples, 2.73%)</title><rect x="296.9" y="83.0" width="32.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="299.9" y="94.0">by..</text>
</g>
<g>
<title>[NIO Selector #1 tid=3351] (558 samples, 27.19%)</title><rect x="329.2" y="243.0" width="320.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="332.2" y="254.0">[NIO Selector #1 tid=3351]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (558 samples, 27.19%)</title><rect x="329.2" y="227.0" width="320.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="332.2" y="238.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 0.73%)</title><rect x="329.2" y="211.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.2" y="222.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (15 samples, 0.73%)</title><rect x="329.2" y="195.0" width="8.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="332.2" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (543 samples, 26.46%)</title><rect x="337.8" y="211.0" width="312.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.8" y="222.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (543 samples, 26.46%)</title><rect x="337.8" y="195.0" width="312.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.8" y="206.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (543 samples, 26.46%)</title><rect x="337.8" y="179.0" width="312.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.8" y="190.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84 samples, 4.09%)</title><rect x="337.8" y="163.0" width="48.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.8" y="174.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (84 samples, 4.09%)</title><rect x="337.8" y="147.0" width="48.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="340.8" y="158.0">one/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (48 samples, 2.34%)</title><rect x="337.8" y="131.0" width="27.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.8" y="142.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (25 samples, 1.22%)</title><rect x="337.8" y="115.0" width="14.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 1.22%)</title><rect x="337.8" y="99.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.8" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 1.22%)</title><rect x="337.8" y="83.0" width="14.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 1.22%)</title><rect x="337.8" y="67.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.8" y="78.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.88%)</title><rect x="337.8" y="51.0" width="10.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="340.8" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.34%)</title><rect x="348.1" y="51.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.1" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.34%)</title><rect x="348.1" y="35.0" width="4.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="351.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.put (23 samples, 1.12%)</title><rect x="352.2" y="115.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.2" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 1.12%)</title><rect x="352.2" y="99.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.2" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 1.12%)</title><rect x="352.2" y="83.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.get$Lambda (23 samples, 1.12%)</title><rect x="352.2" y="67.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.AsyncServiceImpl$$Lambda$68 (23 samples, 1.12%)</title><rect x="352.2" y="51.0" width="13.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="355.2" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (36 samples, 1.75%)</title><rect x="365.4" y="131.0" width="20.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 1.75%)</title><rect x="365.4" y="115.0" width="20.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 1.75%)</title><rect x="365.4" y="99.0" width="20.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.83%)</title><rect x="365.4" y="83.0" width="9.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="368.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.93%)</title><rect x="375.2" y="83.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.2" y="94.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.93%)</title><rect x="375.2" y="67.0" width="10.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="378.2" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (184 samples, 8.97%)</title><rect x="386.1" y="163.0" width="105.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.1" y="174.0">one/nio/http/..</text>
</g>
<g>
<title>one.nio.http.Request (19 samples, 0.93%)</title><rect x="386.1" y="147.0" width="10.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="389.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (66 samples, 3.22%)</title><rect x="397.0" y="147.0" width="38.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.0" y="158.0">one..</text>
</g>
<g>
<title>java.lang.String[] (66 samples, 3.22%)</title><rect x="397.0" y="131.0" width="38.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="400.0" y="142.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 4.82%)</title><rect x="435.0" y="147.0" width="56.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.0" y="158.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (99 samples, 4.82%)</title><rect x="435.0" y="131.0" width="56.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.0" y="142.0">one/ni..</text>
</g>
<g>
<title>char[] (50 samples, 2.44%)</title><rect x="435.0" y="115.0" width="28.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="438.0" y="126.0">ch..</text>
</g>
<g>
<title>java.lang.String (21 samples, 1.02%)</title><rect x="463.7" y="115.0" width="12.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="466.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 1.36%)</title><rect x="475.8" y="115.0" width="16.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 1.36%)</title><rect x="475.8" y="99.0" width="16.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 1.36%)</title><rect x="475.8" y="83.0" width="16.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.8" y="94.0"></text>
</g>
<g>
<title>byte[] (28 samples, 1.36%)</title><rect x="475.8" y="67.0" width="16.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="478.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (21 samples, 1.02%)</title><rect x="491.9" y="163.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.9" y="174.0"></text>
</g>
<g>
<title>byte[] (21 samples, 1.02%)</title><rect x="491.9" y="147.0" width="12.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="494.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (57 samples, 2.78%)</title><rect x="504.0" y="163.0" width="32.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.0" y="174.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (57 samples, 2.78%)</title><rect x="504.0" y="147.0" width="32.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.0" y="158.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 2.78%)</title><rect x="504.0" y="131.0" width="32.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.0" y="142.0">ja..</text>
</g>
<g>
<title>java.lang.String (29 samples, 1.41%)</title><rect x="504.0" y="115.0" width="16.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="507.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 1.36%)</title><rect x="520.6" y="115.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.6" y="126.0"></text>
</g>
<g>
<title>byte[] (28 samples, 1.36%)</title><rect x="520.6" y="99.0" width="16.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="523.6" y="110.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (197 samples, 9.60%)</title><rect x="536.7" y="163.0" width="113.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.7" y="174.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (197 samples, 9.60%)</title><rect x="536.7" y="147.0" width="113.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.7" y="158.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (91 samples, 4.43%)</title><rect x="536.7" y="131.0" width="52.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="539.7" y="142.0">char[]</text>
</g>
<g>
<title>java.lang.String (40 samples, 1.95%)</title><rect x="589.1" y="131.0" width="23.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="592.1" y="142.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (66 samples, 3.22%)</title><rect x="612.1" y="131.0" width="37.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.1" y="142.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (66 samples, 3.22%)</title><rect x="612.1" y="115.0" width="37.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.1" y="126.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (66 samples, 3.22%)</title><rect x="612.1" y="99.0" width="37.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.1" y="110.0">jav..</text>
</g>
<g>
<title>byte[] (66 samples, 3.22%)</title><rect x="612.1" y="83.0" width="37.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="615.1" y="94.0">byt..</text>
</g>
<g>
<title>[async_worker-0 tid=3359] (468 samples, 22.81%)</title><rect x="650.0" y="243.0" width="269.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="653.0" y="254.0">[async_worker-0 tid=3359]</text>
</g>
<g>
<title>java/lang/Thread.run (468 samples, 22.81%)</title><rect x="650.0" y="227.0" width="269.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.0" y="238.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (468 samples, 22.81%)</title><rect x="650.0" y="211.0" width="269.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.0" y="222.0">java/util/concurrent/ThreadPoolExecu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (468 samples, 22.81%)</title><rect x="650.0" y="195.0" width="269.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.0" y="206.0">java/util/concurrent/ThreadPoolExecu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.15%)</title><rect x="650.0" y="179.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.15%)</title><rect x="650.0" y="163.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.15%)</title><rect x="650.0" y="147.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="653.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.15%)</title><rect x="650.0" y="131.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3 samples, 0.15%)</title><rect x="650.0" y="115.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="653.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.run (465 samples, 22.66%)</title><rect x="651.8" y="179.0" width="267.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.8" y="190.0">ru/mail/polis/service/ivanovandrey/A..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1 (465 samples, 22.66%)</title><rect x="651.8" y="163.0" width="267.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="654.8" y="174.0">ru/mail/polis/service/ivanovandrey/A..</text>
</g>
<g>
<title>one.nio.http.Response (24 samples, 1.17%)</title><rect x="651.8" y="147.0" width="13.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="654.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (133 samples, 6.48%)</title><rect x="665.6" y="147.0" width="76.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.6" y="158.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (133 samples, 6.48%)</title><rect x="665.6" y="131.0" width="76.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.6" y="142.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (96 samples, 4.68%)</title><rect x="665.6" y="115.0" width="55.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.6" y="126.0">one/n..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (96 samples, 4.68%)</title><rect x="665.6" y="99.0" width="55.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.6" y="110.0">one/n..</text>
</g>
<g>
<title>byte[] (96 samples, 4.68%)</title><rect x="665.6" y="83.0" width="55.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="668.6" y="94.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 1.80%)</title><rect x="720.8" y="115.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.8" y="126.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (37 samples, 1.80%)</title><rect x="720.8" y="99.0" width="21.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="723.8" y="110.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (89 samples, 4.34%)</title><rect x="742.0" y="147.0" width="51.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.0" y="158.0">one/n..</text>
</g>
<g>
<title>byte[] (32 samples, 1.56%)</title><rect x="742.0" y="131.0" width="18.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="745.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 1.46%)</title><rect x="760.4" y="131.0" width="17.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="763.4" y="142.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 1.32%)</title><rect x="777.7" y="131.0" width="15.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="780.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (146 samples, 7.12%)</title><rect x="793.2" y="147.0" width="84.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.2" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (70 samples, 3.41%)</title><rect x="793.2" y="131.0" width="40.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.2" y="142.0">ru/..</text>
</g>
<g>
<title>byte[] (23 samples, 1.12%)</title><rect x="793.2" y="115.0" width="13.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="796.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (47 samples, 2.29%)</title><rect x="806.4" y="115.0" width="27.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.4" y="126.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (47 samples, 2.29%)</title><rect x="806.4" y="99.0" width="27.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="809.4" y="110.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (76 samples, 3.70%)</title><rect x="833.5" y="131.0" width="43.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.5" y="142.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (76 samples, 3.70%)</title><rect x="833.5" y="115.0" width="43.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="836.5" y="126.0">ru/m..</text>
</g>
<g>
<title>byte[] (26 samples, 1.27%)</title><rect x="833.5" y="99.0" width="14.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="836.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (50 samples, 2.44%)</title><rect x="848.4" y="99.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.4" y="110.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 2.44%)</title><rect x="848.4" y="83.0" width="28.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="851.4" y="94.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (73 samples, 3.56%)</title><rect x="877.2" y="147.0" width="42.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.2" y="158.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (29 samples, 1.41%)</title><rect x="877.2" y="131.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (29 samples, 1.41%)</title><rect x="877.2" y="115.0" width="16.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (29 samples, 1.41%)</title><rect x="877.2" y="99.0" width="16.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="880.2" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 1.41%)</title><rect x="877.2" y="83.0" width="16.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.2" y="94.0"></text>
</g>
<g>
<title>byte[] (29 samples, 1.41%)</title><rect x="877.2" y="67.0" width="16.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="880.2" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 2.14%)</title><rect x="893.8" y="131.0" width="25.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="896.8" y="142.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 2.14%)</title><rect x="893.8" y="115.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.8" y="126.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 2.14%)</title><rect x="893.8" y="99.0" width="25.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="896.8" y="110.0">j..</text>
</g>
<g>
<title>[async_worker-1 tid=3360] (471 samples, 22.95%)</title><rect x="919.2" y="243.0" width="270.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="922.2" y="254.0">[async_worker-1 tid=3360]</text>
</g>
<g>
<title>java/lang/Thread.run (471 samples, 22.95%)</title><rect x="919.2" y="227.0" width="270.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.2" y="238.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (471 samples, 22.95%)</title><rect x="919.2" y="211.0" width="270.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.2" y="222.0">java/util/concurrent/ThreadPoolExecu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (471 samples, 22.95%)</title><rect x="919.2" y="195.0" width="270.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.2" y="206.0">java/util/concurrent/ThreadPoolExecu..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.29%)</title><rect x="919.2" y="179.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 0.29%)</title><rect x="919.2" y="163.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.29%)</title><rect x="919.2" y="147.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (6 samples, 0.29%)</title><rect x="919.2" y="131.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="922.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (6 samples, 0.29%)</title><rect x="919.2" y="115.0" width="3.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="922.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.run (465 samples, 22.66%)</title><rect x="922.6" y="179.0" width="267.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.6" y="190.0">ru/mail/polis/service/ivanovandrey/A..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1 (465 samples, 22.66%)</title><rect x="922.6" y="163.0" width="267.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.6" y="174.0">ru/mail/polis/service/ivanovandrey/A..</text>
</g>
<g>
<title>one.nio.http.Response (32 samples, 1.56%)</title><rect x="922.6" y="147.0" width="18.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="925.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (135 samples, 6.58%)</title><rect x="941.0" y="147.0" width="77.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.0" y="158.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (135 samples, 6.58%)</title><rect x="941.0" y="131.0" width="77.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="944.0" y="142.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (100 samples, 4.87%)</title><rect x="941.0" y="115.0" width="57.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="944.0" y="126.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (100 samples, 4.87%)</title><rect x="941.0" y="99.0" width="57.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="944.0" y="110.0">one/ni..</text>
</g>
<g>
<title>byte[] (100 samples, 4.87%)</title><rect x="941.0" y="83.0" width="57.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="944.0" y="94.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.71%)</title><rect x="998.5" y="115.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.5" y="126.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (35 samples, 1.71%)</title><rect x="998.5" y="99.0" width="20.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1001.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (85 samples, 4.14%)</title><rect x="1018.6" y="147.0" width="48.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.6" y="158.0">one/..</text>
</g>
<g>
<title>byte[] (33 samples, 1.61%)</title><rect x="1018.6" y="131.0" width="19.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1021.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 1.46%)</title><rect x="1037.6" y="131.0" width="17.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1040.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 1.07%)</title><rect x="1054.9" y="131.0" width="12.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1057.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (138 samples, 6.73%)</title><rect x="1067.5" y="147.0" width="79.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.5" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (61 samples, 2.97%)</title><rect x="1067.5" y="131.0" width="35.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1070.5" y="142.0">ru/..</text>
</g>
<g>
<title>byte[] (25 samples, 1.22%)</title><rect x="1067.5" y="115.0" width="14.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1070.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (36 samples, 1.75%)</title><rect x="1081.9" y="115.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 1.75%)</title><rect x="1081.9" y="99.0" width="20.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1084.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (77 samples, 3.75%)</title><rect x="1102.6" y="131.0" width="44.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.6" y="142.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (77 samples, 3.75%)</title><rect x="1102.6" y="115.0" width="44.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.6" y="126.0">ru/m..</text>
</g>
<g>
<title>byte[] (27 samples, 1.32%)</title><rect x="1102.6" y="99.0" width="15.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1105.6" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (50 samples, 2.44%)</title><rect x="1118.1" y="99.0" width="28.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.1" y="110.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 2.44%)</title><rect x="1118.1" y="83.0" width="28.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1121.1" y="94.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (75 samples, 3.65%)</title><rect x="1146.9" y="147.0" width="43.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.9" y="158.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (30 samples, 1.46%)</title><rect x="1146.9" y="131.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.9" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (30 samples, 1.46%)</title><rect x="1146.9" y="115.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1149.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (30 samples, 1.46%)</title><rect x="1146.9" y="99.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 1.46%)</title><rect x="1146.9" y="83.0" width="17.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.9" y="94.0"></text>
</g>
<g>
<title>byte[] (30 samples, 1.46%)</title><rect x="1146.9" y="67.0" width="17.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1149.9" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 2.19%)</title><rect x="1164.1" y="131.0" width="25.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.1" y="142.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (45 samples, 2.19%)</title><rect x="1164.1" y="115.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1167.1" y="126.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (45 samples, 2.19%)</title><rect x="1164.1" y="99.0" width="25.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1167.1" y="110.0">j..</text>
</g>
</g>
</svg>
