<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (2,987 samples, 100.00%)</title><rect x="10.0" y="1027.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="1038.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=1702] (49 samples, 1.64%)</title><rect x="10.0" y="1011.0" width="19.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>start_thread (49 samples, 1.64%)</title><rect x="10.0" y="995.0" width="19.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (49 samples, 1.64%)</title><rect x="10.0" y="979.0" width="19.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>Thread::call_run() (49 samples, 1.64%)</title><rect x="10.0" y="963.0" width="19.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (49 samples, 1.64%)</title><rect x="10.0" y="947.0" width="19.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (49 samples, 1.64%)</title><rect x="10.0" y="931.0" width="19.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (49 samples, 1.64%)</title><rect x="10.0" y="915.0" width="19.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (49 samples, 1.64%)</title><rect x="10.0" y="899.0" width="19.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (49 samples, 1.64%)</title><rect x="10.0" y="883.0" width="19.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (29 samples, 0.97%)</title><rect x="10.0" y="867.0" width="11.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="10.0" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.03%)</title><rect x="10.0" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.03%)</title><rect x="10.0" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.03%)</title><rect x="10.0" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="10.0" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="10.0" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="10.0" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.03%)</title><rect x="10.4" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.4" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="10.4" y="835.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.4" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="10.4" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="13.4" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="10.4" y="803.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="13.4" y="814.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.03%)</title><rect x="10.8" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.8" y="862.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.03%)</title><rect x="10.8" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.8" y="846.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.03%)</title><rect x="10.8" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="10.8" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="13.8" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="10.8" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="13.8" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="10.8" y="771.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="13.8" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 0.13%)</title><rect x="11.2" y="851.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.2" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 0.13%)</title><rect x="11.2" y="835.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.2" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (1 samples, 0.03%)</title><rect x="11.2" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.2" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::latency_from_uses(Node*) (1 samples, 0.03%)</title><rect x="11.2" y="803.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.2" y="814.0"></text>
</g>
<g>
<title>Node::latency(unsigned int) (1 samples, 0.03%)</title><rect x="11.2" y="787.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.2" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="11.6" y="819.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.6" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.03%)</title><rect x="11.6" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.6" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="11.6" y="787.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="14.6" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="11.6" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="14.6" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="11.6" y="755.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="14.6" y="766.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="12.0" y="819.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.0" y="830.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.03%)</title><rect x="12.4" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.4" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="12.4" y="803.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="15.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="12.4" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="15.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="12.4" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="15.4" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (22 samples, 0.74%)</title><rect x="12.8" y="851.0" width="8.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.8" y="862.0"></text>
</g>
<g>
<title>LiveRangeMap::compress_uf_map_for_nodes() (1 samples, 0.03%)</title><rect x="12.8" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="15.8" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="12.8" y="819.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="15.8" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="12.8" y="803.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="15.8" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="12.8" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="15.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.07%)</title><rect x="13.2" y="835.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.2" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="13.2" y="819.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="16.2" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="13.2" y="803.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="13.2" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="13.2" y="771.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.2" y="782.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.03%)</title><rect x="13.6" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.6" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.10%)</title><rect x="14.0" y="835.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.0" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="14.3" y="819.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="17.3" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="14.3" y="803.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="17.3" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="14.3" y="787.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.3" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (7 samples, 0.23%)</title><rect x="15.1" y="835.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.13%)</title><rect x="15.1" y="819.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="18.1" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.07%)</title><rect x="15.1" y="803.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.1" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="15.5" y="787.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="15.5" y="771.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="15.5" y="755.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.5" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="15.9" y="803.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="18.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="15.9" y="787.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="18.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="15.9" y="771.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="18.9" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.03%)</title><rect x="16.7" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.7" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="16.7" y="803.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.7" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="16.7" y="787.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.7" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="16.7" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.7" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="16.7" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="19.7" y="766.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="17.1" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="20.1" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="17.1" y="803.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="20.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="17.1" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="20.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="17.1" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="20.1" y="782.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.03%)</title><rect x="17.5" y="819.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.5" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 0.13%)</title><rect x="17.9" y="835.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.9" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.10%)</title><rect x="18.3" y="819.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="18.3" y="803.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="21.3" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="18.3" y="787.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="21.3" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="18.3" y="771.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.3" y="782.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.03%)</title><rect x="19.5" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.5" y="846.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.03%)</title><rect x="19.5" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.5" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::Union(unsigned int, unsigned int) (1 samples, 0.03%)</title><rect x="19.5" y="803.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.5" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="19.5" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="22.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="19.5" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="19.5" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="22.5" y="766.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.03%)</title><rect x="19.9" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.9" y="846.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.07%)</title><rect x="20.3" y="835.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="23.3" y="846.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.03%)</title><rect x="20.3" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="20.3" y="803.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="23.3" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="20.3" y="787.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="23.3" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="20.3" y="771.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="23.3" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="20.7" y="819.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.7" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="20.7" y="803.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.7" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="20.7" y="787.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.7" y="798.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="21.1" y="835.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="24.1" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="21.1" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="24.1" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="21.1" y="803.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="24.1" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="21.1" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.1" y="798.0"></text>
</g>
<g>
<title>Compile::Optimize() (14 samples, 0.47%)</title><rect x="21.5" y="867.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.5" y="878.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (6 samples, 0.20%)</title><rect x="21.5" y="851.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="24.5" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 0.20%)</title><rect x="21.5" y="835.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.5" y="846.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="21.5" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.5" y="830.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="21.5" y="803.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="24.5" y="814.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="21.5" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="24.5" y="798.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="21.5" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="24.5" y="782.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="21.5" y="755.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.5" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_range_check(IdealLoopTree*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="21.5" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.5" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::add_range_check_predicate(IdealLoopTree*, CountedLoopNode*, Node*, int, Node*, Node*, int, Node*) (1 samples, 0.03%)</title><rect x="21.5" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="24.5" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::rc_predicate(IdealLoopTree*, Node*, int, Node*, Node*, Node*, int, Node*, bool, bool&amp;) (1 samples, 0.03%)</title><rect x="21.5" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.5" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::register_new_node(Node*, Node*) (1 samples, 0.03%)</title><rect x="21.5" y="691.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.5" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.03%)</title><rect x="21.9" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="24.9" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="21.9" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="24.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="21.9" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="24.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="21.9" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.9" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.10%)</title><rect x="22.2" y="819.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.2" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="22.6" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.6" y="814.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="22.6" y="787.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="25.6" y="798.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.03%)</title><rect x="22.6" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="25.6" y="782.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="22.6" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="23.0" y="803.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="26.0" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="23.0" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.0" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="23.0" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.0" y="782.0"></text>
</g>
<g>
<title>SuperWord::transform_loop(IdealLoopTree*, bool) (1 samples, 0.03%)</title><rect x="23.4" y="819.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.4" y="830.0"></text>
</g>
<g>
<title>SuperWord::SLP_extract() (1 samples, 0.03%)</title><rect x="23.4" y="803.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="26.4" y="814.0"></text>
</g>
<g>
<title>SuperWord::output() (1 samples, 0.03%)</title><rect x="23.4" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.4" y="798.0"></text>
</g>
<g>
<title>CountedLoopReserveKit::CountedLoopReserveKit(PhaseIdealLoop*, IdealLoopTree*, bool) (1 samples, 0.03%)</title><rect x="23.4" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.4" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::create_reserve_version_of_loop(IdealLoopTree*, CountedLoopReserveKit*) (1 samples, 0.03%)</title><rect x="23.4" y="755.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="26.4" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::recompute_dom_depth() (1 samples, 0.03%)</title><rect x="23.4" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="26.4" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.03%)</title><rect x="23.8" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="26.8" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.03%)</title><rect x="23.8" y="835.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.8" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.03%)</title><rect x="23.8" y="819.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.8" y="830.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.03%)</title><rect x="23.8" y="803.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.8" y="814.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.03%)</title><rect x="23.8" y="787.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="26.8" y="798.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.0] (1 samples, 0.03%)</title><rect x="23.8" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="26.8" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="23.8" y="755.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="26.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="23.8" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="26.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="23.8" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="26.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="23.8" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="26.8" y="718.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.03%)</title><rect x="24.2" y="851.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="27.2" y="862.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="24.2" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="27.2" y="846.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.03%)</title><rect x="24.2" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="27.2" y="830.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) (1 samples, 0.03%)</title><rect x="24.2" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.2" y="814.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.03%)</title><rect x="24.2" y="787.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.2" y="798.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="24.2" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="27.2" y="782.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="24.2" y="755.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.2" y="766.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.03%)</title><rect x="24.2" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="27.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="24.2" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="24.2" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="27.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="24.2" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.2" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (5 samples, 0.17%)</title><rect x="24.6" y="851.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="27.6" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.07%)</title><rect x="24.6" y="835.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="27.6" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="25.0" y="819.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="28.0" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="25.0" y="803.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.0" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="25.0" y="787.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="28.0" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="25.4" y="835.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="28.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.03%)</title><rect x="25.4" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="28.4" y="830.0"></text>
</g>
<g>
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.03%)</title><rect x="25.4" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="28.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="25.4" y="787.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="25.4" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="28.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="25.4" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.4" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.07%)</title><rect x="25.8" y="835.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.8" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.07%)</title><rect x="25.8" y="819.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="28.8" y="830.0"></text>
</g>
<g>
<title>Node::Opcode() const (1 samples, 0.03%)</title><rect x="25.8" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="28.8" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="26.2" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="29.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="26.2" y="787.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="29.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="26.2" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="29.2" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.03%)</title><rect x="26.6" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="29.6" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="26.6" y="835.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.6" y="846.0"></text>
</g>
<g>
<title>Conv2BNode::Opcode() const (1 samples, 0.03%)</title><rect x="26.6" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="29.6" y="830.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="27.0" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.0" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.17%)</title><rect x="27.4" y="867.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="30.4" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.17%)</title><rect x="27.4" y="851.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.17%)</title><rect x="27.4" y="835.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.4" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.17%)</title><rect x="27.4" y="819.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.4" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.17%)</title><rect x="27.4" y="803.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.17%)</title><rect x="27.4" y="787.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="30.4" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.17%)</title><rect x="27.4" y="771.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="30.4" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.17%)</title><rect x="27.4" y="755.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.17%)</title><rect x="27.4" y="739.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.17%)</title><rect x="27.4" y="723.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="30.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.17%)</title><rect x="27.4" y="707.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="30.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.17%)</title><rect x="27.4" y="691.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="30.4" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.13%)</title><rect x="27.4" y="675.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.4" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.13%)</title><rect x="27.4" y="659.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.13%)</title><rect x="27.4" y="643.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="30.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.13%)</title><rect x="27.4" y="627.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="30.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.13%)</title><rect x="27.4" y="611.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.10%)</title><rect x="27.4" y="595.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.4" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="27.4" y="579.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.4" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="27.4" y="563.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="30.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="27.4" y="547.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="30.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="27.4" y="531.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="27.4" y="515.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="30.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="27.4" y="499.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.4" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="27.4" y="483.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.4" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="27.4" y="467.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="27.4" y="451.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="30.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="27.4" y="435.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="27.4" y="419.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="27.4" y="403.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.4" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="27.4" y="387.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="30.4" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="27.4" y="371.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="27.4" y="355.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="27.4" y="339.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="30.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="27.4" y="323.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="27.4" y="307.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="30.4" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="27.4" y="291.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.4" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="27.4" y="275.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="27.4" y="259.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.4" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="27.4" y="243.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.4" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="27.4" y="227.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.4" y="238.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="27.4" y="211.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.4" y="222.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="27.4" y="195.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.4" y="206.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="27.4" y="179.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="30.4" y="190.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="27.4" y="163.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.4" y="174.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="27.4" y="147.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.4" y="158.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool, bool) (1 samples, 0.03%)</title><rect x="27.4" y="131.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="30.4" y="142.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="27.4" y="115.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="30.4" y="126.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="27.4" y="99.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.4" y="110.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.0] (1 samples, 0.03%)</title><rect x="27.4" y="83.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="30.4" y="94.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="27.4" y="67.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.4" y="78.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="27.4" y="51.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="30.4" y="62.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="27.4" y="35.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="30.4" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="27.8" y="307.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="30.8" y="318.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.0] (1 samples, 0.03%)</title><rect x="27.8" y="291.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.8" y="302.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="27.8" y="275.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="30.8" y="286.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.03%)</title><rect x="27.8" y="259.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="30.8" y="270.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="27.8" y="243.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.8" y="254.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="27.8" y="227.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="30.8" y="238.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.03%)</title><rect x="27.8" y="211.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="30.8" y="222.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="27.8" y="195.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.8" y="206.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="27.8" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.8" y="190.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="27.8" y="163.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="30.8" y="174.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="28.2" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="31.2" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="28.2" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.2" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="28.2" y="547.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="28.2" y="531.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="31.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="28.2" y="515.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="28.2" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="31.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="28.2" y="483.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="31.2" y="494.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.03%)</title><rect x="28.2" y="467.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.2" y="478.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.03%)</title><rect x="28.2" y="451.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.2" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="28.2" y="435.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="31.2" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="28.2" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="31.2" y="430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="28.2" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="31.2" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="28.2" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="31.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="28.6" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="31.6" y="606.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.0] (1 samples, 0.03%)</title><rect x="28.6" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="31.6" y="590.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="28.6" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="31.6" y="574.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.03%)</title><rect x="28.6" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="31.6" y="558.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="28.6" y="531.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.6" y="542.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="28.6" y="515.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="28.6" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.6" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="28.6" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.6" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="28.6" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="31.6" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="29.0" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.0" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="29.0" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.0" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="29.0" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="29.0" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="29.0" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="29.0" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="29.0" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.0" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="29.0" y="563.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.0" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="29.0" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="29.0" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="32.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="29.0" y="515.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="32.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="29.0" y="499.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="32.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="29.0" y="483.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="32.0" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="29.0" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="32.0" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="29.0" y="451.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="29.0" y="435.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="32.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="29.0" y="419.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="32.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="29.0" y="403.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="32.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="29.0" y="387.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.0" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="29.0" y="371.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="32.0" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="29.0" y="355.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="32.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="29.0" y="339.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="29.0" y="323.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="29.0" y="307.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="29.0" y="291.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.0" y="302.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="29.0" y="275.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.0" y="286.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="29.0" y="259.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="32.0" y="270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="29.0" y="243.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.0" y="254.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=1740] (1,470 samples, 49.21%)</title><rect x="29.4" y="1011.0" width="580.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="32.4" y="1022.0">[NIO Selector #0 tid=1740]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,470 samples, 49.21%)</title><rect x="29.4" y="995.0" width="580.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.4" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="29.4" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="29.4" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.07%)</title><rect x="29.4" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.4" y="958.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (2 samples, 0.07%)</title><rect x="29.4" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (2 samples, 0.07%)</title><rect x="29.4" y="915.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="32.4" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="29.8" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.8" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="29.8" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="32.8" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="29.8" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="32.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.30%)</title><rect x="30.1" y="979.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.1" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.30%)</title><rect x="30.1" y="963.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.1" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="30.1" y="947.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="33.1" y="958.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="30.5" y="947.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="33.5" y="958.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.23%)</title><rect x="30.9" y="947.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="33.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.13%)</title><rect x="30.9" y="931.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="33.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.13%)</title><rect x="30.9" y="915.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.10%)</title><rect x="31.3" y="899.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.3" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.10%)</title><rect x="31.3" y="883.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="34.3" y="894.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.10%)</title><rect x="31.3" y="867.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.3" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.10%)</title><rect x="31.3" y="851.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.3" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.10%)</title><rect x="31.3" y="835.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="34.3" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.07%)</title><rect x="31.7" y="819.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="34.7" y="830.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.07%)</title><rect x="31.7" y="803.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.7" y="814.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="31.7" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="34.7" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="32.1" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="32.5" y="931.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="35.5" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="32.5" y="915.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.5" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="32.5" y="899.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="35.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,459 samples, 48.84%)</title><rect x="33.7" y="979.0" width="576.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.7" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,457 samples, 48.78%)</title><rect x="34.5" y="963.0" width="575.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="37.5" y="974.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,412 samples, 47.27%)</title><rect x="35.3" y="947.0" width="557.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.3" y="958.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,391 samples, 46.57%)</title><rect x="35.3" y="931.0" width="549.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.3" y="942.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,391 samples, 46.57%)</title><rect x="35.3" y="915.0" width="549.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.3" y="926.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (4 samples, 0.13%)</title><rect x="35.3" y="899.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="35.3" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.03%)</title><rect x="35.7" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="35.7" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="35.7" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.7" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="35.7" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.7" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="35.7" y="819.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="38.7" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="35.7" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="38.7" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="35.7" y="787.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="38.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.get (2 samples, 0.07%)</title><rect x="36.1" y="883.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (1 samples, 0.03%)</title><rect x="36.1" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (1 samples, 0.03%)</title><rect x="36.1" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.03%)</title><rect x="36.1" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="36.1" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.strToByteBuffer (1 samples, 0.03%)</title><rect x="36.5" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="36.5" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="36.5" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="36.5" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.5" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="36.5" y="803.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="39.5" y="814.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1,385 samples, 46.37%)</title><rect x="36.9" y="899.0" width="547.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.9" y="910.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (244 samples, 8.17%)</title><rect x="36.9" y="883.0" width="96.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.9" y="894.0">one/nio/htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="36.9" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="39.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="36.9" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (241 samples, 8.07%)</title><rect x="37.3" y="867.0" width="95.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.3" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.40%)</title><rect x="37.3" y="851.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.33%)</title><rect x="38.0" y="835.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.23%)</title><rect x="38.0" y="819.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.20%)</title><rect x="38.4" y="803.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (5 samples, 0.17%)</title><rect x="38.8" y="787.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="40.0" y="771.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="43.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="40.0" y="755.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="40.0" y="739.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.0" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="40.4" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.4" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="40.4" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.4" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="40.4" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.10%)</title><rect x="40.8" y="819.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.10%)</title><rect x="40.8" y="803.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.10%)</title><rect x="40.8" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="41.2" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.2" y="782.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.03%)</title><rect x="41.6" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (229 samples, 7.67%)</title><rect x="42.0" y="851.0" width="90.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.0" y="862.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (229 samples, 7.67%)</title><rect x="42.0" y="835.0" width="90.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.0" y="846.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (229 samples, 7.67%)</title><rect x="42.0" y="819.0" width="90.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.0" y="830.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (229 samples, 7.67%)</title><rect x="42.0" y="803.0" width="90.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.0" y="814.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="42.8" y="787.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="45.8" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="42.8" y="771.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="45.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="43.2" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.2" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="43.2" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.2" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="43.2" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.2" y="750.0"></text>
</g>
<g>
<title>send (224 samples, 7.50%)</title><rect x="43.6" y="787.0" width="88.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="46.6" y="798.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (221 samples, 7.40%)</title><rect x="44.4" y="771.0" width="87.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="47.4" y="782.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="44.4" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (220 samples, 7.37%)</title><rect x="44.8" y="755.0" width="86.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.8" y="766.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (171 samples, 5.72%)</title><rect x="45.2" y="739.0" width="67.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="48.2" y="750.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (171 samples, 5.72%)</title><rect x="45.2" y="723.0" width="67.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="48.2" y="734.0">__sys_s..</text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="45.2" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="48.2" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (169 samples, 5.66%)</title><rect x="45.6" y="707.0" width="66.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="48.6" y="718.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (166 samples, 5.56%)</title><rect x="45.6" y="691.0" width="65.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="48.6" y="702.0">inet6_s..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="46.3" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="49.3" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg (163 samples, 5.46%)</title><rect x="46.7" y="675.0" width="64.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="49.7" y="686.0">tcp_sen..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="46.7" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="49.7" y="670.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.03%)</title><rect x="46.7" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="49.7" y="654.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="47.1" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="50.1" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (161 samples, 5.39%)</title><rect x="47.5" y="659.0" width="63.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="50.5" y="670.0">tcp_sen..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="47.9" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.9" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="47.9" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.9" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.23%)</title><rect x="48.3" y="643.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="51.3" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.23%)</title><rect x="48.3" y="627.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="51.3" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.07%)</title><rect x="49.5" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.5" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="49.5" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="52.5" y="606.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="49.5" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="52.5" y="590.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="49.9" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="52.9" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="50.3" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.3" y="622.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.03%)</title><rect x="50.7" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="53.7" y="622.0"></text>
</g>
<g>
<title>tcp_push (151 samples, 5.06%)</title><rect x="51.1" y="643.0" width="59.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.1" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (149 samples, 4.99%)</title><rect x="51.9" y="627.0" width="58.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="54.9" y="638.0">__tcp_..</text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.03%)</title><rect x="51.9" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.9" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (148 samples, 4.95%)</title><rect x="52.3" y="611.0" width="58.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.3" y="622.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (143 samples, 4.79%)</title><rect x="52.3" y="595.0" width="56.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.3" y="606.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (141 samples, 4.72%)</title><rect x="53.1" y="579.0" width="55.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="56.1" y="590.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (141 samples, 4.72%)</title><rect x="53.1" y="563.0" width="55.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="56.1" y="574.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (137 samples, 4.59%)</title><rect x="54.2" y="547.0" width="54.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.2" y="558.0">ip_lo..</text>
</g>
<g>
<title>ip_output (136 samples, 4.55%)</title><rect x="54.6" y="531.0" width="53.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.6" y="542.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (136 samples, 4.55%)</title><rect x="54.6" y="515.0" width="53.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.6" y="526.0">ip_fi..</text>
</g>
<g>
<title>__ip_finish_output (136 samples, 4.55%)</title><rect x="54.6" y="499.0" width="53.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.6" y="510.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (135 samples, 4.52%)</title><rect x="55.0" y="483.0" width="53.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.0" y="494.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (130 samples, 4.35%)</title><rect x="55.4" y="467.0" width="51.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="58.4" y="478.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (130 samples, 4.35%)</title><rect x="55.4" y="451.0" width="51.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="58.4" y="462.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (130 samples, 4.35%)</title><rect x="55.4" y="435.0" width="51.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.4" y="446.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (130 samples, 4.35%)</title><rect x="55.4" y="419.0" width="51.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="58.4" y="430.0">__sof..</text>
</g>
<g>
<title>net_rx_action (129 samples, 4.32%)</title><rect x="55.8" y="403.0" width="51.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.8" y="414.0">net_r..</text>
</g>
<g>
<title>process_backlog (129 samples, 4.32%)</title><rect x="55.8" y="387.0" width="51.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="58.8" y="398.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (129 samples, 4.32%)</title><rect x="55.8" y="371.0" width="51.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="58.8" y="382.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (129 samples, 4.32%)</title><rect x="55.8" y="355.0" width="51.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.8" y="366.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.07%)</title><rect x="55.8" y="339.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="58.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv (127 samples, 4.25%)</title><rect x="56.6" y="339.0" width="50.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.6" y="350.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (127 samples, 4.25%)</title><rect x="56.6" y="323.0" width="50.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.6" y="334.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (126 samples, 4.22%)</title><rect x="57.0" y="307.0" width="49.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.0" y="318.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (126 samples, 4.22%)</title><rect x="57.0" y="291.0" width="49.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="60.0" y="302.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (126 samples, 4.22%)</title><rect x="57.0" y="275.0" width="49.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.0" y="286.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="57.0" y="259.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="60.0" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (125 samples, 4.18%)</title><rect x="57.4" y="259.0" width="49.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="60.4" y="270.0">tcp_v..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="59.0" y="243.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.0" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (120 samples, 4.02%)</title><rect x="59.4" y="243.0" width="47.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="62.4" y="254.0">tcp_..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="59.4" y="227.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.4" y="238.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.07%)</title><rect x="59.8" y="227.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="62.8" y="238.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.07%)</title><rect x="60.6" y="227.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.6" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (115 samples, 3.85%)</title><rect x="61.4" y="227.0" width="45.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.4" y="238.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.10%)</title><rect x="61.8" y="211.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.8" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.10%)</title><rect x="61.8" y="195.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.8" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="61.8" y="179.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="64.8" y="190.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.10%)</title><rect x="61.8" y="163.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.8" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.10%)</title><rect x="61.8" y="147.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="64.8" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="62.9" y="211.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="65.9" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="63.3" y="211.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="66.3" y="222.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.20%)</title><rect x="63.7" y="211.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="66.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.10%)</title><rect x="64.5" y="195.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="67.5" y="206.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="64.9" y="179.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="67.9" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="65.3" y="179.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="68.3" y="190.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="65.7" y="195.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.7" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (101 samples, 3.38%)</title><rect x="66.1" y="211.0" width="39.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.1" y="222.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (101 samples, 3.38%)</title><rect x="66.1" y="195.0" width="39.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="69.1" y="206.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.07%)</title><rect x="66.1" y="179.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.1" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (99 samples, 3.31%)</title><rect x="66.9" y="179.0" width="39.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.9" y="190.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (99 samples, 3.31%)</title><rect x="66.9" y="163.0" width="39.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="69.9" y="174.0">__w..</text>
</g>
<g>
<title>__lock_text_start (99 samples, 3.31%)</title><rect x="66.9" y="147.0" width="39.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.9" y="158.0">__l..</text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.07%)</title><rect x="106.0" y="211.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="109.0" y="222.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.13%)</title><rect x="106.8" y="467.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="109.8" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.13%)</title><rect x="106.8" y="451.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.8" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.10%)</title><rect x="107.2" y="435.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.2" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.10%)</title><rect x="107.2" y="419.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="110.2" y="430.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.07%)</title><rect x="107.2" y="403.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.2" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.07%)</title><rect x="107.2" y="387.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.07%)</title><rect x="107.2" y="371.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.2" y="382.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="108.0" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="111.0" y="414.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="108.4" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.4" y="558.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="108.8" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.8" y="606.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="109.2" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.2" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="109.6" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.6" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="109.6" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.6" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="109.6" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.6" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="109.6" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.6" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="109.6" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.6" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="109.9" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.9" y="606.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="110.3" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.3" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="110.7" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.7" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="110.7" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="113.7" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.10%)</title><rect x="111.1" y="691.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.1" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.10%)</title><rect x="111.1" y="675.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="114.1" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="111.1" y="659.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="114.1" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.07%)</title><rect x="111.5" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="114.5" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="112.3" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.3" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="112.3" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="112.3" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.3" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="112.3" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (48 samples, 1.61%)</title><rect x="112.7" y="739.0" width="19.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.7" y="750.0"></text>
</g>
<g>
<title>schedule (47 samples, 1.57%)</title><rect x="113.1" y="723.0" width="18.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.1" y="734.0"></text>
</g>
<g>
<title>__schedule (47 samples, 1.57%)</title><rect x="113.1" y="707.0" width="18.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.1" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (47 samples, 1.57%)</title><rect x="113.1" y="691.0" width="18.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.1" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="131.7" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="134.7" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="131.7" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.7" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="131.7" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="134.7" y="750.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.03%)</title><rect x="132.1" y="787.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="135.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="132.5" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="132.5" y="851.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="132.5" y="835.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.07%)</title><rect x="132.5" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.07%)</title><rect x="132.5" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.5" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.07%)</title><rect x="132.5" y="787.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.5" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.07%)</title><rect x="132.5" y="771.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.5" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="132.9" y="755.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="135.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (12 samples, 0.40%)</title><rect x="133.3" y="883.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.40%)</title><rect x="133.3" y="867.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.10%)</title><rect x="133.6" y="851.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="133.6" y="835.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.6" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="134.0" y="835.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="134.0" y="819.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="137.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="134.0" y="803.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="134.8" y="851.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="134.8" y="835.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.10%)</title><rect x="134.8" y="819.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.8" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="135.2" y="803.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="138.2" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="135.6" y="803.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="138.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.17%)</title><rect x="136.0" y="851.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.17%)</title><rect x="136.0" y="835.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.17%)</title><rect x="136.0" y="819.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.10%)</title><rect x="136.8" y="803.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.put (1,129 samples, 37.80%)</title><rect x="138.0" y="883.0" width="446.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.0" y="894.0">ru/mail/polis/service/ivanovandrey/ServiceImpl.put</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.13%)</title><rect x="138.0" y="867.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.13%)</title><rect x="138.0" y="851.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.0" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="138.0" y="835.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="138.0" y="819.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.0" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.13%)</title><rect x="138.0" y="803.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.13%)</title><rect x="138.0" y="787.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.13%)</title><rect x="138.0" y="771.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.0" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="138.0" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.0" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="138.0" y="739.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="141.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="138.0" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="138.0" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="138.0" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="138.4" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (1 samples, 0.03%)</title><rect x="138.8" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="139.2" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="139.2" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="142.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="139.2" y="723.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="142.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.07%)</title><rect x="139.6" y="867.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (1,122 samples, 37.56%)</title><rect x="140.4" y="867.0" width="443.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.4" y="878.0">ru/mail/polis/dao/RocksDBImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,115 samples, 37.33%)</title><rect x="141.2" y="851.0" width="440.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.2" y="862.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,115 samples, 37.33%)</title><rect x="141.2" y="835.0" width="440.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.2" y="846.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="141.6" y="819.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="144.6" y="830.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,071 samples, 35.86%)</title><rect x="141.9" y="819.0" width="423.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="144.9" y="830.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (6 samples, 0.20%)</title><rect x="141.9" y="803.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="144.9" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="143.9" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="146.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="143.9" y="771.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="146.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="143.9" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="146.9" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (5 samples, 0.17%)</title><rect x="144.3" y="803.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="147.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="145.5" y="787.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="148.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="145.5" y="771.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="148.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="145.5" y="755.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="148.5" y="766.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.07%)</title><rect x="146.3" y="803.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="149.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="146.7" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="149.7" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="146.7" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.7" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="146.7" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="149.7" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.23%)</title><rect x="147.1" y="803.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="150.1" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="149.5" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="149.5" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="152.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="149.5" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.5" y="766.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.03%)</title><rect x="149.8" y="803.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="152.8" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="149.8" y="787.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="152.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="149.8" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="152.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="149.8" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="152.8" y="766.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (1 samples, 0.03%)</title><rect x="150.2" y="803.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="153.2" y="814.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.13%)</title><rect x="150.6" y="803.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="153.6" y="814.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (8 samples, 0.27%)</title><rect x="152.2" y="803.0" width="3.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="155.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="155.4" y="803.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="158.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="155.8" y="787.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="155.8" y="771.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="158.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="155.8" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="158.8" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,035 samples, 34.65%)</title><rect x="156.2" y="803.0" width="408.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="159.2" y="814.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::Writ..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="157.4" y="787.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="160.4" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="157.7" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="160.7" y="798.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="158.1" y="787.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="161.1" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="158.5" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="161.5" y="798.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.13%)</title><rect x="158.9" y="787.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="161.9" y="798.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.07%)</title><rect x="159.7" y="771.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="162.7" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.30%)</title><rect x="160.5" y="787.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="163.5" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="162.1" y="771.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="165.1" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.10%)</title><rect x="162.5" y="771.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="165.5" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="163.7" y="771.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="166.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,011 samples, 33.85%)</title><rect x="164.1" y="787.0" width="399.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="167.1" y="798.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.10%)</title><rect x="164.9" y="771.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="167.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1,006 samples, 33.68%)</title><rect x="166.0" y="771.0" width="397.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="169.0" y="782.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (995 samples, 33.31%)</title><rect x="166.4" y="755.0" width="393.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="169.4" y="766.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.03%)</title><rect x="166.8" y="739.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="169.8" y="750.0"></text>
</g>
<g>
<title>cfree (3 samples, 0.10%)</title><rect x="167.2" y="739.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="170.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="168.0" y="723.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="168.0" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="171.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="168.0" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.0" y="702.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.03%)</title><rect x="168.4" y="739.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="171.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.03%)</title><rect x="168.8" y="739.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="171.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="168.8" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="171.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="168.8" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="171.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="168.8" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="171.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (952 samples, 31.87%)</title><rect x="169.2" y="739.0" width="376.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="172.2" y="750.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.13%)</title><rect x="170.0" y="723.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="173.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="171.2" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="174.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="171.2" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="174.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="171.2" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.2" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.03%)</title><rect x="171.6" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="174.6" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="171.6" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.6" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="171.6" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.6" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="171.6" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="174.6" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="172.0" y="723.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="175.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="172.0" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="175.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="172.0" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="175.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="172.0" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="175.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.07%)</title><rect x="172.4" y="723.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="175.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.03%)</title><rect x="173.2" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="176.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() [clone .plt] (1 samples, 0.03%)</title><rect x="173.5" y="723.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="176.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="173.5" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="176.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="173.5" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="173.5" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="176.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (919 samples, 30.77%)</title><rect x="173.9" y="723.0" width="363.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="176.9" y="734.0">rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions ..</text>
</g>
<g>
<title>__sched_yield (155 samples, 5.19%)</title><rect x="181.1" y="707.0" width="61.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="184.1" y="718.0">__sche..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (125 samples, 4.18%)</title><rect x="192.9" y="691.0" width="49.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.9" y="702.0">entry..</text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.10%)</title><rect x="192.9" y="675.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (122 samples, 4.08%)</title><rect x="194.1" y="675.0" width="48.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="197.1" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sched_yield (95 samples, 3.18%)</title><rect x="204.8" y="659.0" width="37.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.8" y="670.0">__x..</text>
</g>
<g>
<title>do_sched_yield (95 samples, 3.18%)</title><rect x="204.8" y="643.0" width="37.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="207.8" y="654.0">do_..</text>
</g>
<g>
<title>schedule (95 samples, 3.18%)</title><rect x="204.8" y="627.0" width="37.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.8" y="638.0">sch..</text>
</g>
<g>
<title>__schedule (95 samples, 3.18%)</title><rect x="204.8" y="611.0" width="37.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="207.8" y="622.0">__s..</text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="241.9" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="244.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (21 samples, 0.70%)</title><rect x="242.3" y="707.0" width="8.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="245.3" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="250.2" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="250.2" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="250.2" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="253.2" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (4 samples, 0.13%)</title><rect x="250.6" y="707.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="253.6" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="251.8" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.8" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="251.8" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="254.8" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="251.8" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.8" y="670.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.10%)</title><rect x="252.2" y="707.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="255.2" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="253.3" y="707.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="256.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.03%)</title><rect x="253.7" y="707.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="256.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (5 samples, 0.17%)</title><rect x="254.1" y="707.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="257.1" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="254.9" y="691.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="257.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.03%)</title><rect x="256.1" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="259.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.03%)</title><rect x="256.1" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="259.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (95 samples, 3.18%)</title><rect x="256.5" y="707.0" width="37.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="259.5" y="718.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (91 samples, 3.05%)</title><rect x="256.9" y="691.0" width="36.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="259.9" y="702.0">roc..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (89 samples, 2.98%)</title><rect x="257.3" y="675.0" width="35.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="260.3" y="686.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (7 samples, 0.23%)</title><rect x="257.7" y="659.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="260.7" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.17%)</title><rect x="258.5" y="643.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="261.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.17%)</title><rect x="258.5" y="627.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="261.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.17%)</title><rect x="258.5" y="611.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="261.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (69 samples, 2.31%)</title><rect x="260.5" y="659.0" width="27.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="263.5" y="670.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="260.9" y="643.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="263.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="260.9" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="263.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="260.9" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="263.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="260.9" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="263.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.07%)</title><rect x="261.2" y="643.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="264.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (1 samples, 0.03%)</title><rect x="262.0" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="265.0" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="262.0" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="265.0" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="262.0" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="262.0" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (63 samples, 2.11%)</title><rect x="262.4" y="643.0" width="24.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="265.4" y="654.0">r..</text>
</g>
<g>
<title>__write (59 samples, 1.98%)</title><rect x="263.2" y="627.0" width="23.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="266.2" y="638.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.94%)</title><rect x="263.2" y="611.0" width="22.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="266.2" y="622.0">e..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.94%)</title><rect x="263.2" y="595.0" width="22.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="266.2" y="606.0">d..</text>
</g>
<g>
<title>__x64_sys_write (58 samples, 1.94%)</title><rect x="263.2" y="579.0" width="22.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="266.2" y="590.0">_..</text>
</g>
<g>
<title>ksys_write (57 samples, 1.91%)</title><rect x="263.6" y="563.0" width="22.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="266.6" y="574.0">k..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="263.6" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="266.6" y="558.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.03%)</title><rect x="264.0" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="267.0" y="558.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="264.4" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="267.4" y="558.0"></text>
</g>
<g>
<title>vfs_write (54 samples, 1.81%)</title><rect x="264.8" y="547.0" width="21.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="267.8" y="558.0">v..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="265.2" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="268.2" y="542.0"></text>
</g>
<g>
<title>__vfs_write (52 samples, 1.74%)</title><rect x="265.6" y="531.0" width="20.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="268.6" y="542.0"></text>
</g>
<g>
<title>new_sync_write (52 samples, 1.74%)</title><rect x="265.6" y="515.0" width="20.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="268.6" y="526.0"></text>
</g>
<g>
<title>ext4_file_write_iter (48 samples, 1.61%)</title><rect x="266.8" y="499.0" width="18.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.8" y="510.0"></text>
</g>
<g>
<title>__generic_file_write_iter (46 samples, 1.54%)</title><rect x="267.2" y="483.0" width="18.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="270.2" y="494.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.07%)</title><rect x="267.6" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.6" y="478.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="268.4" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="271.4" y="478.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="268.4" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="271.4" y="462.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.03%)</title><rect x="268.4" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.4" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (42 samples, 1.41%)</title><rect x="268.8" y="467.0" width="16.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="271.8" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_begin (12 samples, 0.40%)</title><rect x="269.1" y="451.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.1" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (6 samples, 0.20%)</title><rect x="269.1" y="435.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.1" y="446.0"></text>
</g>
<g>
<title>jbd2__journal_start (5 samples, 0.17%)</title><rect x="269.5" y="419.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.5" y="430.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="269.9" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="272.9" y="414.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="270.3" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="273.3" y="414.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.07%)</title><rect x="270.7" y="403.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.7" y="414.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="271.1" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="274.1" y="398.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.07%)</title><rect x="271.5" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="274.5" y="446.0"></text>
</g>
<g>
<title>create_empty_buffers (1 samples, 0.03%)</title><rect x="271.9" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.9" y="430.0"></text>
</g>
<g>
<title>alloc_page_buffers (1 samples, 0.03%)</title><rect x="271.9" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.9" y="414.0"></text>
</g>
<g>
<title>alloc_buffer_head (1 samples, 0.03%)</title><rect x="271.9" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="274.9" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="271.9" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="274.9" y="382.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.13%)</title><rect x="272.3" y="435.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="275.3" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.13%)</title><rect x="272.3" y="419.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="275.3" y="430.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.03%)</title><rect x="272.3" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.3" y="414.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.03%)</title><rect x="272.3" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="275.3" y="398.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.03%)</title><rect x="272.3" y="371.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.3" y="382.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.03%)</title><rect x="272.3" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.3" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="272.3" y="339.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.3" y="350.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.10%)</title><rect x="272.7" y="403.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.7" y="414.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="273.1" y="387.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="276.1" y="398.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.03%)</title><rect x="273.5" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.5" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (23 samples, 0.77%)</title><rect x="273.9" y="451.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.9" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.13%)</title><rect x="273.9" y="435.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="276.9" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.10%)</title><rect x="273.9" y="419.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="276.9" y="430.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.03%)</title><rect x="274.7" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="277.7" y="414.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="274.7" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="277.7" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="274.7" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="277.7" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="275.1" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.1" y="430.0"></text>
</g>
<g>
<title>generic_write_end (19 samples, 0.64%)</title><rect x="275.5" y="435.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="278.5" y="446.0"></text>
</g>
<g>
<title>__mark_inode_dirty (18 samples, 0.60%)</title><rect x="275.5" y="419.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.5" y="430.0"></text>
</g>
<g>
<title>ext4_dirty_inode (17 samples, 0.57%)</title><rect x="275.9" y="403.0" width="6.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.9" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="275.9" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.9" y="398.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="276.3" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="279.3" y="398.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (15 samples, 0.50%)</title><rect x="276.7" y="387.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="279.7" y="398.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (12 samples, 0.40%)</title><rect x="277.1" y="371.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="280.1" y="382.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.03%)</title><rect x="277.1" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="280.1" y="366.0"></text>
</g>
<g>
<title>ext4_do_update_inode (11 samples, 0.37%)</title><rect x="277.4" y="355.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="280.4" y="366.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.03%)</title><rect x="278.6" y="339.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="281.6" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.20%)</title><rect x="279.0" y="339.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="282.0" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (6 samples, 0.20%)</title><rect x="279.0" y="323.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="282.0" y="334.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.07%)</title><rect x="280.2" y="307.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.2" y="318.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.03%)</title><rect x="281.0" y="307.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="284.0" y="318.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.03%)</title><rect x="281.0" y="291.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="284.0" y="302.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.03%)</title><rect x="281.4" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="284.4" y="350.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.03%)</title><rect x="281.4" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="284.4" y="334.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.07%)</title><rect x="281.8" y="371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="284.8" y="382.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="281.8" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="284.8" y="366.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.03%)</title><rect x="281.8" y="339.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="284.8" y="350.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.03%)</title><rect x="281.8" y="323.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="284.8" y="334.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.03%)</title><rect x="282.2" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="285.2" y="366.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.03%)</title><rect x="282.6" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="285.6" y="430.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.03%)</title><rect x="282.6" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="285.6" y="414.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.03%)</title><rect x="283.0" y="451.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="286.0" y="462.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.07%)</title><rect x="283.4" y="451.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.4" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="283.8" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="286.8" y="446.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="284.2" y="451.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="287.2" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="284.6" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.6" y="462.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.03%)</title><rect x="285.0" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="288.0" y="462.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.03%)</title><rect x="285.3" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="288.3" y="494.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.03%)</title><rect x="285.3" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.3" y="478.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.03%)</title><rect x="285.7" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="288.7" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="286.1" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="289.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="286.1" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="289.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="286.1" y="579.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="289.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.03%)</title><rect x="286.5" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="289.5" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="286.5" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="289.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="286.5" y="595.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="286.5" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="289.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="286.9" y="627.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="289.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="286.9" y="611.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="289.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="286.9" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="289.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="287.3" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="287.3" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="287.3" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="290.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="287.7" y="659.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="290.7" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="288.1" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="291.1" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="288.1" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.1" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="288.1" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="288.5" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="291.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="288.5" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="288.5" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="288.5" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="291.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (2 samples, 0.07%)</title><rect x="288.9" y="659.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="291.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (6 samples, 0.20%)</title><rect x="289.7" y="659.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="292.7" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="289.7" y="643.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="292.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="290.1" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="293.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="290.1" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="293.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="290.1" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.03%)</title><rect x="290.5" y="643.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="293.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="290.9" y="643.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="293.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.03%)</title><rect x="291.7" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="294.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="292.1" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.1" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="292.1" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="295.1" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="292.1" y="627.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="295.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="292.5" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="295.5" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="292.5" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="295.5" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="292.5" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.03%)</title><rect x="292.9" y="691.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="295.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.03%)</title><rect x="293.2" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="296.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="293.6" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.6" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="293.6" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.6" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="293.6" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (16 samples, 0.54%)</title><rect x="294.0" y="707.0" width="6.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="297.0" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="294.4" y="691.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="297.4" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (10 samples, 0.33%)</title><rect x="295.2" y="691.0" width="4.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="298.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="298.8" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="301.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="298.8" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="298.8" y="643.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.8" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (3 samples, 0.10%)</title><rect x="299.2" y="691.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="302.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.03%)</title><rect x="300.4" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="303.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.03%)</title><rect x="300.8" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="303.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.03%)</title><rect x="301.1" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="304.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="301.1" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="304.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="301.1" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="304.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="301.1" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="304.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.03%)</title><rect x="301.5" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="304.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.03%)</title><rect x="301.9" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="304.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.03%)</title><rect x="302.3" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="305.3" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="302.3" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="302.3" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="305.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="302.3" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="305.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (535 samples, 17.91%)</title><rect x="302.7" y="707.0" width="211.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="305.7" y="718.0">rocksdb::WriteBatchInternal:..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (533 samples, 17.84%)</title><rect x="302.7" y="691.0" width="210.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="305.7" y="702.0">rocksdb::WriteBatch::Iterate..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="303.1" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="306.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (531 samples, 17.78%)</title><rect x="303.5" y="675.0" width="209.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="306.5" y="686.0">rocksdb::WriteBatchInternal..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (525 samples, 17.58%)</title><rect x="303.9" y="659.0" width="207.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="306.9" y="670.0">rocksdb::MemTableInserter::..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.07%)</title><rect x="303.9" y="643.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="306.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="303.9" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="306.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="303.9" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="306.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="303.9" y="595.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="306.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (3 samples, 0.10%)</title><rect x="304.7" y="643.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="307.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (520 samples, 17.41%)</title><rect x="305.9" y="643.0" width="205.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="308.9" y="654.0">rocksdb::MemTableInserter::..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.03%)</title><rect x="307.1" y="627.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="310.1" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.10%)</title><rect x="307.5" y="627.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="310.5" y="638.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="308.3" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.3" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="308.3" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="311.3" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="308.3" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.3" y="590.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="308.3" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="311.3" y="574.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="308.3" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="311.3" y="558.0"></text>
</g>
<g>
<title>memcpy (2 samples, 0.07%)</title><rect x="308.7" y="627.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="311.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.07%)</title><rect x="309.4" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="312.4" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="309.8" y="611.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="312.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="309.8" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="312.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="309.8" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="312.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.03%)</title><rect x="310.2" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="313.2" y="638.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="310.2" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="313.2" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="310.2" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.2" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="310.2" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.2" y="590.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="310.2" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.2" y="574.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="310.2" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="313.2" y="558.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="310.2" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="313.2" y="542.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.03%)</title><rect x="310.2" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.2" y="526.0"></text>
</g>
<g>
<title>get_vma_policy.part.0 (1 samples, 0.03%)</title><rect x="310.2" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="313.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (503 samples, 16.84%)</title><rect x="310.6" y="627.0" width="198.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="313.6" y="638.0">rocksdb::MemTable::Add(uns..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (4 samples, 0.13%)</title><rect x="310.6" y="611.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="313.6" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="311.0" y="595.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="314.0" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="311.0" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="314.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="311.0" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="314.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="311.0" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.07%)</title><rect x="311.4" y="595.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="314.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="311.8" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="311.8" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="314.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="311.8" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="314.8" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (486 samples, 16.27%)</title><rect x="312.2" y="611.0" width="192.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="315.2" y="622.0">bool rocksdb::InlineSkipL..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (458 samples, 15.33%)</title><rect x="315.0" y="595.0" width="180.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="318.0" y="606.0">/tmp/librocksdbjni15386..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (311 samples, 10.41%)</title><rect x="343.0" y="579.0" width="122.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="346.0" y="590.0">/tmp/librocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (26 samples, 0.87%)</title><rect x="344.2" y="563.0" width="10.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="347.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (12 samples, 0.40%)</title><rect x="349.7" y="547.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="352.7" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (12 samples, 0.40%)</title><rect x="349.7" y="531.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.7" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 0.40%)</title><rect x="349.7" y="515.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="352.7" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (22 samples, 0.74%)</title><rect x="354.5" y="563.0" width="8.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="357.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (10 samples, 0.33%)</title><rect x="359.2" y="547.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="362.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (10 samples, 0.33%)</title><rect x="359.2" y="531.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.33%)</title><rect x="359.2" y="515.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.2" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.03%)</title><rect x="363.2" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="366.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="363.2" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="366.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="363.2" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="366.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="363.2" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="366.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (69 samples, 2.31%)</title><rect x="363.6" y="563.0" width="27.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="366.6" y="574.0">_..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (31 samples, 1.04%)</title><rect x="378.6" y="547.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.6" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (31 samples, 1.04%)</title><rect x="378.6" y="531.0" width="12.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.6" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (31 samples, 1.04%)</title><rect x="378.6" y="515.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="381.6" y="526.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="390.4" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.4" y="510.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="390.4" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="393.4" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="390.4" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.4" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (4 samples, 0.13%)</title><rect x="390.8" y="563.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="393.8" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="392.0" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="395.0" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="392.0" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="395.0" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="392.0" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="395.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (185 samples, 6.19%)</title><rect x="392.4" y="563.0" width="73.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="395.4" y="574.0">rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (21 samples, 0.70%)</title><rect x="406.6" y="547.0" width="8.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="409.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (9 samples, 0.30%)</title><rect x="411.4" y="531.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.4" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (9 samples, 0.30%)</title><rect x="411.4" y="515.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.4" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.30%)</title><rect x="411.4" y="499.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="414.4" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (61 samples, 2.04%)</title><rect x="414.9" y="547.0" width="24.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="417.9" y="558.0">/..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (32 samples, 1.07%)</title><rect x="426.4" y="531.0" width="12.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.4" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (32 samples, 1.07%)</title><rect x="426.4" y="515.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="429.4" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (32 samples, 1.07%)</title><rect x="426.4" y="499.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="429.4" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.10%)</title><rect x="439.0" y="547.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="442.0" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="439.8" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="439.8" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="442.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="439.8" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.8" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (24 samples, 0.80%)</title><rect x="440.2" y="547.0" width="9.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="443.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (9 samples, 0.30%)</title><rect x="446.1" y="531.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.1" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (9 samples, 0.30%)</title><rect x="446.1" y="515.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.1" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.30%)</title><rect x="446.1" y="499.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.1" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="449.7" y="547.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="452.7" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="449.7" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="452.7" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="449.7" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="452.7" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="449.7" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="452.7" y="510.0"></text>
</g>
<g>
<title>memcmp@plt (5 samples, 0.17%)</title><rect x="450.1" y="547.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="453.1" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="450.9" y="531.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="453.9" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="450.9" y="515.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.9" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="450.9" y="499.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.9" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (34 samples, 1.14%)</title><rect x="452.1" y="547.0" width="13.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="455.1" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (34 samples, 1.14%)</title><rect x="452.1" y="531.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="455.1" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (34 samples, 1.14%)</title><rect x="452.1" y="515.0" width="13.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.1" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="465.5" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="468.5" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="465.5" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="468.5" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="465.5" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.5" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.07%)</title><rect x="465.9" y="579.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="468.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (19 samples, 0.64%)</title><rect x="466.7" y="579.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="469.7" y="590.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.13%)</title><rect x="470.2" y="563.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="473.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="471.8" y="563.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="474.8" y="574.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.07%)</title><rect x="472.2" y="563.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="475.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="473.0" y="563.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="473.0" y="547.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="473.0" y="531.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.0" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (55 samples, 1.84%)</title><rect x="474.2" y="579.0" width="21.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="477.2" y="590.0">s..</text>
</g>
<g>
<title>prepare_exit_to_usermode (55 samples, 1.84%)</title><rect x="474.2" y="563.0" width="21.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.2" y="574.0">p..</text>
</g>
<g>
<title>exit_to_usermode_loop (55 samples, 1.84%)</title><rect x="474.2" y="547.0" width="21.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.2" y="558.0">e..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.10%)</title><rect x="495.9" y="595.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="498.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="496.7" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="499.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="496.7" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="499.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="496.7" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.7" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.03%)</title><rect x="497.1" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="500.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="497.1" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="500.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="497.1" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="500.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="497.1" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="500.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="497.5" y="595.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="500.5" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="497.9" y="579.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="500.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="497.9" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="500.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="497.9" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="500.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (9 samples, 0.30%)</title><rect x="498.7" y="595.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="501.7" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="499.5" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="502.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="499.9" y="579.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="502.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="499.9" y="563.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="499.9" y="547.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="502.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="499.9" y="531.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.9" y="542.0"></text>
</g>
<g>
<title>memcmp@plt (2 samples, 0.07%)</title><rect x="500.6" y="579.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="503.6" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="501.4" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="501.4" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="504.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="501.4" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="504.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.07%)</title><rect x="502.2" y="595.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="505.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="503.0" y="595.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="503.0" y="579.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="503.0" y="563.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="506.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.03%)</title><rect x="504.2" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="507.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.10%)</title><rect x="504.6" y="611.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="507.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="505.0" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="508.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="505.0" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="508.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="505.0" y="563.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="508.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (2 samples, 0.07%)</title><rect x="505.8" y="611.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="508.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (5 samples, 0.17%)</title><rect x="506.6" y="611.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="509.6" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (3 samples, 0.10%)</title><rect x="506.6" y="595.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="509.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="507.4" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="510.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="507.4" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="507.4" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="510.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.07%)</title><rect x="507.8" y="595.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="510.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="508.5" y="611.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="511.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="508.5" y="595.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="508.5" y="579.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.03%)</title><rect x="509.3" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="512.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.03%)</title><rect x="509.7" y="627.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="512.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() [clone .plt] (1 samples, 0.03%)</title><rect x="510.1" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="513.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="510.5" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="513.5" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="510.9" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="513.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="510.9" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="513.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="510.9" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="513.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.10%)</title><rect x="511.3" y="659.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="514.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.07%)</title><rect x="512.5" y="659.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="515.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="513.3" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="516.3" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="513.7" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="516.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="513.7" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="516.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="513.7" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="516.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.03%)</title><rect x="514.1" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="517.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.03%)</title><rect x="514.1" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="517.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="514.1" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="517.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.03%)</title><rect x="514.5" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="517.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (21 samples, 0.70%)</title><rect x="514.9" y="707.0" width="8.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="517.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.10%)</title><rect x="523.2" y="707.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="526.2" y="718.0"></text>
</g>
<g>
<title>__sched_yield (3 samples, 0.10%)</title><rect x="523.2" y="691.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="526.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.10%)</title><rect x="523.2" y="675.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="526.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.10%)</title><rect x="523.2" y="659.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.07%)</title><rect x="523.6" y="643.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="526.6" y="654.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.07%)</title><rect x="523.6" y="627.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.6" y="638.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.07%)</title><rect x="523.6" y="611.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="526.6" y="622.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="524.0" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="527.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) [clone .plt] (1 samples, 0.03%)</title><rect x="524.3" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="527.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.03%)</title><rect x="524.7" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="527.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="524.7" y="691.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="524.7" y="675.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="527.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="524.7" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (5 samples, 0.17%)</title><rect x="525.1" y="707.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="528.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.07%)</title><rect x="526.3" y="691.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="529.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (8 samples, 0.27%)</title><rect x="527.1" y="707.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="530.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) [clone .plt] (1 samples, 0.03%)</title><rect x="530.3" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="533.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (3 samples, 0.10%)</title><rect x="530.7" y="707.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="533.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() [clone .plt] (1 samples, 0.03%)</title><rect x="531.9" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="534.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.03%)</title><rect x="532.2" y="707.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="535.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (3 samples, 0.10%)</title><rect x="532.6" y="707.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="535.6" y="718.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (6 samples, 0.20%)</title><rect x="533.8" y="707.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="536.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="536.2" y="707.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="539.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="536.2" y="691.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="539.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="536.2" y="675.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="539.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.07%)</title><rect x="537.0" y="723.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="540.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) [clone .plt] (1 samples, 0.03%)</title><rect x="537.8" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="540.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.03%)</title><rect x="538.2" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="541.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() [clone .plt] (2 samples, 0.07%)</title><rect x="538.6" y="723.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="541.6" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="539.0" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="542.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="539.0" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="542.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="539.0" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="542.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="539.4" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="542.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="539.4" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="542.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="539.4" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="542.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="539.4" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="542.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.03%)</title><rect x="539.8" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="542.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) [clone .plt] (1 samples, 0.03%)</title><rect x="540.2" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="543.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) [clone .plt] (1 samples, 0.03%)</title><rect x="540.5" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="543.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.07%)</title><rect x="540.9" y="723.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="543.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="540.9" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="540.9" y="691.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="543.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="540.9" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (4 samples, 0.13%)</title><rect x="541.7" y="723.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="544.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (4 samples, 0.13%)</title><rect x="543.3" y="723.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="546.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="544.9" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="547.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="544.9" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="544.9" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="547.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.03%)</title><rect x="545.3" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="548.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.17%)</title><rect x="545.7" y="739.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="548.7" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="547.3" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="550.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="547.3" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="550.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="547.3" y="691.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="550.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) [clone .plt] (2 samples, 0.07%)</title><rect x="547.7" y="739.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="550.7" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="547.7" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="550.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="547.7" y="707.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="550.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="547.7" y="691.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 0.54%)</title><rect x="548.4" y="739.0" width="6.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="551.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.07%)</title><rect x="548.4" y="723.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="551.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="548.4" y="707.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="551.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="548.4" y="691.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="551.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="548.4" y="675.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="551.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.03%)</title><rect x="549.2" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="552.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.03%)</title><rect x="549.6" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="552.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.03%)</title><rect x="550.0" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="553.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (1 samples, 0.03%)</title><rect x="550.4" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="553.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.03%)</title><rect x="550.8" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="553.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.03%)</title><rect x="551.2" y="723.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="554.2" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="551.2" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="554.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="551.2" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="551.2" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="554.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="551.6" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="554.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.07%)</title><rect x="552.0" y="723.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="555.0" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.13%)</title><rect x="552.8" y="723.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="555.8" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="554.4" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="557.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="554.4" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="557.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="554.4" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="557.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="554.4" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="557.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.10%)</title><rect x="554.8" y="739.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="557.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.07%)</title><rect x="556.0" y="739.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="559.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="556.0" y="723.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="559.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="556.0" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="559.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="556.0" y="691.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="559.0" y="702.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.03%)</title><rect x="556.7" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="559.7" y="750.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (6 samples, 0.20%)</title><rect x="557.1" y="739.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="560.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (4 samples, 0.13%)</title><rect x="559.5" y="755.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="562.5" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="560.7" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="563.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="560.7" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="563.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="560.7" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="561.1" y="755.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="564.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="561.5" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="564.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="561.5" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="564.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="561.5" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="564.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.07%)</title><rect x="561.9" y="755.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="564.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="562.7" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="565.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() [clone .plt] (1 samples, 0.03%)</title><rect x="563.1" y="755.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="566.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.10%)</title><rect x="563.5" y="787.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="566.5" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="564.2" y="771.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="567.2" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="564.2" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="567.2" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="564.2" y="739.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="567.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="564.6" y="787.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="567.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.60%)</title><rect x="565.0" y="819.0" width="7.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="568.0" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.17%)</title><rect x="565.0" y="803.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="568.0" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.03%)</title><rect x="567.0" y="803.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="570.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="567.4" y="803.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="570.4" y="814.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.07%)</title><rect x="567.4" y="787.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="570.4" y="798.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="567.4" y="771.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="570.4" y="782.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.07%)</title><rect x="568.2" y="803.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="571.2" y="814.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (3 samples, 0.10%)</title><rect x="569.0" y="803.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="572.0" y="814.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.07%)</title><rect x="570.2" y="803.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="573.2" y="814.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="571.0" y="803.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="574.0" y="814.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.07%)</title><rect x="571.4" y="803.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="574.4" y="814.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.07%)</title><rect x="571.4" y="787.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="574.4" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="571.8" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="574.8" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="571.8" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="574.8" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="571.8" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="574.8" y="750.0"></text>
</g>
<g>
<title>__libc_malloc (6 samples, 0.20%)</title><rect x="572.1" y="819.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="575.1" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="574.1" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="577.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="574.1" y="787.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="577.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="574.1" y="771.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="577.1" y="782.0"></text>
</g>
<g>
<title>clock_gettime (13 samples, 0.44%)</title><rect x="574.5" y="819.0" width="5.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="577.5" y="830.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.10%)</title><rect x="576.1" y="803.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="579.1" y="814.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.20%)</title><rect x="577.3" y="803.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="580.3" y="814.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.17%)</title><rect x="577.7" y="787.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="580.7" y="798.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.10%)</title><rect x="579.7" y="819.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="582.7" y="830.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.03%)</title><rect x="580.8" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="583.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="581.2" y="819.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="584.2" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="581.2" y="803.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="584.2" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="581.2" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (2 samples, 0.07%)</title><rect x="581.6" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.07%)</title><rect x="581.6" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.6" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.07%)</title><rect x="581.6" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.6" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="581.6" y="803.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="584.6" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="582.0" y="803.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="585.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (3 samples, 0.10%)</title><rect x="582.4" y="851.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (2 samples, 0.07%)</title><rect x="582.4" y="835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="582.4" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.4" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="582.4" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="582.8" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="583.2" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="583.2" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="586.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="583.2" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="586.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.strToByteBuffer (1 samples, 0.03%)</title><rect x="583.6" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="583.6" y="851.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="583.6" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.6" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="583.6" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="583.6" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.6" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="583.6" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="583.6" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="583.6" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.6" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="583.6" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.07%)</title><rect x="584.0" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="584.0" y="883.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="584.0" y="867.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.07%)</title><rect x="584.0" y="851.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.0" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="584.0" y="835.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="584.0" y="819.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="584.0" y="803.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.37%)</title><rect x="584.8" y="931.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.8" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.30%)</title><rect x="585.2" y="915.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.2" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="586.0" y="899.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="589.0" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="586.0" y="883.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="589.0" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="586.0" y="867.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="589.0" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="586.0" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="589.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="586.0" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="589.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="586.0" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="589.0" y="830.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="586.0" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="589.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.13%)</title><rect x="586.4" y="899.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.13%)</title><rect x="586.4" y="883.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.4" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="587.6" y="867.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="590.6" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="587.6" y="851.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="587.6" y="835.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.6" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="588.0" y="899.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.0" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="588.0" y="883.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="591.0" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="588.0" y="867.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.0" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="588.7" y="915.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.7" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="588.7" y="899.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="591.7" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="588.7" y="883.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="589.1" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.17%)</title><rect x="589.5" y="931.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="589.5" y="915.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="589.5" y="899.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.5" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="589.5" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="589.5" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.5" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="589.5" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.5" y="862.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="589.5" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="589.9" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="589.9" y="867.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.9" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="589.9" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="590.3" y="915.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="590.7" y="899.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="590.7" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.7" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="590.7" y="867.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="593.7" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="590.7" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="593.7" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="590.7" y="835.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.7" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="590.7" y="819.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.7" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="591.1" y="883.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.1" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="591.1" y="867.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="594.1" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="591.1" y="851.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="591.5" y="931.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.5" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="591.9" y="915.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.9" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="592.3" y="899.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="595.3" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="592.3" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="595.3" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="592.3" y="867.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="595.3" y="878.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="592.3" y="851.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="595.3" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="592.7" y="899.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.7" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="592.7" y="883.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.7" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="592.7" y="867.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="595.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (43 samples, 1.44%)</title><rect x="593.1" y="947.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (43 samples, 1.44%)</title><rect x="593.1" y="931.0" width="17.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.1" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="593.1" y="915.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="596.1" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="593.1" y="899.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="596.1" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="593.1" y="883.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="596.1" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="593.1" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="596.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.47%)</title><rect x="593.5" y="915.0" width="5.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="596.5" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.10%)</title><rect x="593.9" y="899.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="596.9" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="594.7" y="883.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="597.7" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="594.7" y="867.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="597.7" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="594.7" y="851.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="597.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="595.1" y="899.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="598.1" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="595.1" y="883.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.1" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="595.1" y="867.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="598.1" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="595.1" y="851.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.1" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="595.5" y="899.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="598.5" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.23%)</title><rect x="595.9" y="899.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="598.9" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="596.6" y="883.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="599.6" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="596.6" y="867.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="599.6" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="596.6" y="851.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="599.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="596.6" y="835.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.6" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.10%)</title><rect x="597.0" y="883.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="600.0" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="597.4" y="867.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.4" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="597.4" y="851.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="600.4" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="597.4" y="835.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.4" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="598.2" y="883.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.2" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="598.2" y="867.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="601.2" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="598.2" y="851.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="601.2" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="598.6" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.6" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="598.6" y="883.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.6" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="598.6" y="867.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.6" y="878.0"></text>
</g>
<g>
<title>__recv (28 samples, 0.94%)</title><rect x="599.0" y="915.0" width="11.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="602.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.67%)</title><rect x="599.4" y="899.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="602.4" y="910.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="599.4" y="883.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="602.4" y="894.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="599.8" y="883.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.60%)</title><rect x="600.2" y="883.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.2" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (17 samples, 0.57%)</title><rect x="600.6" y="867.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.6" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (17 samples, 0.57%)</title><rect x="600.6" y="851.0" width="6.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.6" y="862.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="601.8" y="835.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="604.8" y="846.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.40%)</title><rect x="602.2" y="835.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="605.2" y="846.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.40%)</title><rect x="602.2" y="819.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="605.2" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.37%)</title><rect x="602.6" y="803.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.6" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="603.4" y="787.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.4" y="798.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.07%)</title><rect x="603.4" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.4" y="782.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="603.8" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="606.8" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="604.1" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="607.1" y="782.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="604.5" y="787.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="607.5" y="798.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="604.9" y="771.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="607.9" y="782.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.13%)</title><rect x="605.3" y="787.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="608.3" y="798.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.13%)</title><rect x="605.3" y="771.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="608.3" y="782.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="606.5" y="755.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.5" y="766.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="606.5" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.5" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="606.9" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="609.9" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="606.9" y="819.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.9" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (7 samples, 0.23%)</title><rect x="607.3" y="899.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="610.3" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (7 samples, 0.23%)</title><rect x="607.3" y="883.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="610.3" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.23%)</title><rect x="607.3" y="867.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.3" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=1741] (1,468 samples, 49.15%)</title><rect x="610.1" y="1011.0" width="579.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="613.1" y="1022.0">[NIO Selector #1 tid=1741]</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="610.1" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,467 samples, 49.11%)</title><rect x="610.5" y="995.0" width="579.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.5" y="1006.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="610.5" y="979.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.5" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.07%)</title><rect x="610.5" y="963.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.5" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="610.5" y="947.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="613.5" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="610.5" y="931.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="613.5" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="610.5" y="915.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.13%)</title><rect x="611.3" y="979.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.13%)</title><rect x="611.3" y="963.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.3" y="974.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="611.3" y="947.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="614.3" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="611.3" y="931.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="614.3" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="611.3" y="915.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.3" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="611.3" y="899.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.3" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="611.7" y="947.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="614.7" y="958.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.07%)</title><rect x="612.0" y="947.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="615.0" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="612.0" y="931.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.0" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="612.0" y="915.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="615.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.07%)</title><rect x="612.0" y="899.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="615.0" y="910.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.07%)</title><rect x="612.0" y="883.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.0" y="894.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="612.0" y="867.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.0" y="878.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="612.0" y="851.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.0" y="862.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="612.0" y="835.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.0" y="846.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.03%)</title><rect x="612.4" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="615.4" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.03%)</title><rect x="612.4" y="851.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="615.4" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.03%)</title><rect x="612.4" y="835.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="615.4" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="612.4" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="615.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,461 samples, 48.91%)</title><rect x="612.8" y="979.0" width="577.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.8" y="990.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,461 samples, 48.91%)</title><rect x="612.8" y="963.0" width="577.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.8" y="974.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,400 samples, 46.87%)</title><rect x="613.2" y="947.0" width="553.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.2" y="958.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,368 samples, 45.80%)</title><rect x="613.6" y="931.0" width="540.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.6" y="942.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,367 samples, 45.76%)</title><rect x="613.6" y="915.0" width="540.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.6" y="926.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (2 samples, 0.07%)</title><rect x="613.6" y="899.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="613.6" y="883.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.6" y="894.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1,360 samples, 45.53%)</title><rect x="614.4" y="899.0" width="537.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.4" y="910.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (233 samples, 7.80%)</title><rect x="614.4" y="883.0" width="92.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.4" y="894.0">one/nio/htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="614.4" y="867.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="614.4" y="851.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.07%)</title><rect x="614.4" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="614.8" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (229 samples, 7.67%)</title><rect x="615.2" y="867.0" width="90.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.2" y="878.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.27%)</title><rect x="615.2" y="851.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.23%)</title><rect x="615.6" y="835.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.10%)</title><rect x="615.6" y="819.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="616.4" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.13%)</title><rect x="616.8" y="819.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.13%)</title><rect x="616.8" y="803.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.13%)</title><rect x="616.8" y="787.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.10%)</title><rect x="617.2" y="771.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.03%)</title><rect x="618.0" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="618.0" y="739.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="618.0" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="621.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="618.0" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="621.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (221 samples, 7.40%)</title><rect x="618.4" y="851.0" width="87.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.4" y="862.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (221 samples, 7.40%)</title><rect x="618.4" y="835.0" width="87.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.4" y="846.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (221 samples, 7.40%)</title><rect x="618.4" y="819.0" width="87.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.4" y="830.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (221 samples, 7.40%)</title><rect x="618.4" y="803.0" width="87.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.4" y="814.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.23%)</title><rect x="618.8" y="787.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="621.8" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="619.2" y="771.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="622.2" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="619.6" y="771.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="622.6" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="619.9" y="771.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="622.9" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="619.9" y="755.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="622.9" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="619.9" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="622.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="619.9" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="622.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="619.9" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="622.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="620.3" y="755.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.3" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="620.3" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="623.3" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="620.3" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="623.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="620.7" y="771.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.7" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="620.7" y="755.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="623.7" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="620.7" y="739.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="623.7" y="750.0"></text>
</g>
<g>
<title>send (210 samples, 7.03%)</title><rect x="621.5" y="787.0" width="83.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="624.5" y="798.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (201 samples, 6.73%)</title><rect x="623.9" y="771.0" width="79.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="626.9" y="782.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="623.9" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="626.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (200 samples, 6.70%)</title><rect x="624.3" y="755.0" width="79.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="627.3" y="766.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (174 samples, 5.83%)</title><rect x="625.1" y="739.0" width="68.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="628.1" y="750.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (173 samples, 5.79%)</title><rect x="625.1" y="723.0" width="68.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="628.1" y="734.0">__sys_s..</text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="625.1" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="628.1" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="625.5" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.5" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (170 samples, 5.69%)</title><rect x="625.9" y="707.0" width="67.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="628.9" y="718.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.07%)</title><rect x="626.3" y="691.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="629.3" y="702.0"></text>
</g>
<g>
<title>inet6_sendmsg (166 samples, 5.56%)</title><rect x="627.1" y="691.0" width="65.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="630.1" y="702.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (166 samples, 5.56%)</title><rect x="627.1" y="675.0" width="65.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="630.1" y="686.0">tcp_sen..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="627.1" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="630.1" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="627.1" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="630.1" y="654.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.10%)</title><rect x="627.5" y="659.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.5" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="628.2" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="631.2" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (162 samples, 5.42%)</title><rect x="628.6" y="659.0" width="64.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="631.6" y="670.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="629.4" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="632.4" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="629.4" y="627.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="632.4" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.10%)</title><rect x="629.8" y="643.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.8" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.10%)</title><rect x="629.8" y="627.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="632.8" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.17%)</title><rect x="631.0" y="643.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="634.0" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.17%)</title><rect x="631.0" y="627.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="634.0" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.03%)</title><rect x="631.0" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="634.0" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="631.0" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.0" y="606.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="631.0" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="634.0" y="590.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="631.4" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.4" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="631.8" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.8" y="622.0"></text>
</g>
<g>
<title>memset (2 samples, 0.07%)</title><rect x="632.2" y="611.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="635.2" y="622.0"></text>
</g>
<g>
<title>tcp_push (149 samples, 4.99%)</title><rect x="633.0" y="643.0" width="58.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.0" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (149 samples, 4.99%)</title><rect x="633.0" y="627.0" width="58.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="636.0" y="638.0">__tcp_..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="633.0" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.0" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (148 samples, 4.95%)</title><rect x="633.4" y="611.0" width="58.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.4" y="622.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (141 samples, 4.72%)</title><rect x="633.8" y="595.0" width="55.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="636.8" y="606.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (141 samples, 4.72%)</title><rect x="633.8" y="579.0" width="55.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="636.8" y="590.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (141 samples, 4.72%)</title><rect x="633.8" y="563.0" width="55.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="636.8" y="574.0">__ip_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="634.2" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.2" y="558.0"></text>
</g>
<g>
<title>ip_local_out (139 samples, 4.65%)</title><rect x="634.6" y="547.0" width="54.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="637.6" y="558.0">ip_lo..</text>
</g>
<g>
<title>ip_output (139 samples, 4.65%)</title><rect x="634.6" y="531.0" width="54.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="637.6" y="542.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (138 samples, 4.62%)</title><rect x="635.0" y="515.0" width="54.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="638.0" y="526.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="635.4" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="638.4" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (136 samples, 4.55%)</title><rect x="635.8" y="499.0" width="53.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.8" y="510.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (135 samples, 4.52%)</title><rect x="636.1" y="483.0" width="53.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.1" y="494.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (132 samples, 4.42%)</title><rect x="636.1" y="467.0" width="52.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.1" y="478.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (132 samples, 4.42%)</title><rect x="636.1" y="451.0" width="52.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.1" y="462.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (130 samples, 4.35%)</title><rect x="636.9" y="435.0" width="51.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.9" y="446.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (130 samples, 4.35%)</title><rect x="636.9" y="419.0" width="51.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="639.9" y="430.0">__sof..</text>
</g>
<g>
<title>net_rx_action (129 samples, 4.32%)</title><rect x="637.3" y="403.0" width="51.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="640.3" y="414.0">net_r..</text>
</g>
<g>
<title>process_backlog (129 samples, 4.32%)</title><rect x="637.3" y="387.0" width="51.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="640.3" y="398.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (126 samples, 4.22%)</title><rect x="638.1" y="371.0" width="49.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.1" y="382.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (126 samples, 4.22%)</title><rect x="638.1" y="355.0" width="49.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="641.1" y="366.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.10%)</title><rect x="638.1" y="339.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.1" y="350.0"></text>
</g>
<g>
<title>ip_rcv (122 samples, 4.08%)</title><rect x="639.3" y="339.0" width="48.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="642.3" y="350.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (122 samples, 4.08%)</title><rect x="639.3" y="323.0" width="48.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.3" y="334.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (121 samples, 4.05%)</title><rect x="639.3" y="307.0" width="47.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="642.3" y="318.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (121 samples, 4.05%)</title><rect x="639.3" y="291.0" width="47.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="642.3" y="302.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (120 samples, 4.02%)</title><rect x="639.3" y="275.0" width="47.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="642.3" y="286.0">ip_p..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.03%)</title><rect x="639.3" y="259.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="642.3" y="270.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="639.7" y="259.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="642.7" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (118 samples, 3.95%)</title><rect x="640.1" y="259.0" width="46.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="643.1" y="270.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="640.5" y="243.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.5" y="254.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="640.5" y="227.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.5" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="640.9" y="243.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="643.9" y="254.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="640.9" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="643.9" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (115 samples, 3.85%)</title><rect x="641.3" y="243.0" width="45.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.3" y="254.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="641.7" y="227.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="644.7" y="238.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="642.1" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.1" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (112 samples, 3.75%)</title><rect x="642.5" y="227.0" width="44.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="645.5" y="238.0">tcp_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="642.5" y="211.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="645.5" y="222.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.47%)</title><rect x="642.9" y="211.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="645.9" y="222.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="644.8" y="195.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.8" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.17%)</title><rect x="645.2" y="195.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.2" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.07%)</title><rect x="645.2" y="179.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="648.2" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="645.2" y="163.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="648.2" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="645.2" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="648.2" y="158.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="645.6" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="648.6" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="645.6" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.6" y="158.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="645.6" y="131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="648.6" y="142.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="645.6" y="115.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.6" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="646.0" y="179.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.0" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.07%)</title><rect x="646.4" y="179.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="649.4" y="190.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="647.2" y="195.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="650.2" y="206.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="647.6" y="195.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="650.6" y="206.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="648.0" y="195.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="651.0" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (96 samples, 3.21%)</title><rect x="648.4" y="211.0" width="37.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.4" y="222.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (96 samples, 3.21%)</title><rect x="648.4" y="195.0" width="37.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.4" y="206.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (94 samples, 3.15%)</title><rect x="649.2" y="179.0" width="37.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.2" y="190.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (94 samples, 3.15%)</title><rect x="649.2" y="163.0" width="37.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="652.2" y="174.0">__w..</text>
</g>
<g>
<title>__lock_text_start (94 samples, 3.15%)</title><rect x="649.2" y="147.0" width="37.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.2" y="158.0">__l..</text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="686.3" y="211.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="689.3" y="222.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="686.7" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="689.7" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="687.1" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="690.1" y="318.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.03%)</title><rect x="687.5" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="690.5" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="687.9" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="690.9" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.07%)</title><rect x="688.3" y="467.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="691.3" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.07%)</title><rect x="688.3" y="451.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="691.3" y="462.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="688.3" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="691.3" y="446.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="688.7" y="435.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="691.7" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="689.1" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="692.1" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.07%)</title><rect x="689.5" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="692.5" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.07%)</title><rect x="689.5" y="579.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="692.5" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="689.5" y="563.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="692.5" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="689.9" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.9" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="689.9" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="692.9" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.10%)</title><rect x="690.3" y="595.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.3" y="606.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="691.1" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="694.1" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="691.5" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.5" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.07%)</title><rect x="691.8" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="694.8" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.07%)</title><rect x="691.8" y="627.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.8" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="692.2" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="695.2" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="692.6" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="695.6" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="692.6" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="695.6" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="692.6" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="695.6" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="693.0" y="707.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="696.0" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="693.0" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="696.0" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="693.0" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.0" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="693.4" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (23 samples, 0.77%)</title><rect x="693.8" y="739.0" width="9.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.8" y="750.0"></text>
</g>
<g>
<title>schedule (23 samples, 0.77%)</title><rect x="693.8" y="723.0" width="9.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.8" y="734.0"></text>
</g>
<g>
<title>__schedule (23 samples, 0.77%)</title><rect x="693.8" y="707.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.8" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 0.77%)</title><rect x="693.8" y="691.0" width="9.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="696.8" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="702.9" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="705.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="703.3" y="771.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="706.3" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="703.3" y="755.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="703.3" y="739.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="706.3" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="704.5" y="787.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="707.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="704.5" y="771.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="707.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="704.5" y="755.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="707.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="705.7" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (10 samples, 0.33%)</title><rect x="706.5" y="883.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.33%)</title><rect x="706.5" y="867.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (6 samples, 0.20%)</title><rect x="707.3" y="851.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.17%)</title><rect x="707.3" y="835.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.3" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="708.4" y="819.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="711.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="708.4" y="803.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="711.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="708.4" y="787.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="711.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="709.2" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="712.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="709.6" y="851.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.6" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="710.0" y="851.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="713.0" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="710.0" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.0" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="710.0" y="819.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="713.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ServiceImpl.put (1,117 samples, 37.40%)</title><rect x="710.4" y="883.0" width="441.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.4" y="894.0">ru/mail/polis/service/ivanovandrey/ServiceImpl.put</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.20%)</title><rect x="710.8" y="867.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.8" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.20%)</title><rect x="710.8" y="851.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="713.8" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.20%)</title><rect x="710.8" y="835.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.8" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.20%)</title><rect x="710.8" y="819.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.8" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.20%)</title><rect x="710.8" y="803.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.20%)</title><rect x="710.8" y="787.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.20%)</title><rect x="710.8" y="771.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.8" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.10%)</title><rect x="711.2" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.2" y="766.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.07%)</title><rect x="711.2" y="739.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="714.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="711.6" y="723.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="714.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="711.6" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="714.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="711.6" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="714.6" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="712.0" y="739.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="715.0" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="712.0" y="723.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="715.0" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="712.0" y="707.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="715.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="712.4" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (1 samples, 0.03%)</title><rect x="712.8" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="713.2" y="867.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="716.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (1,109 samples, 37.13%)</title><rect x="713.6" y="867.0" width="438.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.6" y="878.0">ru/mail/polis/dao/RocksDBImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,095 samples, 36.66%)</title><rect x="714.4" y="851.0" width="432.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.4" y="862.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,095 samples, 36.66%)</title><rect x="714.4" y="835.0" width="432.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.4" y="846.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="714.4" y="819.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="717.4" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.03%)</title><rect x="715.2" y="819.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="718.2" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="715.2" y="803.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="718.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="715.2" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="718.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="715.2" y="771.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="718.2" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1,043 samples, 34.92%)</title><rect x="715.6" y="819.0" width="412.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="718.6" y="830.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (5 samples, 0.17%)</title><rect x="716.7" y="803.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="719.7" y="814.0"></text>
</g>
<g>
<title>__libc_malloc (13 samples, 0.44%)</title><rect x="718.7" y="803.0" width="5.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="721.7" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="723.5" y="787.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="726.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="723.5" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="723.5" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.5" y="766.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.03%)</title><rect x="723.8" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="726.8" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="723.8" y="787.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="726.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="723.8" y="771.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="726.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="723.8" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.8" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.10%)</title><rect x="724.2" y="803.0" width="1.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="727.2" y="814.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="725.4" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="728.4" y="814.0"></text>
</g>
<g>
<title>operator new(unsigned long) (6 samples, 0.20%)</title><rect x="725.8" y="803.0" width="2.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="728.8" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="727.8" y="787.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="730.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="727.8" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="727.8" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="730.8" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (5 samples, 0.17%)</title><rect x="728.2" y="803.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="731.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="730.2" y="803.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="733.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="731.0" y="803.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="734.0" y="814.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1,003 samples, 33.58%)</title><rect x="731.4" y="803.0" width="396.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="734.4" y="814.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::Wr..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.20%)</title><rect x="731.4" y="787.0" width="2.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="734.4" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="733.3" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="736.3" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="733.3" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="736.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="733.3" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="736.3" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="733.7" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="736.7" y="798.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (7 samples, 0.23%)</title><rect x="734.1" y="787.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="737.1" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.07%)</title><rect x="736.9" y="787.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="739.9" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="737.7" y="787.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="740.7" y="798.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (10 samples, 0.33%)</title><rect x="738.5" y="787.0" width="3.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="741.5" y="798.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.07%)</title><rect x="741.2" y="771.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="744.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="742.0" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="745.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="742.0" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="745.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="742.0" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="745.0" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (17 samples, 0.57%)</title><rect x="742.4" y="787.0" width="6.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="745.4" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.07%)</title><rect x="746.8" y="771.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="749.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="747.2" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="750.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="747.2" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="750.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="747.2" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="750.2" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.10%)</title><rect x="747.5" y="771.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="750.5" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="748.7" y="771.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="751.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (952 samples, 31.87%)</title><rect x="749.1" y="787.0" width="376.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="752.1" y="798.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.13%)</title><rect x="749.1" y="771.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="752.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="749.9" y="755.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.9" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="749.9" y="739.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="752.9" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="749.9" y="723.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="752.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.07%)</title><rect x="750.7" y="771.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="753.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (946 samples, 31.67%)</title><rect x="751.5" y="771.0" width="373.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="754.5" y="782.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, ..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (934 samples, 31.27%)</title><rect x="751.9" y="755.0" width="369.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="754.9" y="766.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.07%)</title><rect x="752.7" y="739.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="755.7" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="753.1" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="753.1" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="756.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="753.1" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="756.1" y="702.0"></text>
</g>
<g>
<title>cfree (5 samples, 0.17%)</title><rect x="753.5" y="739.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="756.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="754.3" y="723.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="757.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="754.3" y="707.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="757.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="754.3" y="691.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="757.3" y="702.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.07%)</title><rect x="755.5" y="739.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="758.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="755.8" y="723.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="758.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="755.8" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="755.8" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="758.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (4 samples, 0.13%)</title><rect x="756.2" y="739.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="759.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="757.0" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="760.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="757.0" y="707.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="760.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="757.0" y="691.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (886 samples, 29.66%)</title><rect x="757.8" y="739.0" width="350.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="760.8" y="750.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions con..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (8 samples, 0.27%)</title><rect x="758.2" y="723.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="761.2" y="734.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (3 samples, 0.10%)</title><rect x="761.4" y="723.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="764.4" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.13%)</title><rect x="762.6" y="723.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="765.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.03%)</title><rect x="764.1" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="767.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) [clone .plt] (2 samples, 0.07%)</title><rect x="764.5" y="723.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="767.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.03%)</title><rect x="765.3" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="768.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (831 samples, 27.82%)</title><rect x="765.7" y="723.0" width="328.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="768.7" y="734.0">rocksdb::DBImpl::WriteImpl(rocksdb::WriteOpt..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="778.0" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="781.0" y="718.0"></text>
</g>
<g>
<title>__sched_yield (90 samples, 3.01%)</title><rect x="778.4" y="707.0" width="35.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="781.4" y="718.0">__s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 2.44%)</title><rect x="785.1" y="691.0" width="28.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="788.1" y="702.0">en..</text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.03%)</title><rect x="785.1" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="788.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 2.41%)</title><rect x="785.5" y="675.0" width="28.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="788.5" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_sched_yield (53 samples, 1.77%)</title><rect x="793.0" y="659.0" width="20.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="796.0" y="670.0"></text>
</g>
<g>
<title>do_sched_yield (53 samples, 1.77%)</title><rect x="793.0" y="643.0" width="20.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="796.0" y="654.0"></text>
</g>
<g>
<title>schedule (52 samples, 1.74%)</title><rect x="793.4" y="627.0" width="20.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="796.4" y="638.0"></text>
</g>
<g>
<title>__schedule (52 samples, 1.74%)</title><rect x="793.4" y="611.0" width="20.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="796.4" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (33 samples, 1.10%)</title><rect x="813.9" y="707.0" width="13.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="816.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="826.6" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.6" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="826.6" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="829.6" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="826.6" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.6" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.03%)</title><rect x="827.0" y="707.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="830.0" y="718.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.07%)</title><rect x="827.3" y="707.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="830.3" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.07%)</title><rect x="828.1" y="707.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="831.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (12 samples, 0.40%)</title><rect x="828.9" y="707.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="831.9" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="832.5" y="691.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="835.5" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="833.3" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="836.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="833.3" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="836.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="833.3" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="836.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (4 samples, 0.13%)</title><rect x="833.7" y="707.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="836.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (2 samples, 0.07%)</title><rect x="833.7" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.7" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="834.1" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="837.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="834.1" y="659.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="837.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="834.1" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="837.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="834.5" y="691.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="837.5" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="834.5" y="675.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="837.5" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="834.5" y="659.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="837.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (77 samples, 2.58%)</title><rect x="835.2" y="707.0" width="30.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="838.2" y="718.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (75 samples, 2.51%)</title><rect x="835.2" y="691.0" width="29.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="838.2" y="702.0">ro..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (72 samples, 2.41%)</title><rect x="835.2" y="675.0" width="28.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="838.2" y="686.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (4 samples, 0.13%)</title><rect x="835.2" y="659.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="838.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="836.0" y="643.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="839.0" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="836.0" y="627.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="839.0" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="836.0" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (63 samples, 2.11%)</title><rect x="836.8" y="659.0" width="24.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="839.8" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.03%)</title><rect x="837.2" y="643.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="840.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="837.2" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="837.2" y="611.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="840.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="837.2" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="840.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (60 samples, 2.01%)</title><rect x="837.6" y="643.0" width="23.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="840.6" y="654.0">r..</text>
</g>
<g>
<title>__write (59 samples, 1.98%)</title><rect x="838.0" y="627.0" width="23.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="841.0" y="638.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 1.91%)</title><rect x="838.4" y="611.0" width="22.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="841.4" y="622.0">e..</text>
</g>
<g>
<title>do_syscall_64 (57 samples, 1.91%)</title><rect x="838.4" y="595.0" width="22.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="841.4" y="606.0">d..</text>
</g>
<g>
<title>__x64_sys_write (53 samples, 1.77%)</title><rect x="840.0" y="579.0" width="20.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.0" y="590.0"></text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.03%)</title><rect x="840.0" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="843.0" y="574.0"></text>
</g>
<g>
<title>ksys_write (52 samples, 1.74%)</title><rect x="840.4" y="563.0" width="20.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="843.4" y="574.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="840.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="843.4" y="558.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="840.4" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="843.4" y="542.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="840.4" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.4" y="526.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="840.8" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="843.8" y="558.0"></text>
</g>
<g>
<title>vfs_write (50 samples, 1.67%)</title><rect x="841.2" y="547.0" width="19.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.2" y="558.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.07%)</title><rect x="841.2" y="531.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="844.2" y="542.0"></text>
</g>
<g>
<title>__vfs_write (47 samples, 1.57%)</title><rect x="842.0" y="531.0" width="18.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.0" y="542.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.03%)</title><rect x="842.0" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="845.0" y="526.0"></text>
</g>
<g>
<title>new_sync_write (46 samples, 1.54%)</title><rect x="842.4" y="515.0" width="18.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="845.4" y="526.0"></text>
</g>
<g>
<title>ext4_file_write_iter (46 samples, 1.54%)</title><rect x="842.4" y="499.0" width="18.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="845.4" y="510.0"></text>
</g>
<g>
<title>__generic_file_write_iter (44 samples, 1.47%)</title><rect x="842.8" y="483.0" width="17.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="845.8" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="844.3" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="847.3" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.03%)</title><rect x="844.7" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="847.7" y="478.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="845.1" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.1" y="478.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="845.1" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="848.1" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (36 samples, 1.21%)</title><rect x="845.5" y="467.0" width="14.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="848.5" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.03%)</title><rect x="845.5" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="848.5" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_begin (13 samples, 0.44%)</title><rect x="845.9" y="451.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="848.9" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (6 samples, 0.20%)</title><rect x="845.9" y="435.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="848.9" y="446.0"></text>
</g>
<g>
<title>jbd2__journal_start (6 samples, 0.20%)</title><rect x="845.9" y="419.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.9" y="430.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.03%)</title><rect x="845.9" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.9" y="414.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.07%)</title><rect x="846.3" y="403.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="849.3" y="414.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="847.1" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="850.1" y="414.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.07%)</title><rect x="847.5" y="403.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.5" y="414.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.03%)</title><rect x="847.9" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="850.9" y="398.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.10%)</title><rect x="848.3" y="435.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="851.3" y="446.0"></text>
</g>
<g>
<title>create_empty_buffers (1 samples, 0.03%)</title><rect x="849.1" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="852.1" y="430.0"></text>
</g>
<g>
<title>alloc_page_buffers (1 samples, 0.03%)</title><rect x="849.1" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.1" y="414.0"></text>
</g>
<g>
<title>alloc_buffer_head (1 samples, 0.03%)</title><rect x="849.1" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.1" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="849.1" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="852.1" y="382.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="849.1" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.1" y="366.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.03%)</title><rect x="849.1" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="852.1" y="350.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.03%)</title><rect x="849.1" y="323.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="852.1" y="334.0"></text>
</g>
<g>
<title>allocate_slab (1 samples, 0.03%)</title><rect x="849.1" y="307.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.1" y="318.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.13%)</title><rect x="849.5" y="435.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="852.5" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.13%)</title><rect x="849.5" y="419.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.5" y="430.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.03%)</title><rect x="849.5" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="852.5" y="414.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.03%)</title><rect x="849.5" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="852.5" y="398.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.07%)</title><rect x="849.9" y="403.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="852.9" y="414.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="850.3" y="387.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.3" y="398.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.03%)</title><rect x="850.7" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.7" y="414.0"></text>
</g>
<g>
<title>ext4_da_write_end (21 samples, 0.70%)</title><rect x="851.1" y="451.0" width="8.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="854.1" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.10%)</title><rect x="851.1" y="435.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="854.1" y="446.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.03%)</title><rect x="851.1" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="854.1" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.07%)</title><rect x="851.4" y="419.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.4" y="430.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="851.8" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="854.8" y="414.0"></text>
</g>
<g>
<title>generic_write_end (18 samples, 0.60%)</title><rect x="852.2" y="435.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="855.2" y="446.0"></text>
</g>
<g>
<title>__mark_inode_dirty (15 samples, 0.50%)</title><rect x="852.2" y="419.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="855.2" y="430.0"></text>
</g>
<g>
<title>ext4_dirty_inode (15 samples, 0.50%)</title><rect x="852.2" y="403.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.2" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.03%)</title><rect x="852.2" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="855.2" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.03%)</title><rect x="852.2" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="855.2" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (14 samples, 0.47%)</title><rect x="852.6" y="387.0" width="5.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="855.6" y="398.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (13 samples, 0.44%)</title><rect x="852.6" y="371.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="855.6" y="382.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.03%)</title><rect x="852.6" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.6" y="366.0"></text>
</g>
<g>
<title>ext4_do_update_inode (12 samples, 0.40%)</title><rect x="853.0" y="355.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="856.0" y="366.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (7 samples, 0.23%)</title><rect x="854.6" y="339.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="857.6" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (7 samples, 0.23%)</title><rect x="854.6" y="323.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.6" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="855.0" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="858.0" y="318.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.07%)</title><rect x="855.4" y="307.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="858.4" y="318.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.10%)</title><rect x="856.2" y="307.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="859.2" y="318.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.10%)</title><rect x="856.2" y="291.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.2" y="302.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.03%)</title><rect x="857.4" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.4" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.03%)</title><rect x="857.8" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.8" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.03%)</title><rect x="857.8" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="860.8" y="366.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.03%)</title><rect x="857.8" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.8" y="350.0"></text>
</g>
<g>
<title>block_write_end (3 samples, 0.10%)</title><rect x="858.2" y="419.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="861.2" y="430.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (3 samples, 0.10%)</title><rect x="858.2" y="403.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="861.2" y="414.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.07%)</title><rect x="858.6" y="387.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="861.6" y="398.0"></text>
</g>
<g>
<title>__set_page_dirty (1 samples, 0.03%)</title><rect x="858.6" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="861.6" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="858.6" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="861.6" y="366.0"></text>
</g>
<g>
<title>lock_page_memcg (1 samples, 0.03%)</title><rect x="859.0" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="862.0" y="382.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.03%)</title><rect x="859.3" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="862.3" y="462.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="859.7" y="467.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="862.7" y="478.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.03%)</title><rect x="860.1" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="863.1" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="860.5" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="863.5" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="860.9" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="863.9" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="860.9" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="863.9" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="860.9" y="579.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="863.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="861.3" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="864.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="861.3" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="864.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="861.3" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="864.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (5 samples, 0.17%)</title><rect x="861.7" y="659.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="864.7" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="861.7" y="643.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="864.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="862.1" y="627.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="865.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="862.1" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="862.1" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="865.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="862.5" y="643.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="865.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="862.5" y="627.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="862.5" y="611.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="865.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="862.5" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="865.5" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="863.3" y="643.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="866.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="863.3" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="866.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="863.3" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="866.3" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="863.7" y="675.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="866.7" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="863.7" y="659.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="866.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="863.7" y="643.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="866.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.03%)</title><rect x="864.9" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="867.9" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="864.9" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.9" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="864.9" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="864.9" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="865.3" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="865.3" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="868.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="865.3" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (4 samples, 0.13%)</title><rect x="865.7" y="707.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="868.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() [clone .plt] (2 samples, 0.07%)</title><rect x="867.2" y="707.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="870.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (34 samples, 1.14%)</title><rect x="868.0" y="707.0" width="13.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="871.0" y="718.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="870.0" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="873.0" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="870.4" y="691.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="873.4" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (24 samples, 0.80%)</title><rect x="871.2" y="691.0" width="9.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="874.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="880.3" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="880.3" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="883.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="880.3" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="883.3" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (2 samples, 0.07%)</title><rect x="880.7" y="691.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="883.7" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="881.1" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="881.1" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="884.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="881.1" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (7 samples, 0.23%)</title><rect x="881.5" y="707.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="884.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (5 samples, 0.17%)</title><rect x="884.2" y="707.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="887.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.03%)</title><rect x="886.2" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="889.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="886.2" y="691.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="886.2" y="675.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="886.2" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="889.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (4 samples, 0.13%)</title><rect x="886.6" y="707.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="889.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (404 samples, 13.53%)</title><rect x="888.2" y="707.0" width="159.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="891.2" y="718.0">rocksdb::WriteBatchI..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (400 samples, 13.39%)</title><rect x="889.4" y="691.0" width="158.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="892.4" y="702.0">rocksdb::WriteBatch:..</text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="889.4" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="892.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="889.4" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="892.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="889.4" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="889.4" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="892.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.03%)</title><rect x="889.8" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="892.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (397 samples, 13.29%)</title><rect x="890.2" y="675.0" width="156.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="893.2" y="686.0">rocksdb::WriteBatchI..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (395 samples, 13.22%)</title><rect x="890.6" y="659.0" width="156.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="893.6" y="670.0">rocksdb::MemTableIns..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.03%)</title><rect x="890.6" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="893.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (394 samples, 13.19%)</title><rect x="891.0" y="643.0" width="155.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="894.0" y="654.0">rocksdb::MemTableIns..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.03%)</title><rect x="891.0" y="627.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="894.0" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="891.3" y="627.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="894.3" y="638.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="891.7" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="894.7" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="891.7" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="894.7" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="891.7" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="894.7" y="590.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="891.7" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="894.7" y="574.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="891.7" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.7" y="558.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="891.7" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="894.7" y="542.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.03%)</title><rect x="891.7" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.7" y="526.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.03%)</title><rect x="891.7" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="894.7" y="510.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.03%)</title><rect x="891.7" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.7" y="494.0"></text>
</g>
<g>
<title>try_charge (1 samples, 0.03%)</title><rect x="891.7" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="894.7" y="478.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.03%)</title><rect x="892.1" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="895.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.07%)</title><rect x="892.5" y="627.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="895.5" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="892.9" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="895.9" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="892.9" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="895.9" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="892.9" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (1 samples, 0.03%)</title><rect x="893.3" y="627.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="896.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="893.3" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="896.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="893.3" y="595.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="896.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="893.3" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="896.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.07%)</title><rect x="893.7" y="627.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="896.7" y="638.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="893.7" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="896.7" y="622.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="893.7" y="595.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="896.7" y="606.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="893.7" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="896.7" y="590.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="893.7" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="896.7" y="574.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.03%)</title><rect x="893.7" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="896.7" y="558.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="893.7" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.7" y="542.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.03%)</title><rect x="893.7" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="896.7" y="526.0"></text>
</g>
<g>
<title>lru_cache_add_active_or_unevictable (1 samples, 0.03%)</title><rect x="893.7" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="896.7" y="510.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.03%)</title><rect x="893.7" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.7" y="494.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.03%)</title><rect x="893.7" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="896.7" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.03%)</title><rect x="893.7" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="896.7" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="894.1" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="897.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="894.1" y="595.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="894.1" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="897.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (379 samples, 12.69%)</title><rect x="894.5" y="627.0" width="149.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="897.5" y="638.0">rocksdb::MemTable::..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (2 samples, 0.07%)</title><rect x="895.3" y="611.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="898.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.03%)</title><rect x="895.3" y="595.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="898.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.03%)</title><rect x="895.7" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="898.7" y="606.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (368 samples, 12.32%)</title><rect x="896.1" y="611.0" width="145.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="899.1" y="622.0">bool rocksdb::Inli..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (359 samples, 12.02%)</title><rect x="896.5" y="595.0" width="141.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="899.5" y="606.0">/tmp/librocksdbjni..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (252 samples, 8.44%)</title><rect x="910.7" y="579.0" width="99.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="913.7" y="590.0">/tmp/librock..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (18 samples, 0.60%)</title><rect x="911.5" y="563.0" width="7.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="914.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.27%)</title><rect x="915.4" y="547.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="918.4" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (8 samples, 0.27%)</title><rect x="915.4" y="531.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="918.4" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (8 samples, 0.27%)</title><rect x="915.4" y="515.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="918.4" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (17 samples, 0.57%)</title><rect x="918.6" y="563.0" width="6.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="921.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.17%)</title><rect x="923.3" y="547.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.3" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.17%)</title><rect x="923.3" y="531.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="926.3" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.17%)</title><rect x="923.3" y="515.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (36 samples, 1.21%)</title><rect x="925.3" y="563.0" width="14.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="928.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (16 samples, 0.54%)</title><rect x="933.2" y="547.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="936.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (16 samples, 0.54%)</title><rect x="933.2" y="531.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (16 samples, 0.54%)</title><rect x="933.2" y="515.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="936.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.07%)</title><rect x="939.5" y="563.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="942.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (175 samples, 5.86%)</title><rect x="940.3" y="563.0" width="69.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="943.3" y="574.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (20 samples, 0.67%)</title><rect x="950.2" y="547.0" width="7.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="953.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (9 samples, 0.30%)</title><rect x="954.6" y="531.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.6" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (9 samples, 0.30%)</title><rect x="954.6" y="515.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="957.6" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.30%)</title><rect x="954.6" y="499.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="957.6" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (56 samples, 1.87%)</title><rect x="958.1" y="547.0" width="22.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="961.1" y="558.0">/..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (34 samples, 1.14%)</title><rect x="966.8" y="531.0" width="13.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="969.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (34 samples, 1.14%)</title><rect x="966.8" y="515.0" width="13.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="969.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (34 samples, 1.14%)</title><rect x="966.8" y="499.0" width="13.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="969.8" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (7 samples, 0.23%)</title><rect x="980.2" y="547.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="983.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.17%)</title><rect x="981.0" y="531.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.0" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.17%)</title><rect x="981.0" y="515.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="984.0" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.17%)</title><rect x="981.0" y="499.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="984.0" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (28 samples, 0.94%)</title><rect x="983.0" y="547.0" width="11.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="986.0" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (12 samples, 0.40%)</title><rect x="989.3" y="531.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="992.3" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (12 samples, 0.40%)</title><rect x="989.3" y="515.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="992.3" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 0.40%)</title><rect x="989.3" y="499.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="992.3" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.10%)</title><rect x="994.1" y="547.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="997.1" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="994.8" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="997.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="994.8" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="997.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="994.8" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="997.8" y="510.0"></text>
</g>
<g>
<title>memcmp@plt (9 samples, 0.30%)</title><rect x="995.2" y="547.0" width="3.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="998.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.17%)</title><rect x="996.8" y="531.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.17%)</title><rect x="996.8" y="515.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="999.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.17%)</title><rect x="996.8" y="499.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="999.8" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (27 samples, 0.90%)</title><rect x="998.8" y="547.0" width="10.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1001.8" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (27 samples, 0.90%)</title><rect x="998.8" y="531.0" width="10.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1001.8" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (27 samples, 0.90%)</title><rect x="998.8" y="515.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1001.8" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1009.5" y="563.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.5" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1009.5" y="547.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.5" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1009.5" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1012.5" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="1010.3" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1013.3" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1010.6" y="579.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1013.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.44%)</title><rect x="1011.0" y="579.0" width="5.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.0" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (3 samples, 0.10%)</title><rect x="1012.2" y="563.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1015.2" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.13%)</title><rect x="1013.4" y="563.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1016.4" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1014.2" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1014.2" y="531.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1014.2" y="515.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.2" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.03%)</title><rect x="1015.0" y="563.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1018.0" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1015.4" y="563.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1015.4" y="547.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1018.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1015.4" y="531.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1018.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (56 samples, 1.87%)</title><rect x="1016.2" y="579.0" width="22.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1019.2" y="590.0">s..</text>
</g>
<g>
<title>prepare_exit_to_usermode (56 samples, 1.87%)</title><rect x="1016.2" y="563.0" width="22.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1019.2" y="574.0">p..</text>
</g>
<g>
<title>exit_to_usermode_loop (56 samples, 1.87%)</title><rect x="1016.2" y="547.0" width="22.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.2" y="558.0">e..</text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1037.9" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1040.9" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1037.9" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1040.9" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1037.9" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1040.9" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.03%)</title><rect x="1038.3" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.3" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1038.3" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1041.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1038.3" y="563.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1038.3" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1041.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (5 samples, 0.17%)</title><rect x="1038.7" y="595.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.7" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.03%)</title><rect x="1039.1" y="579.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1042.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1039.1" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1039.1" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1042.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1039.1" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1042.1" y="542.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="1039.5" y="579.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1042.5" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="1039.9" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1042.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1040.3" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1040.3" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1040.3" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1043.3" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1040.7" y="595.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1043.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1040.7" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1043.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1040.7" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1043.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.07%)</title><rect x="1041.5" y="611.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1044.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1041.9" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1044.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1041.9" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1041.9" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.03%)</title><rect x="1042.3" y="611.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1045.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.03%)</title><rect x="1042.6" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1045.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1042.6" y="595.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1045.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1042.6" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1045.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1042.6" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1045.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() [clone .plt] (2 samples, 0.07%)</title><rect x="1043.0" y="611.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1043.4" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1046.4" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1043.4" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1046.4" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1043.4" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1046.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.03%)</title><rect x="1043.8" y="611.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1046.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (1 samples, 0.03%)</title><rect x="1043.8" y="595.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1046.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.13%)</title><rect x="1044.2" y="627.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1047.2" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="1044.6" y="611.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1047.6" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="1044.6" y="595.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1047.6" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="1044.6" y="579.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1047.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="1045.8" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1045.8" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1048.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1045.8" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1045.8" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (1 samples, 0.03%)</title><rect x="1046.2" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1049.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.03%)</title><rect x="1046.6" y="659.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1049.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1047.0" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1050.0" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1047.0" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1050.0" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1047.0" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1050.0" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1047.4" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1047.4" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1050.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1047.4" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1050.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.07%)</title><rect x="1047.8" y="707.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1050.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.07%)</title><rect x="1047.8" y="691.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.07%)</title><rect x="1047.8" y="675.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1050.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.07%)</title><rect x="1047.8" y="659.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.07%)</title><rect x="1047.8" y="643.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1050.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.07%)</title><rect x="1047.8" y="627.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.07%)</title><rect x="1047.8" y="611.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.8" y="622.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.07%)</title><rect x="1047.8" y="595.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.8" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni15386988202259783814.so (2 samples, 0.07%)</title><rect x="1047.8" y="579.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1050.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.07%)</title><rect x="1048.6" y="707.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1051.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (69 samples, 2.31%)</title><rect x="1049.4" y="707.0" width="27.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.4" y="718.0">r..</text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.03%)</title><rect x="1076.2" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1079.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.07%)</title><rect x="1076.6" y="707.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1079.6" y="718.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.03%)</title><rect x="1076.6" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1079.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1076.6" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1079.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1076.6" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1079.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.03%)</title><rect x="1076.6" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.6" y="654.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.03%)</title><rect x="1076.6" y="627.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.6" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1076.6" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1079.6" y="622.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1076.6" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1079.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.03%)</title><rect x="1077.0" y="691.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (3 samples, 0.10%)</title><rect x="1077.4" y="707.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1080.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (8 samples, 0.27%)</title><rect x="1078.6" y="707.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1081.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (7 samples, 0.23%)</title><rect x="1079.0" y="691.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1082.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (10 samples, 0.33%)</title><rect x="1081.8" y="707.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1084.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) [clone .plt] (3 samples, 0.10%)</title><rect x="1085.7" y="707.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1088.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.03%)</title><rect x="1086.9" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1089.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (8 samples, 0.27%)</title><rect x="1087.3" y="707.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1090.3" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1090.1" y="691.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1093.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1090.1" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1093.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1090.1" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1093.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (1 samples, 0.03%)</title><rect x="1090.4" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.4" y="718.0"></text>
</g>
<g>
<title>sched_yield@plt (4 samples, 0.13%)</title><rect x="1090.8" y="707.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1093.8" y="718.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (2 samples, 0.07%)</title><rect x="1092.4" y="707.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1095.4" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1093.2" y="707.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1096.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1093.2" y="691.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1096.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1093.2" y="675.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1096.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.03%)</title><rect x="1094.0" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1094.0" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1097.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1094.0" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1097.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1094.0" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1097.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (8 samples, 0.27%)</title><rect x="1094.4" y="723.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1097.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1097.2" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1100.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1097.2" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1100.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1097.2" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1100.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() [clone .plt] (1 samples, 0.03%)</title><rect x="1097.6" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1100.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() [clone .plt] (1 samples, 0.03%)</title><rect x="1098.0" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1098.0" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1101.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1098.0" y="691.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1101.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1098.0" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1101.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.03%)</title><rect x="1098.3" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) [clone .plt] (3 samples, 0.10%)</title><rect x="1098.7" y="723.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.03%)</title><rect x="1099.9" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1102.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1099.9" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1102.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1099.9" y="691.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1102.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1099.9" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1102.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.07%)</title><rect x="1100.3" y="723.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (7 samples, 0.23%)</title><rect x="1101.1" y="723.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1104.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) [clone .plt] (4 samples, 0.13%)</title><rect x="1103.9" y="723.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (5 samples, 0.17%)</title><rect x="1105.5" y="723.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1108.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() [clone .plt] (1 samples, 0.03%)</title><rect x="1107.4" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1110.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (6 samples, 0.20%)</title><rect x="1107.8" y="739.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) [clone .plt] (1 samples, 0.03%)</title><rect x="1110.2" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1113.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.10%)</title><rect x="1110.6" y="739.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1113.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1111.4" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1114.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1111.4" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1114.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1111.4" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1114.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (20 samples, 0.67%)</title><rect x="1111.8" y="739.0" width="7.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.10%)</title><rect x="1112.2" y="723.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.07%)</title><rect x="1113.4" y="723.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1116.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1113.8" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1116.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1113.8" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1113.8" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1116.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const [clone .plt] (1 samples, 0.03%)</title><rect x="1114.2" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1117.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.23%)</title><rect x="1114.5" y="723.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1117.5" y="734.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.03%)</title><rect x="1116.5" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1119.5" y="718.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.03%)</title><rect x="1116.9" y="707.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1119.9" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (4 samples, 0.13%)</title><rect x="1117.3" y="723.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1120.3" y="734.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) [clone .plt] (1 samples, 0.03%)</title><rect x="1118.9" y="723.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1121.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1119.3" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1122.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1119.3" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1122.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1119.3" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="1119.7" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1122.7" y="750.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.03%)</title><rect x="1120.1" y="739.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1123.1" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1120.5" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1120.5" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1123.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1120.5" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1123.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (6 samples, 0.20%)</title><rect x="1120.9" y="755.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="1123.2" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1126.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="1123.6" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1126.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (3 samples, 0.10%)</title><rect x="1124.0" y="755.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (4 samples, 0.13%)</title><rect x="1125.2" y="787.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.03%)</title><rect x="1126.8" y="787.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1129.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1127.2" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1130.2" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1127.2" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1130.2" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1127.2" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.57%)</title><rect x="1127.6" y="819.0" width="6.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1130.6" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.07%)</title><rect x="1127.6" y="803.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1130.6" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1128.0" y="787.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1131.0" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1128.0" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1131.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1128.0" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1131.0" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.03%)</title><rect x="1128.4" y="803.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1131.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1128.8" y="803.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1131.8" y="814.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="1128.8" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.8" y="798.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.03%)</title><rect x="1129.2" y="803.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1132.2" y="814.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (2 samples, 0.07%)</title><rect x="1129.6" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.6" y="814.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.07%)</title><rect x="1130.3" y="803.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.3" y="814.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (5 samples, 0.17%)</title><rect x="1131.1" y="803.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.1" y="814.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.10%)</title><rect x="1133.1" y="803.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.1" y="814.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.10%)</title><rect x="1133.1" y="787.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1136.1" y="798.0"></text>
</g>
<g>
<title>__libc_malloc (14 samples, 0.47%)</title><rect x="1134.3" y="819.0" width="5.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1137.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1139.0" y="803.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.0" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1139.0" y="787.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.0" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1139.0" y="771.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.07%)</title><rect x="1139.8" y="819.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1142.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="1139.8" y="803.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="1139.8" y="787.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.07%)</title><rect x="1139.8" y="771.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1142.8" y="782.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.07%)</title><rect x="1139.8" y="755.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1142.8" y="766.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.07%)</title><rect x="1139.8" y="739.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.8" y="750.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.07%)</title><rect x="1139.8" y="723.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1142.8" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.07%)</title><rect x="1139.8" y="707.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.8" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.07%)</title><rect x="1139.8" y="691.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1142.8" y="702.0"></text>
</g>
<g>
<title>clock_gettime (11 samples, 0.37%)</title><rect x="1140.6" y="819.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1143.6" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1143.0" y="803.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1146.0" y="814.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.13%)</title><rect x="1143.4" y="803.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1146.4" y="814.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.10%)</title><rect x="1143.8" y="787.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1146.8" y="798.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.10%)</title><rect x="1145.0" y="819.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.0" y="830.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.03%)</title><rect x="1146.1" y="819.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.1" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1146.1" y="803.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.1" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1146.1" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1149.1" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1146.1" y="771.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1149.1" y="782.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.03%)</title><rect x="1146.5" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (4 samples, 0.13%)</title><rect x="1146.9" y="851.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.9" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.13%)</title><rect x="1146.9" y="835.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.9" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.13%)</title><rect x="1146.9" y="819.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1149.9" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="1146.9" y="803.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1149.9" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.10%)</title><rect x="1147.3" y="803.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1150.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (8 samples, 0.27%)</title><rect x="1148.5" y="851.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (7 samples, 0.23%)</title><rect x="1148.9" y="835.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1151.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.10%)</title><rect x="1148.9" y="819.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.9" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.10%)</title><rect x="1148.9" y="803.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.9" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="1149.3" y="787.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1152.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="1150.1" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1153.1" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (3 samples, 0.10%)</title><rect x="1150.5" y="819.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="1151.7" y="899.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="1151.7" y="883.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.07%)</title><rect x="1151.7" y="867.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="1151.7" y="851.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1154.7" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1152.1" y="851.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1152.1" y="835.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1155.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1152.1" y="819.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.10%)</title><rect x="1152.5" y="899.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="1152.5" y="883.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="1152.9" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1155.9" y="878.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.03%)</title><rect x="1152.9" y="851.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1153.3" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.3" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1153.7" y="915.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1156.7" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1153.7" y="899.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1156.7" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1153.7" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1156.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.44%)</title><rect x="1154.1" y="931.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.33%)</title><rect x="1154.1" y="915.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.27%)</title><rect x="1154.8" y="899.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.27%)</title><rect x="1154.8" y="883.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1157.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="1156.8" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1156.8" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.8" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1157.2" y="867.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.2" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1157.2" y="851.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.2" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1157.2" y="835.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="1158.0" y="915.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="1158.0" y="899.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="1158.8" y="915.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="1159.2" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="1159.2" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="1159.2" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1159.2" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1162.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.03%)</title><rect x="1159.2" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1162.2" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1159.2" y="851.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1162.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1159.2" y="835.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1159.2" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (15 samples, 0.50%)</title><rect x="1159.6" y="931.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.33%)</title><rect x="1159.6" y="915.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1162.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.33%)</title><rect x="1159.6" y="899.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.10%)</title><rect x="1160.0" y="883.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1163.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.10%)</title><rect x="1160.0" y="867.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.0" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.10%)</title><rect x="1160.0" y="851.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.0" y="862.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.10%)</title><rect x="1160.0" y="835.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.20%)</title><rect x="1161.2" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (6 samples, 0.20%)</title><rect x="1161.2" y="867.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.2" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (6 samples, 0.20%)</title><rect x="1161.2" y="851.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.2" y="862.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (4 samples, 0.13%)</title><rect x="1162.0" y="835.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="1163.5" y="915.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="1163.9" y="899.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.07%)</title><rect x="1163.9" y="883.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.9" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="1163.9" y="867.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1166.9" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1164.3" y="851.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1167.3" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1164.3" y="835.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1167.3" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1164.3" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1164.7" y="915.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1167.7" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1164.7" y="899.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1167.7" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1164.7" y="883.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="1165.5" y="931.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1168.5" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.07%)</title><rect x="1165.5" y="915.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.5" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1165.9" y="899.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.9" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1165.9" y="883.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.9" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1165.9" y="867.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1168.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (58 samples, 1.94%)</title><rect x="1166.3" y="947.0" width="22.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.3" y="958.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (58 samples, 1.94%)</title><rect x="1166.3" y="931.0" width="22.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1169.3" y="942.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.03%)</title><rect x="1166.3" y="915.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1169.3" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1166.3" y="899.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.3" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1166.3" y="883.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.3" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1166.3" y="867.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1169.3" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.33%)</title><rect x="1166.7" y="915.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1169.7" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.23%)</title><rect x="1166.7" y="899.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1169.7" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1166.7" y="883.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.7" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1166.7" y="867.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1166.7" y="851.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1169.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1166.7" y="835.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.7" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.07%)</title><rect x="1167.1" y="883.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.1" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1167.5" y="867.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1170.5" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1167.5" y="851.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.5" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1167.5" y="835.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.5" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="1167.9" y="883.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1170.9" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1167.9" y="867.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1170.9" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1167.9" y="851.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1170.9" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1167.9" y="835.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.9" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1168.7" y="883.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1171.7" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1168.7" y="867.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1171.7" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1168.7" y="851.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1171.7" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="1169.5" y="899.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1172.5" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="1169.5" y="883.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1172.5" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="1169.5" y="867.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1172.5" y="878.0"></text>
</g>
<g>
<title>__recv (44 samples, 1.47%)</title><rect x="1170.6" y="915.0" width="17.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1173.6" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.84%)</title><rect x="1170.6" y="899.0" width="9.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.6" y="910.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="1170.6" y="883.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1173.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.80%)</title><rect x="1171.0" y="883.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1174.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 0.74%)</title><rect x="1171.8" y="867.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1174.8" y="878.0"></text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 0.67%)</title><rect x="1171.8" y="851.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1174.8" y="862.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.10%)</title><rect x="1172.6" y="835.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1175.6" y="846.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.50%)</title><rect x="1173.8" y="835.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1176.8" y="846.0"></text>
</g>
<g>
<title>inet6_recvmsg (14 samples, 0.47%)</title><rect x="1173.8" y="819.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.8" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.47%)</title><rect x="1173.8" y="803.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1176.8" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="1175.0" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.0" y="798.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="1175.0" y="771.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.0" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1175.0" y="755.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1175.4" y="787.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1178.4" y="798.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1175.8" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.8" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="1175.8" y="771.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.8" y="782.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.03%)</title><rect x="1175.8" y="755.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1178.8" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.13%)</title><rect x="1176.2" y="787.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.2" y="798.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.13%)</title><rect x="1176.2" y="771.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1179.2" y="782.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.13%)</title><rect x="1176.2" y="755.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.2" y="766.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="1176.2" y="739.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.2" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.07%)</title><rect x="1176.2" y="723.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1179.2" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.07%)</title><rect x="1177.0" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1180.0" y="750.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="1177.0" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1180.0" y="734.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.03%)</title><rect x="1177.4" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1180.4" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="1177.8" y="787.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.8" y="798.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.03%)</title><rect x="1177.8" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.8" y="782.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.03%)</title><rect x="1177.8" y="755.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1180.8" y="766.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="1177.8" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1180.8" y="750.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="1177.8" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.8" y="734.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="1177.8" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.8" y="718.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.03%)</title><rect x="1177.8" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1180.8" y="702.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="1177.8" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.8" y="686.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="1177.8" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1180.8" y="670.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="1177.8" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1180.8" y="654.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="1177.8" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1180.8" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1177.8" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.8" y="622.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="1177.8" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.8" y="606.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1177.8" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.8" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1177.8" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.8" y="574.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="1177.8" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1180.8" y="558.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="1177.8" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.8" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="1177.8" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.8" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="1177.8" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1180.8" y="510.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="1177.8" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.8" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1177.8" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.8" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1177.8" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.8" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="1177.8" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1180.8" y="446.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="1177.8" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1180.8" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="1177.8" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1180.8" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1177.8" y="387.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.8" y="398.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="1177.8" y="371.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1180.8" y="382.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.10%)</title><rect x="1178.1" y="787.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.1" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="1179.3" y="819.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.3" y="830.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1179.7" y="851.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.7" y="862.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="1180.1" y="851.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1183.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (19 samples, 0.64%)</title><rect x="1180.5" y="899.0" width="7.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.5" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (19 samples, 0.64%)</title><rect x="1180.5" y="883.0" width="7.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.5" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (19 samples, 0.64%)</title><rect x="1180.5" y="867.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.5" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="1188.0" y="915.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1191.0" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1188.0" y="899.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.0" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1188.0" y="883.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.0" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1188.0" y="867.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1191.0" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1188.8" y="915.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1191.8" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1188.8" y="899.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.8" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1188.8" y="883.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1191.8" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.07%)</title><rect x="1189.2" y="947.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.2" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.07%)</title><rect x="1189.2" y="931.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.2" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.07%)</title><rect x="1189.2" y="915.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1192.2" y="926.0"></text>
</g>
</g>
</svg>
