<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (1,279 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=3350] (171 samples, 13.37%)</title><rect x="10.0" y="899.0" width="157.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="13.0" y="910.0">[NIO Selector #0 tid..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (171 samples, 13.37%)</title><rect x="10.0" y="883.0" width="157.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="894.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (71 samples, 5.55%)</title><rect x="11.8" y="867.0" width="65.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.8" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (71 samples, 5.55%)</title><rect x="11.8" y="851.0" width="65.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.8" y="862.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="12.8" y="835.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="15.8" y="846.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.31%)</title><rect x="13.7" y="835.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.7" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="16.5" y="819.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="19.5" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.08%)</title><rect x="16.5" y="803.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="19.5" y="814.0"></text>
</g>
<g>
<title>epoll_wait (65 samples, 5.08%)</title><rect x="17.4" y="835.0" width="59.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="20.4" y="846.0">epoll_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 5.08%)</title><rect x="17.4" y="819.0" width="59.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.4" y="830.0">entry_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.08%)</title><rect x="17.4" y="803.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="20.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 5.00%)</title><rect x="18.3" y="803.0" width="59.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="21.3" y="814.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (61 samples, 4.77%)</title><rect x="20.1" y="787.0" width="56.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.1" y="798.0">__x64_..</text>
</g>
<g>
<title>do_epoll_wait (60 samples, 4.69%)</title><rect x="20.1" y="771.0" width="55.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.1" y="782.0">do_ep..</text>
</g>
<g>
<title>__fdget (1 samples, 0.08%)</title><rect x="20.1" y="755.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="23.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.08%)</title><rect x="20.1" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="23.1" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.08%)</title><rect x="20.1" y="723.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="23.1" y="734.0"></text>
</g>
<g>
<title>ep_poll (57 samples, 4.46%)</title><rect x="21.1" y="755.0" width="52.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="24.1" y="766.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.78%)</title><rect x="22.0" y="739.0" width="9.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="25.0" y="750.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.16%)</title><rect x="22.9" y="723.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="25.9" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.08%)</title><rect x="24.8" y="723.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="27.8" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.47%)</title><rect x="25.7" y="723.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.7" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.47%)</title><rect x="25.7" y="707.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="28.7" y="718.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.31%)</title><rect x="26.6" y="691.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="29.6" y="702.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.23%)</title><rect x="26.6" y="675.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="29.6" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.08%)</title><rect x="29.4" y="675.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.4" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.08%)</title><rect x="30.3" y="691.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="33.3" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (46 samples, 3.60%)</title><rect x="31.2" y="739.0" width="42.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="34.2" y="750.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (46 samples, 3.60%)</title><rect x="31.2" y="723.0" width="42.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="34.2" y="734.0">sche..</text>
</g>
<g>
<title>schedule (45 samples, 3.52%)</title><rect x="32.1" y="707.0" width="41.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="35.1" y="718.0">sch..</text>
</g>
<g>
<title>__schedule (45 samples, 3.52%)</title><rect x="32.1" y="691.0" width="41.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="35.1" y="702.0">__s..</text>
</g>
<g>
<title>finish_task_switch (45 samples, 3.52%)</title><rect x="32.1" y="675.0" width="41.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.1" y="686.0">fin..</text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.16%)</title><rect x="73.7" y="755.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.7" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.08%)</title><rect x="75.5" y="771.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="78.5" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.08%)</title><rect x="76.4" y="787.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (98 samples, 7.66%)</title><rect x="77.3" y="867.0" width="90.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.3" y="878.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (97 samples, 7.58%)</title><rect x="78.3" y="851.0" width="89.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.3" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (48 samples, 3.75%)</title><rect x="78.3" y="835.0" width="44.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="81.3" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (34 samples, 2.66%)</title><rect x="79.2" y="819.0" width="31.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.2" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (34 samples, 2.66%)</title><rect x="79.2" y="803.0" width="31.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.2" y="814.0">on..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (33 samples, 2.58%)</title><rect x="79.2" y="787.0" width="30.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.2" y="798.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.16%)</title><rect x="79.2" y="771.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.16%)</title><rect x="79.2" y="755.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="80.1" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.08%)</title><rect x="80.1" y="723.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.1" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.08%)</title><rect x="80.1" y="707.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="83.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.get (31 samples, 2.42%)</title><rect x="81.0" y="771.0" width="28.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.0" y="782.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (31 samples, 2.42%)</title><rect x="81.0" y="755.0" width="28.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.0" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (31 samples, 2.42%)</title><rect x="81.0" y="739.0" width="28.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.0" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.31%)</title><rect x="81.0" y="723.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.31%)</title><rect x="81.0" y="707.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.08%)</title><rect x="83.8" y="691.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 2.11%)</title><rect x="84.7" y="723.0" width="24.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.7" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 2.11%)</title><rect x="84.7" y="707.0" width="24.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.7" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 2.11%)</title><rect x="84.7" y="691.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.7" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 2.11%)</title><rect x="84.7" y="675.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.7" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (27 samples, 2.11%)</title><rect x="84.7" y="659.0" width="24.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.7" y="670.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="84.7" y="643.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="87.7" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.16%)</title><rect x="85.7" y="643.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="88.7" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="86.6" y="627.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="89.6" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 1.88%)</title><rect x="87.5" y="643.0" width="22.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="90.5" y="654.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.80%)</title><rect x="88.4" y="627.0" width="21.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="91.4" y="638.0">e..</text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.80%)</title><rect x="88.4" y="611.0" width="21.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.4" y="622.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 1.80%)</title><rect x="88.4" y="595.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.4" y="606.0">_..</text>
</g>
<g>
<title>do_futex (22 samples, 1.72%)</title><rect x="88.4" y="579.0" width="20.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.4" y="590.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 1.72%)</title><rect x="88.4" y="563.0" width="20.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.4" y="574.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 1.72%)</title><rect x="88.4" y="547.0" width="20.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.4" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 1.72%)</title><rect x="88.4" y="531.0" width="20.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.4" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (22 samples, 1.72%)</title><rect x="88.4" y="515.0" width="20.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.4" y="526.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.08%)</title><rect x="108.7" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="111.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.08%)</title><rect x="109.6" y="787.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.08%)</title><rect x="109.6" y="771.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.08%)</title><rect x="109.6" y="755.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.08%)</title><rect x="109.6" y="739.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.08%)</title><rect x="109.6" y="723.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.23%)</title><rect x="110.6" y="819.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.08%)</title><rect x="110.6" y="803.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="110.6" y="787.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="110.6" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="110.6" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="111.5" y="803.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.5" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="111.5" y="787.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.78%)</title><rect x="113.3" y="819.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="120.7" y="803.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="120.7" y="787.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.7" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="121.6" y="803.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="124.6" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="121.6" y="787.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="124.6" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="121.6" y="771.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="124.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.23%)</title><rect x="122.6" y="835.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="124.4" y="819.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (46 samples, 3.60%)</title><rect x="125.3" y="835.0" width="42.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.3" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (43 samples, 3.36%)</title><rect x="125.3" y="819.0" width="39.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.3" y="830.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="125.3" y="803.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="128.3" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.63%)</title><rect x="126.2" y="803.0" width="7.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="129.2" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="128.1" y="787.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="131.1" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.16%)</title><rect x="129.0" y="787.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="132.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.08%)</title><rect x="130.9" y="787.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="133.9" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="131.8" y="787.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="134.8" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="131.8" y="771.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="134.8" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.08%)</title><rect x="132.7" y="787.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="135.7" y="798.0"></text>
</g>
<g>
<title>__recv (33 samples, 2.58%)</title><rect x="133.6" y="803.0" width="30.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="136.6" y="814.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 2.50%)</title><rect x="134.6" y="787.0" width="29.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="137.6" y="798.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.08%)</title><rect x="134.6" y="771.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 2.42%)</title><rect x="135.5" y="771.0" width="28.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.5" y="782.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (26 samples, 2.03%)</title><rect x="140.1" y="755.0" width="24.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="143.1" y="766.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (24 samples, 1.88%)</title><rect x="140.1" y="739.0" width="22.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.1" y="750.0">_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.16%)</title><rect x="140.1" y="723.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.1" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 1.25%)</title><rect x="141.9" y="723.0" width="14.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="144.9" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (14 samples, 1.09%)</title><rect x="141.9" y="707.0" width="12.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="144.9" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.08%)</title><rect x="141.9" y="691.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.9" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.08%)</title><rect x="142.9" y="691.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.9" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.94%)</title><rect x="143.8" y="691.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.8" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.31%)</title><rect x="143.8" y="675.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="146.8" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.08%)</title><rect x="144.7" y="659.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="147.7" y="670.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.08%)</title><rect x="145.6" y="659.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="148.6" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.08%)</title><rect x="146.5" y="659.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="149.5" y="670.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.08%)</title><rect x="146.5" y="643.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.5" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.39%)</title><rect x="147.5" y="675.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="150.5" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.39%)</title><rect x="147.5" y="659.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="150.5" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.08%)</title><rect x="147.5" y="643.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="150.5" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.31%)</title><rect x="148.4" y="643.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="151.4" y="654.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.31%)</title><rect x="148.4" y="627.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="151.4" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.31%)</title><rect x="148.4" y="611.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="151.4" y="622.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.08%)</title><rect x="152.1" y="675.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="155.1" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.08%)</title><rect x="153.0" y="675.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="156.0" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.08%)</title><rect x="153.0" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="156.0" y="670.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.08%)</title><rect x="153.0" y="643.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="156.0" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.08%)</title><rect x="153.9" y="675.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="156.9" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.16%)</title><rect x="154.8" y="707.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="157.8" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.16%)</title><rect x="154.8" y="691.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.8" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.16%)</title><rect x="154.8" y="675.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="157.8" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.47%)</title><rect x="156.7" y="723.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.7" y="734.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.31%)</title><rect x="156.7" y="707.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="159.7" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.31%)</title><rect x="156.7" y="691.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="159.7" y="702.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.31%)</title><rect x="156.7" y="675.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="159.7" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.16%)</title><rect x="160.4" y="707.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="163.4" y="718.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.08%)</title><rect x="162.2" y="739.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="165.2" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.08%)</title><rect x="163.2" y="739.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="166.2" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="164.1" y="803.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="167.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (3 samples, 0.23%)</title><rect x="165.0" y="819.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.0" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=3351] (175 samples, 13.68%)</title><rect x="167.8" y="899.0" width="161.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="170.8" y="910.0">[NIO Selector #1 tid=..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="167.8" y="883.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="170.8" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.08%)</title><rect x="167.8" y="867.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="170.8" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (174 samples, 13.60%)</title><rect x="168.7" y="883.0" width="160.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.7" y="894.0">one/nio/server/Selec..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.16%)</title><rect x="168.7" y="867.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="171.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (80 samples, 6.25%)</title><rect x="170.5" y="867.0" width="73.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.5" y="878.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (80 samples, 6.25%)</title><rect x="170.5" y="851.0" width="73.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.5" y="862.0">one/nio/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="172.4" y="835.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="175.4" y="846.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.23%)</title><rect x="173.3" y="835.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="176.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (74 samples, 5.79%)</title><rect x="176.1" y="835.0" width="68.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="179.1" y="846.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 5.39%)</title><rect x="180.7" y="819.0" width="63.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.7" y="830.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (69 samples, 5.39%)</title><rect x="180.7" y="803.0" width="63.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.7" y="814.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (60 samples, 4.69%)</title><rect x="188.1" y="787.0" width="55.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="191.1" y="798.0">__x64..</text>
</g>
<g>
<title>do_epoll_wait (60 samples, 4.69%)</title><rect x="188.1" y="771.0" width="55.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="191.1" y="782.0">do_ep..</text>
</g>
<g>
<title>__fdget (2 samples, 0.16%)</title><rect x="188.1" y="755.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.16%)</title><rect x="188.1" y="739.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.1" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.16%)</title><rect x="188.1" y="723.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="191.1" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.08%)</title><rect x="189.9" y="755.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="192.9" y="766.0"></text>
</g>
<g>
<title>ep_poll (56 samples, 4.38%)</title><rect x="190.8" y="755.0" width="51.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="193.8" y="766.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.63%)</title><rect x="192.7" y="739.0" width="7.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="195.7" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.08%)</title><rect x="193.6" y="723.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="196.6" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.39%)</title><rect x="194.5" y="723.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.23%)</title><rect x="196.4" y="707.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.16%)</title><rect x="197.3" y="691.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="200.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.08%)</title><rect x="198.2" y="675.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="201.2" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.08%)</title><rect x="199.1" y="723.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (46 samples, 3.60%)</title><rect x="200.1" y="739.0" width="42.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.1" y="750.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (46 samples, 3.60%)</title><rect x="200.1" y="723.0" width="42.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="203.1" y="734.0">sche..</text>
</g>
<g>
<title>schedule (46 samples, 3.60%)</title><rect x="200.1" y="707.0" width="42.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="203.1" y="718.0">sche..</text>
</g>
<g>
<title>__schedule (46 samples, 3.60%)</title><rect x="200.1" y="691.0" width="42.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="203.1" y="702.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (46 samples, 3.60%)</title><rect x="200.1" y="675.0" width="42.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="203.1" y="686.0">fini..</text>
</g>
<g>
<title>fput_many (1 samples, 0.08%)</title><rect x="242.5" y="755.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.5" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.08%)</title><rect x="243.4" y="787.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="246.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (92 samples, 7.19%)</title><rect x="244.3" y="867.0" width="84.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.3" y="878.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (92 samples, 7.19%)</title><rect x="244.3" y="851.0" width="84.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.3" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (42 samples, 3.28%)</title><rect x="244.3" y="835.0" width="38.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.3" y="846.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 2.19%)</title><rect x="245.3" y="819.0" width="25.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.3" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 2.19%)</title><rect x="245.3" y="803.0" width="25.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.3" y="814.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (26 samples, 2.03%)</title><rect x="246.2" y="787.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.2" y="798.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.39%)</title><rect x="246.2" y="771.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.39%)</title><rect x="246.2" y="755.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="246.2" y="739.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="246.2" y="723.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.23%)</title><rect x="247.1" y="739.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.16%)</title><rect x="248.0" y="723.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.0" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.16%)</title><rect x="248.0" y="707.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="251.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.08%)</title><rect x="249.9" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="249.9" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="249.9" y="707.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.get (21 samples, 1.64%)</title><rect x="250.8" y="771.0" width="19.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 1.64%)</title><rect x="250.8" y="755.0" width="19.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (21 samples, 1.64%)</title><rect x="250.8" y="739.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.08%)</title><rect x="250.8" y="723.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="253.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.08%)</title><rect x="250.8" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.08%)</title><rect x="250.8" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.08%)</title><rect x="250.8" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="253.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.08%)</title><rect x="250.8" y="659.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.08%)</title><rect x="251.7" y="723.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.08%)</title><rect x="251.7" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 1.49%)</title><rect x="252.6" y="723.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 1.49%)</title><rect x="252.6" y="707.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 1.49%)</title><rect x="252.6" y="691.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 1.49%)</title><rect x="252.6" y="675.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 1.49%)</title><rect x="252.6" y="659.0" width="17.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.6" y="670.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.08%)</title><rect x="252.6" y="643.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="255.6" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="253.6" y="643.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="256.6" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 1.25%)</title><rect x="254.5" y="643.0" width="14.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="257.5" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 1.25%)</title><rect x="254.5" y="627.0" width="14.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 1.25%)</title><rect x="254.5" y="611.0" width="14.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="257.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 1.25%)</title><rect x="254.5" y="595.0" width="14.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="257.5" y="606.0"></text>
</g>
<g>
<title>do_futex (16 samples, 1.25%)</title><rect x="254.5" y="579.0" width="14.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.5" y="590.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 1.25%)</title><rect x="254.5" y="563.0" width="14.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.5" y="574.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 1.25%)</title><rect x="254.5" y="547.0" width="14.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="257.5" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 1.25%)</title><rect x="254.5" y="531.0" width="14.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.5" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (16 samples, 1.25%)</title><rect x="254.5" y="515.0" width="14.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.5" y="526.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.08%)</title><rect x="269.2" y="643.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="272.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.08%)</title><rect x="270.2" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.08%)</title><rect x="270.2" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.08%)</title><rect x="270.2" y="755.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.08%)</title><rect x="270.2" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.08%)</title><rect x="270.2" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.55%)</title><rect x="271.1" y="819.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.08%)</title><rect x="271.1" y="803.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="271.1" y="787.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="271.1" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="271.1" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="271.1" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.31%)</title><rect x="272.0" y="803.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.31%)</title><rect x="272.0" y="787.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.16%)</title><rect x="275.7" y="803.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.31%)</title><rect x="277.6" y="819.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="281.2" y="819.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="282.2" y="803.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (50 samples, 3.91%)</title><rect x="283.1" y="835.0" width="46.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.1" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (50 samples, 3.91%)</title><rect x="283.1" y="819.0" width="46.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.1" y="830.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.70%)</title><rect x="283.1" y="803.0" width="8.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="286.1" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.08%)</title><rect x="283.1" y="787.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="286.1" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.16%)</title><rect x="284.0" y="787.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="287.0" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.47%)</title><rect x="285.9" y="787.0" width="5.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="288.9" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.23%)</title><rect x="288.6" y="771.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="291.6" y="782.0"></text>
</g>
<g>
<title>__recv (41 samples, 3.21%)</title><rect x="291.4" y="803.0" width="37.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="294.4" y="814.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 2.97%)</title><rect x="294.2" y="787.0" width="35.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="297.2" y="798.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (38 samples, 2.97%)</title><rect x="294.2" y="771.0" width="35.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="297.2" y="782.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (34 samples, 2.66%)</title><rect x="297.8" y="755.0" width="31.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="300.8" y="766.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (33 samples, 2.58%)</title><rect x="297.8" y="739.0" width="30.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="300.8" y="750.0">__..</text>
</g>
<g>
<title>sock_recvmsg (30 samples, 2.35%)</title><rect x="297.8" y="723.0" width="27.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.8" y="734.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.08%)</title><rect x="297.8" y="707.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="300.8" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (25 samples, 1.95%)</title><rect x="298.8" y="707.0" width="23.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="301.8" y="718.0">i..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.08%)</title><rect x="299.7" y="691.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="302.7" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.08%)</title><rect x="300.6" y="691.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="303.6" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (22 samples, 1.72%)</title><rect x="301.5" y="691.0" width="20.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="304.5" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.47%)</title><rect x="305.2" y="675.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.2" y="686.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.39%)</title><rect x="305.2" y="659.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.2" y="670.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.08%)</title><rect x="305.2" y="643.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="308.2" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.23%)</title><rect x="306.2" y="643.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.2" y="654.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.16%)</title><rect x="307.1" y="627.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.1" y="638.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.08%)</title><rect x="308.9" y="643.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="311.9" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.08%)</title><rect x="309.8" y="659.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="312.8" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.08%)</title><rect x="310.8" y="675.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.8" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.16%)</title><rect x="311.7" y="675.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.7" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.08%)</title><rect x="311.7" y="659.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.7" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.08%)</title><rect x="312.6" y="659.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="315.6" y="670.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.08%)</title><rect x="312.6" y="643.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="315.6" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.47%)</title><rect x="313.5" y="675.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.5" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.47%)</title><rect x="313.5" y="659.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="316.5" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.31%)</title><rect x="315.4" y="643.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="318.4" y="654.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.16%)</title><rect x="315.4" y="627.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.4" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.08%)</title><rect x="316.3" y="611.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.3" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.16%)</title><rect x="317.2" y="627.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="320.2" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.16%)</title><rect x="317.2" y="611.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="320.2" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.23%)</title><rect x="319.1" y="675.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="322.1" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.16%)</title><rect x="320.0" y="659.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="323.0" y="670.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.08%)</title><rect x="320.0" y="643.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="323.0" y="654.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.08%)</title><rect x="320.9" y="643.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="323.9" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.31%)</title><rect x="321.8" y="707.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.8" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.08%)</title><rect x="321.8" y="691.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.8" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.23%)</title><rect x="322.8" y="691.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="325.8" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.23%)</title><rect x="322.8" y="675.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="325.8" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (3 samples, 0.23%)</title><rect x="322.8" y="659.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.8" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.23%)</title><rect x="325.5" y="723.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="328.5" y="734.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.23%)</title><rect x="325.5" y="707.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="328.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.23%)</title><rect x="325.5" y="691.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.5" y="702.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.23%)</title><rect x="325.5" y="675.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="328.5" y="686.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.08%)</title><rect x="328.3" y="739.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="331.3" y="750.0"></text>
</g>
<g>
<title>[async_worker-0 tid=3359] (472 samples, 36.90%)</title><rect x="329.2" y="899.0" width="435.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="332.2" y="910.0">[async_worker-0 tid=3359]</text>
</g>
<g>
<title>java/lang/Thread.run (472 samples, 36.90%)</title><rect x="329.2" y="883.0" width="435.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.2" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (472 samples, 36.90%)</title><rect x="329.2" y="867.0" width="435.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.2" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (472 samples, 36.90%)</title><rect x="329.2" y="851.0" width="435.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.2" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (51 samples, 3.99%)</title><rect x="329.2" y="835.0" width="47.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.2" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (51 samples, 3.99%)</title><rect x="329.2" y="819.0" width="47.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="332.2" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (42 samples, 3.28%)</title><rect x="329.2" y="803.0" width="38.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.2" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.08%)</title><rect x="330.1" y="787.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.08%)</title><rect x="330.1" y="771.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 3.13%)</title><rect x="331.1" y="787.0" width="36.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.1" y="798.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 3.13%)</title><rect x="331.1" y="771.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="334.1" y="782.0">jdk..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.08%)</title><rect x="331.1" y="755.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="334.1" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.16%)</title><rect x="332.0" y="755.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="335.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.08%)</title><rect x="333.8" y="755.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="336.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="333.8" y="739.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="336.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="333.8" y="723.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="333.8" y="707.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.8" y="718.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.47%)</title><rect x="334.8" y="755.0" width="5.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="337.8" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.31%)</title><rect x="334.8" y="739.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="337.8" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.23%)</title><rect x="335.7" y="723.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="338.7" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="337.5" y="707.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="337.5" y="691.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="340.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="337.5" y="675.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="340.5" y="686.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.16%)</title><rect x="338.4" y="739.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="341.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.16%)</title><rect x="338.4" y="723.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.16%)</title><rect x="338.4" y="707.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 2.27%)</title><rect x="340.3" y="755.0" width="26.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="343.3" y="766.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.08%)</title><rect x="340.3" y="739.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="343.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (28 samples, 2.19%)</title><rect x="341.2" y="739.0" width="25.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="344.2" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 1.88%)</title><rect x="344.9" y="723.0" width="22.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.9" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (24 samples, 1.88%)</title><rect x="344.9" y="707.0" width="22.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.9" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 1.80%)</title><rect x="345.8" y="691.0" width="21.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="348.8" y="702.0">_..</text>
</g>
<g>
<title>do_futex (22 samples, 1.72%)</title><rect x="346.7" y="675.0" width="20.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="349.7" y="686.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 1.72%)</title><rect x="346.7" y="659.0" width="20.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.7" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (20 samples, 1.56%)</title><rect x="346.7" y="643.0" width="18.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="349.7" y="654.0"></text>
</g>
<g>
<title>schedule (19 samples, 1.49%)</title><rect x="347.7" y="627.0" width="17.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="350.7" y="638.0"></text>
</g>
<g>
<title>__schedule (19 samples, 1.49%)</title><rect x="347.7" y="611.0" width="17.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="350.7" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 1.49%)</title><rect x="347.7" y="595.0" width="17.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="350.7" y="606.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.08%)</title><rect x="365.2" y="643.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="368.2" y="654.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.08%)</title><rect x="366.1" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="369.1" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.08%)</title><rect x="367.0" y="755.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="370.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.70%)</title><rect x="368.0" y="803.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="371.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.70%)</title><rect x="368.0" y="787.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.70%)</title><rect x="368.0" y="771.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="371.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.63%)</title><rect x="368.9" y="755.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.63%)</title><rect x="368.9" y="739.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.63%)</title><rect x="368.9" y="723.0" width="7.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="371.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.63%)</title><rect x="368.9" y="707.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="371.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.63%)</title><rect x="368.9" y="691.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="371.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.55%)</title><rect x="368.9" y="675.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.9" y="686.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.55%)</title><rect x="368.9" y="659.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="371.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.55%)</title><rect x="368.9" y="643.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.9" y="654.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.08%)</title><rect x="368.9" y="627.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.9" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.08%)</title><rect x="369.8" y="627.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="372.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.39%)</title><rect x="370.7" y="627.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="373.7" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.39%)</title><rect x="370.7" y="611.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="373.7" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.39%)</title><rect x="370.7" y="595.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="375.3" y="675.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="378.3" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.08%)</title><rect x="375.3" y="659.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="378.3" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.08%)</title><rect x="375.3" y="643.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="378.3" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.08%)</title><rect x="375.3" y="627.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="378.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$65/2020997402.run (420 samples, 32.84%)</title><rect x="376.3" y="835.0" width="387.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.3" y="846.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.08%)</title><rect x="376.3" y="819.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$get$0 (419 samples, 32.76%)</title><rect x="377.2" y="819.0" width="386.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.2" y="830.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.l..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (284 samples, 22.20%)</title><rect x="377.2" y="803.0" width="262.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.2" y="814.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.08%)</title><rect x="378.1" y="787.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="381.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (282 samples, 22.05%)</title><rect x="379.0" y="787.0" width="260.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.0" y="798.0">one/nio/http/HttpSession.writeRespo..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.47%)</title><rect x="379.0" y="771.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.39%)</title><rect x="380.0" y="755.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.23%)</title><rect x="380.0" y="739.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.16%)</title><rect x="382.7" y="739.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.16%)</title><rect x="382.7" y="723.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.16%)</title><rect x="382.7" y="707.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (276 samples, 21.58%)</title><rect x="384.6" y="771.0" width="254.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.6" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (276 samples, 21.58%)</title><rect x="384.6" y="755.0" width="254.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.6" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (276 samples, 21.58%)</title><rect x="384.6" y="739.0" width="254.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.6" y="750.0">one/nio/net/Session$ArrayQueueItem..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (276 samples, 21.58%)</title><rect x="384.6" y="723.0" width="254.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.6" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="384.6" y="707.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="387.6" y="718.0"></text>
</g>
<g>
<title>send (275 samples, 21.50%)</title><rect x="385.5" y="707.0" width="253.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="388.5" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (270 samples, 21.11%)</title><rect x="389.2" y="691.0" width="249.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="392.2" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.16%)</title><rect x="389.2" y="675.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="392.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (268 samples, 20.95%)</title><rect x="391.0" y="675.0" width="247.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="394.0" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.08%)</title><rect x="393.8" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="396.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (261 samples, 20.41%)</title><rect x="394.7" y="659.0" width="240.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.7" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (261 samples, 20.41%)</title><rect x="394.7" y="643.0" width="240.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="397.7" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (258 samples, 20.17%)</title><rect x="395.6" y="627.0" width="238.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="398.6" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (255 samples, 19.94%)</title><rect x="396.6" y="611.0" width="235.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.6" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (254 samples, 19.86%)</title><rect x="397.5" y="595.0" width="234.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.5" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.08%)</title><rect x="398.4" y="579.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="401.4" y="590.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.31%)</title><rect x="399.3" y="579.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="402.3" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.08%)</title><rect x="403.0" y="579.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (246 samples, 19.23%)</title><rect x="403.9" y="579.0" width="227.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="406.9" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.16%)</title><rect x="408.6" y="563.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="411.6" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.16%)</title><rect x="408.6" y="547.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="411.6" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.31%)</title><rect x="410.4" y="563.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.4" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.23%)</title><rect x="410.4" y="547.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.4" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.08%)</title><rect x="413.2" y="547.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.2" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.08%)</title><rect x="414.1" y="563.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="417.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (19 samples, 1.49%)</title><rect x="415.0" y="563.0" width="17.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="418.0" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 1.25%)</title><rect x="415.0" y="547.0" width="14.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="418.0" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.16%)</title><rect x="416.9" y="531.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.9" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.55%)</title><rect x="418.7" y="531.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="421.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.31%)</title><rect x="419.6" y="515.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.6" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.16%)</title><rect x="421.5" y="499.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.5" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.08%)</title><rect x="423.3" y="515.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="426.3" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.08%)</title><rect x="424.2" y="515.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.2" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.08%)</title><rect x="425.2" y="531.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="428.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.16%)</title><rect x="426.1" y="531.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="429.1" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.16%)</title><rect x="426.1" y="515.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.1" y="526.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.08%)</title><rect x="427.9" y="531.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.9" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.08%)</title><rect x="428.9" y="531.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="431.9" y="542.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.23%)</title><rect x="429.8" y="547.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.8" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.08%)</title><rect x="432.5" y="563.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="435.5" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.08%)</title><rect x="433.5" y="563.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.5" y="574.0"></text>
</g>
<g>
<title>tcp_push (203 samples, 15.87%)</title><rect x="434.4" y="563.0" width="187.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="437.4" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (202 samples, 15.79%)</title><rect x="434.4" y="547.0" width="186.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.4" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (202 samples, 15.79%)</title><rect x="434.4" y="531.0" width="186.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="437.4" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (190 samples, 14.86%)</title><rect x="437.2" y="515.0" width="175.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.2" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.08%)</title><rect x="442.7" y="499.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="445.7" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.08%)</title><rect x="443.6" y="499.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="446.6" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (176 samples, 13.76%)</title><rect x="444.5" y="499.0" width="162.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="447.5" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (172 samples, 13.45%)</title><rect x="444.5" y="483.0" width="158.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="447.5" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.08%)</title><rect x="444.5" y="467.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="447.5" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.08%)</title><rect x="445.5" y="467.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="448.5" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.08%)</title><rect x="446.4" y="467.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="449.4" y="478.0"></text>
</g>
<g>
<title>ip_local_out (168 samples, 13.14%)</title><rect x="447.3" y="467.0" width="155.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="450.3" y="478.0">ip_local_out</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.08%)</title><rect x="447.3" y="451.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="450.3" y="462.0"></text>
</g>
<g>
<title>ip_output (167 samples, 13.06%)</title><rect x="448.2" y="451.0" width="154.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.2" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (166 samples, 12.98%)</title><rect x="449.2" y="435.0" width="153.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.2" y="446.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.31%)</title><rect x="449.2" y="419.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="452.2" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (162 samples, 12.67%)</title><rect x="452.8" y="419.0" width="149.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="455.8" y="430.0">__ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.08%)</title><rect x="452.8" y="403.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.8" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (161 samples, 12.59%)</title><rect x="453.8" y="403.0" width="148.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="456.8" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (121 samples, 9.46%)</title><rect x="459.3" y="387.0" width="111.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="462.3" y="398.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.0 (121 samples, 9.46%)</title><rect x="459.3" y="371.0" width="111.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="462.3" y="382.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (121 samples, 9.46%)</title><rect x="459.3" y="355.0" width="111.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.3" y="366.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (121 samples, 9.46%)</title><rect x="459.3" y="339.0" width="111.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="462.3" y="350.0">__softirqentr..</text>
</g>
<g>
<title>net_rx_action (118 samples, 9.23%)</title><rect x="460.2" y="323.0" width="108.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.2" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (117 samples, 9.15%)</title><rect x="461.1" y="307.0" width="108.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.1" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (112 samples, 8.76%)</title><rect x="464.8" y="291.0" width="103.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="467.8" y="302.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (111 samples, 8.68%)</title><rect x="464.8" y="275.0" width="102.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.8" y="286.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.23%)</title><rect x="464.8" y="259.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="467.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv (103 samples, 8.05%)</title><rect x="467.6" y="259.0" width="95.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="470.6" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (102 samples, 7.97%)</title><rect x="468.5" y="243.0" width="94.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.5" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (99 samples, 7.74%)</title><rect x="470.4" y="227.0" width="91.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.4" y="238.0">ip_local_de..</text>
</g>
<g>
<title>ip_local_deliver_finish (98 samples, 7.66%)</title><rect x="470.4" y="211.0" width="90.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.4" y="222.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (97 samples, 7.58%)</title><rect x="470.4" y="195.0" width="89.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="473.4" y="206.0">ip_protoco..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.08%)</title><rect x="470.4" y="179.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.4" y="190.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.08%)</title><rect x="471.3" y="179.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="474.3" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.16%)</title><rect x="472.2" y="179.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (93 samples, 7.27%)</title><rect x="474.1" y="179.0" width="85.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="477.1" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.39%)</title><rect x="476.8" y="163.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="479.8" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.08%)</title><rect x="480.5" y="147.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.5" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.08%)</title><rect x="481.4" y="163.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.4" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.08%)</title><rect x="482.4" y="163.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="485.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.23%)</title><rect x="483.3" y="163.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.3" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.23%)</title><rect x="483.3" y="147.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.3" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.08%)</title><rect x="486.1" y="163.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="489.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.39%)</title><rect x="487.0" y="163.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="490.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (74 samples, 5.79%)</title><rect x="491.6" y="163.0" width="68.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.6" y="174.0">tcp_v4_..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.08%)</title><rect x="491.6" y="147.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="494.6" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.16%)</title><rect x="492.5" y="147.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.5" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.16%)</title><rect x="494.4" y="147.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="497.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (69 samples, 5.39%)</title><rect x="496.2" y="147.0" width="63.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="499.2" y="158.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.31%)</title><rect x="499.0" y="131.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.23%)</title><rect x="499.9" y="115.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.08%)</title><rect x="499.9" y="99.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="502.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.16%)</title><rect x="500.8" y="99.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.8" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.16%)</title><rect x="500.8" y="83.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.8" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.08%)</title><rect x="501.7" y="67.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="504.7" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.08%)</title><rect x="502.7" y="131.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="505.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 1.64%)</title><rect x="503.6" y="131.0" width="19.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="506.6" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.08%)</title><rect x="506.4" y="115.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="509.4" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.08%)</title><rect x="507.3" y="115.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="510.3" y="126.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.08%)</title><rect x="508.2" y="115.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="511.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.08%)</title><rect x="509.1" y="115.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.1" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (12 samples, 0.94%)</title><rect x="510.0" y="115.0" width="11.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="513.0" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.63%)</title><rect x="511.0" y="99.0" width="7.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="514.0" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.23%)</title><rect x="511.0" y="83.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="514.0" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.23%)</title><rect x="511.0" y="67.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="514.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.08%)</title><rect x="512.8" y="51.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="515.8" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.08%)</title><rect x="513.7" y="83.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="516.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.31%)</title><rect x="514.7" y="83.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="517.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.31%)</title><rect x="514.7" y="67.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.7" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.16%)</title><rect x="516.5" y="51.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.5" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.16%)</title><rect x="516.5" y="35.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="519.5" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.23%)</title><rect x="518.4" y="99.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="521.4" y="110.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.16%)</title><rect x="521.1" y="115.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (37 samples, 2.89%)</title><rect x="523.0" y="131.0" width="34.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="526.0" y="142.0">tc..</text>
</g>
<g>
<title>sock_def_readable (37 samples, 2.89%)</title><rect x="523.0" y="115.0" width="34.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="526.0" y="126.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (37 samples, 2.89%)</title><rect x="523.0" y="99.0" width="34.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.0" y="110.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (37 samples, 2.89%)</title><rect x="523.0" y="83.0" width="34.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.0" y="94.0">__..</text>
</g>
<g>
<title>__lock_text_start (36 samples, 2.81%)</title><rect x="523.9" y="67.0" width="33.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.9" y="78.0">__..</text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.16%)</title><rect x="557.1" y="131.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="560.1" y="142.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.16%)</title><rect x="557.1" y="115.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="560.1" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.08%)</title><rect x="558.9" y="131.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="561.9" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.08%)</title><rect x="559.9" y="195.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="562.9" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.08%)</title><rect x="560.8" y="211.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.08%)</title><rect x="561.7" y="227.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="564.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.08%)</title><rect x="562.6" y="259.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="565.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.31%)</title><rect x="563.6" y="259.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="566.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.08%)</title><rect x="567.2" y="275.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.08%)</title><rect x="568.2" y="291.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.2" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.16%)</title><rect x="569.1" y="323.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="572.1" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (33 samples, 2.58%)</title><rect x="570.9" y="387.0" width="30.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="573.9" y="398.0">de..</text>
</g>
<g>
<title>__dev_queue_xmit (33 samples, 2.58%)</title><rect x="570.9" y="371.0" width="30.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.9" y="382.0">__..</text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 1.72%)</title><rect x="575.6" y="355.0" width="20.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="578.6" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.08%)</title><rect x="575.6" y="339.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.6" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.16%)</title><rect x="576.5" y="339.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="579.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 1.17%)</title><rect x="578.3" y="339.0" width="13.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="581.3" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.23%)</title><rect x="579.2" y="323.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="582.2" y="334.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.47%)</title><rect x="582.0" y="323.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="585.0" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.47%)</title><rect x="582.0" y="307.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="585.0" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.47%)</title><rect x="582.0" y="291.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.0" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.08%)</title><rect x="587.5" y="323.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="590.5" y="334.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.16%)</title><rect x="588.5" y="323.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="591.5" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.16%)</title><rect x="590.3" y="323.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="593.3" y="334.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.16%)</title><rect x="592.2" y="339.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="595.2" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.16%)</title><rect x="594.0" y="339.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.0" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.31%)</title><rect x="595.8" y="355.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="598.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.08%)</title><rect x="599.5" y="355.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="602.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.08%)</title><rect x="600.5" y="355.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="603.5" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.08%)</title><rect x="601.4" y="387.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="604.4" y="398.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.08%)</title><rect x="602.3" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.3" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.08%)</title><rect x="603.2" y="483.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.2" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.16%)</title><rect x="604.2" y="483.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="607.2" y="494.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.08%)</title><rect x="606.0" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.0" y="494.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.23%)</title><rect x="606.9" y="499.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="609.9" y="510.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.23%)</title><rect x="606.9" y="483.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.9" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.08%)</title><rect x="609.7" y="499.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.7" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.16%)</title><rect x="610.6" y="499.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.6" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.08%)</title><rect x="612.5" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="615.5" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.08%)</title><rect x="613.4" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="616.4" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.31%)</title><rect x="614.3" y="515.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="617.3" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.31%)</title><rect x="614.3" y="499.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="617.3" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.31%)</title><rect x="614.3" y="483.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="617.3" y="494.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.31%)</title><rect x="614.3" y="467.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="617.3" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.23%)</title><rect x="615.2" y="451.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="618.2" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.08%)</title><rect x="618.0" y="515.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="621.0" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.16%)</title><rect x="618.9" y="515.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.9" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.08%)</title><rect x="620.8" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="623.8" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.70%)</title><rect x="621.7" y="563.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="624.7" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.16%)</title><rect x="621.7" y="547.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="624.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.47%)</title><rect x="623.5" y="547.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="626.5" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.23%)</title><rect x="626.3" y="531.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="629.3" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.08%)</title><rect x="629.1" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.1" y="558.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.08%)</title><rect x="630.0" y="563.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="633.0" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.08%)</title><rect x="630.9" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.9" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.16%)</title><rect x="631.8" y="611.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.16%)</title><rect x="631.8" y="595.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="634.8" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.16%)</title><rect x="631.8" y="579.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="634.8" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.16%)</title><rect x="633.7" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.7" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.08%)</title><rect x="633.7" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.7" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.08%)</title><rect x="633.7" y="595.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="636.7" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.08%)</title><rect x="633.7" y="579.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.7" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.08%)</title><rect x="634.6" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="637.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.23%)</title><rect x="635.5" y="659.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="638.5" y="670.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.23%)</title><rect x="635.5" y="643.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="638.5" y="654.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.23%)</title><rect x="635.5" y="627.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.5" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.23%)</title><rect x="635.5" y="611.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="638.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="638.3" y="691.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="638.3" y="675.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="641.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="638.3" y="659.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.08%)</title><rect x="639.2" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.08%)</title><rect x="639.2" y="787.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (133 samples, 10.40%)</title><rect x="640.1" y="803.0" width="122.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.1" y="814.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (131 samples, 10.24%)</title><rect x="640.1" y="787.0" width="120.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.1" y="798.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (131 samples, 10.24%)</title><rect x="640.1" y="771.0" width="120.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.1" y="782.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.08%)</title><rect x="640.1" y="755.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="643.1" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (124 samples, 9.70%)</title><rect x="641.1" y="755.0" width="114.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="644.1" y="766.0">Java_org_rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (2 samples, 0.16%)</title><rect x="641.1" y="739.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="644.1" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="642.0" y="723.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="645.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="642.0" y="707.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="645.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="642.0" y="691.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="645.0" y="702.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.08%)</title><rect x="642.9" y="739.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="645.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="642.9" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="645.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="642.9" y="707.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="642.9" y="691.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.9" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.23%)</title><rect x="643.8" y="739.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="646.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.23%)</title><rect x="643.8" y="723.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="646.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.23%)</title><rect x="643.8" y="707.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.23%)</title><rect x="643.8" y="691.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.08%)</title><rect x="646.6" y="739.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="649.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="646.6" y="723.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="649.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="646.6" y="707.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="649.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="646.6" y="691.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="649.6" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (115 samples, 8.99%)</title><rect x="647.5" y="739.0" width="106.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="650.5" y="750.0">rocksdb_get_h..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="648.4" y="723.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="651.4" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.08%)</title><rect x="649.4" y="723.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="652.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="649.4" y="707.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="649.4" y="691.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="649.4" y="675.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.4" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.08%)</title><rect x="650.3" y="723.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="653.3" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.16%)</title><rect x="651.2" y="723.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="654.2" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.08%)</title><rect x="651.2" y="707.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="654.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="651.2" y="691.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="654.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="651.2" y="675.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="651.2" y="659.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="654.2" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="652.1" y="707.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="655.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="652.1" y="691.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="652.1" y="675.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="652.1" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="655.1" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.08%)</title><rect x="653.0" y="723.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="656.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (95 samples, 7.43%)</title><rect x="654.0" y="723.0" width="87.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="657.0" y="734.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.08%)</title><rect x="654.0" y="707.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="657.0" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="654.0" y="691.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="657.0" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="654.0" y="675.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="654.0" y="659.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="657.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (94 samples, 7.35%)</title><rect x="654.9" y="707.0" width="86.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="657.9" y="718.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (93 samples, 7.27%)</title><rect x="655.8" y="691.0" width="85.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="658.8" y="702.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (93 samples, 7.27%)</title><rect x="655.8" y="675.0" width="85.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="658.8" y="686.0">rocksdb::D..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="656.7" y="659.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="659.7" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.16%)</title><rect x="657.7" y="659.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="660.7" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="658.6" y="643.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="661.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="658.6" y="627.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="658.6" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="661.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.08%)</title><rect x="659.5" y="659.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="662.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="659.5" y="643.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="662.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="659.5" y="627.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="662.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="659.5" y="611.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="662.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (85 samples, 6.65%)</title><rect x="660.4" y="659.0" width="78.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="663.4" y="670.0">rocksdb::..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.16%)</title><rect x="663.2" y="643.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="666.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.16%)</title><rect x="663.2" y="627.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="666.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="663.2" y="611.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="666.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.16%)</title><rect x="663.2" y="595.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="666.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.08%)</title><rect x="665.0" y="643.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="668.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.08%)</title><rect x="666.0" y="643.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="669.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() [clone .plt] (1 samples, 0.08%)</title><rect x="666.0" y="627.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="669.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="666.0" y="611.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="669.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="666.0" y="595.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="669.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="666.0" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="669.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="666.9" y="643.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="669.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (7 samples, 0.55%)</title><rect x="667.8" y="643.0" width="6.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="670.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.23%)</title><rect x="667.8" y="627.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="670.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.08%)</title><rect x="667.8" y="611.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="670.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.16%)</title><rect x="668.7" y="611.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="671.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.08%)</title><rect x="670.6" y="627.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="673.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.08%)</title><rect x="671.5" y="627.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="674.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.08%)</title><rect x="672.4" y="627.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="675.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) [clone .plt] (1 samples, 0.08%)</title><rect x="673.3" y="627.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="676.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="673.3" y="611.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="673.3" y="595.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="676.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="673.3" y="579.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="676.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (66 samples, 5.16%)</title><rect x="674.3" y="643.0" width="60.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="677.3" y="654.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (1 samples, 0.08%)</title><rect x="675.2" y="627.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="678.2" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="675.2" y="611.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.2" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="675.2" y="595.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="675.2" y="579.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="678.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (63 samples, 4.93%)</title><rect x="676.1" y="627.0" width="58.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="679.1" y="638.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (63 samples, 4.93%)</title><rect x="676.1" y="611.0" width="58.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="679.1" y="622.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (5 samples, 0.39%)</title><rect x="676.1" y="595.0" width="4.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="679.1" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="678.9" y="579.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="681.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="678.9" y="563.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="678.9" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="681.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="678.9" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.9" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="679.8" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="682.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="679.8" y="563.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="679.8" y="547.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="682.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (56 samples, 4.38%)</title><rect x="680.7" y="595.0" width="51.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="683.7" y="606.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (3 samples, 0.23%)</title><rect x="692.7" y="579.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="695.7" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="694.6" y="563.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="694.6" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="697.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="694.6" y="531.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.6" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.39%)</title><rect x="695.5" y="579.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="698.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="699.2" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="699.2" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="699.2" y="531.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.2" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.39%)</title><rect x="700.1" y="579.0" width="4.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="703.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="703.8" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="706.8" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="703.8" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.8" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="703.8" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="706.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (28 samples, 2.19%)</title><rect x="704.7" y="579.0" width="25.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="707.7" y="590.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (3 samples, 0.23%)</title><rect x="714.9" y="563.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="717.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="716.7" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="719.7" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="716.7" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="719.7" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="716.7" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.7" y="526.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.47%)</title><rect x="717.6" y="563.0" width="5.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="720.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="722.2" y="547.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="722.2" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="725.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="722.2" y="515.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.2" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="723.2" y="563.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="726.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.31%)</title><rect x="724.1" y="563.0" width="3.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="727.1" y="574.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.08%)</title><rect x="727.8" y="563.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="730.8" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.16%)</title><rect x="728.7" y="563.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.7" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="728.7" y="547.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="731.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.16%)</title><rect x="728.7" y="531.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="731.7" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.16%)</title><rect x="730.5" y="579.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="733.5" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="730.5" y="563.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="733.5" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.16%)</title><rect x="730.5" y="547.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.08%)</title><rect x="732.4" y="595.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="735.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="733.3" y="595.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="736.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="733.3" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="733.3" y="563.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="736.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="734.2" y="627.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="737.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="734.2" y="611.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="737.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="734.2" y="595.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="737.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.08%)</title><rect x="735.2" y="643.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="738.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.08%)</title><rect x="736.1" y="643.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="739.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.08%)</title><rect x="737.0" y="643.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="740.0" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="737.9" y="643.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="740.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="737.9" y="627.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="740.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="737.9" y="611.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="740.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.08%)</title><rect x="738.9" y="659.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="741.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.08%)</title><rect x="739.8" y="659.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="742.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.08%)</title><rect x="740.7" y="659.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="743.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.08%)</title><rect x="741.6" y="723.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="744.6" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (12 samples, 0.94%)</title><rect x="742.5" y="723.0" width="11.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="745.5" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="742.5" y="707.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="745.5" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.08%)</title><rect x="743.5" y="707.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="746.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="743.5" y="691.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.5" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="743.5" y="675.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="746.5" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="743.5" y="659.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="746.5" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.16%)</title><rect x="744.4" y="707.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="747.4" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.08%)</title><rect x="745.3" y="691.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="748.3" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 0.47%)</title><rect x="746.2" y="707.0" width="5.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="749.2" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.39%)</title><rect x="747.2" y="691.0" width="4.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="750.2" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.23%)</title><rect x="748.1" y="675.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="751.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.08%)</title><rect x="748.1" y="659.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="751.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="748.1" y="643.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.1" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="748.1" y="627.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="751.1" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="748.1" y="611.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="751.1" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.16%)</title><rect x="749.0" y="659.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="752.0" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.08%)</title><rect x="749.0" y="643.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="752.0" y="654.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.08%)</title><rect x="749.9" y="643.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="752.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="750.8" y="675.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="753.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="750.8" y="659.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="750.8" y="643.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="753.8" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.16%)</title><rect x="751.8" y="707.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="754.8" y="718.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.08%)</title><rect x="753.6" y="739.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="756.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="754.5" y="739.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="757.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="754.5" y="723.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="757.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="754.5" y="707.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="757.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="755.5" y="755.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="758.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="755.5" y="739.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="758.5" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.08%)</title><rect x="756.4" y="739.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="759.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="756.4" y="723.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="759.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="756.4" y="707.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="756.4" y="691.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.4" y="702.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.08%)</title><rect x="757.3" y="755.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="760.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.08%)</title><rect x="758.2" y="755.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="761.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.08%)</title><rect x="759.1" y="755.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="762.1" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.08%)</title><rect x="760.1" y="755.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="763.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="760.1" y="739.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="763.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="760.1" y="723.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="763.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="760.1" y="707.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="763.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (1 samples, 0.08%)</title><rect x="761.0" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.08%)</title><rect x="761.0" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.0" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.08%)</title><rect x="761.0" y="755.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="764.0" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.08%)</title><rect x="761.0" y="739.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="764.0" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.08%)</title><rect x="761.0" y="723.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="764.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="761.0" y="707.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="764.0" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="761.0" y="691.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="764.0" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="761.9" y="787.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="764.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="761.9" y="771.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="764.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="761.9" y="755.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="764.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (1 samples, 0.08%)</title><rect x="762.8" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="762.8" y="787.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="762.8" y="771.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="762.8" y="755.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="762.8" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="762.8" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.08%)</title><rect x="762.8" y="707.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.08%)</title><rect x="762.8" y="691.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.run (1 samples, 0.08%)</title><rect x="763.8" y="835.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1 (1 samples, 0.08%)</title><rect x="763.8" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (1 samples, 0.08%)</title><rect x="763.8" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (1 samples, 0.08%)</title><rect x="763.8" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.08%)</title><rect x="763.8" y="771.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.08%)</title><rect x="763.8" y="755.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="766.8" y="766.0"></text>
</g>
<g>
<title>[async_worker-1 tid=3360] (461 samples, 36.04%)</title><rect x="764.7" y="899.0" width="425.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="767.7" y="910.0">[async_worker-1 tid=3360]</text>
</g>
<g>
<title>java/lang/Thread.run (461 samples, 36.04%)</title><rect x="764.7" y="883.0" width="425.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.7" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (461 samples, 36.04%)</title><rect x="764.7" y="867.0" width="425.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.7" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (461 samples, 36.04%)</title><rect x="764.7" y="851.0" width="425.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.7" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (90 samples, 7.04%)</title><rect x="764.7" y="835.0" width="83.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.7" y="846.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (89 samples, 6.96%)</title><rect x="765.6" y="819.0" width="82.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="768.6" y="830.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (69 samples, 5.39%)</title><rect x="765.6" y="803.0" width="63.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.6" y="814.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.08%)</title><rect x="768.4" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="771.4" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="768.4" y="771.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="771.4" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="768.4" y="755.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="771.4" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="768.4" y="739.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="771.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.16%)</title><rect x="769.3" y="787.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="772.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 4.85%)</title><rect x="771.1" y="787.0" width="57.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.1" y="798.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 4.85%)</title><rect x="771.1" y="771.0" width="57.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.1" y="782.0">jdk/in..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.08%)</title><rect x="773.9" y="755.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="776.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.08%)</title><rect x="774.8" y="755.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="777.8" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 1.17%)</title><rect x="775.8" y="755.0" width="13.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="778.8" y="766.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.08%)</title><rect x="777.6" y="739.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="780.6" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.08%)</title><rect x="778.5" y="739.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="781.5" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.31%)</title><rect x="779.4" y="739.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="782.4" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.16%)</title><rect x="781.3" y="723.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="784.3" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.23%)</title><rect x="783.1" y="739.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="786.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.23%)</title><rect x="783.1" y="723.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="786.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.23%)</title><rect x="783.1" y="707.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.16%)</title><rect x="784.1" y="691.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.1" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.08%)</title><rect x="784.1" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="787.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.08%)</title><rect x="784.1" y="659.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="787.1" y="670.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.08%)</title><rect x="785.0" y="675.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="788.0" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.08%)</title><rect x="785.9" y="739.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="788.9" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.16%)</title><rect x="786.8" y="739.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="789.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="788.7" y="739.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="791.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="788.7" y="723.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="791.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="788.7" y="707.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="791.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 3.05%)</title><rect x="789.6" y="755.0" width="36.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="792.6" y="766.0">[un..</text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.08%)</title><rect x="789.6" y="739.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="792.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (38 samples, 2.97%)</title><rect x="790.5" y="739.0" width="35.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="793.5" y="750.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 2.81%)</title><rect x="792.4" y="723.0" width="33.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="795.4" y="734.0">en..</text>
</g>
<g>
<title>do_syscall_64 (36 samples, 2.81%)</title><rect x="792.4" y="707.0" width="33.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="795.4" y="718.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 2.66%)</title><rect x="794.2" y="691.0" width="31.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="797.2" y="702.0">__..</text>
</g>
<g>
<title>do_futex (33 samples, 2.58%)</title><rect x="795.1" y="675.0" width="30.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="798.1" y="686.0">do..</text>
</g>
<g>
<title>futex_wait (33 samples, 2.58%)</title><rect x="795.1" y="659.0" width="30.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="798.1" y="670.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (31 samples, 2.42%)</title><rect x="795.1" y="643.0" width="28.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="798.1" y="654.0">fu..</text>
</g>
<g>
<title>__schedule (1 samples, 0.08%)</title><rect x="797.0" y="627.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="800.0" y="638.0"></text>
</g>
<g>
<title>schedule (28 samples, 2.19%)</title><rect x="797.9" y="627.0" width="25.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="800.9" y="638.0">s..</text>
</g>
<g>
<title>__schedule (28 samples, 2.19%)</title><rect x="797.9" y="611.0" width="25.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.9" y="622.0">_..</text>
</g>
<g>
<title>finish_task_switch (27 samples, 2.11%)</title><rect x="798.8" y="595.0" width="24.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="801.8" y="606.0">f..</text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.16%)</title><rect x="823.7" y="643.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="826.7" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.23%)</title><rect x="825.6" y="755.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="828.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.08%)</title><rect x="828.3" y="787.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 1.56%)</title><rect x="829.3" y="803.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 1.56%)</title><rect x="829.3" y="787.0" width="18.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="832.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 1.56%)</title><rect x="829.3" y="771.0" width="18.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 1.56%)</title><rect x="829.3" y="755.0" width="18.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 1.56%)</title><rect x="829.3" y="739.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 1.49%)</title><rect x="829.3" y="723.0" width="17.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="832.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.49%)</title><rect x="829.3" y="707.0" width="17.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 1.49%)</title><rect x="829.3" y="691.0" width="17.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 1.41%)</title><rect x="830.2" y="675.0" width="16.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.2" y="686.0"></text>
</g>
<g>
<title>do_futex (17 samples, 1.33%)</title><rect x="831.1" y="659.0" width="15.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="834.1" y="670.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 1.33%)</title><rect x="831.1" y="643.0" width="15.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.1" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.08%)</title><rect x="832.0" y="627.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.0" y="638.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.08%)</title><rect x="832.0" y="611.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.0" y="622.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 1.17%)</title><rect x="833.0" y="627.0" width="13.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.0" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 1.09%)</title><rect x="833.9" y="611.0" width="12.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.9" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 1.02%)</title><rect x="834.8" y="595.0" width="12.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="837.8" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.08%)</title><rect x="846.8" y="723.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="849.8" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="846.8" y="707.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="849.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="846.8" y="691.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="849.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="846.8" y="675.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="849.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$65/2020997402.run (367 samples, 28.69%)</title><rect x="847.7" y="835.0" width="338.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.7" y="846.0">ru/mail/polis/service/ivanovandrey/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$get$0 (367 samples, 28.69%)</title><rect x="847.7" y="819.0" width="338.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.7" y="830.0">ru/mail/polis/service/ivanovandrey/AsyncServic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (157 samples, 12.28%)</title><rect x="847.7" y="803.0" width="144.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.7" y="814.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.08%)</title><rect x="847.7" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="847.7" y="771.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="847.7" y="755.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="847.7" y="739.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="850.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="847.7" y="723.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="850.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (152 samples, 11.88%)</title><rect x="848.6" y="787.0" width="140.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.6" y="798.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.39%)</title><rect x="848.6" y="771.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.23%)</title><rect x="850.5" y="755.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.16%)</title><rect x="850.5" y="739.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="853.5" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="851.4" y="723.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="854.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.08%)</title><rect x="852.3" y="739.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.08%)</title><rect x="852.3" y="723.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.08%)</title><rect x="852.3" y="707.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (147 samples, 11.49%)</title><rect x="853.3" y="771.0" width="135.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.3" y="782.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (147 samples, 11.49%)</title><rect x="853.3" y="755.0" width="135.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.3" y="766.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (147 samples, 11.49%)</title><rect x="853.3" y="739.0" width="135.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.3" y="750.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (147 samples, 11.49%)</title><rect x="853.3" y="723.0" width="135.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.3" y="734.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.39%)</title><rect x="854.2" y="707.0" width="4.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="857.2" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.16%)</title><rect x="856.0" y="691.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="859.0" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.08%)</title><rect x="857.9" y="691.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="860.9" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="857.9" y="675.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="860.9" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="857.9" y="659.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="860.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="857.9" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="860.9" y="654.0"></text>
</g>
<g>
<title>send (141 samples, 11.02%)</title><rect x="858.8" y="707.0" width="130.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="861.8" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (139 samples, 10.87%)</title><rect x="860.6" y="691.0" width="128.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="863.6" y="702.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.08%)</title><rect x="860.6" y="675.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.6" y="686.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.16%)</title><rect x="861.6" y="675.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="864.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (136 samples, 10.63%)</title><rect x="863.4" y="675.0" width="125.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.4" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (131 samples, 10.24%)</title><rect x="865.2" y="659.0" width="120.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.2" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (130 samples, 10.16%)</title><rect x="865.2" y="643.0" width="120.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="868.2" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (125 samples, 9.77%)</title><rect x="866.2" y="627.0" width="115.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="869.2" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.16%)</title><rect x="866.2" y="611.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="869.2" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (123 samples, 9.62%)</title><rect x="868.0" y="611.0" width="113.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="871.0" y="622.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (123 samples, 9.62%)</title><rect x="868.0" y="595.0" width="113.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.0" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.08%)</title><rect x="868.0" y="579.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.0" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.08%)</title><rect x="868.9" y="579.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="871.9" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (120 samples, 9.38%)</title><rect x="869.9" y="579.0" width="110.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.9" y="590.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.08%)</title><rect x="870.8" y="563.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.8" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.08%)</title><rect x="870.8" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.8" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.08%)</title><rect x="871.7" y="563.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="874.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 1.25%)</title><rect x="872.6" y="563.0" width="14.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.6" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 1.17%)</title><rect x="872.6" y="547.0" width="13.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="875.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.47%)</title><rect x="876.3" y="531.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.39%)</title><rect x="876.3" y="515.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.3" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.16%)</title><rect x="879.1" y="499.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.1" y="510.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.08%)</title><rect x="880.9" y="515.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="883.9" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.08%)</title><rect x="881.9" y="531.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="884.9" y="542.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.08%)</title><rect x="882.8" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="885.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.08%)</title><rect x="883.7" y="531.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="886.7" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.08%)</title><rect x="884.6" y="531.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="887.6" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.08%)</title><rect x="885.5" y="531.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="888.5" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.08%)</title><rect x="886.5" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="889.5" y="558.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.16%)</title><rect x="887.4" y="563.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="890.4" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.08%)</title><rect x="889.2" y="563.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="892.2" y="574.0"></text>
</g>
<g>
<title>tcp_push (96 samples, 7.51%)</title><rect x="890.2" y="563.0" width="88.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="893.2" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (96 samples, 7.51%)</title><rect x="890.2" y="547.0" width="88.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="893.2" y="558.0">__tcp_push..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.08%)</title><rect x="890.2" y="531.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.2" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (95 samples, 7.43%)</title><rect x="891.1" y="531.0" width="87.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="894.1" y="542.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (83 samples, 6.49%)</title><rect x="895.7" y="515.0" width="76.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="898.7" y="526.0">__tcp_tr..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.08%)</title><rect x="897.5" y="499.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="900.5" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (79 samples, 6.18%)</title><rect x="898.5" y="499.0" width="72.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="901.5" y="510.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (78 samples, 6.10%)</title><rect x="898.5" y="483.0" width="71.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="901.5" y="494.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (78 samples, 6.10%)</title><rect x="898.5" y="467.0" width="71.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="901.5" y="478.0">ip_local..</text>
</g>
<g>
<title>ip_output (78 samples, 6.10%)</title><rect x="898.5" y="451.0" width="71.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="901.5" y="462.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.16%)</title><rect x="899.4" y="435.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="902.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (75 samples, 5.86%)</title><rect x="901.2" y="435.0" width="69.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="904.2" y="446.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.08%)</title><rect x="901.2" y="419.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="904.2" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (74 samples, 5.79%)</title><rect x="902.2" y="419.0" width="68.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="905.2" y="430.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (72 samples, 5.63%)</title><rect x="903.1" y="403.0" width="66.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="906.1" y="414.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (61 samples, 4.77%)</title><rect x="904.9" y="387.0" width="56.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.9" y="398.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (60 samples, 4.69%)</title><rect x="905.8" y="371.0" width="55.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.8" y="382.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (59 samples, 4.61%)</title><rect x="906.8" y="355.0" width="54.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="909.8" y="366.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (59 samples, 4.61%)</title><rect x="906.8" y="339.0" width="54.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="909.8" y="350.0">__sof..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.16%)</title><rect x="908.6" y="323.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.6" y="334.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.08%)</title><rect x="910.5" y="323.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.5" y="334.0"></text>
</g>
<g>
<title>net_rx_action (53 samples, 4.14%)</title><rect x="911.4" y="323.0" width="48.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.4" y="334.0">net_..</text>
</g>
<g>
<title>process_backlog (52 samples, 4.07%)</title><rect x="912.3" y="307.0" width="48.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="915.3" y="318.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 3.99%)</title><rect x="913.2" y="291.0" width="47.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.2" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (51 samples, 3.99%)</title><rect x="913.2" y="275.0" width="47.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="916.2" y="286.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.08%)</title><rect x="913.2" y="259.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (49 samples, 3.83%)</title><rect x="914.1" y="259.0" width="45.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="917.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.08%)</title><rect x="916.0" y="243.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="919.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (45 samples, 3.52%)</title><rect x="916.9" y="243.0" width="41.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="919.9" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (44 samples, 3.44%)</title><rect x="916.9" y="227.0" width="40.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="919.9" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (44 samples, 3.44%)</title><rect x="916.9" y="211.0" width="40.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.9" y="222.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (44 samples, 3.44%)</title><rect x="916.9" y="195.0" width="40.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="919.9" y="206.0">ip_..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.08%)</title><rect x="916.9" y="179.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="919.9" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.08%)</title><rect x="917.8" y="179.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="920.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (42 samples, 3.28%)</title><rect x="918.8" y="179.0" width="38.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.8" y="190.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.31%)</title><rect x="919.7" y="163.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.7" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.08%)</title><rect x="922.4" y="147.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="925.4" y="158.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.16%)</title><rect x="923.4" y="163.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="926.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.08%)</title><rect x="925.2" y="163.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="928.2" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.08%)</title><rect x="925.2" y="147.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.2" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.08%)</title><rect x="926.1" y="163.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="929.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (33 samples, 2.58%)</title><rect x="927.1" y="163.0" width="30.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="930.1" y="174.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (33 samples, 2.58%)</title><rect x="927.1" y="147.0" width="30.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="930.1" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.31%)</title><rect x="928.0" y="131.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="931.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.23%)</title><rect x="928.9" y="115.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.23%)</title><rect x="928.9" y="99.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="931.9" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.23%)</title><rect x="928.9" y="83.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="931.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.23%)</title><rect x="928.9" y="67.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="931.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 1.25%)</title><rect x="931.7" y="131.0" width="14.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.7" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.08%)</title><rect x="935.4" y="115.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="938.4" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.08%)</title><rect x="936.3" y="115.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="939.3" y="126.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.08%)</title><rect x="937.2" y="115.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="940.2" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (9 samples, 0.70%)</title><rect x="938.1" y="115.0" width="8.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.1" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.47%)</title><rect x="940.0" y="99.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="943.0" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.31%)</title><rect x="940.0" y="83.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="943.0" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.31%)</title><rect x="940.0" y="67.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.0" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.08%)</title><rect x="943.7" y="83.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.08%)</title><rect x="943.7" y="67.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.7" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.08%)</title><rect x="943.7" y="51.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="946.7" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.08%)</title><rect x="944.6" y="83.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.6" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.08%)</title><rect x="945.5" y="99.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="948.5" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (10 samples, 0.78%)</title><rect x="946.4" y="131.0" width="9.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.78%)</title><rect x="946.4" y="115.0" width="9.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.4" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.78%)</title><rect x="946.4" y="99.0" width="9.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.4" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.78%)</title><rect x="946.4" y="83.0" width="9.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.4" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.78%)</title><rect x="946.4" y="67.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="949.4" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.16%)</title><rect x="955.7" y="131.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.7" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.08%)</title><rect x="956.6" y="115.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.6" y="126.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.08%)</title><rect x="957.5" y="227.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="960.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.08%)</title><rect x="958.4" y="243.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="961.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.08%)</title><rect x="959.4" y="259.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="962.4" y="270.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.08%)</title><rect x="960.3" y="323.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="963.3" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.70%)</title><rect x="961.2" y="387.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="964.2" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.70%)</title><rect x="961.2" y="371.0" width="8.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.23%)</title><rect x="962.1" y="355.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="965.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.08%)</title><rect x="963.0" y="339.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="966.0" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.08%)</title><rect x="964.0" y="339.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="967.0" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.31%)</title><rect x="964.9" y="355.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="967.9" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.23%)</title><rect x="965.8" y="339.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="968.8" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.08%)</title><rect x="967.7" y="323.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="970.7" y="334.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.08%)</title><rect x="968.6" y="355.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="971.6" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.08%)</title><rect x="969.5" y="403.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="972.5" y="414.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.08%)</title><rect x="970.4" y="483.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="973.4" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.08%)</title><rect x="971.3" y="499.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="974.3" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.08%)</title><rect x="971.3" y="483.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="974.3" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.08%)</title><rect x="972.3" y="515.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="975.3" y="526.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.08%)</title><rect x="973.2" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="976.2" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.23%)</title><rect x="974.1" y="515.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.1" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.16%)</title><rect x="975.0" y="499.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="978.0" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.16%)</title><rect x="975.0" y="483.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.0" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.16%)</title><rect x="975.0" y="467.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="978.0" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.08%)</title><rect x="975.0" y="451.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.0" y="462.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.08%)</title><rect x="976.0" y="451.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="979.0" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.08%)</title><rect x="976.9" y="515.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.08%)</title><rect x="977.8" y="515.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.8" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.08%)</title><rect x="978.7" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="981.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.08%)</title><rect x="978.7" y="547.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.7" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.08%)</title><rect x="978.7" y="531.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="981.7" y="542.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.08%)</title><rect x="979.6" y="563.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.6" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.08%)</title><rect x="980.6" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.6" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.31%)</title><rect x="981.5" y="627.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="984.5" y="638.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.31%)</title><rect x="981.5" y="611.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.31%)</title><rect x="981.5" y="595.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="984.5" y="606.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.31%)</title><rect x="981.5" y="579.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="984.5" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.08%)</title><rect x="985.2" y="643.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="988.2" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.23%)</title><rect x="986.1" y="659.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="989.1" y="670.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.23%)</title><rect x="986.1" y="643.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.1" y="654.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.23%)</title><rect x="986.1" y="627.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="989.1" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.23%)</title><rect x="986.1" y="611.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.23%)</title><rect x="988.9" y="787.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.16%)</title><rect x="988.9" y="771.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.16%)</title><rect x="988.9" y="755.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="991.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.16%)</title><rect x="988.9" y="739.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="989.8" y="723.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.8" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.08%)</title><rect x="989.8" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.08%)</title><rect x="990.7" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="991.6" y="787.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="994.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (208 samples, 16.26%)</title><rect x="992.6" y="803.0" width="191.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.6" y="814.0">ru/mail/polis/dao/RocksDB..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (206 samples, 16.11%)</title><rect x="992.6" y="787.0" width="190.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.6" y="798.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (206 samples, 16.11%)</title><rect x="992.6" y="771.0" width="190.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="995.6" y="782.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (199 samples, 15.56%)</title><rect x="993.5" y="755.0" width="183.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="996.5" y="766.0">Java_org_rocksdb_RocksDB..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.23%)</title><rect x="994.4" y="739.0" width="2.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="997.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="996.3" y="723.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="996.3" y="707.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="999.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="996.3" y="691.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.3" y="702.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.08%)</title><rect x="997.2" y="739.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1000.2" y="750.0"></text>
</g>
<g>
<title>cfree (3 samples, 0.23%)</title><rect x="998.1" y="739.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1001.1" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="999.9" y="723.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1002.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="999.9" y="707.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1002.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="999.9" y="691.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.9" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.16%)</title><rect x="1000.9" y="739.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1003.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.16%)</title><rect x="1000.9" y="723.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1003.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="1000.9" y="707.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1003.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.16%)</title><rect x="1000.9" y="691.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1003.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.08%)</title><rect x="1002.7" y="739.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1005.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.08%)</title><rect x="1003.6" y="739.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1006.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1003.6" y="723.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1006.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1003.6" y="707.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1006.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1003.6" y="691.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1006.6" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (187 samples, 14.62%)</title><rect x="1004.6" y="739.0" width="172.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1007.6" y="750.0">rocksdb_get_helper(JNI..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="1007.3" y="723.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1010.3" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.16%)</title><rect x="1008.2" y="723.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1011.2" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.16%)</title><rect x="1008.2" y="707.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1011.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="1008.2" y="691.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1011.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.16%)</title><rect x="1008.2" y="675.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1011.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (173 samples, 13.53%)</title><rect x="1010.1" y="723.0" width="159.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1013.1" y="734.0">rocksdb::DB::Get(roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (173 samples, 13.53%)</title><rect x="1010.1" y="707.0" width="159.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1013.1" y="718.0">rocksdb::DB::Get(roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (173 samples, 13.53%)</title><rect x="1010.1" y="691.0" width="159.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1013.1" y="702.0">rocksdb::DBImpl::Get..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (173 samples, 13.53%)</title><rect x="1010.1" y="675.0" width="159.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1013.1" y="686.0">rocksdb::DBImpl::Get..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="1010.1" y="659.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1013.1" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="1011.0" y="659.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1014.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.08%)</title><rect x="1011.9" y="659.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.08%)</title><rect x="1012.9" y="659.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1015.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1012.9" y="643.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1012.9" y="627.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1015.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1012.9" y="611.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1015.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.08%)</title><rect x="1013.8" y="659.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1013.8" y="643.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1016.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1013.8" y="627.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1013.8" y="611.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1016.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (164 samples, 12.82%)</title><rect x="1014.7" y="659.0" width="151.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1017.7" y="670.0">rocksdb::DBImpl::Ge..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="1019.3" y="643.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1022.3" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.31%)</title><rect x="1020.2" y="643.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1023.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.16%)</title><rect x="1022.1" y="627.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1025.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="1022.1" y="611.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1025.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.16%)</title><rect x="1022.1" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1025.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.16%)</title><rect x="1023.9" y="643.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1026.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1024.9" y="627.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1024.9" y="611.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1024.9" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1027.9" y="606.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.08%)</title><rect x="1025.8" y="643.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1028.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.08%)</title><rect x="1026.7" y="643.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.08%)</title><rect x="1026.7" y="627.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1029.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="1027.6" y="643.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.08%)</title><rect x="1028.5" y="643.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1031.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="1029.5" y="643.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1032.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.08%)</title><rect x="1029.5" y="627.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1032.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.08%)</title><rect x="1029.5" y="611.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1032.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.08%)</title><rect x="1030.4" y="643.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1033.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.08%)</title><rect x="1031.3" y="643.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1034.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (139 samples, 10.87%)</title><rect x="1032.2" y="643.0" width="128.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1035.2" y="654.0">rocksdb::MemTabl..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (4 samples, 0.31%)</title><rect x="1035.9" y="627.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1038.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (130 samples, 10.16%)</title><rect x="1039.6" y="627.0" width="120.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1042.6" y="638.0">rocksdb::MemTab..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (121 samples, 9.46%)</title><rect x="1041.5" y="611.0" width="111.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1044.5" y="622.0">/tmp/librocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (2 samples, 0.16%)</title><rect x="1043.3" y="595.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1046.3" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.08%)</title><rect x="1044.2" y="579.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1047.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (113 samples, 8.84%)</title><rect x="1045.2" y="595.0" width="104.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1048.2" y="606.0">rocksdb::Inl..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (6 samples, 0.47%)</title><rect x="1082.1" y="579.0" width="5.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1085.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1086.7" y="563.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1089.7" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1086.7" y="547.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1089.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1086.7" y="531.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1089.7" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.23%)</title><rect x="1087.6" y="579.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1090.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (16 samples, 1.25%)</title><rect x="1090.4" y="579.0" width="14.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1093.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.16%)</title><rect x="1103.3" y="563.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1106.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.16%)</title><rect x="1103.3" y="547.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1106.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.16%)</title><rect x="1103.3" y="531.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1106.3" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.23%)</title><rect x="1105.1" y="579.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1108.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (37 samples, 2.89%)</title><rect x="1107.9" y="579.0" width="34.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1110.9" y="590.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni9775385539798900300.so (4 samples, 0.31%)</title><rect x="1122.7" y="563.0" width="3.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1125.7" y="574.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (7 samples, 0.55%)</title><rect x="1126.3" y="563.0" width="6.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1129.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1131.9" y="547.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1134.9" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1131.9" y="531.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.9" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1131.9" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1134.9" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.08%)</title><rect x="1132.8" y="563.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1135.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.55%)</title><rect x="1133.7" y="563.0" width="6.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1136.7" y="574.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.08%)</title><rect x="1140.2" y="563.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1143.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1141.1" y="563.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1144.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1141.1" y="547.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1141.1" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1144.1" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (8 samples, 0.63%)</title><rect x="1142.0" y="579.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1145.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (8 samples, 0.63%)</title><rect x="1142.0" y="563.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1145.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (8 samples, 0.63%)</title><rect x="1142.0" y="547.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.08%)</title><rect x="1149.4" y="595.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.4" y="606.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (2 samples, 0.16%)</title><rect x="1150.3" y="595.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.3" y="606.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.08%)</title><rect x="1152.2" y="595.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.31%)</title><rect x="1153.1" y="611.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const [clone .plt] (3 samples, 0.23%)</title><rect x="1156.8" y="611.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.08%)</title><rect x="1159.6" y="627.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (3 samples, 0.23%)</title><rect x="1160.5" y="643.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (2 samples, 0.16%)</title><rect x="1163.2" y="643.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.08%)</title><rect x="1165.1" y="643.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1165.1" y="627.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1165.1" y="611.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1165.1" y="595.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (2 samples, 0.16%)</title><rect x="1166.0" y="659.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.0" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1166.9" y="643.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1166.9" y="627.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1166.9" y="611.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1169.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.08%)</title><rect x="1167.9" y="659.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1167.9" y="643.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1167.9" y="627.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1170.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1167.9" y="611.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (1 samples, 0.08%)</title><rect x="1168.8" y="659.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (7 samples, 0.55%)</title><rect x="1169.7" y="723.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.7" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.16%)</title><rect x="1169.7" y="707.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1172.7" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.23%)</title><rect x="1171.5" y="707.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1174.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.08%)</title><rect x="1172.5" y="691.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.5" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1173.4" y="691.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1176.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1173.4" y="675.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1176.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1173.4" y="659.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.4" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.16%)</title><rect x="1174.3" y="707.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1177.3" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.08%)</title><rect x="1174.3" y="691.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.3" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1174.3" y="675.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1177.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1174.3" y="659.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1177.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1174.3" y="643.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1177.3" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="1175.2" y="691.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1178.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1176.2" y="723.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1179.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1176.2" y="707.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1179.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1176.2" y="691.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1179.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="1177.1" y="755.0" width="3.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1180.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.16%)</title><rect x="1177.1" y="739.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1180.1" y="750.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.16%)</title><rect x="1178.9" y="739.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.9" y="750.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.08%)</title><rect x="1180.8" y="755.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.8" y="766.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.08%)</title><rect x="1181.7" y="755.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (2 samples, 0.16%)</title><rect x="1182.6" y="787.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (2 samples, 0.16%)</title><rect x="1182.6" y="771.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.08%)</title><rect x="1182.6" y="755.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1185.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.08%)</title><rect x="1182.6" y="739.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="1182.6" y="723.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1185.6" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.08%)</title><rect x="1183.5" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1186.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (2 samples, 0.16%)</title><rect x="1184.5" y="803.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1187.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.08%)</title><rect x="1184.5" y="787.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.08%)</title><rect x="1184.5" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.08%)</title><rect x="1184.5" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.5" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1184.5" y="739.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1187.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1184.5" y="723.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1184.5" y="707.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1187.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="1185.4" y="787.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.08%)</title><rect x="1185.4" y="771.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="1185.4" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="1185.4" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="1185.4" y="723.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.08%)</title><rect x="1185.4" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.08%)</title><rect x="1185.4" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1188.4" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="1185.4" y="675.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1188.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/209220981.run (4 samples, 0.31%)</title><rect x="1186.3" y="835.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$1 (4 samples, 0.31%)</title><rect x="1186.3" y="819.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.16%)</title><rect x="1186.3" y="803.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.16%)</title><rect x="1186.3" y="787.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.16%)</title><rect x="1186.3" y="771.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.16%)</title><rect x="1186.3" y="755.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.16%)</title><rect x="1186.3" y="739.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.08%)</title><rect x="1186.3" y="723.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1186.3" y="707.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.3" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1186.3" y="691.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1186.3" y="675.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1189.3" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.08%)</title><rect x="1187.2" y="723.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1190.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.08%)</title><rect x="1187.2" y="707.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.08%)</title><rect x="1187.2" y="691.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1190.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (2 samples, 0.16%)</title><rect x="1188.2" y="803.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (2 samples, 0.16%)</title><rect x="1188.2" y="787.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (2 samples, 0.16%)</title><rect x="1188.2" y="771.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.16%)</title><rect x="1188.2" y="755.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$65/2020997402.run (1 samples, 0.08%)</title><rect x="1189.1" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
</g>
</svg>
