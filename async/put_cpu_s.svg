<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (2,579 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.47%)</title><rect x="10.0" y="915.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.47%)</title><rect x="10.0" y="899.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (11 samples, 0.43%)</title><rect x="10.0" y="883.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.16%)</title><rect x="10.0" y="867.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="11.4" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="14.4" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="11.4" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="14.4" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="11.4" y="819.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="14.4" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.12%)</title><rect x="11.8" y="867.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="14.8" y="878.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) [clone .part.0] (1 samples, 0.04%)</title><rect x="13.2" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.2" y="878.0"></text>
</g>
<g>
<title>pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="13.7" y="867.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="16.7" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="13.7" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="16.7" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="13.7" y="835.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.7" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="13.7" y="819.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="16.7" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.04%)</title><rect x="14.1" y="867.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="17.1" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="14.1" y="851.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="14.1" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="17.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="14.1" y="819.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="17.1" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="14.6" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="17.6" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="14.6" y="851.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="17.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="14.6" y="835.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="17.6" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.04%)</title><rect x="15.0" y="883.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="18.0" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="15.0" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="18.0" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="15.0" y="851.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="18.0" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="15.0" y="835.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.0" y="846.0"></text>
</g>
<g>
<title>[no_Java_frame] (3 samples, 0.12%)</title><rect x="15.5" y="915.0" width="1.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="18.5" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="16.9" y="915.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="19.9" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="16.9" y="899.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.9" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.04%)</title><rect x="16.9" y="883.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.9" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="16.9" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="19.9" y="878.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.04%)</title><rect x="16.9" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.01%)</title><rect x="17.3" y="915.0" width="11.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="20.3" y="926.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="17.3" y="899.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="20.3" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="17.8" y="899.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="20.8" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="17.8" y="883.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="20.8" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="17.8" y="867.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="20.8" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="17.8" y="851.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="20.8" y="862.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (24 samples, 0.93%)</title><rect x="18.2" y="899.0" width="11.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="21.2" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.78%)</title><rect x="20.1" y="883.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="23.1" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.78%)</title><rect x="20.1" y="867.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="23.1" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.74%)</title><rect x="20.5" y="851.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="23.5" y="862.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.70%)</title><rect x="21.0" y="835.0" width="8.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.0" y="846.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.04%)</title><rect x="21.0" y="819.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.0" y="830.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.66%)</title><rect x="21.4" y="819.0" width="7.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.4" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.62%)</title><rect x="21.9" y="803.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.9" y="814.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.04%)</title><rect x="22.4" y="787.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="25.4" y="798.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="22.4" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="25.4" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="22.4" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="25.4" y="766.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.54%)</title><rect x="22.8" y="787.0" width="6.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="25.8" y="798.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.54%)</title><rect x="22.8" y="771.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="25.8" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.54%)</title><rect x="22.8" y="755.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.8" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="28.8" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.8" y="750.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="28.8" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="31.8" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="28.8" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.8" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="28.8" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="31.8" y="702.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="28.8" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.8" y="686.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.04%)</title><rect x="28.8" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.8" y="670.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.04%)</title><rect x="28.8" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="31.8" y="654.0"></text>
</g>
<g>
<title>io_watchdog_func (1 samples, 0.04%)</title><rect x="28.8" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="31.8" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="28.8" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.8" y="622.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.23%)</title><rect x="29.2" y="915.0" width="2.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="32.2" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.04%)</title><rect x="29.2" y="899.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="32.2" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.19%)</title><rect x="29.7" y="899.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="32.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.19%)</title><rect x="29.7" y="883.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="32.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.19%)</title><rect x="29.7" y="867.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="32.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.19%)</title><rect x="29.7" y="851.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.7" y="862.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.19%)</title><rect x="29.7" y="835.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="32.7" y="846.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.19%)</title><rect x="29.7" y="819.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.7" y="830.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.19%)</title><rect x="29.7" y="803.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.7" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.19%)</title><rect x="29.7" y="787.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.7" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.19%)</title><rect x="29.7" y="771.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="32.0" y="915.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="35.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="32.0" y="899.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="32.0" y="883.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="35.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="32.0" y="867.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.0" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="32.0" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.0" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="32.0" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.0" y="846.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="32.0" y="819.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="35.0" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="32.4" y="915.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="35.4" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="32.4" y="899.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="35.4" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="32.4" y="883.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="35.4" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,900 samples, 73.67%)</title><rect x="32.9" y="915.0" width="869.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="35.9" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,900 samples, 73.67%)</title><rect x="32.9" y="899.0" width="869.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.9" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,900 samples, 73.67%)</title><rect x="32.9" y="883.0" width="869.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.9" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="34.2" y="867.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="37.2" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="34.2" y="851.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="37.2" y="862.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="34.2" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="37.2" y="846.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="34.2" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="37.2" y="830.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::loop_event(Method*, CompLevel, JavaThread*) (1 samples, 0.04%)</title><rect x="34.2" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="37.2" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="34.2" y="787.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="37.2" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="34.7" y="867.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="37.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (141 samples, 5.47%)</title><rect x="35.2" y="867.0" width="64.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.2" y="878.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (130 samples, 5.04%)</title><rect x="37.9" y="851.0" width="59.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.9" y="862.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (126 samples, 4.89%)</title><rect x="37.9" y="835.0" width="57.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.9" y="846.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.12%)</title><rect x="37.9" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.isHeldExclusively (2 samples, 0.08%)</title><rect x="38.4" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (2 samples, 0.08%)</title><rect x="38.4" y="787.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="39.3" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.04%)</title><rect x="39.3" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (122 samples, 4.73%)</title><rect x="39.7" y="819.0" width="55.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.7" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.08%)</title><rect x="39.7" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (120 samples, 4.65%)</title><rect x="40.7" y="803.0" width="54.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.7" y="814.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.47%)</title><rect x="41.1" y="787.0" width="5.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="44.1" y="798.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.08%)</title><rect x="41.1" y="771.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="44.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="41.6" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.6" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="41.6" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="44.6" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="41.6" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.6" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.12%)</title><rect x="42.0" y="771.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="45.0" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="42.9" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="45.9" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="42.9" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.9" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="42.9" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="45.9" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.16%)</title><rect x="43.4" y="771.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="46.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.12%)</title><rect x="43.4" y="755.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="46.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.12%)</title><rect x="43.4" y="739.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="46.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="43.9" y="723.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.9" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="43.9" y="707.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="43.9" y="691.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="46.9" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="44.8" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="44.8" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="47.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="44.8" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.8" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="45.2" y="771.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="48.2" y="782.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.08%)</title><rect x="45.7" y="771.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="48.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 4.11%)</title><rect x="46.6" y="787.0" width="48.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="49.6" y="798.0">[unk..</text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.04%)</title><rect x="46.6" y="771.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="49.6" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (99 samples, 3.84%)</title><rect x="47.1" y="771.0" width="45.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="50.1" y="782.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 3.72%)</title><rect x="47.5" y="755.0" width="43.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.5" y="766.0">entr..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="47.5" y="739.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="50.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (94 samples, 3.64%)</title><rect x="48.4" y="739.0" width="43.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="51.4" y="750.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (88 samples, 3.41%)</title><rect x="50.7" y="723.0" width="40.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="53.7" y="734.0">__x..</text>
</g>
<g>
<title>do_futex (88 samples, 3.41%)</title><rect x="50.7" y="707.0" width="40.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="53.7" y="718.0">do_..</text>
</g>
<g>
<title>futex_wait (88 samples, 3.41%)</title><rect x="50.7" y="691.0" width="40.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="53.7" y="702.0">fut..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="51.2" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.2" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (57 samples, 2.21%)</title><rect x="51.6" y="675.0" width="26.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.6" y="686.0">f..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="52.6" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.6" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="53.0" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.0" y="670.0"></text>
</g>
<g>
<title>schedule (53 samples, 2.06%)</title><rect x="53.5" y="659.0" width="24.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="56.5" y="670.0">s..</text>
</g>
<g>
<title>__schedule (50 samples, 1.94%)</title><rect x="54.8" y="643.0" width="22.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.8" y="654.0">_..</text>
</g>
<g>
<title>finish_task_switch (46 samples, 1.78%)</title><rect x="56.7" y="627.0" width="21.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.7" y="638.0">f..</text>
</g>
<g>
<title>futex_wait_setup (23 samples, 0.89%)</title><rect x="77.7" y="675.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.7" y="686.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="81.8" y="659.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="84.8" y="670.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.08%)</title><rect x="82.3" y="659.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="85.3" y="670.0"></text>
</g>
<g>
<title>get_futex_value_locked (11 samples, 0.43%)</title><rect x="83.2" y="659.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="86.2" y="670.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="88.2" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.2" y="686.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.16%)</title><rect x="88.7" y="675.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.7" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="90.5" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="93.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="91.0" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="94.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="91.4" y="755.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="94.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="91.4" y="739.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="94.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="91.4" y="723.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.4" y="734.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.19%)</title><rect x="92.4" y="771.0" width="2.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="95.4" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="93.7" y="755.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="96.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="93.7" y="739.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="96.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="93.7" y="723.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="96.7" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="94.6" y="771.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="97.6" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="95.1" y="787.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="98.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="95.1" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="98.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="95.1" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="98.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="95.1" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="95.6" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="96.0" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="96.0" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="96.0" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="96.0" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="96.0" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="96.0" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="96.0" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="96.0" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="96.0" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="96.0" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="99.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.08%)</title><rect x="96.5" y="835.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.08%)</title><rect x="96.5" y="819.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.08%)</title><rect x="96.5" y="803.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.08%)</title><rect x="96.5" y="787.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.08%)</title><rect x="96.5" y="771.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.5" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.08%)</title><rect x="96.5" y="755.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="99.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="96.5" y="739.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="96.5" y="723.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="99.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="96.5" y="707.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.5" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="96.5" y="691.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.5" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.08%)</title><rect x="96.5" y="675.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.5" y="686.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="96.9" y="659.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.9" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="96.9" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="99.9" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="96.9" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$71/256466147.run (4 samples, 0.16%)</title><rect x="97.4" y="851.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.4" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="98.3" y="835.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.3" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="98.3" y="819.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="101.3" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="98.3" y="803.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="99.2" y="851.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="102.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="99.2" y="835.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="99.2" y="819.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$70/1159765973.run (685 samples, 26.56%)</title><rect x="99.7" y="867.0" width="313.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.7" y="878.0">ru/mail/polis/service/ivanovandrey/AsyncSe..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$entity$0 (684 samples, 26.52%)</title><rect x="100.1" y="851.0" width="313.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.1" y="862.0">ru/mail/polis/service/ivanovandrey/AsyncSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (225 samples, 8.72%)</title><rect x="100.1" y="835.0" width="103.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.1" y="846.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (224 samples, 8.69%)</title><rect x="100.1" y="819.0" width="102.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.1" y="830.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="100.1" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="100.1" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="100.1" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="100.1" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="103.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="100.1" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="103.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="100.1" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="103.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (223 samples, 8.65%)</title><rect x="100.6" y="803.0" width="102.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.6" y="814.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (222 samples, 8.61%)</title><rect x="101.1" y="787.0" width="101.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.1" y="798.0">one/nio/net/..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="101.1" y="771.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="104.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="101.1" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="104.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="101.1" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="101.1" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="104.1" y="734.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.04%)</title><rect x="101.5" y="771.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="104.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="101.5" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="101.5" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="104.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="101.5" y="723.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="104.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (219 samples, 8.49%)</title><rect x="102.0" y="771.0" width="100.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.0" y="782.0">one/nio/net/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="102.0" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="105.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.04%)</title><rect x="102.0" y="739.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="105.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="102.0" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="105.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="102.0" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="105.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="102.0" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (217 samples, 8.41%)</title><rect x="102.4" y="755.0" width="99.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.4" y="766.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="103.3" y="739.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="106.3" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="103.3" y="723.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="106.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="103.3" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.3" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="103.3" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.3" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="103.3" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.3" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="103.8" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="106.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="103.8" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="103.8" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.8" y="702.0"></text>
</g>
<g>
<title>send (211 samples, 8.18%)</title><rect x="104.3" y="739.0" width="96.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="107.3" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (207 samples, 8.03%)</title><rect x="104.7" y="723.0" width="94.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.7" y="734.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (207 samples, 8.03%)</title><rect x="104.7" y="707.0" width="94.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="107.7" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (191 samples, 7.41%)</title><rect x="106.5" y="691.0" width="87.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="109.5" y="702.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (191 samples, 7.41%)</title><rect x="106.5" y="675.0" width="87.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="109.5" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (190 samples, 7.37%)</title><rect x="106.5" y="659.0" width="87.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="109.5" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="106.5" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="109.5" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (188 samples, 7.29%)</title><rect x="107.0" y="643.0" width="86.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.0" y="654.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (187 samples, 7.25%)</title><rect x="107.5" y="627.0" width="85.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="110.5" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="107.5" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.5" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="107.9" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.9" y="622.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="108.4" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.4" y="622.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="108.8" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="111.8" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="108.8" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="111.8" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="109.3" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="112.3" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="109.7" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.7" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="110.2" y="611.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.2" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (180 samples, 6.98%)</title><rect x="110.7" y="611.0" width="82.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="113.7" y="622.0">tcp_sendm..</text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.19%)</title><rect x="111.6" y="595.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="114.6" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.19%)</title><rect x="111.6" y="579.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="114.6" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.31%)</title><rect x="113.9" y="595.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="116.9" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.27%)</title><rect x="113.9" y="579.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="116.9" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="113.9" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="116.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="114.3" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="114.3" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.12%)</title><rect x="114.8" y="563.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.8" y="574.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="116.1" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="119.1" y="574.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="116.6" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.6" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="117.1" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="120.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (160 samples, 6.20%)</title><rect x="117.5" y="595.0" width="73.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.5" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (160 samples, 6.20%)</title><rect x="117.5" y="579.0" width="73.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="120.5" y="590.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.04%)</title><rect x="117.5" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.5" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (159 samples, 6.17%)</title><rect x="118.0" y="563.0" width="72.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="121.0" y="574.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="118.4" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="121.4" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (148 samples, 5.74%)</title><rect x="118.9" y="547.0" width="67.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.9" y="558.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (142 samples, 5.51%)</title><rect x="121.2" y="531.0" width="65.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="124.2" y="542.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (142 samples, 5.51%)</title><rect x="121.2" y="515.0" width="65.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.2" y="526.0">__ip_qu..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.08%)</title><rect x="121.2" y="499.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="124.2" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="121.6" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="124.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (140 samples, 5.43%)</title><rect x="122.1" y="499.0" width="64.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="125.1" y="510.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="122.1" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="125.1" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="122.6" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.6" y="494.0"></text>
</g>
<g>
<title>ip_output (138 samples, 5.35%)</title><rect x="123.0" y="483.0" width="63.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="126.0" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (137 samples, 5.31%)</title><rect x="123.5" y="467.0" width="62.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.5" y="478.0">ip_fin..</text>
</g>
<g>
<title>__ip_finish_output (136 samples, 5.27%)</title><rect x="123.5" y="451.0" width="62.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.5" y="462.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (134 samples, 5.20%)</title><rect x="124.4" y="435.0" width="61.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="127.4" y="446.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (120 samples, 4.65%)</title><rect x="125.3" y="419.0" width="54.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="128.3" y="430.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (120 samples, 4.65%)</title><rect x="125.3" y="403.0" width="54.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.3" y="414.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (119 samples, 4.61%)</title><rect x="125.8" y="387.0" width="54.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="128.8" y="398.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (119 samples, 4.61%)</title><rect x="125.8" y="371.0" width="54.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.8" y="382.0">__sof..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="126.7" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.7" y="366.0"></text>
</g>
<g>
<title>net_rx_action (116 samples, 4.50%)</title><rect x="127.1" y="355.0" width="53.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="130.1" y="366.0">net_r..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="128.0" y="339.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="131.0" y="350.0"></text>
</g>
<g>
<title>process_backlog (113 samples, 4.38%)</title><rect x="128.5" y="339.0" width="51.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.5" y="350.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (110 samples, 4.27%)</title><rect x="129.4" y="323.0" width="50.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.4" y="334.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="129.4" y="307.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (109 samples, 4.23%)</title><rect x="129.9" y="307.0" width="49.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="132.9" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="129.9" y="291.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="132.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv (107 samples, 4.15%)</title><rect x="130.8" y="291.0" width="48.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="133.8" y="302.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="130.8" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="133.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.04%)</title><rect x="131.2" y="275.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (105 samples, 4.07%)</title><rect x="131.7" y="275.0" width="48.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="134.7" y="286.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (105 samples, 4.07%)</title><rect x="131.7" y="259.0" width="48.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="134.7" y="270.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (103 samples, 3.99%)</title><rect x="132.2" y="243.0" width="47.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="135.2" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (103 samples, 3.99%)</title><rect x="132.2" y="227.0" width="47.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="135.2" y="238.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (103 samples, 3.99%)</title><rect x="132.2" y="211.0" width="47.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="135.2" y="222.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.12%)</title><rect x="133.1" y="195.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="136.1" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="134.0" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.0" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="134.5" y="195.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.5" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="134.5" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="137.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (96 samples, 3.72%)</title><rect x="134.9" y="195.0" width="43.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.9" y="206.0">tcp_..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="135.4" y="179.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.4" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.12%)</title><rect x="135.8" y="179.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (91 samples, 3.53%)</title><rect x="137.2" y="179.0" width="41.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.2" y="190.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="137.2" y="163.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="140.2" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="137.2" y="147.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="140.2" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="137.2" y="131.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.2" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="137.2" y="115.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="140.2" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="137.2" y="99.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="140.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.08%)</title><rect x="138.1" y="163.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="141.1" y="174.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.43%)</title><rect x="139.0" y="163.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="142.0" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.27%)</title><rect x="139.9" y="147.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="142.9" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.16%)</title><rect x="140.9" y="131.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.08%)</title><rect x="140.9" y="115.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.08%)</title><rect x="140.9" y="99.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="143.9" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="141.3" y="83.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="141.8" y="115.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="144.8" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="141.8" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.8" y="110.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="142.2" y="115.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="145.2" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="142.7" y="131.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="145.7" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="143.1" y="147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.1" y="158.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="143.6" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="146.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="144.1" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="147.1" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (72 samples, 2.79%)</title><rect x="144.5" y="163.0" width="33.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="147.5" y="174.0">tc..</text>
</g>
<g>
<title>sock_def_readable (72 samples, 2.79%)</title><rect x="144.5" y="147.0" width="33.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.5" y="158.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (71 samples, 2.75%)</title><rect x="145.0" y="131.0" width="32.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="148.0" y="142.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (71 samples, 2.75%)</title><rect x="145.0" y="115.0" width="32.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="148.0" y="126.0">__..</text>
</g>
<g>
<title>__lock_text_start (71 samples, 2.75%)</title><rect x="145.0" y="99.0" width="32.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="148.0" y="110.0">__..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="177.5" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="180.5" y="174.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="177.9" y="163.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="180.9" y="174.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="177.9" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="180.9" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="178.4" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="178.8" y="195.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.8" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="179.3" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.3" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="179.7" y="323.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="182.7" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.47%)</title><rect x="180.2" y="419.0" width="5.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.43%)</title><rect x="180.2" y="403.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="183.2" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.27%)</title><rect x="181.1" y="387.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="184.1" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.23%)</title><rect x="181.1" y="371.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="184.1" y="382.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.08%)</title><rect x="181.1" y="355.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.1" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.08%)</title><rect x="181.1" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.1" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.08%)</title><rect x="181.1" y="323.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="184.1" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="182.0" y="355.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.0" y="366.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.08%)</title><rect x="182.5" y="355.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.5" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="183.4" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="186.4" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="183.9" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="186.9" y="382.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.04%)</title><rect x="184.3" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.3" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="184.8" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="187.8" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="185.2" y="403.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="188.2" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="185.7" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.7" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="186.2" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="189.2" y="542.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="186.2" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.2" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="186.2" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="189.2" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="186.6" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.6" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="187.1" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="190.1" y="558.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="187.5" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.5" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.12%)</title><rect x="188.0" y="547.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="191.0" y="558.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="188.4" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="191.4" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="188.9" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.9" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="188.9" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="191.9" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="188.9" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="188.9" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="191.9" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="189.4" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="192.4" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="189.8" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.8" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="190.3" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="193.3" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="190.7" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="193.7" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.16%)</title><rect x="191.2" y="595.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.2" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.12%)</title><rect x="191.2" y="579.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.2" y="590.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="192.6" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="195.6" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="193.0" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="196.0" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="193.0" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="193.0" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.0" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="193.5" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.5" y="670.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="193.5" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="196.5" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="193.5" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.5" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="193.5" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 0.47%)</title><rect x="193.9" y="691.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="196.9" y="702.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.47%)</title><rect x="193.9" y="675.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="196.9" y="686.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.47%)</title><rect x="193.9" y="659.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.9" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.47%)</title><rect x="193.9" y="643.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="199.4" y="723.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="202.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="199.4" y="707.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="202.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="199.4" y="691.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="202.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="200.8" y="739.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="200.8" y="723.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="203.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="200.8" y="707.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="203.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="201.7" y="755.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="204.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="201.7" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="204.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="201.7" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="204.7" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="202.2" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="205.2" y="782.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="202.2" y="755.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="205.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="202.2" y="739.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="205.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="202.2" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="202.2" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="205.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="202.2" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="202.6" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="202.6" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="202.6" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="202.6" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="202.6" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.6" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="202.6" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.forwardRequest (459 samples, 17.80%)</title><rect x="203.1" y="835.0" width="210.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.1" y="846.0">ru/mail/polis/service/ivanov..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="203.1" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.08%)</title><rect x="203.1" y="803.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.1" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="203.1" y="787.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="206.1" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="203.1" y="771.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="203.1" y="755.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="206.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (457 samples, 17.72%)</title><rect x="204.0" y="819.0" width="209.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.0" y="830.0">one/nio/http/HttpClient.inv..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (457 samples, 17.72%)</title><rect x="204.0" y="803.0" width="209.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.0" y="814.0">one/nio/http/HttpClient.inv..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (73 samples, 2.83%)</title><rect x="204.9" y="787.0" width="33.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.9" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (73 samples, 2.83%)</title><rect x="204.9" y="771.0" width="33.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.9" y="782.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.16%)</title><rect x="204.9" y="755.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="207.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="204.9" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="207.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="204.9" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="204.9" y="707.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="204.9" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="207.9" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="205.4" y="739.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="208.4" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="205.8" y="723.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="208.8" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="205.8" y="707.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="208.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="205.8" y="691.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="205.8" y="675.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="208.8" y="686.0"></text>
</g>
<g>
<title>__recv (68 samples, 2.64%)</title><rect x="206.7" y="755.0" width="31.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="209.7" y="766.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 2.48%)</title><rect x="206.7" y="739.0" width="29.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="209.7" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (64 samples, 2.48%)</title><rect x="206.7" y="723.0" width="29.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="209.7" y="734.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (64 samples, 2.48%)</title><rect x="206.7" y="707.0" width="29.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="209.7" y="718.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (64 samples, 2.48%)</title><rect x="206.7" y="691.0" width="29.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.7" y="702.0">__..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="207.2" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="210.2" y="686.0"></text>
</g>
<g>
<title>sock_recvmsg (60 samples, 2.33%)</title><rect x="207.7" y="675.0" width="27.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="210.7" y="686.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (59 samples, 2.29%)</title><rect x="207.7" y="659.0" width="27.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.7" y="670.0">i..</text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.04%)</title><rect x="207.7" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="210.7" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.04%)</title><rect x="208.1" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="211.1" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="208.6" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="211.6" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (56 samples, 2.17%)</title><rect x="209.0" y="643.0" width="25.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="212.0" y="654.0">t..</text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="210.4" y="627.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.4" y="638.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="210.4" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="213.4" y="622.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="210.9" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="213.9" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="210.9" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.9" y="606.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="210.9" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="211.3" y="627.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="214.3" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="212.2" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="215.2" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="212.7" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.7" y="638.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="213.1" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="216.1" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="213.1" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.1" y="622.0"></text>
</g>
<g>
<title>sk_wait_data (28 samples, 1.09%)</title><rect x="213.6" y="627.0" width="12.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.6" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="213.6" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.6" y="622.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="213.6" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.6" y="606.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="214.1" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="214.1" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.1" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="214.1" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="217.1" y="590.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.04%)</title><rect x="214.5" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.5" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="214.5" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="217.5" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="215.0" y="611.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="218.0" y="622.0"></text>
</g>
<g>
<title>wait_woken (24 samples, 0.93%)</title><rect x="215.4" y="611.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="218.4" y="622.0"></text>
</g>
<g>
<title>schedule_timeout (22 samples, 0.85%)</title><rect x="216.4" y="595.0" width="10.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="219.4" y="606.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.08%)</title><rect x="216.4" y="579.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.4" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="216.4" y="563.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.4" y="574.0"></text>
</g>
<g>
<title>del_timer_sync (2 samples, 0.08%)</title><rect x="217.3" y="579.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="220.3" y="590.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.08%)</title><rect x="217.3" y="563.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.3" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="217.3" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="220.3" y="558.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.70%)</title><rect x="218.2" y="579.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="221.2" y="590.0"></text>
</g>
<g>
<title>__schedule (18 samples, 0.70%)</title><rect x="218.2" y="563.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="221.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.62%)</title><rect x="219.1" y="547.0" width="7.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="222.1" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (16 samples, 0.62%)</title><rect x="226.4" y="627.0" width="7.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="229.4" y="638.0"></text>
</g>
<g>
<title>__skb_datagram_iter (16 samples, 0.62%)</title><rect x="226.4" y="611.0" width="7.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="229.4" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.54%)</title><rect x="227.3" y="595.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="230.3" y="606.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.27%)</title><rect x="227.3" y="579.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="230.3" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.23%)</title><rect x="227.8" y="563.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="230.8" y="574.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.16%)</title><rect x="230.5" y="579.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.5" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.16%)</title><rect x="230.5" y="563.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="233.5" y="574.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.08%)</title><rect x="232.4" y="579.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="235.4" y="590.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="233.3" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.3" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="233.7" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="236.7" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="234.2" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.2" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="234.7" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="237.7" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="234.7" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="237.7" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="234.7" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.7" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="235.1" y="675.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="238.1" y="686.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="235.1" y="659.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="238.1" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="235.1" y="643.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="238.1" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="235.1" y="627.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="238.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.16%)</title><rect x="236.0" y="739.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="239.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.16%)</title><rect x="236.0" y="723.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.16%)</title><rect x="236.0" y="707.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.0" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="237.9" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="240.9" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="237.9" y="739.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="240.9" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="237.9" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (22 samples, 0.85%)</title><rect x="238.3" y="787.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.04%)</title><rect x="239.2" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="239.7" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (7 samples, 0.27%)</title><rect x="240.1" y="771.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="243.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.27%)</title><rect x="240.1" y="755.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.27%)</title><rect x="240.1" y="739.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.1" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="242.0" y="723.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="245.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="242.0" y="707.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="242.0" y="691.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.0" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="242.9" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="245.9" y="686.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="242.9" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.9" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="242.9" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.16%)</title><rect x="243.3" y="771.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.3" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="244.7" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="247.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="244.7" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="244.7" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="247.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.23%)</title><rect x="245.2" y="771.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="246.1" y="755.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="246.1" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="246.1" y="723.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.1" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="246.1" y="707.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.1" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="246.1" y="691.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="249.1" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="246.1" y="675.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="249.1" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="247.0" y="755.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="250.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="247.0" y="739.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="247.0" y="723.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="250.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="247.9" y="771.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.9" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="247.9" y="755.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.9" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="247.9" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="250.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.27%)</title><rect x="248.4" y="787.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.23%)</title><rect x="248.4" y="771.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="248.4" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="248.4" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="251.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="248.4" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="251.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="248.4" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="251.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="248.8" y="755.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="249.3" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="249.3" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="252.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="249.3" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.3" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="249.3" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="252.3" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="249.3" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="252.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.12%)</title><rect x="249.8" y="755.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.12%)</title><rect x="249.8" y="739.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.12%)</title><rect x="249.8" y="723.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.08%)</title><rect x="249.8" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.08%)</title><rect x="249.8" y="691.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.8" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="249.8" y="675.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="252.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="249.8" y="659.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="252.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="249.8" y="643.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.8" y="654.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.04%)</title><rect x="250.7" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="250.7" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="253.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="250.7" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="253.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="250.7" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.7" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="251.1" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="251.1" y="755.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="254.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="251.1" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="254.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.04%)</title><rect x="251.6" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="251.6" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.04%)</title><rect x="251.6" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="254.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (63 samples, 2.44%)</title><rect x="252.0" y="787.0" width="28.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.0" y="798.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.04%)</title><rect x="252.5" y="771.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="255.5" y="782.0"></text>
</g>
<g>
<title>setsockopt (58 samples, 2.25%)</title><rect x="253.0" y="771.0" width="26.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="256.0" y="782.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 2.02%)</title><rect x="254.3" y="755.0" width="23.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="257.3" y="766.0">e..</text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.08%)</title><rect x="254.3" y="739.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.94%)</title><rect x="255.2" y="739.0" width="22.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="258.2" y="750.0">d..</text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.08%)</title><rect x="258.9" y="723.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="261.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (40 samples, 1.55%)</title><rect x="259.8" y="723.0" width="18.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.8" y="734.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.04%)</title><rect x="259.8" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="262.8" y="718.0"></text>
</g>
<g>
<title>__sys_setsockopt (39 samples, 1.51%)</title><rect x="260.3" y="707.0" width="17.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.3" y="718.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.04%)</title><rect x="261.6" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="264.6" y="702.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="262.1" y="691.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="265.1" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (6 samples, 0.23%)</title><rect x="263.0" y="691.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="266.0" y="702.0"></text>
</g>
<g>
<title>bpf_prog_array_is_empty (1 samples, 0.04%)</title><rect x="265.8" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="268.8" y="702.0"></text>
</g>
<g>
<title>security_socket_setsockopt (4 samples, 0.16%)</title><rect x="266.2" y="691.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.2" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (3 samples, 0.12%)</title><rect x="266.7" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.7" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.12%)</title><rect x="266.7" y="659.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.7" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.08%)</title><rect x="268.1" y="691.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="271.1" y="702.0"></text>
</g>
<g>
<title>sock_setsockopt (11 samples, 0.43%)</title><rect x="269.0" y="691.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.0" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.12%)</title><rect x="269.4" y="675.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.4" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="270.8" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="273.8" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="271.3" y="675.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.3" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="271.7" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.7" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="272.2" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="272.2" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="275.2" y="670.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="272.2" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="275.2" y="654.0"></text>
</g>
<g>
<title>sock_set_timeout (3 samples, 0.12%)</title><rect x="272.6" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.6" y="686.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.04%)</title><rect x="273.5" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="276.5" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.35%)</title><rect x="274.0" y="691.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="277.0" y="702.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.27%)</title><rect x="274.0" y="675.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="277.0" y="686.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.27%)</title><rect x="274.0" y="659.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.0" y="670.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.27%)</title><rect x="274.0" y="643.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="277.2" y="675.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="280.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="278.1" y="755.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="281.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="278.1" y="739.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="281.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="278.1" y="723.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.1" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="279.5" y="771.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="282.5" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="279.5" y="755.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="282.5" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="279.5" y="739.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="282.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (276 samples, 10.70%)</title><rect x="280.9" y="787.0" width="126.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.9" y="798.0">one/nio/net/Nati..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="280.9" y="771.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="283.9" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="280.9" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="283.9" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="280.9" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="283.9" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="280.9" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="283.9" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (4 samples, 0.16%)</title><rect x="281.3" y="771.0" width="1.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="284.3" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.16%)</title><rect x="281.3" y="755.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="284.3" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="281.8" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="284.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="281.8" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="284.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="281.8" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="281.8" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="284.8" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="282.2" y="739.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="285.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="282.2" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="285.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="282.2" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="285.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="282.2" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="285.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="282.7" y="739.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="282.7" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="285.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="282.7" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="285.7" y="718.0"></text>
</g>
<g>
<title>send (270 samples, 10.47%)</title><rect x="283.2" y="771.0" width="123.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="286.2" y="782.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (270 samples, 10.47%)</title><rect x="283.2" y="755.0" width="123.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="286.2" y="766.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (270 samples, 10.47%)</title><rect x="283.2" y="739.0" width="123.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="286.2" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (250 samples, 9.69%)</title><rect x="285.4" y="723.0" width="114.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="288.4" y="734.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (249 samples, 9.65%)</title><rect x="285.4" y="707.0" width="114.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="288.4" y="718.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="285.4" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="288.4" y="702.0"></text>
</g>
<g>
<title>sock_sendmsg (246 samples, 9.54%)</title><rect x="285.9" y="691.0" width="112.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="288.9" y="702.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (240 samples, 9.31%)</title><rect x="285.9" y="675.0" width="109.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="288.9" y="686.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="285.9" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="288.9" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg (239 samples, 9.27%)</title><rect x="286.4" y="659.0" width="109.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="289.4" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="286.4" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="289.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="286.8" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="289.8" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="287.3" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="290.3" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="287.7" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.7" y="654.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.08%)</title><rect x="287.7" y="627.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="290.7" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="288.6" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="291.6" y="654.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.08%)</title><rect x="289.1" y="643.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="292.1" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (231 samples, 8.96%)</title><rect x="290.0" y="643.0" width="105.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.0" y="654.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.12%)</title><rect x="294.1" y="627.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.1" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.12%)</title><rect x="294.1" y="611.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="297.1" y="622.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.19%)</title><rect x="295.5" y="627.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="298.5" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.16%)</title><rect x="295.5" y="611.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="298.5" y="622.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="297.3" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="300.3" y="622.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.08%)</title><rect x="297.8" y="627.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="300.8" y="638.0"></text>
</g>
<g>
<title>sk_page_frag_refill (5 samples, 0.19%)</title><rect x="298.7" y="627.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="301.7" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.19%)</title><rect x="298.7" y="611.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.7" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (31 samples, 1.20%)</title><rect x="301.0" y="627.0" width="14.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="304.0" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (26 samples, 1.01%)</title><rect x="301.0" y="611.0" width="11.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="304.0" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (17 samples, 0.66%)</title><rect x="301.9" y="595.0" width="7.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="304.9" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.47%)</title><rect x="302.4" y="579.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.4" y="590.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.12%)</title><rect x="306.0" y="563.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="309.0" y="574.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="307.4" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="310.4" y="574.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.08%)</title><rect x="307.9" y="579.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="310.9" y="590.0"></text>
</g>
<g>
<title>memset (2 samples, 0.08%)</title><rect x="308.8" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="311.8" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.16%)</title><rect x="309.7" y="595.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="312.7" y="606.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="311.5" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="314.5" y="606.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="311.5" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="314.5" y="590.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="312.0" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="315.0" y="606.0"></text>
</g>
<g>
<title>memset (1 samples, 0.04%)</title><rect x="312.4" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="315.4" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.04%)</title><rect x="312.9" y="611.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="315.9" y="622.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.16%)</title><rect x="313.4" y="611.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.4" y="622.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.08%)</title><rect x="315.2" y="627.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="318.2" y="638.0"></text>
</g>
<g>
<title>tcp_push (168 samples, 6.51%)</title><rect x="316.1" y="627.0" width="76.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="319.1" y="638.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (168 samples, 6.51%)</title><rect x="316.1" y="611.0" width="76.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="319.1" y="622.0">__tcp_pu..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="316.1" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="319.1" y="606.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="316.6" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="319.6" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="317.0" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="320.0" y="606.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.04%)</title><rect x="317.5" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="320.5" y="606.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.08%)</title><rect x="317.9" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="320.9" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (162 samples, 6.28%)</title><rect x="318.8" y="595.0" width="74.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.8" y="606.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="322.0" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.0" y="590.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (143 samples, 5.54%)</title><rect x="322.5" y="579.0" width="65.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="325.5" y="590.0">__tcp_t..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="326.2" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="329.2" y="574.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.16%)</title><rect x="326.6" y="563.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="329.6" y="574.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="328.4" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="331.4" y="574.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="328.9" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.9" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (122 samples, 4.73%)</title><rect x="329.4" y="563.0" width="55.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="332.4" y="574.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (119 samples, 4.61%)</title><rect x="329.4" y="547.0" width="54.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.4" y="558.0">__ip_..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.08%)</title><rect x="332.6" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="335.6" y="542.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="333.5" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.5" y="542.0"></text>
</g>
<g>
<title>ip_local_out (107 samples, 4.15%)</title><rect x="333.9" y="531.0" width="49.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="336.9" y="542.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.08%)</title><rect x="333.9" y="515.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.9" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="334.9" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.9" y="526.0"></text>
</g>
<g>
<title>ip_output (104 samples, 4.03%)</title><rect x="335.3" y="515.0" width="47.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.3" y="526.0">ip_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="336.2" y="499.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="339.2" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (100 samples, 3.88%)</title><rect x="337.1" y="499.0" width="45.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="340.1" y="510.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="338.1" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="341.1" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (95 samples, 3.68%)</title><rect x="339.0" y="483.0" width="43.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.0" y="494.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (94 samples, 3.64%)</title><rect x="339.4" y="467.0" width="43.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.4" y="478.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="341.3" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="344.3" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (80 samples, 3.10%)</title><rect x="341.7" y="451.0" width="36.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.7" y="462.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (80 samples, 3.10%)</title><rect x="341.7" y="435.0" width="36.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.7" y="446.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (80 samples, 3.10%)</title><rect x="341.7" y="419.0" width="36.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.7" y="430.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 3.06%)</title><rect x="341.7" y="403.0" width="36.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="344.7" y="414.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="342.2" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="345.2" y="398.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="342.6" y="387.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="345.6" y="398.0"></text>
</g>
<g>
<title>net_rx_action (76 samples, 2.95%)</title><rect x="343.1" y="387.0" width="34.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="346.1" y="398.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="344.0" y="371.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.0" y="382.0"></text>
</g>
<g>
<title>process_backlog (73 samples, 2.83%)</title><rect x="344.5" y="371.0" width="33.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.5" y="382.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (72 samples, 2.79%)</title><rect x="344.9" y="355.0" width="33.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="347.9" y="366.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (72 samples, 2.79%)</title><rect x="344.9" y="339.0" width="33.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="347.9" y="350.0">__..</text>
</g>
<g>
<title>ip_rcv (72 samples, 2.79%)</title><rect x="344.9" y="323.0" width="33.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="347.9" y="334.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="344.9" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="347.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv_finish (71 samples, 2.75%)</title><rect x="345.4" y="307.0" width="32.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="348.4" y="318.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (71 samples, 2.75%)</title><rect x="345.4" y="291.0" width="32.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.4" y="302.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (70 samples, 2.71%)</title><rect x="345.8" y="275.0" width="32.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.8" y="286.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (70 samples, 2.71%)</title><rect x="345.8" y="259.0" width="32.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="348.8" y="270.0">ip..</text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="346.3" y="243.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="349.3" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (68 samples, 2.64%)</title><rect x="346.8" y="243.0" width="31.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="349.8" y="254.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.08%)</title><rect x="346.8" y="227.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.8" y="238.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="347.2" y="211.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="350.2" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="347.7" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="350.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (65 samples, 2.52%)</title><rect x="348.1" y="227.0" width="29.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="351.1" y="238.0">tc..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="348.1" y="211.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.1" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.08%)</title><rect x="348.6" y="211.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="351.6" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (62 samples, 2.40%)</title><rect x="349.5" y="211.0" width="28.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="352.5" y="222.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="350.0" y="195.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.0" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="350.4" y="179.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="353.4" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="350.4" y="163.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="353.4" y="174.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="350.4" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="353.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.50%)</title><rect x="350.9" y="195.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="353.9" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.08%)</title><rect x="351.8" y="179.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.8" y="190.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="352.7" y="179.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.7" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.27%)</title><rect x="353.2" y="179.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="356.2" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.12%)</title><rect x="353.6" y="163.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.6" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="353.6" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.6" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="353.6" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.6" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="354.1" y="147.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.1" y="158.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="354.1" y="131.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="357.1" y="142.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="354.5" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.5" y="158.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="355.0" y="163.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.0" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="355.4" y="163.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.4" y="174.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="355.9" y="163.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.9" y="174.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="356.4" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.4" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (45 samples, 1.74%)</title><rect x="356.8" y="195.0" width="20.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="359.8" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 1.74%)</title><rect x="356.8" y="179.0" width="20.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="359.8" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 1.71%)</title><rect x="357.3" y="163.0" width="20.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.3" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 1.71%)</title><rect x="357.3" y="147.0" width="20.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="360.3" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (44 samples, 1.71%)</title><rect x="357.3" y="131.0" width="20.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="360.3" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="377.4" y="195.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="380.4" y="206.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="377.4" y="179.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="380.4" y="190.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="377.9" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="380.9" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.35%)</title><rect x="378.3" y="451.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="381.3" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.27%)</title><rect x="378.3" y="435.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.3" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.08%)</title><rect x="379.2" y="419.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.2" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="379.2" y="403.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="382.2" y="414.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="379.2" y="387.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="382.2" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="379.2" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.2" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="379.2" y="355.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="382.2" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="379.7" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="382.7" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.08%)</title><rect x="380.2" y="419.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.2" y="430.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="381.1" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="384.1" y="430.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (2 samples, 0.08%)</title><rect x="381.5" y="435.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="384.5" y="446.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="382.4" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="385.4" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="382.9" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="385.9" y="542.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="383.4" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.4" y="542.0"></text>
</g>
<g>
<title>ip_copy_addrs (2 samples, 0.08%)</title><rect x="383.8" y="547.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="386.8" y="558.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="384.7" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="387.7" y="558.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.19%)</title><rect x="385.2" y="563.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="388.2" y="574.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="385.6" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="388.6" y="558.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.12%)</title><rect x="386.1" y="547.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.1" y="558.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="387.0" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="390.0" y="542.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="387.5" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="390.5" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="387.9" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="390.9" y="590.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.12%)</title><rect x="388.4" y="579.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="391.4" y="590.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.16%)</title><rect x="389.8" y="579.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="392.8" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="391.6" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.6" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="391.6" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="394.6" y="574.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="391.6" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.6" y="558.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="391.6" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="394.6" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="391.6" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="394.6" y="526.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="392.0" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="395.0" y="590.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="392.5" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="395.5" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.23%)</title><rect x="393.0" y="627.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="396.0" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.16%)</title><rect x="393.0" y="611.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.0" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.08%)</title><rect x="393.9" y="595.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="396.9" y="606.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.08%)</title><rect x="394.8" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="397.8" y="622.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.08%)</title><rect x="395.7" y="675.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.7" y="686.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.08%)</title><rect x="396.6" y="675.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="399.6" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="397.1" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="400.1" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="397.1" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="400.1" y="654.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="397.1" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="400.1" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.08%)</title><rect x="397.5" y="675.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="400.5" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="398.5" y="691.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.5" y="702.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="398.5" y="675.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="401.5" y="686.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="398.5" y="659.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="401.5" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="398.9" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="401.9" y="654.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="399.4" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="402.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (15 samples, 0.58%)</title><rect x="399.8" y="723.0" width="6.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="402.8" y="734.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.58%)</title><rect x="399.8" y="707.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="402.8" y="718.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.58%)</title><rect x="399.8" y="691.0" width="6.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="402.8" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.58%)</title><rect x="399.8" y="675.0" width="6.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.8" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="406.7" y="771.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="409.7" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="406.7" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.7" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="406.7" y="739.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.7" y="750.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (9 samples, 0.35%)</title><rect x="407.1" y="787.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.1" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.12%)</title><rect x="407.6" y="771.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="410.6" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.12%)</title><rect x="407.6" y="755.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="410.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.12%)</title><rect x="407.6" y="739.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="410.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="408.5" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="411.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="408.5" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="408.5" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="411.5" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.19%)</title><rect x="409.0" y="771.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.0" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (4 samples, 0.16%)</title><rect x="409.0" y="755.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.16%)</title><rect x="409.0" y="739.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.16%)</title><rect x="409.0" y="723.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="412.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.16%)</title><rect x="409.0" y="707.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="412.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.04%)</title><rect x="410.8" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.8" y="766.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.16%)</title><rect x="411.3" y="787.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.3" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (4 samples, 0.16%)</title><rect x="411.3" y="771.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="414.3" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (4 samples, 0.16%)</title><rect x="411.3" y="755.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="412.2" y="739.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="412.2" y="723.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="415.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="412.2" y="707.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$71/256466147.run (1,068 samples, 41.41%)</title><rect x="413.1" y="867.0" width="488.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.1" y="878.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$71/2564..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$3 (1,068 samples, 41.41%)</title><rect x="413.1" y="851.0" width="488.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.1" y="862.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$put$3</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.16%)</title><rect x="413.1" y="835.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.1" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.16%)</title><rect x="413.1" y="819.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.1" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="413.6" y="803.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="413.6" y="787.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.08%)</title><rect x="413.6" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.6" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="414.5" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="417.5" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="414.5" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="417.5" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="414.5" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="417.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (375 samples, 14.54%)</title><rect x="414.9" y="835.0" width="171.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.9" y="846.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.31%)</title><rect x="416.3" y="819.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="419.3" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.31%)</title><rect x="416.3" y="803.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="419.3" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (8 samples, 0.31%)</title><rect x="416.3" y="787.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="419.3" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="419.5" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="422.5" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="419.5" y="755.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.5" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="419.5" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="422.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (360 samples, 13.96%)</title><rect x="420.0" y="819.0" width="164.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.0" y="830.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.43%)</title><rect x="420.0" y="803.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="422.2" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.2" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="422.2" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="425.2" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="422.2" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="425.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="422.2" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="425.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="422.2" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="425.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="422.2" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="425.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.19%)</title><rect x="422.7" y="787.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.16%)</title><rect x="422.7" y="771.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="423.6" y="755.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="426.6" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="423.6" y="739.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="426.6" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="423.6" y="723.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="426.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="424.5" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="424.5" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="424.5" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="424.5" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="427.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="424.5" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="424.5" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="427.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (349 samples, 13.53%)</title><rect x="425.0" y="803.0" width="159.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.0" y="814.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session.write (348 samples, 13.49%)</title><rect x="425.4" y="787.0" width="159.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.4" y="798.0">one/nio/net/Session...</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="425.4" y="771.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="428.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (345 samples, 13.38%)</title><rect x="425.9" y="771.0" width="157.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.9" y="782.0">one/nio/net/Session$..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="425.9" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="428.9" y="766.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.04%)</title><rect x="425.9" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="428.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (344 samples, 13.34%)</title><rect x="426.4" y="755.0" width="157.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.4" y="766.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.35%)</title><rect x="426.8" y="739.0" width="4.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="429.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.08%)</title><rect x="427.7" y="723.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="430.7" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.16%)</title><rect x="428.7" y="723.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="431.7" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="429.6" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="432.6" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="430.0" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="433.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="430.0" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="433.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="430.0" y="675.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="433.0" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="430.5" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="433.5" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="430.9" y="739.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="433.9" y="750.0"></text>
</g>
<g>
<title>send (330 samples, 12.80%)</title><rect x="431.9" y="739.0" width="150.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="434.9" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (327 samples, 12.68%)</title><rect x="433.2" y="723.0" width="149.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="436.2" y="734.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="433.2" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="436.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (326 samples, 12.64%)</title><rect x="433.7" y="707.0" width="149.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.7" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (312 samples, 12.10%)</title><rect x="435.5" y="691.0" width="142.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.5" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (312 samples, 12.10%)</title><rect x="435.5" y="675.0" width="142.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.5" y="686.0">__sys_sendto</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="436.0" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="439.0" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (307 samples, 11.90%)</title><rect x="436.4" y="659.0" width="140.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="439.4" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (306 samples, 11.87%)</title><rect x="436.4" y="643.0" width="140.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.4" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (303 samples, 11.75%)</title><rect x="436.9" y="627.0" width="138.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="439.9" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="436.9" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="437.3" y="611.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="440.3" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="438.3" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.3" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="438.3" y="595.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="441.3" y="606.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="438.7" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.7" y="622.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="438.7" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="441.7" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="439.2" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.2" y="622.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.08%)</title><rect x="439.6" y="611.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="442.6" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="440.5" y="611.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.5" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (293 samples, 11.36%)</title><rect x="441.0" y="611.0" width="134.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="444.0" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.08%)</title><rect x="441.0" y="595.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.0" y="606.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="441.9" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="444.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.12%)</title><rect x="442.4" y="595.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="445.4" y="606.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.16%)</title><rect x="443.7" y="595.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="446.7" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.16%)</title><rect x="443.7" y="579.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="446.7" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="445.6" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="448.6" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="445.6" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.6" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (21 samples, 0.81%)</title><rect x="446.0" y="595.0" width="9.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="449.0" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.70%)</title><rect x="446.0" y="579.0" width="8.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="449.0" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (12 samples, 0.47%)</title><rect x="447.0" y="563.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="450.0" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.43%)</title><rect x="447.0" y="547.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="450.0" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.19%)</title><rect x="449.7" y="531.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.7" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="452.0" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="455.0" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="452.4" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.4" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="452.9" y="563.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.9" y="574.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="453.8" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="456.8" y="574.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="453.8" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="456.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.08%)</title><rect x="454.3" y="579.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="457.3" y="590.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="455.2" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="458.2" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="455.6" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.6" y="606.0"></text>
</g>
<g>
<title>tcp_push (255 samples, 9.89%)</title><rect x="456.1" y="595.0" width="116.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="459.1" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (255 samples, 9.89%)</title><rect x="456.1" y="579.0" width="116.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.1" y="590.0">__tcp_push_pen..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="456.1" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.1" y="574.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="456.6" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="459.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (253 samples, 9.81%)</title><rect x="457.0" y="563.0" width="115.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.0" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (242 samples, 9.38%)</title><rect x="457.5" y="547.0" width="110.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="460.5" y="558.0">__tcp_transmi..</text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.08%)</title><rect x="460.2" y="531.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="463.2" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (233 samples, 9.03%)</title><rect x="461.1" y="531.0" width="106.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.1" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (232 samples, 9.00%)</title><rect x="461.1" y="515.0" width="106.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.1" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.08%)</title><rect x="461.1" y="499.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.1" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="462.1" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.1" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="462.1" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.1" y="494.0"></text>
</g>
<g>
<title>ip_local_out (225 samples, 8.72%)</title><rect x="462.5" y="499.0" width="103.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="465.5" y="510.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="462.5" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.5" y="494.0"></text>
</g>
<g>
<title>ip_output (224 samples, 8.69%)</title><rect x="463.0" y="483.0" width="102.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.0" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.08%)</title><rect x="463.0" y="467.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="466.0" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (222 samples, 8.61%)</title><rect x="463.9" y="467.0" width="101.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.9" y="478.0">ip_finish_ou..</text>
</g>
<g>
<title>__ip_finish_output (221 samples, 8.57%)</title><rect x="463.9" y="451.0" width="101.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.9" y="462.0">__ip_finish_..</text>
</g>
<g>
<title>ip_finish_output2 (220 samples, 8.53%)</title><rect x="463.9" y="435.0" width="100.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="466.9" y="446.0">ip_finish_ou..</text>
</g>
<g>
<title>__local_bh_enable_ip (196 samples, 7.60%)</title><rect x="465.7" y="419.0" width="89.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="468.7" y="430.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (195 samples, 7.56%)</title><rect x="466.2" y="403.0" width="89.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.2" y="414.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (194 samples, 7.52%)</title><rect x="466.6" y="387.0" width="88.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="469.6" y="398.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (193 samples, 7.48%)</title><rect x="466.6" y="371.0" width="88.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="469.6" y="382.0">__softirqe..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="467.1" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="470.1" y="366.0"></text>
</g>
<g>
<title>net_rx_action (189 samples, 7.33%)</title><rect x="467.5" y="355.0" width="86.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="470.5" y="366.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (188 samples, 7.29%)</title><rect x="468.0" y="339.0" width="86.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.0" y="350.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (187 samples, 7.25%)</title><rect x="468.0" y="323.0" width="85.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.0" y="334.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (187 samples, 7.25%)</title><rect x="468.0" y="307.0" width="85.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="471.0" y="318.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.27%)</title><rect x="468.5" y="291.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv (176 samples, 6.82%)</title><rect x="471.7" y="291.0" width="80.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="474.7" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.08%)</title><rect x="471.7" y="275.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="474.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (174 samples, 6.75%)</title><rect x="472.6" y="275.0" width="79.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.6" y="286.0">ip_rcv_fi..</text>
</g>
<g>
<title>ip_local_deliver (171 samples, 6.63%)</title><rect x="472.6" y="259.0" width="78.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="475.6" y="270.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (171 samples, 6.63%)</title><rect x="472.6" y="243.0" width="78.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="475.6" y="254.0">ip_local_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (170 samples, 6.59%)</title><rect x="472.6" y="227.0" width="77.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.6" y="238.0">ip_protoc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="473.5" y="211.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.5" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.08%)</title><rect x="473.9" y="211.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="476.9" y="222.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="474.9" y="211.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (164 samples, 6.36%)</title><rect x="475.3" y="211.0" width="75.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.3" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="476.7" y="195.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="479.7" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.12%)</title><rect x="477.2" y="195.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="480.2" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="478.1" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.1" y="190.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.04%)</title><rect x="478.5" y="195.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.5" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="479.0" y="195.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.0" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="479.4" y="195.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (152 samples, 5.89%)</title><rect x="479.9" y="195.0" width="69.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="482.9" y="206.0">tcp_v4_..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="479.9" y="179.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.9" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="480.4" y="179.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="483.4" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="481.3" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.3" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="481.7" y="179.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (147 samples, 5.70%)</title><rect x="482.2" y="179.0" width="67.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.2" y="190.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.16%)</title><rect x="482.6" y="163.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.6" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.12%)</title><rect x="483.1" y="147.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.1" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="483.1" y="131.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.1" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="483.6" y="131.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.6" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="483.6" y="115.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="483.6" y="99.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.6" y="110.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="484.0" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="487.0" y="110.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="484.5" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="487.5" y="174.0"></text>
</g>
<g>
<title>tcp_ack (33 samples, 1.28%)</title><rect x="484.9" y="163.0" width="15.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="487.9" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="488.1" y="147.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.1" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="488.6" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="491.6" y="158.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="489.0" y="147.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.0" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="489.5" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="492.5" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (18 samples, 0.70%)</title><rect x="490.0" y="147.0" width="8.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="493.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.35%)</title><rect x="493.2" y="131.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="496.2" y="142.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.35%)</title><rect x="493.2" y="115.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="496.2" y="126.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.35%)</title><rect x="493.2" y="99.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="496.2" y="110.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.16%)</title><rect x="495.5" y="83.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="498.5" y="94.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.16%)</title><rect x="495.5" y="67.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.12%)</title><rect x="495.5" y="51.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.5" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (2 samples, 0.08%)</title><rect x="495.9" y="35.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.9" y="46.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.04%)</title><rect x="496.8" y="51.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.8" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.08%)</title><rect x="497.3" y="131.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="500.3" y="142.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="498.2" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.2" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="498.7" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.7" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="499.1" y="147.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.1" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="499.6" y="147.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="500.0" y="163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="503.0" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (103 samples, 3.99%)</title><rect x="500.5" y="163.0" width="47.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="503.5" y="174.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (103 samples, 3.99%)</title><rect x="500.5" y="147.0" width="47.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="503.5" y="158.0">sock..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="500.9" y="131.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (101 samples, 3.92%)</title><rect x="501.4" y="131.0" width="46.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="504.4" y="142.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (100 samples, 3.88%)</title><rect x="501.4" y="115.0" width="45.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="504.4" y="126.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (100 samples, 3.88%)</title><rect x="501.4" y="99.0" width="45.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="504.4" y="110.0">__lo..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="547.2" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="550.2" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="547.6" y="163.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="550.6" y="174.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="548.1" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="551.1" y="174.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="548.5" y="163.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="551.5" y="174.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="549.0" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="552.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="549.4" y="195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="549.9" y="195.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="552.9" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="550.4" y="227.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="553.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.08%)</title><rect x="550.8" y="259.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="553.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.04%)</title><rect x="551.7" y="259.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.12%)</title><rect x="552.2" y="291.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="555.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="553.6" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="556.6" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.08%)</title><rect x="554.0" y="355.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="557.0" y="366.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="554.9" y="371.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.9" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (20 samples, 0.78%)</title><rect x="555.4" y="419.0" width="9.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.4" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.74%)</title><rect x="555.4" y="403.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="558.4" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.19%)</title><rect x="557.2" y="387.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="560.2" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="558.1" y="371.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="561.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="558.6" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.6" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="559.1" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.12%)</title><rect x="559.5" y="387.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.5" y="398.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="560.9" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.9" y="398.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.23%)</title><rect x="561.3" y="387.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.3" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (5 samples, 0.19%)</title><rect x="561.8" y="371.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="564.8" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="564.1" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="567.1" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="564.5" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="567.5" y="446.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="565.0" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.0" y="462.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="565.5" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="568.5" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.12%)</title><rect x="565.9" y="499.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.9" y="510.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="567.3" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.3" y="526.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="567.7" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.7" y="542.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="568.2" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.2" y="558.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="568.7" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="571.7" y="558.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="569.1" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="572.1" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.12%)</title><rect x="569.6" y="547.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="572.6" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.12%)</title><rect x="569.6" y="531.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="572.6" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.12%)</title><rect x="569.6" y="515.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="572.6" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="569.6" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="572.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="570.0" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="573.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.08%)</title><rect x="570.0" y="483.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.0" y="494.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="570.9" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="573.9" y="558.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.04%)</title><rect x="571.4" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="574.4" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="571.9" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="574.9" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="572.3" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="575.3" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.16%)</title><rect x="572.8" y="595.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.8" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="572.8" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.8" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.12%)</title><rect x="573.2" y="579.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="576.2" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="574.1" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="577.1" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="574.6" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="577.6" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="575.1" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.1" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.08%)</title><rect x="575.5" y="627.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="578.5" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="576.4" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="579.4" y="654.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="576.4" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="579.4" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.12%)</title><rect x="576.9" y="659.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="579.9" y="670.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="576.9" y="643.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="579.9" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="576.9" y="627.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="579.9" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.08%)</title><rect x="576.9" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="577.8" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="580.8" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.39%)</title><rect x="578.3" y="691.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="581.3" y="702.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.39%)</title><rect x="578.3" y="675.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="581.3" y="686.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.39%)</title><rect x="578.3" y="659.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="581.3" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.39%)</title><rect x="578.3" y="643.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="582.8" y="739.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="585.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="582.8" y="723.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="582.8" y="707.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.8" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="583.8" y="771.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="586.8" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="583.8" y="755.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="586.8" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="584.2" y="755.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="587.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="584.2" y="739.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="587.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.16%)</title><rect x="584.7" y="819.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.16%)</title><rect x="584.7" y="803.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="584.7" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="584.7" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.12%)</title><rect x="585.1" y="787.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="585.6" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="585.6" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="588.6" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="585.6" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="588.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="586.0" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="589.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="586.0" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="586.0" y="739.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="589.0" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="586.0" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.0" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="586.0" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="589.0" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="586.0" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="589.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="586.5" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="587.0" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="590.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="587.0" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="587.0" y="803.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (686 samples, 26.60%)</title><rect x="587.4" y="835.0" width="313.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.4" y="846.0">ru/mail/polis/dao/RocksDBImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (682 samples, 26.44%)</title><rect x="587.4" y="819.0" width="312.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.4" y="830.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (682 samples, 26.44%)</title><rect x="587.4" y="803.0" width="312.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.4" y="814.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (667 samples, 25.86%)</title><rect x="587.9" y="787.0" width="305.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="590.9" y="798.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="587.9" y="771.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="590.9" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (2 samples, 0.08%)</title><rect x="588.3" y="771.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="591.3" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="588.8" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="588.8" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="588.8" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.8" y="734.0"></text>
</g>
<g>
<title>__libc_malloc (3 samples, 0.12%)</title><rect x="589.2" y="771.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="592.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="589.7" y="755.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="589.7" y="739.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="592.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="589.7" y="723.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.7" y="734.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.04%)</title><rect x="590.6" y="771.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="593.6" y="782.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.16%)</title><rect x="591.1" y="771.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="594.1" y="782.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="592.9" y="771.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="595.9" y="782.0"></text>
</g>
<g>
<title>operator delete[](void*) [clone .plt] (1 samples, 0.04%)</title><rect x="593.4" y="771.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="596.4" y="782.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.16%)</title><rect x="593.8" y="771.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="596.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="595.2" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="598.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="595.2" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="598.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="595.2" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.2" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="595.7" y="771.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="598.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.12%)</title><rect x="596.1" y="771.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="599.1" y="782.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (645 samples, 25.01%)</title><rect x="597.5" y="771.0" width="295.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="600.5" y="782.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="597.9" y="755.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="600.9" y="766.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.08%)</title><rect x="598.4" y="755.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="601.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="598.9" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="598.9" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="598.9" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="601.9" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.19%)</title><rect x="599.3" y="755.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="602.3" y="766.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="601.1" y="739.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="604.1" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.23%)</title><rect x="601.6" y="755.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="604.6" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.12%)</title><rect x="602.5" y="739.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="605.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="603.4" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="606.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="603.4" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="606.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="603.4" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="603.9" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="603.9" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="606.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="603.9" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (628 samples, 24.35%)</title><rect x="604.3" y="755.0" width="287.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="607.3" y="766.0">rocksdb::DB::Put(rocksdb::WriteOptions ..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (627 samples, 24.31%)</title><rect x="604.8" y="739.0" width="286.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="607.8" y="750.0">rocksdb::DBImpl::Put(rocksdb::WriteOpt..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (620 samples, 24.04%)</title><rect x="604.8" y="723.0" width="283.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="607.8" y="734.0">rocksdb::DB::Put(rocksdb::WriteOptions..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.12%)</title><rect x="605.7" y="707.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="608.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="606.6" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.6" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="606.6" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="609.6" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="606.6" y="659.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="609.6" y="670.0"></text>
</g>
<g>
<title>cfree (7 samples, 0.27%)</title><rect x="607.1" y="707.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="610.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="609.8" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="612.8" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="609.8" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.8" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="609.8" y="659.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="612.8" y="670.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="610.3" y="707.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="613.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.04%)</title><rect x="610.8" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="613.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (585 samples, 22.68%)</title><rect x="611.2" y="707.0" width="267.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="614.2" y="718.0">rocksdb::DBImpl::Write(rocksdb::Writ..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="611.7" y="691.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="614.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.08%)</title><rect x="612.1" y="691.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="615.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.16%)</title><rect x="613.0" y="691.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="616.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.04%)</title><rect x="614.9" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="617.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() [clone .plt] (1 samples, 0.04%)</title><rect x="615.3" y="691.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="618.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (556 samples, 21.56%)</title><rect x="615.8" y="691.0" width="254.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="618.8" y="702.0">rocksdb::DBImpl::WriteImpl(rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="625.4" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="628.4" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.35%)</title><rect x="625.9" y="675.0" width="4.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="628.9" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="628.6" y="659.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="631.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="628.6" y="643.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="631.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="628.6" y="627.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="631.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="630.0" y="675.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="633.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.04%)</title><rect x="630.4" y="675.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="633.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (2 samples, 0.08%)</title><rect x="630.9" y="675.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="633.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.04%)</title><rect x="631.3" y="659.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="634.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.04%)</title><rect x="631.8" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="634.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (171 samples, 6.63%)</title><rect x="632.3" y="675.0" width="78.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="635.3" y="686.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="633.2" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="636.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (165 samples, 6.40%)</title><rect x="633.6" y="659.0" width="75.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="636.6" y="670.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.12%)</title><rect x="633.6" y="643.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="636.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (161 samples, 6.24%)</title><rect x="635.0" y="643.0" width="73.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="638.0" y="654.0">rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (4 samples, 0.16%)</title><rect x="635.9" y="627.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="638.9" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="636.8" y="611.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="639.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="636.8" y="595.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="639.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="636.8" y="579.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.04%)</title><rect x="637.7" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="640.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (133 samples, 5.16%)</title><rect x="638.2" y="627.0" width="60.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="641.2" y="638.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="638.7" y="611.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="641.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.04%)</title><rect x="639.1" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="642.1" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="639.1" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="642.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="639.1" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="642.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="639.1" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.08%)</title><rect x="639.6" y="611.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="642.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.08%)</title><rect x="640.5" y="611.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="643.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (126 samples, 4.89%)</title><rect x="641.4" y="611.0" width="57.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="644.4" y="622.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="641.9" y="595.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="644.9" y="606.0"></text>
</g>
<g>
<title>__write (121 samples, 4.69%)</title><rect x="642.8" y="595.0" width="55.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="645.8" y="606.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (114 samples, 4.42%)</title><rect x="646.0" y="579.0" width="52.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="649.0" y="590.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (114 samples, 4.42%)</title><rect x="646.0" y="563.0" width="52.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.0" y="574.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_write (107 samples, 4.15%)</title><rect x="649.2" y="547.0" width="48.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="652.2" y="558.0">__x6..</text>
</g>
<g>
<title>ksys_write (106 samples, 4.11%)</title><rect x="649.2" y="531.0" width="48.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="652.2" y="542.0">ksys..</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.27%)</title><rect x="649.6" y="515.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.6" y="526.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.23%)</title><rect x="649.6" y="499.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="652.6" y="510.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.23%)</title><rect x="649.6" y="483.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.6" y="494.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="652.4" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="655.4" y="510.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="652.8" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="655.8" y="526.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.04%)</title><rect x="653.3" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="656.3" y="526.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.04%)</title><rect x="653.8" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="656.8" y="526.0"></text>
</g>
<g>
<title>vfs_write (95 samples, 3.68%)</title><rect x="654.2" y="515.0" width="43.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.2" y="526.0">vfs_..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="654.7" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="657.7" y="510.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.12%)</title><rect x="655.1" y="499.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="658.1" y="510.0"></text>
</g>
<g>
<title>__vfs_write (80 samples, 3.10%)</title><rect x="656.5" y="499.0" width="36.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.5" y="510.0">__v..</text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="656.5" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="659.5" y="494.0"></text>
</g>
<g>
<title>new_sync_write (79 samples, 3.06%)</title><rect x="657.0" y="483.0" width="36.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.0" y="494.0">new..</text>
</g>
<g>
<title>ext4_file_write_iter (79 samples, 3.06%)</title><rect x="657.0" y="467.0" width="36.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="660.0" y="478.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (75 samples, 2.91%)</title><rect x="657.4" y="451.0" width="34.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="660.4" y="462.0">__..</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.04%)</title><rect x="659.7" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.7" y="446.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.19%)</title><rect x="660.2" y="435.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="663.2" y="446.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.04%)</title><rect x="660.2" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.2" y="430.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.04%)</title><rect x="660.2" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="663.2" y="414.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.12%)</title><rect x="660.6" y="419.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="663.6" y="430.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.12%)</title><rect x="660.6" y="403.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="663.6" y="414.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.12%)</title><rect x="660.6" y="387.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.6" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="660.6" y="371.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="663.6" y="382.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.04%)</title><rect x="660.6" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="663.6" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.04%)</title><rect x="661.1" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="664.1" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.04%)</title><rect x="661.1" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="664.1" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="661.1" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="664.1" y="350.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.04%)</title><rect x="661.5" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="664.5" y="382.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.04%)</title><rect x="661.5" y="355.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="664.5" y="366.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.04%)</title><rect x="661.5" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="664.5" y="350.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.04%)</title><rect x="661.5" y="323.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="664.5" y="334.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.04%)</title><rect x="661.5" y="307.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.5" y="318.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.04%)</title><rect x="661.5" y="291.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="664.5" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="662.0" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.0" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (62 samples, 2.40%)</title><rect x="662.5" y="435.0" width="28.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.5" y="446.0">ge..</text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="662.9" y="419.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="665.9" y="430.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.04%)</title><rect x="663.4" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="666.4" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (19 samples, 0.74%)</title><rect x="663.8" y="419.0" width="8.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="666.8" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (8 samples, 0.31%)</title><rect x="664.7" y="403.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="667.7" y="414.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="664.7" y="387.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="667.7" y="398.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.04%)</title><rect x="665.2" y="387.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="668.2" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (6 samples, 0.23%)</title><rect x="665.7" y="387.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="668.7" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="666.6" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="669.6" y="382.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="667.0" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="670.0" y="382.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="667.5" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.5" y="382.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.04%)</title><rect x="667.9" y="371.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="670.9" y="382.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.04%)</title><rect x="667.9" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="670.9" y="366.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (9 samples, 0.35%)</title><rect x="668.4" y="403.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="671.4" y="414.0"></text>
</g>
<g>
<title>pagecache_get_page (8 samples, 0.31%)</title><rect x="668.4" y="387.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="671.4" y="398.0"></text>
</g>
<g>
<title>__page_cache_alloc (2 samples, 0.08%)</title><rect x="668.4" y="371.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="671.4" y="382.0"></text>
</g>
<g>
<title>alloc_pages_current (2 samples, 0.08%)</title><rect x="668.4" y="355.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="671.4" y="366.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.08%)</title><rect x="668.4" y="339.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.4" y="350.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.08%)</title><rect x="668.4" y="323.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="671.4" y="334.0"></text>
</g>
<g>
<title>kernel_poison_pages (1 samples, 0.04%)</title><rect x="668.4" y="307.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="671.4" y="318.0"></text>
</g>
<g>
<title>node_page_state (1 samples, 0.04%)</title><rect x="668.9" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="671.9" y="318.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.04%)</title><rect x="669.3" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="672.3" y="382.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (1 samples, 0.04%)</title><rect x="669.3" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="672.3" y="366.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.04%)</title><rect x="669.3" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.3" y="350.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.16%)</title><rect x="669.8" y="371.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="672.8" y="382.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="671.1" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.1" y="366.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="671.6" y="371.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.6" y="382.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.04%)</title><rect x="672.1" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="675.1" y="398.0"></text>
</g>
<g>
<title>ext4_da_write_end (35 samples, 1.36%)</title><rect x="672.5" y="419.0" width="16.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="675.5" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.16%)</title><rect x="673.0" y="403.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.0" y="414.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.04%)</title><rect x="673.0" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="676.0" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.12%)</title><rect x="673.4" y="387.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.4" y="398.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.04%)</title><rect x="673.9" y="371.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.9" y="382.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="673.9" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="676.9" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="673.9" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="676.9" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="674.4" y="371.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.4" y="382.0"></text>
</g>
<g>
<title>generic_write_end (30 samples, 1.16%)</title><rect x="674.8" y="403.0" width="13.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="677.8" y="414.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (2 samples, 0.08%)</title><rect x="674.8" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="677.8" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (28 samples, 1.09%)</title><rect x="675.7" y="387.0" width="12.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="678.7" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (27 samples, 1.05%)</title><rect x="676.2" y="371.0" width="12.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="679.2" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (27 samples, 1.05%)</title><rect x="676.2" y="355.0" width="12.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="679.2" y="366.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.04%)</title><rect x="676.2" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="679.2" y="350.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.04%)</title><rect x="676.6" y="339.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.6" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (16 samples, 0.62%)</title><rect x="677.1" y="339.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.1" y="350.0"></text>
</g>
<g>
<title>ext4_do_update_inode (14 samples, 0.54%)</title><rect x="677.1" y="323.0" width="6.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="680.1" y="334.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.04%)</title><rect x="678.5" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="681.5" y="318.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="678.5" y="291.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.5" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.39%)</title><rect x="678.9" y="307.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="681.9" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (10 samples, 0.39%)</title><rect x="678.9" y="291.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.9" y="302.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.08%)</title><rect x="680.3" y="275.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="683.3" y="286.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.19%)</title><rect x="681.2" y="275.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="684.2" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.16%)</title><rect x="681.7" y="259.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.7" y="270.0"></text>
</g>
<g>
<title>from_kuid (2 samples, 0.08%)</title><rect x="683.5" y="323.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.5" y="334.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (9 samples, 0.35%)</title><rect x="684.4" y="339.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="687.4" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (7 samples, 0.27%)</title><rect x="684.4" y="323.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.4" y="334.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.08%)</title><rect x="684.9" y="307.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.9" y="318.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.12%)</title><rect x="685.8" y="307.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="688.8" y="318.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.12%)</title><rect x="685.8" y="291.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="688.8" y="302.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.08%)</title><rect x="686.2" y="275.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="689.2" y="286.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.04%)</title><rect x="687.2" y="307.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="690.2" y="318.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="687.6" y="323.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="690.6" y="334.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="687.6" y="307.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="690.6" y="318.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.04%)</title><rect x="687.6" y="291.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.6" y="302.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.04%)</title><rect x="688.1" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="691.1" y="334.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.04%)</title><rect x="688.5" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="691.5" y="430.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.08%)</title><rect x="689.0" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="692.0" y="430.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.08%)</title><rect x="689.9" y="419.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="692.9" y="430.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.04%)</title><rect x="690.4" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="693.4" y="414.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.08%)</title><rect x="690.8" y="435.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.8" y="446.0"></text>
</g>
<g>
<title>down_write_trylock (1 samples, 0.04%)</title><rect x="691.7" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="694.7" y="462.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.08%)</title><rect x="692.2" y="451.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="695.2" y="462.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (2 samples, 0.08%)</title><rect x="692.2" y="435.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="695.2" y="446.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="693.1" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="696.1" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.35%)</title><rect x="693.6" y="499.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="696.6" y="510.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="693.6" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="696.6" y="494.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.31%)</title><rect x="694.0" y="483.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="697.0" y="494.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.16%)</title><rect x="694.5" y="467.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="697.5" y="478.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.16%)</title><rect x="694.5" y="451.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.5" y="462.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.08%)</title><rect x="695.4" y="435.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="698.4" y="446.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.12%)</title><rect x="696.3" y="467.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.3" y="478.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.04%)</title><rect x="697.7" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.04%)</title><rect x="698.1" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="701.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="698.6" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="701.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="698.6" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="701.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="698.6" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="701.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.08%)</title><rect x="699.1" y="627.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="702.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="700.0" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="703.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (18 samples, 0.70%)</title><rect x="700.4" y="627.0" width="8.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="703.4" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="700.9" y="611.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="703.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="701.3" y="611.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="704.3" y="622.0"></text>
</g>
<g>
<title>memcpy (2 samples, 0.08%)</title><rect x="702.3" y="611.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="705.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.08%)</title><rect x="703.2" y="611.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="706.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (8 samples, 0.31%)</title><rect x="704.1" y="611.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="707.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (2 samples, 0.08%)</title><rect x="706.4" y="595.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="709.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="706.8" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="709.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="706.8" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="709.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="706.8" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="709.8" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="707.3" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="707.3" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="710.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="707.3" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="707.8" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="710.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="708.2" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="711.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="708.2" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="711.2" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="708.2" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="711.2" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="708.2" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="708.7" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="711.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="709.1" y="659.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="712.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="709.6" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="712.6" y="670.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.04%)</title><rect x="710.0" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="713.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.08%)</title><rect x="710.5" y="675.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.16%)</title><rect x="711.4" y="675.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="714.4" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="711.9" y="659.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="714.9" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.08%)</title><rect x="712.3" y="659.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="715.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.08%)</title><rect x="713.2" y="675.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="716.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.04%)</title><rect x="714.2" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="717.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.04%)</title><rect x="714.6" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="717.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (320 samples, 12.41%)</title><rect x="715.1" y="675.0" width="146.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="718.1" y="686.0">rocksdb::WriteBatc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (315 samples, 12.21%)</title><rect x="715.5" y="659.0" width="144.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="718.5" y="670.0">rocksdb::WriteBatc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.08%)</title><rect x="716.4" y="643.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="719.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="717.4" y="643.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="720.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (310 samples, 12.02%)</title><rect x="717.8" y="643.0" width="141.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="720.8" y="654.0">rocksdb::WriteBatc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (303 samples, 11.75%)</title><rect x="718.3" y="627.0" width="138.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="721.3" y="638.0">rocksdb::MemTable..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.04%)</title><rect x="718.3" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="721.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (4 samples, 0.16%)</title><rect x="718.7" y="611.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="721.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.04%)</title><rect x="720.6" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="723.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) [clone .plt] (1 samples, 0.04%)</title><rect x="721.0" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="721.0" y="595.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="724.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="721.0" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="724.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="721.0" y="563.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="724.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (296 samples, 11.48%)</title><rect x="721.5" y="611.0" width="135.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="724.5" y="622.0">rocksdb::MemTable..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (1 samples, 0.04%)</title><rect x="722.4" y="595.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="725.4" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="722.8" y="595.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="725.8" y="606.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.04%)</title><rect x="723.3" y="595.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="726.3" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="723.3" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="723.3" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="723.3" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="726.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (3 samples, 0.12%)</title><rect x="723.8" y="595.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="726.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (286 samples, 11.09%)</title><rect x="725.1" y="595.0" width="130.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="728.1" y="606.0">rocksdb::MemTabl..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (11 samples, 0.43%)</title><rect x="726.5" y="579.0" width="5.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="729.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.12%)</title><rect x="728.3" y="563.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="731.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="728.8" y="547.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.8" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="728.8" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="731.8" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="728.8" y="515.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="731.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="729.7" y="563.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="732.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="729.7" y="547.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="732.7" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="729.7" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="732.7" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="729.7" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="732.7" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="729.7" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.08%)</title><rect x="730.2" y="563.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="733.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="731.1" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="734.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="731.1" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="734.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="731.1" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.1" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (264 samples, 10.24%)</title><rect x="731.5" y="579.0" width="120.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="734.5" y="590.0">bool rocksdb::I..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (241 samples, 9.34%)</title><rect x="733.4" y="563.0" width="110.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="736.4" y="574.0">/tmp/librocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (159 samples, 6.17%)</title><rect x="761.3" y="547.0" width="72.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="764.3" y="558.0">/tmp/lib..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (9 samples, 0.35%)</title><rect x="761.3" y="531.0" width="4.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="764.3" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (11 samples, 0.43%)</title><rect x="765.4" y="531.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="768.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="770.0" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.0" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="770.0" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.0" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="770.0" y="483.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="773.0" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (34 samples, 1.32%)</title><rect x="770.4" y="531.0" width="15.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="773.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="784.6" y="515.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.6" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="784.6" y="499.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.6" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="784.6" y="483.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.6" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (3 samples, 0.12%)</title><rect x="786.0" y="531.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="789.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (101 samples, 3.92%)</title><rect x="787.4" y="531.0" width="46.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="790.4" y="542.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (9 samples, 0.35%)</title><rect x="800.6" y="515.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="803.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="804.3" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="807.3" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="804.3" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="807.3" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="804.3" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="807.3" y="478.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (35 samples, 1.36%)</title><rect x="804.7" y="515.0" width="16.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="807.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="819.8" y="499.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="822.8" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="819.8" y="483.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="822.8" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="819.8" y="467.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="822.8" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.16%)</title><rect x="820.8" y="515.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="823.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (18 samples, 0.70%)</title><rect x="822.6" y="515.0" width="8.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="825.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="830.4" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="833.4" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="830.4" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="833.4" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="830.4" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="833.4" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="830.8" y="515.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="833.8" y="526.0"></text>
</g>
<g>
<title>memcmp@plt (4 samples, 0.16%)</title><rect x="831.3" y="515.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="834.3" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="832.7" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="835.7" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="832.7" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.7" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="832.7" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="835.7" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="833.1" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="836.1" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="833.1" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="836.1" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="833.1" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.1" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="833.6" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="836.6" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="833.6" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="836.6" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="833.6" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.6" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="834.0" y="547.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="837.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 0.58%)</title><rect x="834.9" y="547.0" width="6.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="837.9" y="558.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (8 samples, 0.31%)</title><rect x="836.8" y="531.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="839.8" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="840.0" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.0" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="840.0" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="843.0" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="840.0" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="843.0" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="840.4" y="531.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="843.4" y="542.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="841.4" y="531.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="844.4" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.16%)</title><rect x="841.8" y="547.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.8" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.16%)</title><rect x="841.8" y="531.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="844.8" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.16%)</title><rect x="841.8" y="515.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="844.8" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="843.6" y="563.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="846.6" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.12%)</title><rect x="844.6" y="563.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="847.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="845.5" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.5" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="845.5" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.5" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="845.5" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (11 samples, 0.43%)</title><rect x="845.9" y="563.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="848.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (1 samples, 0.04%)</title><rect x="846.8" y="547.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="849.8" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="846.8" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="849.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="846.8" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="849.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="846.8" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="849.8" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.12%)</title><rect x="847.3" y="547.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="850.3" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="848.7" y="547.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="851.7" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="849.1" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="852.1" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="849.1" y="515.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="852.1" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="849.1" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="852.1" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="849.6" y="547.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="852.6" y="558.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.04%)</title><rect x="850.5" y="547.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="853.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="851.0" y="563.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="854.0" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="851.0" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="854.0" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="851.0" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="854.0" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="851.0" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="854.0" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="851.4" y="563.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="854.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="851.4" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="854.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="851.4" y="531.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.16%)</title><rect x="852.3" y="579.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="855.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.04%)</title><rect x="854.2" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="857.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.12%)</title><rect x="854.6" y="579.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="857.6" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (2 samples, 0.08%)</title><rect x="854.6" y="563.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="857.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="855.1" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="858.1" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="855.1" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="858.1" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="855.1" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="858.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.04%)</title><rect x="855.5" y="563.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="858.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="856.0" y="595.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="859.0" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="856.0" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="859.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="856.0" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="859.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="856.0" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="859.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="856.5" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="859.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="856.9" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="859.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) [clone .plt] (1 samples, 0.04%)</title><rect x="857.4" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="860.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.12%)</title><rect x="857.8" y="627.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="860.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="858.3" y="611.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="861.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="858.3" y="595.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="861.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="858.3" y="579.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.3" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="859.2" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="859.2" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="859.2" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="862.2" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="859.2" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="862.2" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="859.2" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="859.2" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="862.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="859.7" y="659.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="862.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="860.1" y="659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="863.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="860.6" y="659.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="863.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="860.6" y="643.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="860.6" y="627.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="863.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.04%)</title><rect x="861.5" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="864.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.12%)</title><rect x="861.9" y="675.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="864.9" y="686.0"></text>
</g>
<g>
<title>std::condition_variable::condition_variable() (1 samples, 0.04%)</title><rect x="862.9" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="865.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="863.3" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="866.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="863.8" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="866.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.08%)</title><rect x="864.2" y="675.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="867.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="864.7" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="867.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="864.7" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="867.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="864.7" y="627.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="867.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.08%)</title><rect x="865.1" y="675.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="868.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.08%)</title><rect x="865.1" y="659.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="868.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="865.6" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="868.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="865.6" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="865.6" y="611.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="866.1" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (6 samples, 0.23%)</title><rect x="866.5" y="675.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="869.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (1 samples, 0.04%)</title><rect x="869.3" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="872.3" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="869.7" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="872.7" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="869.7" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="872.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="869.7" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="872.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.08%)</title><rect x="870.2" y="691.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="873.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.04%)</title><rect x="871.1" y="691.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="874.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.12%)</title><rect x="871.6" y="691.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="874.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() [clone .plt] (1 samples, 0.04%)</title><rect x="872.9" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="875.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (2 samples, 0.08%)</title><rect x="873.4" y="691.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="876.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="873.4" y="675.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="876.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="873.4" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="876.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="873.4" y="643.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="876.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="874.3" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="877.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) [clone .plt] (1 samples, 0.04%)</title><rect x="874.8" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="877.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (4 samples, 0.16%)</title><rect x="875.2" y="691.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="878.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="876.6" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="879.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="876.6" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="879.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="876.6" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="879.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.12%)</title><rect x="877.0" y="691.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="880.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="878.4" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="881.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.08%)</title><rect x="878.9" y="707.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="881.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.12%)</title><rect x="879.8" y="707.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="882.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="880.7" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="883.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="880.7" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="880.7" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="883.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) [clone .plt] (1 samples, 0.04%)</title><rect x="881.2" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="884.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.35%)</title><rect x="881.6" y="707.0" width="4.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="884.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.08%)</title><rect x="881.6" y="691.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="884.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="882.1" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="882.1" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="885.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="882.1" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="885.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.04%)</title><rect x="882.5" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="885.5" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="882.5" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="885.5" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="882.5" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="885.5" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="882.5" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="885.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="883.0" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="886.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (2 samples, 0.08%)</title><rect x="883.4" y="691.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="886.4" y="702.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.08%)</title><rect x="884.4" y="691.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="887.4" y="702.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="885.3" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="888.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="885.7" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="888.7" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="886.2" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="889.2" y="718.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="886.6" y="707.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="889.6" y="718.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="887.1" y="707.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="890.1" y="718.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="887.6" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="890.6" y="718.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.04%)</title><rect x="888.0" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="891.0" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="888.0" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.0" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="888.0" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="888.0" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="891.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="888.5" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="891.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="888.9" y="723.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="891.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (3 samples, 0.12%)</title><rect x="889.4" y="723.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="892.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() [clone .plt] (2 samples, 0.08%)</title><rect x="890.8" y="723.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="893.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.08%)</title><rect x="891.7" y="755.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="894.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="892.6" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="895.6" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="892.6" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="895.6" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="892.6" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="895.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="893.1" y="787.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="896.1" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="893.1" y="771.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="896.1" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.04%)</title><rect x="893.5" y="771.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="896.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="894.0" y="771.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="897.0" y="782.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="894.0" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="897.0" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="894.4" y="771.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="894.4" y="755.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="894.4" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="897.4" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="894.4" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="897.4" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="894.4" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.4" y="718.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="894.4" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="897.4" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="894.4" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.4" y="686.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="894.4" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="897.4" y="670.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.08%)</title><rect x="894.9" y="771.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="897.9" y="782.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.08%)</title><rect x="894.9" y="755.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="897.9" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.16%)</title><rect x="895.8" y="787.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="898.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="897.2" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.2" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="897.2" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="900.2" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="897.2" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="900.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.12%)</title><rect x="897.6" y="787.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="900.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.12%)</title><rect x="897.6" y="771.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.12%)</title><rect x="897.6" y="755.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="900.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.12%)</title><rect x="897.6" y="739.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="900.6" y="750.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.12%)</title><rect x="897.6" y="723.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="900.6" y="734.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.12%)</title><rect x="897.6" y="707.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="900.6" y="718.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.12%)</title><rect x="897.6" y="691.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.6" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.12%)</title><rect x="897.6" y="675.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.6" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.12%)</title><rect x="897.6" y="659.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.6" y="670.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) [clone .plt] (1 samples, 0.04%)</title><rect x="899.0" y="787.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="902.0" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="899.0" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="902.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="899.0" y="755.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="902.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="899.0" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.04%)</title><rect x="899.5" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.5" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="899.5" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.5" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="899.5" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.5" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="899.5" y="771.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="902.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="899.5" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="902.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="899.5" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="902.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="899.5" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="902.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (3 samples, 0.12%)</title><rect x="899.9" y="819.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (2 samples, 0.08%)</title><rect x="900.4" y="803.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.4" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="900.4" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="900.4" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.4" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="900.4" y="755.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="903.4" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.04%)</title><rect x="900.8" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="901.3" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="904.3" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="901.3" y="819.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="904.3" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="901.3" y="803.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="904.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="901.7" y="867.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="904.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="901.7" y="851.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="904.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="901.7" y="835.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="904.7" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (601 samples, 23.30%)</title><rect x="902.2" y="915.0" width="275.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.2" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="902.7" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.7" y="910.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.04%)</title><rect x="903.1" y="899.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="906.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.23%)</title><rect x="903.6" y="899.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="906.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.19%)</title><rect x="904.0" y="883.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.0" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="905.9" y="867.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="908.9" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="905.9" y="851.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.9" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="905.9" y="835.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="908.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (226 samples, 8.76%)</title><rect x="906.3" y="899.0" width="103.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.3" y="910.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.23%)</title><rect x="906.8" y="883.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.12%)</title><rect x="907.2" y="867.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.2" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="908.2" y="851.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="911.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="908.2" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="911.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="908.2" y="819.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="911.2" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="908.6" y="867.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="911.6" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="908.6" y="851.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="908.6" y="835.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="911.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (218 samples, 8.45%)</title><rect x="909.5" y="883.0" width="99.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.5" y="894.0">one/nio/net/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.23%)</title><rect x="912.3" y="867.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="915.3" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="914.6" y="851.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="917.6" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="914.6" y="835.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="917.6" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="914.6" y="819.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.6" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.12%)</title><rect x="915.0" y="867.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="918.0" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="915.9" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="918.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="915.9" y="835.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="918.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="915.9" y="819.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="918.9" y="830.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.31%)</title><rect x="916.4" y="867.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="919.4" y="878.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.12%)</title><rect x="917.8" y="851.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="920.8" y="862.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.12%)</title><rect x="917.8" y="835.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="920.8" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="918.2" y="819.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="921.2" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="918.2" y="803.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="921.2" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="918.2" y="787.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.2" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="919.1" y="851.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="922.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="919.1" y="835.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="922.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="919.1" y="819.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.1" y="830.0"></text>
</g>
<g>
<title>clock_gettime@plt (2 samples, 0.08%)</title><rect x="920.1" y="867.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="923.1" y="878.0"></text>
</g>
<g>
<title>epoll_wait (192 samples, 7.44%)</title><rect x="921.0" y="867.0" width="87.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="924.0" y="878.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (172 samples, 6.67%)</title><rect x="927.4" y="851.0" width="78.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="930.4" y="862.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.08%)</title><rect x="927.4" y="835.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="930.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (170 samples, 6.59%)</title><rect x="928.3" y="835.0" width="77.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.3" y="846.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (168 samples, 6.51%)</title><rect x="929.2" y="819.0" width="76.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="932.2" y="830.0">__x64_sy..</text>
</g>
<g>
<title>do_epoll_wait (166 samples, 6.44%)</title><rect x="929.2" y="803.0" width="76.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="932.2" y="814.0">do_epoll..</text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="929.7" y="787.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="932.7" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="929.7" y="771.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="930.1" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="933.1" y="782.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="930.1" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="933.1" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="930.6" y="787.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="933.6" y="798.0"></text>
</g>
<g>
<title>ep_poll (159 samples, 6.17%)</title><rect x="931.0" y="787.0" width="72.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="934.0" y="798.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (47 samples, 1.82%)</title><rect x="934.7" y="771.0" width="21.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="937.7" y="782.0">e..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="938.4" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.4" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (33 samples, 1.28%)</title><rect x="938.8" y="755.0" width="15.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.8" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (23 samples, 0.89%)</title><rect x="941.1" y="739.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="944.1" y="750.0"></text>
</g>
<g>
<title>sock_poll (19 samples, 0.74%)</title><rect x="942.5" y="723.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="945.5" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="947.0" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="950.0" y="718.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.23%)</title><rect x="947.5" y="707.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="950.5" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="950.2" y="707.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="953.2" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="951.2" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.2" y="734.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.19%)</title><rect x="951.6" y="739.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="954.6" y="750.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.19%)</title><rect x="953.9" y="755.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.9" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.08%)</title><rect x="955.3" y="739.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="958.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.08%)</title><rect x="956.2" y="771.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.2" y="782.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="957.1" y="771.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.1" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.12%)</title><rect x="957.6" y="771.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.6" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (98 samples, 3.80%)</title><rect x="958.9" y="771.0" width="44.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="961.9" y="782.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (98 samples, 3.80%)</title><rect x="958.9" y="755.0" width="44.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="961.9" y="766.0">sche..</text>
</g>
<g>
<title>schedule (97 samples, 3.76%)</title><rect x="959.4" y="739.0" width="44.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="962.4" y="750.0">sche..</text>
</g>
<g>
<title>__schedule (96 samples, 3.72%)</title><rect x="959.9" y="723.0" width="43.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.9" y="734.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (92 samples, 3.57%)</title><rect x="961.7" y="707.0" width="42.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.7" y="718.0">fini..</text>
</g>
<g>
<title>fput_many (3 samples, 0.12%)</title><rect x="1003.8" y="787.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1006.8" y="798.0"></text>
</g>
<g>
<title>fput (2 samples, 0.08%)</title><rect x="1005.2" y="803.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1008.2" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.23%)</title><rect x="1006.1" y="851.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (6 samples, 0.23%)</title><rect x="1006.1" y="835.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1009.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.23%)</title><rect x="1006.1" y="819.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1009.1" y="830.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.04%)</title><rect x="1008.8" y="867.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1011.8" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1009.3" y="883.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.3" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1009.3" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.3" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1009.3" y="851.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (364 samples, 14.11%)</title><rect x="1009.7" y="899.0" width="166.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1012.7" y="910.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="1010.6" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1013.6" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="1011.1" y="883.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1014.1" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.16%)</title><rect x="1011.6" y="883.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1014.6" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.16%)</title><rect x="1011.6" y="867.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1014.6" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.04%)</title><rect x="1011.6" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1014.6" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.12%)</title><rect x="1012.0" y="851.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1015.0" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1012.5" y="835.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.5" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1012.5" y="819.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1015.5" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1012.5" y="803.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.5" y="814.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.16%)</title><rect x="1013.4" y="883.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1016.4" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1014.8" y="867.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1017.8" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1014.8" y="851.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1017.8" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1014.8" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1017.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (350 samples, 13.57%)</title><rect x="1015.2" y="883.0" width="160.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1018.2" y="894.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (213 samples, 8.26%)</title><rect x="1015.7" y="867.0" width="97.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.7" y="878.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (139 samples, 5.39%)</title><rect x="1019.3" y="851.0" width="63.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.3" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (136 samples, 5.27%)</title><rect x="1020.7" y="835.0" width="62.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1023.7" y="846.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (132 samples, 5.12%)</title><rect x="1020.7" y="819.0" width="60.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1023.7" y="830.0">Reques..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.35%)</title><rect x="1020.7" y="803.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.19%)</title><rect x="1020.7" y="787.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1020.7" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1023.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1020.7" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1023.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1020.7" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1020.7" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1023.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1020.7" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1023.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="1021.2" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.08%)</title><rect x="1021.2" y="755.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.2" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1021.2" y="739.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1024.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1021.2" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1024.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1021.2" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1024.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1021.2" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1024.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1021.6" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1024.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1021.6" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1024.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1021.6" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1024.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.08%)</title><rect x="1022.1" y="771.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1025.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="1022.1" y="755.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1025.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="1022.1" y="739.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.1" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1022.5" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1025.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1022.5" y="707.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1025.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1022.5" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1025.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.16%)</title><rect x="1023.0" y="787.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.0" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1024.4" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1027.4" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1024.4" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.4" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1024.4" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1027.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (123 samples, 4.77%)</title><rect x="1024.8" y="803.0" width="56.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1027.8" y="814.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.16%)</title><rect x="1025.7" y="787.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1028.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="1026.7" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1027.1" y="771.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1030.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1027.1" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1030.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1027.1" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1030.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.12%)</title><rect x="1027.6" y="787.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.12%)</title><rect x="1027.6" y="771.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$70/1159765973.get$Lambda (3 samples, 0.12%)</title><rect x="1027.6" y="755.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$70/1159765973.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1027.6" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.12%)</title><rect x="1028.9" y="787.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.12%)</title><rect x="1028.9" y="771.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.08%)</title><rect x="1028.9" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="1029.4" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="1029.4" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1032.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="1029.4" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="1029.9" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1032.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="1029.9" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="1029.9" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1032.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="1029.9" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="1029.9" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1032.9" y="702.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="1029.9" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1032.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.put (99 samples, 3.84%)</title><rect x="1030.3" y="787.0" width="45.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.3" y="798.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="1030.3" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="1030.3" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$71/256466147.get$Lambda (2 samples, 0.08%)</title><rect x="1030.3" y="739.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$71/256466147.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1030.3" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1030.8" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1033.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1030.8" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1033.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1030.8" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (97 samples, 3.76%)</title><rect x="1031.2" y="771.0" width="44.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1034.2" y="782.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (97 samples, 3.76%)</title><rect x="1031.2" y="755.0" width="44.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.2" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (5 samples, 0.19%)</title><rect x="1031.2" y="739.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1034.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.08%)</title><rect x="1032.1" y="723.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.08%)</title><rect x="1032.1" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1035.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.08%)</title><rect x="1032.1" y="691.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.04%)</title><rect x="1032.1" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="1032.1" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="1032.1" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1035.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.04%)</title><rect x="1032.6" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.04%)</title><rect x="1032.6" y="659.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="1032.6" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="1032.6" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1035.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1033.1" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1036.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1033.1" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1036.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1033.1" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1036.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (92 samples, 3.57%)</title><rect x="1033.5" y="739.0" width="42.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.5" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (92 samples, 3.57%)</title><rect x="1033.5" y="723.0" width="42.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1036.5" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (92 samples, 3.57%)</title><rect x="1033.5" y="707.0" width="42.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1036.5" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (92 samples, 3.57%)</title><rect x="1033.5" y="691.0" width="42.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.5" y="702.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (92 samples, 3.57%)</title><rect x="1033.5" y="675.0" width="42.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.5" y="686.0">jdk/..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.08%)</title><rect x="1033.5" y="659.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1036.5" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.66%)</title><rect x="1034.4" y="659.0" width="7.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1037.4" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.08%)</title><rect x="1035.4" y="643.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1038.4" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.12%)</title><rect x="1036.3" y="643.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1039.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1036.7" y="627.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1039.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1036.7" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1039.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1036.7" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1039.7" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.16%)</title><rect x="1037.6" y="643.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1040.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1039.0" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.0" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1039.0" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1042.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1039.0" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1042.0" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.12%)</title><rect x="1039.5" y="643.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1042.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1039.9" y="627.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1042.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1039.9" y="611.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1042.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1039.9" y="595.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1042.9" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="1040.8" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1043.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1040.8" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1043.8" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1040.8" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.8" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1040.8" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.8" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1041.3" y="643.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1044.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1041.8" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1041.8" y="627.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1041.8" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1044.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (68 samples, 2.64%)</title><rect x="1042.2" y="659.0" width="31.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1045.2" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (63 samples, 2.44%)</title><rect x="1043.6" y="643.0" width="28.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1046.6" y="654.0">en..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1043.6" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1046.6" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (62 samples, 2.40%)</title><rect x="1044.0" y="627.0" width="28.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1047.0" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (58 samples, 2.25%)</title><rect x="1045.4" y="611.0" width="26.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1048.4" y="622.0">_..</text>
</g>
<g>
<title>do_futex (58 samples, 2.25%)</title><rect x="1045.4" y="595.0" width="26.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.4" y="606.0">d..</text>
</g>
<g>
<title>futex_wake (58 samples, 2.25%)</title><rect x="1045.4" y="579.0" width="26.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.4" y="590.0">f..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.08%)</title><rect x="1047.7" y="563.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.7" y="574.0"></text>
</g>
<g>
<title>wake_up_q (51 samples, 1.98%)</title><rect x="1048.6" y="563.0" width="23.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1051.6" y="574.0">w..</text>
</g>
<g>
<title>try_to_wake_up (51 samples, 1.98%)</title><rect x="1048.6" y="547.0" width="23.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1051.6" y="558.0">t..</text>
</g>
<g>
<title>__lock_text_start (50 samples, 1.94%)</title><rect x="1049.1" y="531.0" width="22.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1052.1" y="542.0">_..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1072.0" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1075.0" y="622.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1072.0" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1075.0" y="606.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1072.0" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.0" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1072.0" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.0" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1072.4" y="643.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1075.4" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1072.4" y="627.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1075.4" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1072.4" y="611.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1075.4" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1073.3" y="659.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1076.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1073.8" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1076.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1073.8" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1076.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1073.8" y="611.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1076.8" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="1074.2" y="659.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1077.2" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.04%)</title><rect x="1074.7" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1077.7" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1074.7" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1077.7" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1074.7" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1077.7" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1074.7" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1077.7" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.04%)</title><rect x="1075.2" y="659.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1078.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (8 samples, 0.31%)</title><rect x="1075.6" y="787.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1078.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="1076.1" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="1076.1" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="1076.1" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.1" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="1076.1" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.23%)</title><rect x="1076.5" y="771.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.23%)</title><rect x="1076.5" y="755.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.19%)</title><rect x="1077.0" y="739.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1077.0" y="723.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1078.4" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1078.4" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1078.4" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1078.8" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1081.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1078.8" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1081.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1078.8" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1081.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.primaryFor (4 samples, 0.16%)</title><rect x="1079.3" y="787.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.04%)</title><rect x="1080.6" y="771.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.16%)</title><rect x="1081.1" y="819.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.16%)</title><rect x="1081.1" y="803.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.16%)</title><rect x="1081.1" y="787.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.16%)</title><rect x="1081.1" y="771.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1082.5" y="755.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1085.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1082.5" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1085.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1082.5" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1085.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 0.85%)</title><rect x="1082.9" y="851.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.35%)</title><rect x="1084.3" y="835.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.3" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1085.2" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1088.2" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="1085.2" y="803.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1088.2" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1085.2" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1088.2" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1085.2" y="771.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1088.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1085.2" y="755.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1088.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1085.2" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1088.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1085.2" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1088.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.23%)</title><rect x="1085.7" y="819.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.23%)</title><rect x="1085.7" y="803.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1088.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="1087.1" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.08%)</title><rect x="1087.5" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.23%)</title><rect x="1088.4" y="835.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.19%)</title><rect x="1088.9" y="819.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.9" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.12%)</title><rect x="1089.8" y="803.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1092.8" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.12%)</title><rect x="1089.8" y="787.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1092.8" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.12%)</title><rect x="1089.8" y="771.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1092.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.16%)</title><rect x="1091.2" y="835.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1094.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.16%)</title><rect x="1091.2" y="819.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.16%)</title><rect x="1091.2" y="803.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.35%)</title><rect x="1093.0" y="851.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1096.0" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1093.5" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.5" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1093.5" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1096.5" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1093.5" y="803.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1096.5" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1093.5" y="787.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1096.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1093.5" y="771.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1096.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1093.5" y="755.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.23%)</title><rect x="1093.9" y="835.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.23%)</title><rect x="1093.9" y="819.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1096.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.23%)</title><rect x="1093.9" y="803.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.08%)</title><rect x="1094.8" y="787.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="1094.8" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1095.3" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1098.3" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1095.3" y="739.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1098.3" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1095.3" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.08%)</title><rect x="1095.7" y="787.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (2 samples, 0.08%)</title><rect x="1095.7" y="771.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (2 samples, 0.08%)</title><rect x="1095.7" y="755.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1096.2" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1099.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1096.2" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1099.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1096.2" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1099.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1096.7" y="835.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1099.7" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1096.7" y="819.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1099.7" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1096.7" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1099.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="1097.1" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (24 samples, 0.93%)</title><rect x="1097.6" y="851.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.66%)</title><rect x="1098.9" y="835.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.9" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5 samples, 0.19%)</title><rect x="1098.9" y="819.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.9" y="830.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.31%)</title><rect x="1101.2" y="819.0" width="3.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1104.2" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1104.4" y="803.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1107.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1104.4" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1104.4" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="1104.9" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.9" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1104.9" y="803.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1107.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="1105.4" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="1105.8" y="819.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1108.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1106.3" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.3" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1106.3" y="787.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1109.3" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1106.3" y="771.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.3" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1106.3" y="755.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1109.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1106.3" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="1106.7" y="835.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.08%)</title><rect x="1106.7" y="819.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1109.7" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1107.2" y="803.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1110.2" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1107.6" y="835.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1110.6" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1107.6" y="819.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1110.6" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1107.6" y="803.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1110.6" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.35%)</title><rect x="1108.6" y="851.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.35%)</title><rect x="1108.6" y="835.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1111.8" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1111.8" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1114.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="1111.8" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.8" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1111.8" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1114.8" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1111.8" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1114.8" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="1111.8" y="739.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.8" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1111.8" y="723.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1114.8" y="734.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1111.8" y="707.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1114.8" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1111.8" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.8" y="702.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="1111.8" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.8" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1111.8" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.8" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1111.8" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.8" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1111.8" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1114.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1112.2" y="819.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1115.2" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1112.2" y="803.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1115.2" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1112.2" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.2" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1112.7" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.7" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1112.7" y="835.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1115.7" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1112.7" y="819.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1115.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (135 samples, 5.23%)</title><rect x="1113.1" y="867.0" width="61.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1116.1" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (135 samples, 5.23%)</title><rect x="1113.1" y="851.0" width="61.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1116.1" y="862.0">one/ni..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1114.5" y="835.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1117.5" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (19 samples, 0.74%)</title><rect x="1115.0" y="835.0" width="8.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1118.0" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.04%)</title><rect x="1115.9" y="819.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1118.9" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.16%)</title><rect x="1116.3" y="819.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1119.3" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.08%)</title><rect x="1118.2" y="819.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1121.2" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="1119.1" y="819.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1122.1" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.27%)</title><rect x="1120.0" y="819.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1123.0" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.08%)</title><rect x="1121.4" y="803.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.4" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1122.3" y="803.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1125.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1122.3" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.3" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1122.3" y="771.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.3" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1122.3" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1125.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1122.7" y="803.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1125.7" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1122.7" y="787.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1125.7" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1122.7" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1125.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1123.2" y="819.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1126.2" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1123.2" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1126.2" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1123.2" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1126.2" y="798.0"></text>
</g>
<g>
<title>__recv (108 samples, 4.19%)</title><rect x="1123.7" y="835.0" width="49.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1126.7" y="846.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (98 samples, 3.80%)</title><rect x="1128.2" y="819.0" width="44.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1131.2" y="830.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.12%)</title><rect x="1128.2" y="803.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1131.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (95 samples, 3.68%)</title><rect x="1129.6" y="803.0" width="43.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1132.6" y="814.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (90 samples, 3.49%)</title><rect x="1131.9" y="787.0" width="41.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1134.9" y="798.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (89 samples, 3.45%)</title><rect x="1131.9" y="771.0" width="40.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1134.9" y="782.0">__s..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1132.8" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1135.8" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (76 samples, 2.95%)</title><rect x="1133.3" y="755.0" width="34.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1136.3" y="766.0">so..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.12%)</title><rect x="1133.3" y="739.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1136.3" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (65 samples, 2.52%)</title><rect x="1134.6" y="739.0" width="29.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1137.6" y="750.0">in..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="1134.6" y="723.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1137.6" y="734.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="1135.6" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1138.6" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.12%)</title><rect x="1136.0" y="723.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1139.0" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="1137.4" y="723.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1140.4" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.08%)</title><rect x="1137.8" y="723.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1140.8" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (56 samples, 2.17%)</title><rect x="1138.8" y="723.0" width="25.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.8" y="734.0">t..</text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.50%)</title><rect x="1143.3" y="707.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.3" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.08%)</title><rect x="1143.3" y="691.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.3" y="702.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.39%)</title><rect x="1144.2" y="691.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1147.2" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1144.2" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1147.2" y="686.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.08%)</title><rect x="1144.7" y="675.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1147.7" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.19%)</title><rect x="1145.6" y="675.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1148.6" y="686.0"></text>
</g>
<g>
<title>dst_release (5 samples, 0.19%)</title><rect x="1145.6" y="659.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1148.6" y="670.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.08%)</title><rect x="1147.9" y="675.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1150.9" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1148.8" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1151.8" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="1149.3" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1149.7" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1152.7" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (22 samples, 0.85%)</title><rect x="1150.2" y="707.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.2" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (22 samples, 0.85%)</title><rect x="1150.2" y="691.0" width="10.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.2" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (18 samples, 0.70%)</title><rect x="1152.0" y="675.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1155.0" y="686.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.27%)</title><rect x="1152.0" y="659.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.0" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.27%)</title><rect x="1152.0" y="643.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.0" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1155.2" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.2" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.31%)</title><rect x="1155.7" y="659.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1158.7" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (8 samples, 0.31%)</title><rect x="1155.7" y="643.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.7" y="654.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="1159.3" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1162.3" y="670.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="1159.8" y="659.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.8" y="670.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.08%)</title><rect x="1160.3" y="707.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1163.3" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.23%)</title><rect x="1161.2" y="707.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1164.2" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.23%)</title><rect x="1161.2" y="691.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.2" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1161.2" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1164.2" y="686.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.08%)</title><rect x="1161.6" y="675.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1164.6" y="686.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.12%)</title><rect x="1162.5" y="675.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1165.5" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="1163.9" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1166.9" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.31%)</title><rect x="1164.4" y="739.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.4" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="1165.3" y="723.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.3" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.16%)</title><rect x="1166.2" y="723.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1169.2" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.16%)</title><rect x="1166.2" y="707.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.2" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.39%)</title><rect x="1168.0" y="755.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.0" y="766.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.23%)</title><rect x="1168.0" y="739.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.23%)</title><rect x="1168.0" y="723.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1171.0" y="734.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.23%)</title><rect x="1168.0" y="707.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1171.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.16%)</title><rect x="1170.8" y="739.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.8" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1172.6" y="771.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1175.6" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1173.1" y="835.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1176.1" y="846.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.04%)</title><rect x="1173.5" y="835.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1176.5" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1174.0" y="835.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1174.0" y="819.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1174.0" y="803.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1177.0" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1174.9" y="867.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.9" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1174.9" y="851.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1177.9" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1174.9" y="835.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.9" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="1175.4" y="883.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.4" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1175.8" y="867.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1178.8" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1175.8" y="851.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1178.8" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1175.8" y="835.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1178.8" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1175.8" y="819.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1178.8" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1175.8" y="803.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1178.8" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.08%)</title><rect x="1176.3" y="899.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1179.3" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.08%)</title><rect x="1176.3" y="883.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1179.3" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.08%)</title><rect x="1176.3" y="867.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1179.3" y="878.0"></text>
</g>
<g>
<title>start_thread (28 samples, 1.09%)</title><rect x="1177.2" y="915.0" width="12.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1180.2" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (28 samples, 1.09%)</title><rect x="1177.2" y="899.0" width="12.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1180.2" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (28 samples, 1.09%)</title><rect x="1177.2" y="883.0" width="12.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.2" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (3 samples, 0.12%)</title><rect x="1177.2" y="867.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.2" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (3 samples, 0.12%)</title><rect x="1177.2" y="851.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.2" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1177.2" y="835.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.2" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1177.2" y="819.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1180.2" y="830.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1177.6" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.6" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1177.6" y="819.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.6" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.04%)</title><rect x="1177.6" y="803.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.6" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (1 samples, 0.04%)</title><rect x="1177.6" y="787.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.6" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.04%)</title><rect x="1177.6" y="771.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.6" y="782.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (1 samples, 0.04%)</title><rect x="1177.6" y="755.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.6" y="766.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.04%)</title><rect x="1177.6" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.6" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1177.6" y="723.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.6" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1178.1" y="835.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.1" y="846.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="1178.1" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.1" y="830.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (24 samples, 0.93%)</title><rect x="1178.6" y="867.0" width="10.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.6" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (24 samples, 0.93%)</title><rect x="1178.6" y="851.0" width="10.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.6" y="862.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (24 samples, 0.93%)</title><rect x="1178.6" y="835.0" width="10.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.6" y="846.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (24 samples, 0.93%)</title><rect x="1178.6" y="819.0" width="10.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.6" y="830.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (24 samples, 0.93%)</title><rect x="1178.6" y="803.0" width="10.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.6" y="814.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (15 samples, 0.58%)</title><rect x="1178.6" y="787.0" width="6.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.6" y="798.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.04%)</title><rect x="1178.6" y="771.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.6" y="782.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.04%)</title><rect x="1178.6" y="755.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1178.6" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1178.6" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1178.6" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1181.6" y="718.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.12%)</title><rect x="1179.0" y="771.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.0" y="782.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.12%)</title><rect x="1179.0" y="755.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.0" y="766.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.04%)</title><rect x="1179.5" y="739.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.04%)</title><rect x="1179.5" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1179.5" y="707.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1179.5" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1179.5" y="675.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.5" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1179.9" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1179.9" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1179.9" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.9" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.04%)</title><rect x="1180.4" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.4" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.04%)</title><rect x="1180.4" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.4" y="766.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1180.4" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1180.4" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1183.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1180.4" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1180.4" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.4" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 0.39%)</title><rect x="1180.8" y="771.0" width="4.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.8" y="782.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.04%)</title><rect x="1180.8" y="755.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1180.8" y="739.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1180.8" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1180.8" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.08%)</title><rect x="1181.3" y="755.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.3" y="766.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.04%)</title><rect x="1181.3" y="739.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.3" y="750.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1181.3" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.3" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1181.8" y="739.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1181.8" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1184.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1181.8" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1184.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.12%)</title><rect x="1182.2" y="755.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.2" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::adjust_high_pressure_index(Block*, unsigned int&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.04%)</title><rect x="1182.2" y="739.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1182.2" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1185.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1182.2" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1182.2" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1185.2" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.04%)</title><rect x="1182.7" y="739.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1182.7" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1182.7" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1185.7" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1182.7" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1185.7" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1182.7" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1185.7" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1183.1" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1186.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1183.1" y="723.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1186.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1183.1" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1186.1" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.04%)</title><rect x="1183.6" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1183.6" y="739.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1186.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1183.6" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1183.6" y="707.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.6" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.04%)</title><rect x="1184.1" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.1" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="1184.1" y="739.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.1" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1184.1" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1187.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1184.1" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1187.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1184.1" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.1" y="702.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1184.5" y="755.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.5" y="766.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.04%)</title><rect x="1184.5" y="739.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1184.5" y="723.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1187.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1184.5" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1184.5" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1187.5" y="702.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.04%)</title><rect x="1185.0" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.0" y="766.0"></text>
</g>
<g>
<title>Compile::Optimize() (8 samples, 0.31%)</title><rect x="1185.4" y="787.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.4" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (3 samples, 0.12%)</title><rect x="1185.4" y="771.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.4" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.12%)</title><rect x="1185.4" y="755.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.4" y="766.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1185.4" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.4" y="750.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.04%)</title><rect x="1185.4" y="723.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.4" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::replace_parallel_iv(IdealLoopTree*) (1 samples, 0.04%)</title><rect x="1185.4" y="707.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.4" y="718.0"></text>
</g>
<g>
<title>CountedLoopNode::phi() const (1 samples, 0.04%)</title><rect x="1185.4" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1185.4" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1188.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1185.4" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1188.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1185.4" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.4" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.04%)</title><rect x="1185.9" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.04%)</title><rect x="1185.9" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1185.9" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1185.9" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1185.9" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1188.9" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.04%)</title><rect x="1186.3" y="739.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.04%)</title><rect x="1186.8" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.04%)</title><rect x="1186.8" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) [clone .part.0] (1 samples, 0.04%)</title><rect x="1186.8" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="1186.8" y="723.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.04%)</title><rect x="1187.3" y="771.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1187.3" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>Type::filter_helper(Type const*, bool) const (1 samples, 0.04%)</title><rect x="1187.3" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.04%)</title><rect x="1187.3" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="734.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.04%)</title><rect x="1187.3" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1187.3" y="691.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1190.3" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1187.3" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1190.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1187.3" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1187.3" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1190.3" y="654.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.04%)</title><rect x="1187.7" y="771.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.04%)</title><rect x="1187.7" y="755.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.04%)</title><rect x="1188.2" y="771.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1188.2" y="755.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1188.2" y="739.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1191.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1188.2" y="723.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1188.2" y="707.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.2" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1188.6" y="771.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.6" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1188.6" y="755.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.6" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.04%)</title><rect x="1188.6" y="739.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="1188.6" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="1188.6" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1191.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="1188.6" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1191.6" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.1" y="787.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.1" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.1" y="771.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.1" y="755.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.1" y="739.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.1" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.1" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.1" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.1" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.1" y="675.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.1" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.1" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.1" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.1" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.1" y="595.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1189.1" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.1" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1189.1" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1189.1" y="547.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1189.1" y="531.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1189.1" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1189.1" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="510.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.04%)</title><rect x="1189.1" y="483.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="494.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1189.1" y="467.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.1" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.04%)</title><rect x="1189.1" y="451.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="462.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.04%)</title><rect x="1189.1" y="435.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.1" y="446.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.04%)</title><rect x="1189.1" y="419.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1192.1" y="430.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.04%)</title><rect x="1189.5" y="867.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.04%)</title><rect x="1189.5" y="851.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.04%)</title><rect x="1189.5" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.04%)</title><rect x="1189.5" y="819.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.04%)</title><rect x="1189.5" y="803.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.04%)</title><rect x="1189.5" y="787.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>TraceMemoryManagerStats::TraceMemoryManagerStats(GCMemoryManager*, GCCause::Cause, bool, bool, bool, bool, bool, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1189.5" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>GCMemoryManager::gc_begin(bool, bool, bool) (1 samples, 0.04%)</title><rect x="1189.5" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
</g>
</svg>
