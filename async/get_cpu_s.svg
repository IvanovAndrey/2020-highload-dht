<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (2,208 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.41%)</title><rect x="10.0" y="899.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.41%)</title><rect x="10.0" y="883.0" width="4.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (8 samples, 0.36%)</title><rect x="10.0" y="867.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="10.5" y="851.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.5" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.09%)</title><rect x="11.1" y="851.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.1" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="12.1" y="851.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="12.1" y="835.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="12.1" y="819.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="15.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="12.1" y="803.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="15.1" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="12.1" y="787.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="15.1" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="12.1" y="771.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="15.1" y="782.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="12.1" y="755.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="15.1" y="766.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="12.1" y="739.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="15.1" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.09%)</title><rect x="12.7" y="851.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="15.7" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="13.2" y="835.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="13.2" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="16.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="13.2" y="803.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.2" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="13.7" y="851.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="16.7" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="14.3" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="17.3" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="14.3" y="851.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.3" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="14.3" y="835.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="17.3" y="846.0"></text>
</g>
<g>
<title>[no_Java_frame] (2 samples, 0.09%)</title><rect x="14.8" y="899.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="17.8" y="910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.09%)</title><rect x="15.9" y="899.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="18.9" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="15.9" y="883.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.9" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="15.9" y="867.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="18.9" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="15.9" y="851.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="18.9" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="15.9" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="18.9" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="16.4" y="883.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.4" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.05%)</title><rect x="16.4" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="19.4" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="16.4" y="851.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="19.4" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="16.4" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.4" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="16.4" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="19.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="16.4" y="803.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="19.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="16.4" y="787.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="19.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.18%)</title><rect x="16.9" y="899.0" width="13.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="19.9" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="16.9" y="883.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="19.9" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="17.5" y="883.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="20.5" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (24 samples, 1.09%)</title><rect x="18.0" y="883.0" width="12.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="21.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.04%)</title><rect x="18.6" y="867.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="21.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.04%)</title><rect x="18.6" y="851.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="21.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 1.00%)</title><rect x="19.1" y="835.0" width="11.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="22.1" y="846.0"></text>
</g>
<g>
<title>do_futex (21 samples, 0.95%)</title><rect x="19.1" y="819.0" width="11.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.1" y="830.0"></text>
</g>
<g>
<title>futex_wait (21 samples, 0.95%)</title><rect x="19.1" y="803.0" width="11.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="22.1" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.77%)</title><rect x="19.6" y="787.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="22.6" y="798.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (3 samples, 0.14%)</title><rect x="20.2" y="771.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.2" y="782.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.14%)</title><rect x="20.2" y="755.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="23.2" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="20.2" y="739.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="23.2" y="750.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.59%)</title><rect x="21.8" y="771.0" width="6.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.8" y="782.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.59%)</title><rect x="21.8" y="755.0" width="6.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.8" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.54%)</title><rect x="22.3" y="739.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="25.3" y="750.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="28.7" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.7" y="798.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="28.7" y="771.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="31.7" y="782.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.09%)</title><rect x="29.2" y="787.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="32.2" y="798.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.09%)</title><rect x="29.2" y="771.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.2" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="29.2" y="755.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="32.2" y="766.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="30.3" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="33.3" y="830.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="30.3" y="803.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.3" y="814.0"></text>
</g>
<g>
<title>[unknown_Java] (21 samples, 0.95%)</title><rect x="30.8" y="899.0" width="11.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="33.8" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.95%)</title><rect x="30.8" y="883.0" width="11.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="33.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.86%)</title><rect x="31.9" y="867.0" width="10.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="34.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.86%)</title><rect x="31.9" y="851.0" width="10.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="34.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.54%)</title><rect x="32.4" y="835.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.4" y="846.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.50%)</title><rect x="32.4" y="819.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.4" y="830.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.50%)</title><rect x="32.4" y="803.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="35.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.36%)</title><rect x="34.0" y="787.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.0" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.36%)</title><rect x="34.0" y="771.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.0" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.36%)</title><rect x="34.0" y="755.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.0" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="38.3" y="819.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="41.3" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.27%)</title><rect x="38.9" y="835.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="41.9" y="846.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.27%)</title><rect x="38.9" y="819.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="41.9" y="830.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.27%)</title><rect x="38.9" y="803.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.9" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.27%)</title><rect x="38.9" y="787.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="41.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,594 samples, 72.19%)</title><rect x="42.1" y="899.0" width="851.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.1" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,594 samples, 72.19%)</title><rect x="42.1" y="883.0" width="851.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.1" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,594 samples, 72.19%)</title><rect x="42.1" y="867.0" width="851.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.1" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.05%)</title><rect x="42.1" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="42.1" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.05%)</title><rect x="42.1" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.05%)</title><rect x="42.1" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="42.1" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="42.1" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="42.1" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="45.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="42.1" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="45.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="42.1" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="45.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (180 samples, 8.15%)</title><rect x="42.6" y="851.0" width="96.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.6" y="862.0">java/util/c..</text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="47.4" y="835.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="50.4" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="47.9" y="819.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="50.9" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="47.9" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="50.9" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="47.9" y="787.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (164 samples, 7.43%)</title><rect x="48.5" y="835.0" width="87.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.5" y="846.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (153 samples, 6.93%)</title><rect x="48.5" y="819.0" width="81.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.5" y="830.0">java/util..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.05%)</title><rect x="48.5" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.05%)</title><rect x="48.5" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.09%)</title><rect x="49.0" y="803.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.0" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="49.5" y="787.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="52.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="49.5" y="771.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="52.5" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="49.5" y="755.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="52.5" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="49.5" y="739.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="52.5" y="750.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="49.5" y="723.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="52.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.05%)</title><rect x="50.1" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.1" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="50.1" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="53.1" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="50.1" y="771.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="50.1" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (149 samples, 6.75%)</title><rect x="50.6" y="803.0" width="79.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.6" y="814.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (149 samples, 6.75%)</title><rect x="50.6" y="787.0" width="79.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.6" y="798.0">jdk/inter..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="51.2" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="54.2" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.09%)</title><rect x="51.7" y="771.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="54.7" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.91%)</title><rect x="52.8" y="771.0" width="10.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="55.8" y="782.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.14%)</title><rect x="53.3" y="755.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="56.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="54.4" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="54.4" y="723.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="54.4" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.4" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="54.9" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="57.9" y="766.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.27%)</title><rect x="55.4" y="755.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="58.4" y="766.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.05%)</title><rect x="57.0" y="739.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="60.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="57.6" y="739.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="57.6" y="723.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="57.6" y="707.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="60.6" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.14%)</title><rect x="58.6" y="755.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="61.6" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="59.7" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="59.7" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.7" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="60.2" y="755.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="63.2" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.09%)</title><rect x="60.8" y="755.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="63.8" y="766.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="61.8" y="755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="64.8" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.09%)</title><rect x="62.4" y="755.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="65.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="62.9" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="62.9" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="65.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="62.9" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="65.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 5.53%)</title><rect x="63.4" y="771.0" width="65.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="66.4" y="782.0">[unknown]</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="63.4" y="755.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="66.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (117 samples, 5.30%)</title><rect x="64.0" y="755.0" width="62.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="67.0" y="766.0">__pthr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 4.94%)</title><rect x="66.1" y="739.0" width="58.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="69.1" y="750.0">entry_..</text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.23%)</title><rect x="66.1" y="723.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (104 samples, 4.71%)</title><rect x="68.8" y="723.0" width="55.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="71.8" y="734.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (94 samples, 4.26%)</title><rect x="73.6" y="707.0" width="50.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.6" y="718.0">__x64..</text>
</g>
<g>
<title>do_futex (93 samples, 4.21%)</title><rect x="74.1" y="691.0" width="49.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.1" y="702.0">do_fu..</text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="74.1" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="77.1" y="686.0"></text>
</g>
<g>
<title>futex_wait (92 samples, 4.17%)</title><rect x="74.7" y="675.0" width="49.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="77.7" y="686.0">futex..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="75.2" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="78.2" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="75.7" y="659.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="78.7" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (60 samples, 2.72%)</title><rect x="76.3" y="659.0" width="32.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="79.3" y="670.0">fu..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (3 samples, 0.14%)</title><rect x="77.3" y="643.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="80.3" y="654.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="78.9" y="643.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="81.9" y="654.0"></text>
</g>
<g>
<title>schedule (54 samples, 2.45%)</title><rect x="79.5" y="643.0" width="28.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="82.5" y="654.0">sc..</text>
</g>
<g>
<title>__schedule (50 samples, 2.26%)</title><rect x="81.6" y="627.0" width="26.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="84.6" y="638.0">_..</text>
</g>
<g>
<title>finish_task_switch (42 samples, 1.90%)</title><rect x="85.9" y="611.0" width="22.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="88.9" y="622.0">f..</text>
</g>
<g>
<title>futex_wait_setup (18 samples, 0.82%)</title><rect x="108.3" y="659.0" width="9.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.3" y="670.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.09%)</title><rect x="111.5" y="643.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.5" y="654.0"></text>
</g>
<g>
<title>get_futex_value_locked (10 samples, 0.45%)</title><rect x="112.6" y="643.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="115.6" y="654.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.09%)</title><rect x="118.0" y="659.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.0" y="670.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.09%)</title><rect x="119.0" y="659.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.0" y="670.0"></text>
</g>
<g>
<title>plist_add (5 samples, 0.23%)</title><rect x="120.1" y="659.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.1" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.09%)</title><rect x="122.8" y="659.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="125.8" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="123.8" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="126.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.18%)</title><rect x="124.4" y="739.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="127.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.18%)</title><rect x="124.4" y="723.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="127.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.18%)</title><rect x="124.4" y="707.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.4" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="126.5" y="755.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="129.5" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.05%)</title><rect x="127.0" y="755.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="130.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="127.0" y="739.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="130.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="127.0" y="723.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="130.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="127.0" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="130.0" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="127.6" y="755.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="130.6" y="766.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.05%)</title><rect x="128.1" y="755.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="131.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="128.1" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="131.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="128.1" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="131.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="128.1" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="131.1" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.14%)</title><rect x="128.6" y="771.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="131.6" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="129.7" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="129.7" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="132.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="129.7" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="132.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.27%)</title><rect x="130.2" y="819.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.27%)</title><rect x="130.2" y="803.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (5 samples, 0.23%)</title><rect x="130.8" y="787.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.14%)</title><rect x="131.8" y="771.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.05%)</title><rect x="132.4" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.05%)</title><rect x="132.4" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="132.9" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.18%)</title><rect x="133.5" y="819.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.18%)</title><rect x="133.5" y="803.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.18%)</title><rect x="133.5" y="787.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.18%)</title><rect x="133.5" y="771.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.18%)</title><rect x="133.5" y="755.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.5" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.18%)</title><rect x="133.5" y="739.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="136.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.18%)</title><rect x="133.5" y="723.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="136.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.18%)</title><rect x="133.5" y="707.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="136.5" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.18%)</title><rect x="133.5" y="691.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="136.5" y="702.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.18%)</title><rect x="133.5" y="675.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.5" y="686.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.18%)</title><rect x="133.5" y="659.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.5" y="670.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.18%)</title><rect x="133.5" y="643.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.5" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.18%)</title><rect x="133.5" y="627.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="136.5" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.18%)</title><rect x="133.5" y="611.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="136.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="135.6" y="819.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.6" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="135.6" y="803.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.6" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="135.6" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.05%)</title><rect x="136.1" y="835.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/2146418081.run (2 samples, 0.09%)</title><rect x="136.7" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$70/1159765973.run (1 samples, 0.05%)</title><rect x="137.7" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.7" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="137.7" y="819.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="140.7" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="137.7" y="803.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="140.7" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="137.7" y="787.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="140.7" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="138.3" y="835.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="141.3" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="138.3" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.3" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="138.3" y="803.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$68/2146418081.run (776 samples, 35.14%)</title><rect x="138.8" y="851.0" width="414.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.8" y="862.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lamb..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$get$2 (776 samples, 35.14%)</title><rect x="138.8" y="835.0" width="414.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.8" y="846.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambd..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (453 samples, 20.52%)</title><rect x="138.8" y="819.0" width="242.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.8" y="830.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.18%)</title><rect x="140.4" y="803.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="143.4" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.18%)</title><rect x="140.4" y="787.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="143.4" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.18%)</title><rect x="140.4" y="771.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="143.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.23%)</title><rect x="142.5" y="803.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="145.5" y="814.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.14%)</title><rect x="143.1" y="787.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="146.1" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="144.7" y="787.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="147.7" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="144.7" y="771.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="147.7" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.05%)</title><rect x="145.2" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.2" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.05%)</title><rect x="145.2" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (439 samples, 19.88%)</title><rect x="145.7" y="803.0" width="234.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.7" y="814.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="145.7" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.05%)</title><rect x="145.7" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.05%)</title><rect x="145.7" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (438 samples, 19.84%)</title><rect x="146.3" y="787.0" width="234.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (438 samples, 19.84%)</title><rect x="146.3" y="771.0" width="234.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.3" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (438 samples, 19.84%)</title><rect x="146.3" y="755.0" width="234.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.3" y="766.0">one/nio/net/Session$ArrayQueueI..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (438 samples, 19.84%)</title><rect x="146.3" y="739.0" width="234.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.09%)</title><rect x="146.8" y="723.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="149.8" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="147.3" y="707.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.3" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="147.3" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="150.3" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="147.3" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="150.3" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.32%)</title><rect x="147.9" y="723.0" width="3.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="150.9" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="149.5" y="707.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="152.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="150.0" y="707.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="153.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="150.6" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="153.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="150.6" y="691.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="153.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="150.6" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="153.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="150.6" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="153.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="150.6" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.6" y="654.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.05%)</title><rect x="151.1" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="154.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="151.1" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="151.1" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="151.1" y="659.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="154.1" y="670.0"></text>
</g>
<g>
<title>send (427 samples, 19.34%)</title><rect x="151.6" y="723.0" width="228.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="154.6" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (421 samples, 19.07%)</title><rect x="153.8" y="707.0" width="225.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="156.8" y="718.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (421 samples, 19.07%)</title><rect x="153.8" y="691.0" width="225.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="156.8" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (411 samples, 18.61%)</title><rect x="157.0" y="675.0" width="219.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="160.0" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (411 samples, 18.61%)</title><rect x="157.0" y="659.0" width="219.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="160.0" y="670.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="158.0" y="643.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="161.0" y="654.0"></text>
</g>
<g>
<title>sock_sendmsg (403 samples, 18.25%)</title><rect x="158.6" y="643.0" width="215.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.6" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="159.1" y="627.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="162.1" y="638.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="159.1" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.1" y="622.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="159.1" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="162.1" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="159.1" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.1" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.09%)</title><rect x="159.6" y="627.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="162.6" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (396 samples, 17.93%)</title><rect x="160.7" y="627.0" width="211.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="163.7" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="160.7" y="611.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="163.7" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (395 samples, 17.89%)</title><rect x="161.2" y="611.0" width="211.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="164.2" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="161.2" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="164.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="161.8" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.8" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="162.3" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.3" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="162.3" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="165.3" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.09%)</title><rect x="162.8" y="595.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="165.8" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="163.4" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="166.4" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="163.9" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="166.9" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.05%)</title><rect x="164.4" y="595.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="167.4" y="606.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="165.0" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="168.0" y="606.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="165.5" y="595.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="168.5" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.09%)</title><rect x="166.1" y="595.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="169.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (381 samples, 17.26%)</title><rect x="167.1" y="595.0" width="203.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="170.1" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="170.3" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.3" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="170.3" y="563.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="173.3" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.09%)</title><rect x="170.9" y="579.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="173.9" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.09%)</title><rect x="171.9" y="579.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="174.9" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.09%)</title><rect x="173.0" y="579.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.0" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.09%)</title><rect x="173.0" y="563.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="176.0" y="574.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.05%)</title><rect x="174.1" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="177.1" y="590.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="174.6" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="177.6" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="174.6" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="177.6" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (21 samples, 0.95%)</title><rect x="175.1" y="579.0" width="11.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="178.1" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.82%)</title><rect x="175.7" y="563.0" width="9.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="178.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.23%)</title><rect x="175.7" y="547.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="178.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.14%)</title><rect x="175.7" y="531.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="178.7" y="542.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="176.7" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.7" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="177.3" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.3" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.05%)</title><rect x="177.8" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="180.8" y="542.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.09%)</title><rect x="178.3" y="547.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="181.3" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.27%)</title><rect x="179.4" y="547.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="182.4" y="558.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.05%)</title><rect x="182.1" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.1" y="542.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.14%)</title><rect x="182.6" y="547.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.6" y="558.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.14%)</title><rect x="182.6" y="531.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.6" y="542.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.05%)</title><rect x="184.2" y="547.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.2" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.05%)</title><rect x="184.8" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="187.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.09%)</title><rect x="185.3" y="563.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="188.3" y="574.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.14%)</title><rect x="186.4" y="579.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="189.4" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.09%)</title><rect x="188.0" y="579.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="191.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.05%)</title><rect x="189.0" y="579.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="192.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (334 samples, 15.13%)</title><rect x="189.6" y="579.0" width="178.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="192.6" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (332 samples, 15.04%)</title><rect x="190.1" y="563.0" width="177.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="193.1" y="574.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="190.1" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="193.1" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="190.6" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="193.6" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="191.2" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="194.2" y="558.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.05%)</title><rect x="191.7" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="194.7" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (328 samples, 14.86%)</title><rect x="192.2" y="547.0" width="175.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="195.2" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (312 samples, 14.13%)</title><rect x="192.8" y="531.0" width="166.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="195.8" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.05%)</title><rect x="196.0" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.0" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (301 samples, 13.63%)</title><rect x="196.5" y="515.0" width="160.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.5" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (296 samples, 13.41%)</title><rect x="197.0" y="499.0" width="158.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="200.0" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="197.0" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="200.0" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="197.0" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.0" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="197.6" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (291 samples, 13.18%)</title><rect x="198.1" y="483.0" width="155.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.1" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.05%)</title><rect x="198.7" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.7" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="198.7" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="201.7" y="462.0"></text>
</g>
<g>
<title>ip_output (288 samples, 13.04%)</title><rect x="199.2" y="467.0" width="153.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="202.2" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="200.3" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="203.3" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.05%)</title><rect x="200.8" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (284 samples, 12.86%)</title><rect x="201.3" y="451.0" width="151.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.3" y="462.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.09%)</title><rect x="202.4" y="435.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="205.4" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (280 samples, 12.68%)</title><rect x="203.5" y="435.0" width="149.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="206.5" y="446.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (277 samples, 12.55%)</title><rect x="205.1" y="419.0" width="148.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="208.1" y="430.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (235 samples, 10.64%)</title><rect x="210.9" y="403.0" width="125.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="213.9" y="414.0">__local_bh_enab..</text>
</g>
<g>
<title>do_softirq.part.0 (234 samples, 10.60%)</title><rect x="211.5" y="387.0" width="125.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="214.5" y="398.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (233 samples, 10.55%)</title><rect x="212.0" y="371.0" width="124.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.0" y="382.0">do_softirq_own_..</text>
</g>
<g>
<title>__softirqentry_text_start (232 samples, 10.51%)</title><rect x="212.0" y="355.0" width="124.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="215.0" y="366.0">__softirqentry_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="214.7" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.7" y="350.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="215.2" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="218.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (225 samples, 10.19%)</title><rect x="215.8" y="339.0" width="120.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.8" y="350.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (222 samples, 10.05%)</title><rect x="217.4" y="323.0" width="118.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.4" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (213 samples, 9.65%)</title><rect x="221.6" y="307.0" width="113.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="224.6" y="318.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (211 samples, 9.56%)</title><rect x="221.6" y="291.0" width="112.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="224.6" y="302.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="222.2" y="275.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="225.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (208 samples, 9.42%)</title><rect x="223.2" y="275.0" width="111.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.2" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.09%)</title><rect x="223.2" y="259.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="226.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.05%)</title><rect x="224.3" y="259.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.3" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (204 samples, 9.24%)</title><rect x="224.8" y="259.0" width="109.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="227.8" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (203 samples, 9.19%)</title><rect x="224.8" y="243.0" width="108.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="227.8" y="254.0">ip_local_deli..</text>
</g>
<g>
<title>ip_local_deliver_finish (201 samples, 9.10%)</title><rect x="225.4" y="227.0" width="107.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.4" y="238.0">ip_local_deli..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (199 samples, 9.01%)</title><rect x="225.4" y="211.0" width="106.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="228.4" y="222.0">ip_protocol_d..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.09%)</title><rect x="227.5" y="195.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.05%)</title><rect x="228.6" y="195.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (192 samples, 8.70%)</title><rect x="229.1" y="195.0" width="102.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.1" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.18%)</title><rect x="231.2" y="179.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.32%)</title><rect x="233.4" y="179.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="236.4" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.14%)</title><rect x="233.9" y="163.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="236.9" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.09%)</title><rect x="235.5" y="163.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="238.5" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="236.6" y="163.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (176 samples, 7.97%)</title><rect x="237.1" y="179.0" width="94.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.1" y="190.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.05%)</title><rect x="237.1" y="163.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.1" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.09%)</title><rect x="237.7" y="163.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.7" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="238.7" y="163.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="241.7" y="174.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.14%)</title><rect x="239.3" y="163.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="242.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (169 samples, 7.65%)</title><rect x="240.9" y="163.0" width="90.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.9" y="174.0">tcp_rcv_es..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.27%)</title><rect x="243.0" y="147.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="246.0" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.23%)</title><rect x="243.5" y="131.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="246.5" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="244.1" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.1" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.14%)</title><rect x="244.6" y="115.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="247.6" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.14%)</title><rect x="244.6" y="99.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="247.6" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="244.6" y="83.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.6" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.05%)</title><rect x="246.2" y="147.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="249.2" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.05%)</title><rect x="246.7" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="249.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="247.3" y="147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="250.3" y="158.0"></text>
</g>
<g>
<title>tcp_ack (32 samples, 1.45%)</title><rect x="247.8" y="147.0" width="17.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="250.8" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.18%)</title><rect x="251.0" y="131.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="254.0" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (17 samples, 0.77%)</title><rect x="253.2" y="131.0" width="9.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="256.2" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.41%)</title><rect x="256.9" y="115.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="259.9" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.23%)</title><rect x="258.0" y="99.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="261.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.23%)</title><rect x="258.0" y="83.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="261.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.09%)</title><rect x="259.6" y="67.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="262.6" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.09%)</title><rect x="259.6" y="51.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="262.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="260.1" y="35.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="263.1" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="260.6" y="99.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.6" y="110.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="261.2" y="99.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.2" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="261.7" y="115.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.7" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.09%)</title><rect x="262.2" y="131.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="265.2" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.05%)</title><rect x="263.3" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.3" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.09%)</title><rect x="263.8" y="131.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="266.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (115 samples, 5.21%)</title><rect x="264.9" y="147.0" width="61.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.9" y="158.0">tcp_da..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="264.9" y="131.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="267.9" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (114 samples, 5.16%)</title><rect x="265.5" y="131.0" width="60.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="268.5" y="142.0">sock_d..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.05%)</title><rect x="265.5" y="115.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="268.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (113 samples, 5.12%)</title><rect x="266.0" y="115.0" width="60.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.0" y="126.0">__wake..</text>
</g>
<g>
<title>__wake_up_common_lock (112 samples, 5.07%)</title><rect x="266.0" y="99.0" width="59.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="269.0" y="110.0">__wake..</text>
</g>
<g>
<title>__lock_text_start (112 samples, 5.07%)</title><rect x="266.0" y="83.0" width="59.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.0" y="94.0">__lock..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="325.8" y="99.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="328.8" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.23%)</title><rect x="326.4" y="147.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="329.4" y="158.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.23%)</title><rect x="326.4" y="131.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="329.4" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.09%)</title><rect x="329.0" y="147.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="332.0" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.09%)</title><rect x="330.1" y="147.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="333.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.05%)</title><rect x="331.2" y="179.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="334.2" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.09%)</title><rect x="331.7" y="211.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.7" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.05%)</title><rect x="332.8" y="227.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="335.8" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="333.3" y="243.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="336.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.05%)</title><rect x="333.9" y="259.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.09%)</title><rect x="334.4" y="291.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="337.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="335.5" y="307.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="338.5" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="336.0" y="355.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="339.0" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (31 samples, 1.40%)</title><rect x="336.5" y="403.0" width="16.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (30 samples, 1.36%)</title><rect x="336.5" y="387.0" width="16.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="339.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (19 samples, 0.86%)</title><rect x="338.7" y="371.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.7" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="339.2" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="342.2" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 0.68%)</title><rect x="339.7" y="355.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.7" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.18%)</title><rect x="339.7" y="339.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="342.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.41%)</title><rect x="341.9" y="339.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="344.9" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="342.4" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="345.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.32%)</title><rect x="342.9" y="323.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="345.9" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.32%)</title><rect x="342.9" y="307.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="345.9" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.05%)</title><rect x="346.7" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.7" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="347.2" y="339.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="350.2" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.09%)</title><rect x="347.8" y="355.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="350.8" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.09%)</title><rect x="348.8" y="371.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.8" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.18%)</title><rect x="349.9" y="371.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="352.9" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.09%)</title><rect x="351.0" y="355.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="354.0" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.05%)</title><rect x="352.0" y="371.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.0" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="352.6" y="387.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="355.6" y="398.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="353.1" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="356.1" y="478.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="353.6" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.6" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.09%)</title><rect x="354.2" y="483.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="357.2" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (3 samples, 0.14%)</title><rect x="355.2" y="499.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="358.2" y="510.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.05%)</title><rect x="356.8" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="359.8" y="510.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.14%)</title><rect x="357.4" y="515.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="360.4" y="526.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="357.4" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="360.4" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.09%)</title><rect x="357.9" y="499.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="360.9" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="358.4" y="483.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="361.4" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="359.0" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.0" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.05%)</title><rect x="359.0" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.0" y="510.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="359.5" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="362.5" y="542.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="360.0" y="531.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.0" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.09%)</title><rect x="360.6" y="531.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="363.6" y="542.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="361.6" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="364.6" y="542.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.05%)</title><rect x="362.2" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="365.2" y="542.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="362.7" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.7" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.14%)</title><rect x="363.3" y="531.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="366.3" y="542.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.05%)</title><rect x="363.8" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="364.3" y="515.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="367.3" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="364.3" y="499.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.3" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="364.3" y="483.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="367.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="364.3" y="467.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="367.3" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.09%)</title><rect x="364.9" y="531.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="367.9" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="364.9" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="367.9" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="365.4" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="368.4" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.05%)</title><rect x="365.9" y="531.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="368.9" y="542.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.09%)</title><rect x="366.5" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="369.5" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="367.5" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="370.5" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.23%)</title><rect x="368.1" y="579.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.1" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="368.6" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.14%)</title><rect x="369.1" y="563.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="372.1" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="370.2" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.2" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.09%)</title><rect x="370.7" y="595.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="373.7" y="606.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.05%)</title><rect x="371.8" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="374.8" y="606.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.05%)</title><rect x="372.3" y="627.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="375.3" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.09%)</title><rect x="372.9" y="627.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="375.9" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.09%)</title><rect x="372.9" y="611.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="375.9" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.09%)</title><rect x="372.9" y="595.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.9" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.23%)</title><rect x="373.9" y="643.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="376.9" y="654.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="373.9" y="627.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="376.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="373.9" y="611.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="376.9" y="622.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="373.9" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="376.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.18%)</title><rect x="374.5" y="627.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.18%)</title><rect x="376.6" y="675.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.6" y="686.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.18%)</title><rect x="376.6" y="659.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="379.6" y="670.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.18%)</title><rect x="376.6" y="643.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="379.6" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.18%)</title><rect x="376.6" y="627.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="378.8" y="707.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="381.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="378.8" y="691.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="381.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="378.8" y="675.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.8" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="379.8" y="723.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="382.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="379.8" y="707.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="382.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="379.8" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="382.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="380.4" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="380.4" y="787.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="383.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="380.4" y="771.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="380.4" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="383.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.09%)</title><rect x="380.9" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.05%)</title><rect x="382.0" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.0" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="382.0" y="803.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="385.0" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="382.0" y="787.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="385.0" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="382.0" y="771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="385.0" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="382.0" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="385.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="382.0" y="739.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="385.0" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="382.0" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="385.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (6 samples, 0.27%)</title><rect x="382.5" y="819.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.5" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.14%)</title><rect x="383.6" y="803.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.6" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="383.6" y="787.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.6" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="383.6" y="771.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="383.6" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="384.6" y="787.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="387.6" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="385.2" y="803.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="388.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="385.2" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="388.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="385.2" y="771.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="388.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (314 samples, 14.22%)</title><rect x="385.7" y="819.0" width="167.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.7" y="830.0">ru/mail/polis/dao/Roc..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="386.8" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="386.8" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.8" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (309 samples, 13.99%)</title><rect x="387.3" y="803.0" width="165.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.3" y="814.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (309 samples, 13.99%)</title><rect x="387.3" y="787.0" width="165.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.3" y="798.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.05%)</title><rect x="387.8" y="771.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="390.8" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (300 samples, 13.59%)</title><rect x="388.4" y="771.0" width="160.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="391.4" y="782.0">Java_org_rocksdb_Roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (1 samples, 0.05%)</title><rect x="389.4" y="755.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="392.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="389.4" y="739.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="392.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="389.4" y="723.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="392.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="389.4" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="392.4" y="718.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.09%)</title><rect x="390.0" y="755.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="393.0" y="766.0"></text>
</g>
<g>
<title>cfree (6 samples, 0.27%)</title><rect x="391.0" y="755.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="394.0" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.05%)</title><rect x="394.2" y="755.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="397.2" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="394.8" y="755.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="397.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="395.3" y="739.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="395.3" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="395.3" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="398.3" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.09%)</title><rect x="395.9" y="755.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="398.9" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.09%)</title><rect x="396.9" y="755.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="399.9" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (281 samples, 12.73%)</title><rect x="398.0" y="755.0" width="150.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="401.0" y="766.0">rocksdb_get_helper(..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="400.1" y="739.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="403.1" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="400.7" y="739.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="403.7" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.05%)</title><rect x="401.2" y="739.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="404.2" y="750.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.05%)</title><rect x="401.7" y="739.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="404.7" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.05%)</title><rect x="401.7" y="723.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="404.7" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="402.3" y="739.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="405.3" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="402.3" y="723.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="405.3" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="402.8" y="723.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="405.8" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="402.8" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="405.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="402.8" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="405.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="402.8" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="405.8" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.05%)</title><rect x="403.3" y="739.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="406.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.05%)</title><rect x="403.9" y="739.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="406.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (249 samples, 11.28%)</title><rect x="404.4" y="739.0" width="133.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="407.4" y="750.0">rocksdb::DB::Get(..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.05%)</title><rect x="404.9" y="723.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="407.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (247 samples, 11.19%)</title><rect x="405.5" y="723.0" width="132.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="408.5" y="734.0">rocksdb::DB::Get..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (241 samples, 10.91%)</title><rect x="406.0" y="707.0" width="128.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="409.0" y="718.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (239 samples, 10.82%)</title><rect x="406.0" y="691.0" width="127.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="409.0" y="702.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (6 samples, 0.27%)</title><rect x="406.5" y="675.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="409.5" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="409.7" y="675.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="412.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (5 samples, 0.23%)</title><rect x="410.3" y="675.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="413.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (3 samples, 0.14%)</title><rect x="413.0" y="675.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="416.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator() const (1 samples, 0.05%)</title><rect x="414.6" y="675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="417.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.09%)</title><rect x="415.1" y="675.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="418.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.05%)</title><rect x="416.2" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="419.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (211 samples, 9.56%)</title><rect x="416.7" y="675.0" width="112.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="419.7" y="686.0">rocksdb::DBImp..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="417.8" y="659.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="420.8" y="670.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.09%)</title><rect x="418.3" y="659.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="421.3" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.23%)</title><rect x="419.4" y="659.0" width="2.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="422.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="421.5" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="424.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="421.5" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="421.5" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="424.5" y="622.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.05%)</title><rect x="422.0" y="659.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="425.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (9 samples, 0.41%)</title><rect x="422.6" y="659.0" width="4.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="425.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.05%)</title><rect x="424.2" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="427.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() [clone .plt] (1 samples, 0.05%)</title><rect x="424.7" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="427.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.09%)</title><rect x="425.2" y="643.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="428.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.05%)</title><rect x="425.8" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="428.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="425.8" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="428.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="425.8" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="428.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="425.8" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="428.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.05%)</title><rect x="426.3" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="429.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.05%)</title><rect x="426.3" y="627.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="429.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="426.8" y="643.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="429.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="426.8" y="627.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="426.8" y="611.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="429.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.05%)</title><rect x="427.4" y="659.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="430.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.05%)</title><rect x="427.4" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="430.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.09%)</title><rect x="427.9" y="659.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="430.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="428.5" y="643.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="431.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="428.5" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="431.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="428.5" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (2 samples, 0.09%)</title><rect x="429.0" y="659.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="432.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.05%)</title><rect x="430.1" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="433.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (178 samples, 8.06%)</title><rect x="430.6" y="659.0" width="95.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="433.6" y="670.0">rocksdb::Me..</text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (177 samples, 8.02%)</title><rect x="430.6" y="643.0" width="94.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="433.6" y="654.0">rocksdb::Me..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (175 samples, 7.93%)</title><rect x="430.6" y="627.0" width="93.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="433.6" y="638.0">/tmp/libroc..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (4 samples, 0.18%)</title><rect x="431.1" y="611.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="434.1" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (1 samples, 0.05%)</title><rect x="431.7" y="595.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="434.7" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="432.2" y="595.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="435.2" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="432.2" y="579.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="435.2" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="432.2" y="563.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="435.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (165 samples, 7.47%)</title><rect x="433.3" y="611.0" width="88.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="436.3" y="622.0">rocksdb::I..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (6 samples, 0.27%)</title><rect x="458.9" y="595.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="461.9" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (5 samples, 0.23%)</title><rect x="462.1" y="595.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="465.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="464.3" y="579.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="467.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="464.3" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="467.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="464.3" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.3" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (18 samples, 0.82%)</title><rect x="464.8" y="595.0" width="9.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="467.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.18%)</title><rect x="472.3" y="579.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.18%)</title><rect x="472.3" y="563.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.18%)</title><rect x="472.3" y="547.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="475.3" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="474.4" y="595.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="477.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (78 samples, 3.53%)</title><rect x="474.9" y="595.0" width="41.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="477.9" y="606.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni11472745990910288413.so (9 samples, 0.41%)</title><rect x="486.7" y="579.0" width="4.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="489.7" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="491.0" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="494.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="491.0" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="494.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="491.0" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.0" y="542.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (27 samples, 1.22%)</title><rect x="491.5" y="579.0" width="14.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="494.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.14%)</title><rect x="504.3" y="563.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="507.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.14%)</title><rect x="504.3" y="547.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="507.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="504.3" y="531.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="507.3" y="542.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.14%)</title><rect x="505.9" y="579.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="508.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (11 samples, 0.50%)</title><rect x="507.5" y="579.0" width="5.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="510.5" y="590.0"></text>
</g>
<g>
<title>memcmp@plt (4 samples, 0.18%)</title><rect x="513.4" y="579.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="516.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="515.6" y="579.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="515.6" y="563.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="515.6" y="547.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="518.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (9 samples, 0.41%)</title><rect x="516.6" y="595.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="519.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (9 samples, 0.41%)</title><rect x="516.6" y="579.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="519.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.41%)</title><rect x="516.6" y="563.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="519.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.05%)</title><rect x="521.4" y="611.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="524.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (3 samples, 0.14%)</title><rect x="522.0" y="611.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="525.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="523.0" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="523.0" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="526.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="523.0" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.0" y="574.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) [clone .plt] (1 samples, 0.05%)</title><rect x="523.6" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="526.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.09%)</title><rect x="524.1" y="627.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="527.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.05%)</title><rect x="525.2" y="643.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="528.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.05%)</title><rect x="525.7" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="528.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.05%)</title><rect x="526.2" y="659.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="529.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.05%)</title><rect x="526.8" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="529.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.18%)</title><rect x="527.3" y="659.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.3" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.18%)</title><rect x="527.3" y="643.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="530.3" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.18%)</title><rect x="527.3" y="627.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (3 samples, 0.14%)</title><rect x="529.5" y="675.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="532.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.09%)</title><rect x="531.1" y="675.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="534.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() [clone .plt] (1 samples, 0.05%)</title><rect x="532.1" y="675.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="535.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.09%)</title><rect x="532.7" y="675.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="535.7" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="532.7" y="659.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="535.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="532.7" y="643.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="535.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="532.7" y="627.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="535.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (2 samples, 0.09%)</title><rect x="533.7" y="691.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="536.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (3 samples, 0.14%)</title><rect x="534.8" y="707.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="537.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="535.3" y="691.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="538.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="535.3" y="675.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="535.3" y="659.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="538.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="536.4" y="707.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="536.4" y="691.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="539.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="536.4" y="675.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="539.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.05%)</title><rect x="537.5" y="739.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="540.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (18 samples, 0.82%)</title><rect x="538.0" y="739.0" width="9.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="541.0" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="538.0" y="723.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="541.0" y="734.0"></text>
</g>
<g>
<title>jni_NewByteArray (15 samples, 0.68%)</title><rect x="538.5" y="723.0" width="8.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="541.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.14%)</title><rect x="539.1" y="707.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="542.1" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="540.7" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="543.7" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="540.7" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="540.7" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="540.7" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.7" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.45%)</title><rect x="541.2" y="707.0" width="5.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="544.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.27%)</title><rect x="542.8" y="691.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="545.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.05%)</title><rect x="542.8" y="675.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="545.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.09%)</title><rect x="543.4" y="675.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="546.4" y="686.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.05%)</title><rect x="543.9" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="546.9" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="543.9" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="546.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="543.9" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="546.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="543.9" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.09%)</title><rect x="544.4" y="675.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="547.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="545.0" y="659.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.0" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="545.0" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="548.0" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="545.0" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.0" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="545.5" y="675.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="548.5" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="546.0" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="549.0" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="546.0" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="549.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="546.0" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="549.0" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.09%)</title><rect x="546.6" y="723.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="549.6" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="546.6" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="549.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="547.1" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="550.1" y="718.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.05%)</title><rect x="547.1" y="691.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.1" y="702.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.05%)</title><rect x="547.1" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="550.1" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="547.1" y="659.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.1" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="547.1" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="547.6" y="739.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="547.6" y="723.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="550.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="547.6" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.6" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="548.2" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="551.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="548.2" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="551.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="548.2" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="551.2" y="734.0"></text>
</g>
<g>
<title>__libc_malloc (5 samples, 0.23%)</title><rect x="548.7" y="771.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="551.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="550.8" y="755.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="550.8" y="739.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="553.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="550.8" y="723.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="553.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.05%)</title><rect x="551.4" y="771.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="554.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.05%)</title><rect x="551.9" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="554.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (2 samples, 0.09%)</title><rect x="552.4" y="803.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.05%)</title><rect x="552.4" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.05%)</title><rect x="552.4" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.4" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="552.4" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="552.4" y="739.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="555.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="553.0" y="787.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="556.0" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="553.0" y="771.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="556.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="553.0" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$70/1159765973.run (637 samples, 28.85%)</title><rect x="553.5" y="851.0" width="340.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.5" y="862.0">ru/mail/polis/service/ivanovandrey/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$entity$0 (637 samples, 28.85%)</title><rect x="553.5" y="835.0" width="340.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.5" y="846.0">ru/mail/polis/service/ivanovandrey/AsyncServic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (208 samples, 9.42%)</title><rect x="553.5" y="819.0" width="111.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.5" y="830.0">one/nio/http/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="553.5" y="803.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.5" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="553.5" y="787.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="556.5" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="553.5" y="771.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="556.5" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="553.5" y="755.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="556.5" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="553.5" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="556.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="553.5" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="556.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="553.5" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="556.5" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.23%)</title><rect x="554.0" y="803.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.0" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (5 samples, 0.23%)</title><rect x="554.0" y="787.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.0" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.09%)</title><rect x="554.0" y="771.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="557.0" y="782.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.05%)</title><rect x="554.0" y="755.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="557.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.05%)</title><rect x="554.6" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="557.6" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="554.6" y="739.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="557.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="554.6" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="557.6" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="554.6" y="707.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="557.6" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="554.6" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="557.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.14%)</title><rect x="555.1" y="771.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="558.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.14%)</title><rect x="555.1" y="755.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="558.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="555.1" y="739.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="558.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (199 samples, 9.01%)</title><rect x="556.7" y="803.0" width="106.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.7" y="814.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.09%)</title><rect x="556.7" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.09%)</title><rect x="556.7" y="771.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="556.7" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="559.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="556.7" y="739.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="556.7" y="723.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.7" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="556.7" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="559.7" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="556.7" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.7" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="556.7" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="559.7" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="556.7" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="559.7" y="670.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.05%)</title><rect x="556.7" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="559.7" y="654.0"></text>
</g>
<g>
<title>__run_timers.part.0 (1 samples, 0.05%)</title><rect x="556.7" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="559.7" y="638.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.05%)</title><rect x="556.7" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.7" y="622.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.05%)</title><rect x="556.7" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="559.7" y="606.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.05%)</title><rect x="556.7" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="559.7" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="556.7" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="559.7" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="556.7" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="559.7" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="557.2" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="560.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="557.2" y="691.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="560.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="557.2" y="675.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="560.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (197 samples, 8.92%)</title><rect x="557.8" y="787.0" width="105.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.8" y="798.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (197 samples, 8.92%)</title><rect x="557.8" y="771.0" width="105.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.8" y="782.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (197 samples, 8.92%)</title><rect x="557.8" y="755.0" width="105.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.8" y="766.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (197 samples, 8.92%)</title><rect x="557.8" y="739.0" width="105.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.8" y="750.0">one/nio/net/N..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="557.8" y="723.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="560.8" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="557.8" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="557.8" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="560.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="557.8" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.8" y="686.0"></text>
</g>
<g>
<title>send (194 samples, 8.79%)</title><rect x="558.3" y="723.0" width="103.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="561.3" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (191 samples, 8.65%)</title><rect x="559.9" y="707.0" width="102.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="562.9" y="718.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (191 samples, 8.65%)</title><rect x="559.9" y="691.0" width="102.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.9" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (168 samples, 7.61%)</title><rect x="562.1" y="675.0" width="89.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="565.1" y="686.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (168 samples, 7.61%)</title><rect x="562.1" y="659.0" width="89.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="565.1" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (164 samples, 7.43%)</title><rect x="562.6" y="643.0" width="87.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="565.6" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="562.6" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="565.6" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (161 samples, 7.29%)</title><rect x="563.1" y="627.0" width="86.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="566.1" y="638.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (161 samples, 7.29%)</title><rect x="563.1" y="611.0" width="86.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="566.1" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="563.1" y="595.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="566.1" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="563.7" y="595.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.7" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="563.7" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="566.7" y="590.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="564.2" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="567.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (156 samples, 7.07%)</title><rect x="564.7" y="595.0" width="83.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="567.7" y="606.0">tcp_sendm..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.05%)</title><rect x="565.3" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.3" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.36%)</title><rect x="565.8" y="579.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="568.8" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.32%)</title><rect x="565.8" y="563.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="568.8" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.09%)</title><rect x="565.8" y="547.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="568.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.09%)</title><rect x="565.8" y="531.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="568.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.14%)</title><rect x="566.9" y="547.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="569.9" y="558.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.09%)</title><rect x="568.5" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="571.5" y="558.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.09%)</title><rect x="568.5" y="531.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="571.5" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.05%)</title><rect x="569.5" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="572.5" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="570.1" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="573.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (143 samples, 6.48%)</title><rect x="570.6" y="579.0" width="76.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="573.6" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (142 samples, 6.43%)</title><rect x="570.6" y="563.0" width="75.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="573.6" y="574.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (142 samples, 6.43%)</title><rect x="570.6" y="547.0" width="75.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.6" y="558.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (133 samples, 6.02%)</title><rect x="570.6" y="531.0" width="71.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.6" y="542.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (128 samples, 5.80%)</title><rect x="572.7" y="515.0" width="68.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="575.7" y="526.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (126 samples, 5.71%)</title><rect x="573.3" y="499.0" width="67.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.3" y="510.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (125 samples, 5.66%)</title><rect x="573.3" y="483.0" width="66.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="576.3" y="494.0">ip_loca..</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.05%)</title><rect x="573.3" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="576.3" y="478.0"></text>
</g>
<g>
<title>ip_output (124 samples, 5.62%)</title><rect x="573.8" y="467.0" width="66.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.8" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (123 samples, 5.57%)</title><rect x="574.3" y="451.0" width="65.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="577.3" y="462.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="574.3" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="577.3" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (122 samples, 5.53%)</title><rect x="574.9" y="435.0" width="65.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="577.9" y="446.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (121 samples, 5.48%)</title><rect x="575.4" y="419.0" width="64.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.4" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (108 samples, 4.89%)</title><rect x="576.5" y="403.0" width="57.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="579.5" y="414.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (108 samples, 4.89%)</title><rect x="576.5" y="387.0" width="57.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="579.5" y="398.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (108 samples, 4.89%)</title><rect x="576.5" y="371.0" width="57.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.5" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (108 samples, 4.89%)</title><rect x="576.5" y="355.0" width="57.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="579.5" y="366.0">__soft..</text>
</g>
<g>
<title>net_rx_action (105 samples, 4.76%)</title><rect x="578.1" y="339.0" width="56.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="581.1" y="350.0">net_rx..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="578.1" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="581.1" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="578.6" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="581.6" y="334.0"></text>
</g>
<g>
<title>process_backlog (103 samples, 4.66%)</title><rect x="579.2" y="323.0" width="55.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.2" y="334.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (101 samples, 4.57%)</title><rect x="579.7" y="307.0" width="54.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="582.7" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (101 samples, 4.57%)</title><rect x="579.7" y="291.0" width="54.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="582.7" y="302.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="579.7" y="275.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="582.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (99 samples, 4.48%)</title><rect x="580.8" y="275.0" width="52.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="583.8" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (99 samples, 4.48%)</title><rect x="580.8" y="259.0" width="52.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="583.8" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (98 samples, 4.44%)</title><rect x="580.8" y="243.0" width="52.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.8" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (98 samples, 4.44%)</title><rect x="580.8" y="227.0" width="52.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.8" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (98 samples, 4.44%)</title><rect x="580.8" y="211.0" width="52.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="583.8" y="222.0">ip_pr..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="580.8" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="583.8" y="206.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.05%)</title><rect x="581.3" y="195.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (96 samples, 4.35%)</title><rect x="581.8" y="195.0" width="51.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="584.8" y="206.0">tcp_v..</text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.09%)</title><rect x="582.9" y="179.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="585.9" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="582.9" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="585.9" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="583.4" y="163.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="586.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (92 samples, 4.17%)</title><rect x="584.0" y="179.0" width="49.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="587.0" y="190.0">tcp_v..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.05%)</title><rect x="584.5" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (90 samples, 4.08%)</title><rect x="585.0" y="163.0" width="48.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="588.0" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.05%)</title><rect x="585.0" y="147.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.0" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.05%)</title><rect x="585.0" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="588.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="585.0" y="115.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.0" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.05%)</title><rect x="585.6" y="147.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="588.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="586.1" y="147.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="589.1" y="158.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.41%)</title><rect x="586.6" y="147.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="589.6" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="587.2" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="590.2" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="587.7" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="590.7" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.27%)</title><rect x="588.2" y="131.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.2" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="588.2" y="115.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.2" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="588.2" y="99.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="591.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="588.2" y="83.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="588.2" y="67.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.2" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="588.2" y="51.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.2" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="588.8" y="83.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="591.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.09%)</title><rect x="589.3" y="115.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="592.3" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.09%)</title><rect x="590.4" y="115.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.4" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (75 samples, 3.40%)</title><rect x="591.4" y="147.0" width="40.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.4" y="158.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (75 samples, 3.40%)</title><rect x="591.4" y="131.0" width="40.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.4" y="142.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (74 samples, 3.35%)</title><rect x="592.0" y="115.0" width="39.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="595.0" y="126.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (74 samples, 3.35%)</title><rect x="592.0" y="99.0" width="39.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="595.0" y="110.0">__w..</text>
</g>
<g>
<title>__lock_text_start (74 samples, 3.35%)</title><rect x="592.0" y="83.0" width="39.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.0" y="94.0">__l..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.05%)</title><rect x="631.5" y="147.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="634.5" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="632.1" y="147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="635.1" y="158.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="632.1" y="131.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="635.1" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="632.6" y="147.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="635.6" y="158.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="633.1" y="243.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="636.1" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="633.7" y="307.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="636.7" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.45%)</title><rect x="634.2" y="403.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="637.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.36%)</title><rect x="634.7" y="387.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="637.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.18%)</title><rect x="635.8" y="371.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="638.8" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="636.3" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.09%)</title><rect x="636.9" y="355.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="639.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="636.9" y="339.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.9" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="636.9" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="639.9" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="636.9" y="307.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.9" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="637.4" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="640.4" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="637.9" y="371.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="640.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="638.5" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="641.5" y="382.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.05%)</title><rect x="638.5" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="641.5" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="639.0" y="387.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="642.0" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.05%)</title><rect x="639.5" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="642.5" y="414.0"></text>
</g>
<g>
<title>reschedule_interrupt (1 samples, 0.05%)</title><rect x="639.5" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="642.5" y="398.0"></text>
</g>
<g>
<title>smp_reschedule_interrupt (1 samples, 0.05%)</title><rect x="639.5" y="371.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="642.5" y="382.0"></text>
</g>
<g>
<title>scheduler_ipi (1 samples, 0.05%)</title><rect x="639.5" y="355.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="642.5" y="366.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="639.5" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="642.5" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="639.5" y="323.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="642.5" y="334.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="640.1" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="643.1" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.05%)</title><rect x="640.6" y="499.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="643.6" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="641.2" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="644.2" y="526.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="641.2" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.2" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="641.2" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.09%)</title><rect x="641.7" y="531.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="644.7" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="642.8" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.8" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.27%)</title><rect x="643.3" y="531.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.18%)</title><rect x="644.4" y="515.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="647.4" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.18%)</title><rect x="644.4" y="499.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="647.4" y="510.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.05%)</title><rect x="644.4" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.4" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.14%)</title><rect x="644.9" y="483.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="647.9" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="644.9" y="467.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="647.9" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="646.5" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="649.5" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.09%)</title><rect x="647.0" y="579.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="650.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.05%)</title><rect x="647.0" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="650.0" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="647.6" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="650.6" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.09%)</title><rect x="648.1" y="595.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.1" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.05%)</title><rect x="649.2" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="652.2" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="649.2" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.2" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="649.2" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.05%)</title><rect x="649.7" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="652.7" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.14%)</title><rect x="650.2" y="643.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.2" y="654.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.14%)</title><rect x="650.2" y="627.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="653.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.14%)</title><rect x="650.2" y="611.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="653.2" y="622.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.14%)</title><rect x="650.2" y="595.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="653.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (18 samples, 0.82%)</title><rect x="651.8" y="675.0" width="9.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="654.8" y="686.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="652.4" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.4" y="670.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.72%)</title><rect x="652.9" y="659.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="655.9" y="670.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.68%)</title><rect x="653.4" y="643.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="656.4" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.68%)</title><rect x="653.4" y="627.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="656.4" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="661.5" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="664.5" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="662.0" y="723.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="665.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="662.0" y="707.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="665.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="662.0" y="691.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="665.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.14%)</title><rect x="663.1" y="803.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="663.6" y="787.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="663.6" y="771.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.05%)</title><rect x="663.6" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="663.6" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="666.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="663.6" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="666.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="663.6" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="666.6" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="664.1" y="755.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="664.1" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="667.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="664.1" y="723.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="667.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.forwardRequest (429 samples, 19.43%)</title><rect x="664.7" y="819.0" width="229.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.7" y="830.0">ru/mail/polis/service/ivanovan..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.18%)</title><rect x="664.7" y="803.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.7" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.09%)</title><rect x="664.7" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="665.2" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="665.2" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="668.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="665.2" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="665.2" y="723.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="668.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.09%)</title><rect x="665.7" y="787.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (425 samples, 19.25%)</title><rect x="666.8" y="803.0" width="227.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.8" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (425 samples, 19.25%)</title><rect x="666.8" y="787.0" width="227.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.8" y="798.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (84 samples, 3.80%)</title><rect x="666.8" y="771.0" width="44.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.8" y="782.0">one/..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.09%)</title><rect x="666.8" y="755.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="669.8" y="766.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.09%)</title><rect x="666.8" y="739.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="669.8" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.09%)</title><rect x="666.8" y="723.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="669.8" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.09%)</title><rect x="666.8" y="707.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="669.8" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.09%)</title><rect x="666.8" y="691.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="669.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (82 samples, 3.71%)</title><rect x="667.9" y="755.0" width="43.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.9" y="766.0">one/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="667.9" y="739.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="670.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="667.9" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="670.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="667.9" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="670.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="667.9" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="670.9" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.14%)</title><rect x="668.4" y="739.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="671.4" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="668.4" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="671.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="668.4" y="707.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="668.4" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="668.4" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="671.4" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.09%)</title><rect x="668.9" y="723.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="671.9" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="668.9" y="707.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="671.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="668.9" y="691.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.9" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="668.9" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.9" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="668.9" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.9" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="669.5" y="707.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="672.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="669.5" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.5" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="669.5" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="672.5" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="669.5" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="672.5" y="670.0"></text>
</g>
<g>
<title>__recv (76 samples, 3.44%)</title><rect x="670.0" y="739.0" width="40.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="673.0" y="750.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 3.17%)</title><rect x="671.6" y="723.0" width="37.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="674.6" y="734.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (70 samples, 3.17%)</title><rect x="671.6" y="707.0" width="37.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="674.6" y="718.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (69 samples, 3.12%)</title><rect x="672.1" y="691.0" width="36.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="675.1" y="702.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (69 samples, 3.12%)</title><rect x="672.1" y="675.0" width="36.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.1" y="686.0">__s..</text>
</g>
<g>
<title>fput_many (2 samples, 0.09%)</title><rect x="672.7" y="659.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="675.7" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (64 samples, 2.90%)</title><rect x="673.8" y="659.0" width="34.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="676.8" y="670.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (64 samples, 2.90%)</title><rect x="673.8" y="643.0" width="34.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.8" y="654.0">in..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="673.8" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="676.8" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (63 samples, 2.85%)</title><rect x="674.3" y="627.0" width="33.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="677.3" y="638.0">tc..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="678.0" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="681.0" y="622.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="678.0" y="595.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="681.0" y="606.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="678.0" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="681.0" y="590.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="678.0" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="681.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="678.6" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.6" y="622.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="679.1" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="682.1" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="679.6" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="682.6" y="622.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="679.6" y="595.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.6" y="606.0"></text>
</g>
<g>
<title>sk_wait_data (39 samples, 1.77%)</title><rect x="680.2" y="611.0" width="20.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="683.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="680.2" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="683.2" y="606.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.05%)</title><rect x="680.7" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.7" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="680.7" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="683.7" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="681.2" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.2" y="606.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="681.2" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.2" y="590.0"></text>
</g>
<g>
<title>remove_wait_queue (2 samples, 0.09%)</title><rect x="681.8" y="595.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="684.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="681.8" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.8" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.05%)</title><rect x="682.8" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="685.8" y="606.0"></text>
</g>
<g>
<title>wait_woken (33 samples, 1.49%)</title><rect x="683.4" y="595.0" width="17.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="686.4" y="606.0"></text>
</g>
<g>
<title>schedule_timeout (31 samples, 1.40%)</title><rect x="684.4" y="579.0" width="16.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="687.4" y="590.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.05%)</title><rect x="684.4" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.4" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="684.4" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="687.4" y="558.0"></text>
</g>
<g>
<title>del_timer_sync (5 samples, 0.23%)</title><rect x="685.0" y="563.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.0" y="574.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (5 samples, 0.23%)</title><rect x="685.0" y="547.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.23%)</title><rect x="685.0" y="531.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="688.0" y="542.0"></text>
</g>
<g>
<title>schedule (23 samples, 1.04%)</title><rect x="687.6" y="563.0" width="12.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.6" y="574.0"></text>
</g>
<g>
<title>__schedule (23 samples, 1.04%)</title><rect x="687.6" y="547.0" width="12.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="690.6" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 1.04%)</title><rect x="687.6" y="531.0" width="12.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="690.6" y="542.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.09%)</title><rect x="699.9" y="563.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="702.9" y="574.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.59%)</title><rect x="701.0" y="611.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="704.0" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.59%)</title><rect x="701.0" y="595.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.0" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.05%)</title><rect x="701.5" y="579.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.5" y="590.0"></text>
</g>
<g>
<title>simple_copy_to_iter (11 samples, 0.50%)</title><rect x="702.1" y="579.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="705.1" y="590.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.23%)</title><rect x="702.1" y="563.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="705.1" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.23%)</title><rect x="702.1" y="547.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="705.1" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.23%)</title><rect x="704.7" y="563.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="707.7" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.23%)</title><rect x="704.7" y="547.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="707.7" y="558.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.05%)</title><rect x="707.4" y="563.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.4" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.09%)</title><rect x="708.0" y="659.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.0" y="670.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="708.0" y="643.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="708.0" y="627.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="711.0" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.09%)</title><rect x="708.0" y="611.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="711.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.14%)</title><rect x="709.0" y="723.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="712.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.14%)</title><rect x="709.0" y="707.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="709.0" y="691.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.0" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.09%)</title><rect x="710.6" y="739.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="713.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="711.2" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="714.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="711.2" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="714.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="711.2" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="714.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (21 samples, 0.95%)</title><rect x="711.7" y="771.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="711.7" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="711.7" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.05%)</title><rect x="712.2" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="712.2" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="712.2" y="723.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="712.2" y="707.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="715.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.09%)</title><rect x="712.8" y="755.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.05%)</title><rect x="712.8" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.8" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="712.8" y="723.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="715.8" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="712.8" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="712.8" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="712.8" y="675.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="715.8" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="713.3" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="716.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="713.3" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="713.3" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (9 samples, 0.41%)</title><rect x="713.8" y="755.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.09%)</title><rect x="713.8" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="714.4" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="717.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="714.4" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="717.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="714.4" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="717.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.27%)</title><rect x="714.9" y="739.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.27%)</title><rect x="714.9" y="723.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.14%)</title><rect x="716.5" y="707.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="719.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.14%)</title><rect x="716.5" y="691.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="719.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="716.5" y="675.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.5" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="718.1" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.1" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="718.1" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="721.1" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="718.1" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="721.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.23%)</title><rect x="718.6" y="755.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="720.8" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="723.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="720.8" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="723.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="720.8" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="723.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.05%)</title><rect x="721.3" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.3" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="721.3" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="724.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="721.3" y="723.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="724.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="721.3" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="724.3" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="721.8" y="755.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="724.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="721.8" y="739.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="724.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="721.8" y="723.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 0.27%)</title><rect x="722.9" y="771.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.18%)</title><rect x="722.9" y="755.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.09%)</title><rect x="722.9" y="739.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.9" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="722.9" y="723.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="725.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="723.5" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="726.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="723.5" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="726.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="723.5" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.09%)</title><rect x="724.0" y="739.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.0" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="724.0" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="727.0" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="724.0" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.0" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="724.0" y="691.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.0" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="725.1" y="755.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="728.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="725.1" y="739.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="725.1" y="723.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="728.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.09%)</title><rect x="726.1" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="729.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (37 samples, 1.68%)</title><rect x="727.2" y="771.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.2" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (2 samples, 0.09%)</title><rect x="727.7" y="755.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="730.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="728.3" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="731.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="728.3" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="728.3" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="731.3" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="728.3" y="691.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.3" y="702.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="728.3" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.3" y="686.0"></text>
</g>
<g>
<title>setsockopt (32 samples, 1.45%)</title><rect x="728.8" y="755.0" width="17.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="731.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 1.27%)</title><rect x="729.3" y="739.0" width="15.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="732.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.05%)</title><rect x="729.3" y="723.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 1.22%)</title><rect x="729.9" y="723.0" width="14.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="732.9" y="734.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (19 samples, 0.86%)</title><rect x="734.1" y="707.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="737.1" y="718.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.05%)</title><rect x="734.1" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="737.1" y="702.0"></text>
</g>
<g>
<title>__sys_setsockopt (17 samples, 0.77%)</title><rect x="734.7" y="691.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="737.7" y="702.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="736.3" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.3" y="686.0"></text>
</g>
<g>
<title>__get_user_4 (5 samples, 0.23%)</title><rect x="736.8" y="675.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="739.8" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.05%)</title><rect x="739.5" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="742.5" y="686.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="740.0" y="675.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="743.0" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="740.6" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.6" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (2 samples, 0.09%)</title><rect x="741.1" y="675.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="744.1" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.09%)</title><rect x="741.1" y="659.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="744.1" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.09%)</title><rect x="741.1" y="643.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="744.1" y="654.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="741.6" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="744.6" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.14%)</title><rect x="742.2" y="675.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="745.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="742.2" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="745.2" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.09%)</title><rect x="742.7" y="659.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="745.7" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.09%)</title><rect x="742.7" y="643.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="745.7" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.05%)</title><rect x="743.8" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="746.8" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.14%)</title><rect x="744.3" y="739.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="747.3" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.14%)</title><rect x="744.3" y="723.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="747.3" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="744.3" y="707.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="747.3" y="718.0"></text>
</g>
<g>
<title>setsockopt@plt (1 samples, 0.05%)</title><rect x="745.9" y="755.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="748.9" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="745.9" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="748.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="745.9" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="748.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="745.9" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="748.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="746.4" y="755.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="749.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="746.4" y="739.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="749.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="746.4" y="723.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="749.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (273 samples, 12.36%)</title><rect x="747.0" y="771.0" width="145.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.0" y="782.0">one/nio/net/Native..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="747.0" y="755.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="750.0" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (4 samples, 0.18%)</title><rect x="747.5" y="755.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="750.5" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="747.5" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="750.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="747.5" y="723.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="750.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="747.5" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="750.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="747.5" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="750.5" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="748.0" y="739.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="751.0" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="748.6" y="739.0" width="1.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="751.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="749.1" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="752.1" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="749.1" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="752.1" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="749.1" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.1" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="749.1" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.1" y="686.0"></text>
</g>
<g>
<title>send (267 samples, 12.09%)</title><rect x="749.6" y="755.0" width="142.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="752.6" y="766.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (265 samples, 12.00%)</title><rect x="750.2" y="739.0" width="141.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.2" y="750.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.05%)</title><rect x="750.2" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="753.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (264 samples, 11.96%)</title><rect x="750.7" y="723.0" width="141.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.7" y="734.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (240 samples, 10.87%)</title><rect x="750.7" y="707.0" width="128.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.7" y="718.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (239 samples, 10.82%)</title><rect x="750.7" y="691.0" width="127.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="753.7" y="702.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (238 samples, 10.78%)</title><rect x="750.7" y="675.0" width="127.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="753.7" y="686.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="750.7" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.7" y="670.0"></text>
</g>
<g>
<title>inet6_sendmsg (237 samples, 10.73%)</title><rect x="751.2" y="659.0" width="126.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="754.2" y="670.0">inet6_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="751.2" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="754.2" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (236 samples, 10.69%)</title><rect x="751.8" y="643.0" width="126.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="754.8" y="654.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="751.8" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.8" y="638.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="751.8" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="754.8" y="622.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="752.3" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="755.3" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="752.3" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="755.3" y="622.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="752.3" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="755.3" y="606.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="752.8" y="627.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="755.8" y="638.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="753.4" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="756.4" y="638.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.09%)</title><rect x="753.9" y="627.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.9" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (226 samples, 10.24%)</title><rect x="755.0" y="627.0" width="120.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="758.0" y="638.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="759.8" y="611.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="762.8" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="759.8" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.8" y="606.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.09%)</title><rect x="760.3" y="611.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="763.3" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.09%)</title><rect x="761.4" y="611.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.4" y="622.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.18%)</title><rect x="762.5" y="611.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="765.5" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="763.5" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.5" y="606.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.05%)</title><rect x="764.1" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="767.1" y="606.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.09%)</title><rect x="764.6" y="611.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="767.6" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.14%)</title><rect x="765.7" y="611.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="768.7" y="622.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.09%)</title><rect x="766.2" y="595.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="769.2" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (31 samples, 1.40%)</title><rect x="767.3" y="611.0" width="16.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.3" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (29 samples, 1.31%)</title><rect x="767.3" y="595.0" width="15.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (20 samples, 0.91%)</title><rect x="767.8" y="579.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="770.8" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.36%)</title><rect x="768.3" y="563.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="771.3" y="574.0"></text>
</g>
<g>
<title>kmalloc_slab (6 samples, 0.27%)</title><rect x="772.6" y="563.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.6" y="574.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.05%)</title><rect x="775.8" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="778.8" y="574.0"></text>
</g>
<g>
<title>memset (3 samples, 0.14%)</title><rect x="776.4" y="563.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.4" y="574.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.05%)</title><rect x="778.0" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.0" y="574.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.09%)</title><rect x="778.5" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="781.5" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.09%)</title><rect x="779.6" y="579.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="782.6" y="590.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="780.1" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="783.1" y="574.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.14%)</title><rect x="780.6" y="579.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="783.6" y="590.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.14%)</title><rect x="780.6" y="563.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="783.6" y="574.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.05%)</title><rect x="782.2" y="579.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.2" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.05%)</title><rect x="782.8" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="785.8" y="606.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.05%)</title><rect x="783.3" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.3" y="606.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.14%)</title><rect x="783.8" y="611.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="786.8" y="622.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.05%)</title><rect x="784.9" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.9" y="606.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="785.4" y="611.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.4" y="622.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.05%)</title><rect x="786.0" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.0" y="622.0"></text>
</g>
<g>
<title>tcp_push (164 samples, 7.43%)</title><rect x="786.5" y="611.0" width="87.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="789.5" y="622.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (163 samples, 7.38%)</title><rect x="786.5" y="595.0" width="87.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="789.5" y="606.0">__tcp_push..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="787.0" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="790.0" y="590.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.09%)</title><rect x="787.6" y="579.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="790.6" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="788.7" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="791.7" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (158 samples, 7.16%)</title><rect x="789.2" y="579.0" width="84.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="792.2" y="590.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (144 samples, 6.52%)</title><rect x="790.3" y="563.0" width="76.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="793.3" y="574.0">__tcp_tr..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.09%)</title><rect x="796.7" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="797.7" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="800.7" y="558.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.09%)</title><rect x="798.3" y="547.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="801.3" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (123 samples, 5.57%)</title><rect x="799.3" y="547.0" width="65.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="802.3" y="558.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (122 samples, 5.53%)</title><rect x="799.3" y="531.0" width="65.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="802.3" y="542.0">__ip_qu..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="800.9" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="803.9" y="526.0"></text>
</g>
<g>
<title>ip_local_out (115 samples, 5.21%)</title><rect x="801.5" y="515.0" width="61.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="804.5" y="526.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.14%)</title><rect x="801.5" y="499.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="804.5" y="510.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.05%)</title><rect x="802.5" y="483.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="805.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.09%)</title><rect x="803.1" y="499.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="806.1" y="510.0"></text>
</g>
<g>
<title>ip_output (110 samples, 4.98%)</title><rect x="804.1" y="499.0" width="58.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="807.1" y="510.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (108 samples, 4.89%)</title><rect x="805.2" y="483.0" width="57.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="808.2" y="494.0">ip_fin..</text>
</g>
<g>
<title>__ip_finish_output (106 samples, 4.80%)</title><rect x="805.8" y="467.0" width="56.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="808.8" y="478.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (105 samples, 4.76%)</title><rect x="806.3" y="451.0" width="56.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="809.3" y="462.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (83 samples, 3.76%)</title><rect x="806.8" y="435.0" width="44.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="809.8" y="446.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (83 samples, 3.76%)</title><rect x="806.8" y="419.0" width="44.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="809.8" y="430.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (81 samples, 3.67%)</title><rect x="807.9" y="403.0" width="43.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="810.9" y="414.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 3.58%)</title><rect x="807.9" y="387.0" width="42.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="810.9" y="398.0">__so..</text>
</g>
<g>
<title>net_rx_action (76 samples, 3.44%)</title><rect x="809.5" y="371.0" width="40.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="812.5" y="382.0">net..</text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.09%)</title><rect x="810.0" y="355.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.0" y="366.0"></text>
</g>
<g>
<title>process_backlog (73 samples, 3.31%)</title><rect x="811.1" y="355.0" width="39.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="814.1" y="366.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (71 samples, 3.22%)</title><rect x="811.6" y="339.0" width="38.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.6" y="350.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (70 samples, 3.17%)</title><rect x="811.6" y="323.0" width="37.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.6" y="334.0">__n..</text>
</g>
<g>
<title>ip_rcv (70 samples, 3.17%)</title><rect x="811.6" y="307.0" width="37.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="814.6" y="318.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (70 samples, 3.17%)</title><rect x="811.6" y="291.0" width="37.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.6" y="302.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (69 samples, 3.12%)</title><rect x="812.2" y="275.0" width="36.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="815.2" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (69 samples, 3.12%)</title><rect x="812.2" y="259.0" width="36.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="815.2" y="270.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (69 samples, 3.12%)</title><rect x="812.2" y="243.0" width="36.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="815.2" y="254.0">ip_..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="812.2" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="815.2" y="238.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.09%)</title><rect x="812.7" y="227.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="813.8" y="227.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="816.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (65 samples, 2.94%)</title><rect x="814.3" y="227.0" width="34.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="817.3" y="238.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="815.4" y="211.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="818.4" y="222.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="815.9" y="211.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="818.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (61 samples, 2.76%)</title><rect x="816.4" y="211.0" width="32.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="819.4" y="222.0">tc..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.05%)</title><rect x="817.0" y="195.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="820.0" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (59 samples, 2.67%)</title><rect x="817.5" y="195.0" width="31.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="820.5" y="206.0">tc..</text>
</g>
<g>
<title>tcp_ack (7 samples, 0.32%)</title><rect x="818.0" y="179.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="821.0" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.14%)</title><rect x="819.1" y="163.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="822.1" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="819.1" y="147.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="822.1" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="819.1" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.1" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="819.1" y="115.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="822.1" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="819.6" y="131.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="822.6" y="142.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="819.6" y="115.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="822.6" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="820.2" y="147.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="823.2" y="158.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="820.7" y="163.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="823.7" y="174.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.05%)</title><rect x="821.3" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.3" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (51 samples, 2.31%)</title><rect x="821.8" y="179.0" width="27.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="824.8" y="190.0">t..</text>
</g>
<g>
<title>sock_def_readable (51 samples, 2.31%)</title><rect x="821.8" y="163.0" width="27.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.8" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (51 samples, 2.31%)</title><rect x="821.8" y="147.0" width="27.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="824.8" y="158.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (51 samples, 2.31%)</title><rect x="821.8" y="131.0" width="27.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="824.8" y="142.0">_..</text>
</g>
<g>
<title>__lock_text_start (51 samples, 2.31%)</title><rect x="821.8" y="115.0" width="27.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.8" y="126.0">_..</text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="849.0" y="323.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="852.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="849.6" y="339.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="852.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.09%)</title><rect x="850.1" y="387.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="853.1" y="398.0"></text>
</g>
<g>
<title>dev_queue_xmit (21 samples, 0.95%)</title><rect x="851.2" y="435.0" width="11.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.2" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.91%)</title><rect x="851.2" y="419.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="854.2" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="852.2" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.2" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.36%)</title><rect x="852.8" y="403.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.8" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.09%)</title><rect x="852.8" y="387.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.27%)</title><rect x="853.8" y="387.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.8" y="398.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.18%)</title><rect x="853.8" y="371.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="856.8" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.18%)</title><rect x="853.8" y="355.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.8" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.18%)</title><rect x="853.8" y="339.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.8" y="350.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.05%)</title><rect x="856.0" y="371.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="859.0" y="382.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="856.5" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="859.5" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (9 samples, 0.41%)</title><rect x="857.1" y="403.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="860.1" y="414.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.18%)</title><rect x="859.7" y="387.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="862.7" y="398.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.05%)</title><rect x="861.9" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="864.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="862.4" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="865.4" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.14%)</title><rect x="862.9" y="515.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="865.9" y="526.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.05%)</title><rect x="864.5" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.5" y="542.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.14%)</title><rect x="865.1" y="547.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.1" y="558.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="866.1" y="531.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="869.1" y="542.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="866.7" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.7" y="558.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="867.2" y="563.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="870.2" y="574.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="867.7" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="870.7" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.09%)</title><rect x="868.3" y="563.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.3" y="574.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.09%)</title><rect x="869.3" y="563.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="872.3" y="574.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.09%)</title><rect x="870.4" y="563.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.4" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.09%)</title><rect x="871.5" y="563.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="874.5" y="574.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.05%)</title><rect x="871.5" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="874.5" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="872.0" y="547.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="875.0" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.09%)</title><rect x="872.6" y="563.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="875.6" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="873.6" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="876.6" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.14%)</title><rect x="874.2" y="611.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.2" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="874.2" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.2" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.09%)</title><rect x="874.7" y="595.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="877.7" y="606.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.05%)</title><rect x="875.2" y="579.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="878.2" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="875.8" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="878.8" y="638.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (3 samples, 0.14%)</title><rect x="876.3" y="627.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="879.3" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="877.9" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="880.9" y="686.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="877.9" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.9" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="877.9" y="643.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.9" y="654.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="877.9" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="880.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="878.4" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="881.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (24 samples, 1.09%)</title><rect x="879.0" y="707.0" width="12.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="882.0" y="718.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="879.5" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="882.5" y="702.0"></text>
</g>
<g>
<title>schedule (22 samples, 1.00%)</title><rect x="880.0" y="691.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.0" y="702.0"></text>
</g>
<g>
<title>__schedule (22 samples, 1.00%)</title><rect x="880.0" y="675.0" width="11.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.0" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (22 samples, 1.00%)</title><rect x="880.0" y="659.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.0" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="891.8" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="894.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="891.8" y="723.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="894.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="891.8" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="894.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="892.3" y="755.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="895.3" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="892.3" y="739.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="895.3" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="892.3" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="895.3" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.05%)</title><rect x="892.9" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.9" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.05%)</title><rect x="892.9" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.9" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.05%)</title><rect x="892.9" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.05%)</title><rect x="892.9" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="895.9" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.05%)</title><rect x="893.4" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.4" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.05%)</title><rect x="893.4" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.4" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.05%)</title><rect x="893.4" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.4" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (551 samples, 24.95%)</title><rect x="893.9" y="899.0" width="294.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.9" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.05%)</title><rect x="896.6" y="883.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="899.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.32%)</title><rect x="897.1" y="883.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.32%)</title><rect x="897.1" y="867.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="898.2" y="851.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="901.2" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.18%)</title><rect x="898.7" y="851.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="901.7" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.18%)</title><rect x="898.7" y="835.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="901.7" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.18%)</title><rect x="898.7" y="819.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="901.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (181 samples, 8.20%)</title><rect x="900.9" y="883.0" width="96.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.9" y="894.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.18%)</title><rect x="902.5" y="867.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.09%)</title><rect x="902.5" y="851.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (2 samples, 0.09%)</title><rect x="903.6" y="851.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.6" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="904.1" y="835.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="907.1" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="904.1" y="819.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="907.1" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="904.1" y="803.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="907.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (172 samples, 7.79%)</title><rect x="904.6" y="867.0" width="91.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.6" y="878.0">one/nio/net..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (3 samples, 0.14%)</title><rect x="907.8" y="851.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="910.8" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.05%)</title><rect x="909.4" y="851.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="912.4" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="909.4" y="835.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="912.4" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="909.4" y="819.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="912.4" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="909.4" y="803.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="912.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="910.0" y="851.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="913.0" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="910.0" y="835.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="913.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="910.0" y="819.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="913.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="910.0" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="910.0" y="787.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="913.0" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="910.0" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="913.0" y="782.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="910.0" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="913.0" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="910.0" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="913.0" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="910.0" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="913.0" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="910.0" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="913.0" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="910.0" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="913.0" y="702.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.14%)</title><rect x="910.5" y="851.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="913.5" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="911.6" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="914.6" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="911.6" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.6" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="911.6" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.6" y="814.0"></text>
</g>
<g>
<title>epoll_wait (157 samples, 7.11%)</title><rect x="912.1" y="851.0" width="83.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="915.1" y="862.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (141 samples, 6.39%)</title><rect x="919.6" y="835.0" width="75.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="922.6" y="846.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.05%)</title><rect x="919.6" y="819.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="922.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (140 samples, 6.34%)</title><rect x="920.1" y="819.0" width="74.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="923.1" y="830.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (137 samples, 6.20%)</title><rect x="921.7" y="803.0" width="73.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="924.7" y="814.0">__x64_sy..</text>
</g>
<g>
<title>do_epoll_wait (137 samples, 6.20%)</title><rect x="921.7" y="787.0" width="73.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="924.7" y="798.0">do_epoll..</text>
</g>
<g>
<title>__fdget (4 samples, 0.18%)</title><rect x="921.7" y="771.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="924.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.18%)</title><rect x="921.7" y="755.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="924.7" y="766.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.18%)</title><rect x="921.7" y="739.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="924.7" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="923.9" y="771.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.9" y="782.0"></text>
</g>
<g>
<title>ep_poll (127 samples, 5.75%)</title><rect x="924.4" y="771.0" width="67.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="927.4" y="782.0">ep_poll</text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.05%)</title><rect x="926.5" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="929.5" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (32 samples, 1.45%)</title><rect x="927.1" y="755.0" width="17.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="930.1" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (21 samples, 0.95%)</title><rect x="931.9" y="739.0" width="11.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="934.9" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.77%)</title><rect x="933.5" y="723.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.5" y="734.0"></text>
</g>
<g>
<title>sock_poll (14 samples, 0.63%)</title><rect x="934.5" y="707.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.5" y="718.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.23%)</title><rect x="937.2" y="691.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="940.2" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.18%)</title><rect x="939.9" y="691.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="942.9" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="942.0" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.05%)</title><rect x="942.6" y="723.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="945.6" y="734.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.09%)</title><rect x="943.1" y="739.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.1" y="750.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="944.2" y="755.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="947.2" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (89 samples, 4.03%)</title><rect x="944.7" y="755.0" width="47.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.7" y="766.0">sche..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (89 samples, 4.03%)</title><rect x="944.7" y="739.0" width="47.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.7" y="750.0">sche..</text>
</g>
<g>
<title>schedule (88 samples, 3.99%)</title><rect x="945.2" y="723.0" width="47.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="948.2" y="734.0">sche..</text>
</g>
<g>
<title>__schedule (88 samples, 3.99%)</title><rect x="945.2" y="707.0" width="47.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.2" y="718.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (84 samples, 3.80%)</title><rect x="947.4" y="691.0" width="44.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="950.4" y="702.0">fini..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.05%)</title><rect x="992.3" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.3" y="782.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.18%)</title><rect x="992.8" y="771.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="995.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="994.9" y="835.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="997.9" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="994.9" y="819.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="997.9" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="994.9" y="803.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.9" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="996.0" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="999.0" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="996.0" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="999.0" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="996.0" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="999.0" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="996.5" y="867.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="999.5" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="996.5" y="851.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.5" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="996.5" y="835.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (355 samples, 16.08%)</title><rect x="997.6" y="883.0" width="189.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1000.6" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="998.1" y="867.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1001.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.14%)</title><rect x="998.7" y="867.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1001.7" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.09%)</title><rect x="999.2" y="851.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1002.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="999.2" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1002.2" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="999.2" y="819.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1002.2" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="999.2" y="803.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1002.2" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="999.2" y="787.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.2" y="798.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.05%)</title><rect x="999.7" y="835.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1002.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1000.3" y="867.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1003.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1000.3" y="851.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1003.3" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1000.3" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1003.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (339 samples, 15.35%)</title><rect x="1000.8" y="867.0" width="181.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.8" y="878.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (193 samples, 8.74%)</title><rect x="1001.3" y="851.0" width="103.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.3" y="862.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (140 samples, 6.34%)</title><rect x="1003.5" y="835.0" width="74.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.5" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (140 samples, 6.34%)</title><rect x="1003.5" y="819.0" width="74.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.5" y="830.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (136 samples, 6.16%)</title><rect x="1003.5" y="803.0" width="72.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.5" y="814.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (15 samples, 0.68%)</title><rect x="1003.5" y="787.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.59%)</title><rect x="1003.5" y="771.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1003.5" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="1003.5" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (1 samples, 0.05%)</title><rect x="1003.5" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1003.5" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1006.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1003.5" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1006.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1003.5" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1006.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.09%)</title><rect x="1004.0" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="1004.6" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="1004.6" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.32%)</title><rect x="1005.1" y="755.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1008.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (7 samples, 0.32%)</title><rect x="1005.1" y="739.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.1" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.18%)</title><rect x="1005.6" y="723.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1008.6" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1007.8" y="723.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1010.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1007.8" y="707.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1010.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1007.8" y="691.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1010.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.14%)</title><rect x="1008.8" y="755.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1009.4" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1009.4" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="1009.4" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.4" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1009.4" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1009.4" y="675.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1012.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1009.4" y="659.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1012.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1009.9" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1009.9" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1012.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1009.9" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.09%)</title><rect x="1010.4" y="771.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.4" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1011.0" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1011.0" y="739.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1014.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1011.0" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (121 samples, 5.48%)</title><rect x="1011.5" y="787.0" width="64.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.5" y="798.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="1011.5" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="1011.5" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="1012.0" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="1012.0" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$70/1159765973.get$Lambda (1 samples, 0.05%)</title><rect x="1012.0" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$70/1159765973.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1012.0" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.09%)</title><rect x="1012.6" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.09%)</title><rect x="1012.6" y="755.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.09%)</title><rect x="1012.6" y="739.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.09%)</title><rect x="1012.6" y="723.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.09%)</title><rect x="1012.6" y="707.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1015.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.09%)</title><rect x="1012.6" y="691.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.09%)</title><rect x="1012.6" y="675.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.6" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="1012.6" y="659.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1015.6" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="1012.6" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1015.6" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="1013.1" y="659.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1016.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1013.1" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1016.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1013.1" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1016.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="1013.1" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1016.1" y="622.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="1013.1" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1016.1" y="606.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="1013.1" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1016.1" y="590.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="1013.1" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1016.1" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="1013.1" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1016.1" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="1013.1" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1016.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.get (97 samples, 4.39%)</title><rect x="1013.6" y="771.0" width="51.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.6" y="782.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (97 samples, 4.39%)</title><rect x="1013.6" y="755.0" width="51.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.6" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (97 samples, 4.39%)</title><rect x="1013.6" y="739.0" width="51.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.6" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="1013.6" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="1013.6" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="1013.6" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="1013.6" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="1013.6" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1016.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="1013.6" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1013.6" y="627.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1016.6" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="1013.6" y="611.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1016.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (96 samples, 4.35%)</title><rect x="1014.2" y="723.0" width="51.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.2" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (96 samples, 4.35%)</title><rect x="1014.2" y="707.0" width="51.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1017.2" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (96 samples, 4.35%)</title><rect x="1014.2" y="691.0" width="51.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.2" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (96 samples, 4.35%)</title><rect x="1014.2" y="675.0" width="51.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.2" y="686.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (96 samples, 4.35%)</title><rect x="1014.2" y="659.0" width="51.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.2" y="670.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.50%)</title><rect x="1014.2" y="643.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1017.2" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="1014.2" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.2" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.09%)</title><rect x="1014.7" y="627.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1017.7" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="1015.8" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1018.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1015.8" y="611.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1015.8" y="595.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1015.8" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1018.8" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.14%)</title><rect x="1016.3" y="627.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1016.8" y="611.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1019.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1016.8" y="595.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1019.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1016.8" y="579.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.8" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.18%)</title><rect x="1017.9" y="627.0" width="2.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1020.9" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (83 samples, 3.76%)</title><rect x="1020.1" y="643.0" width="44.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1023.1" y="654.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 3.40%)</title><rect x="1022.2" y="627.0" width="40.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.2" y="638.0">ent..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="1022.2" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1025.2" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 3.35%)</title><rect x="1022.7" y="611.0" width="39.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1025.7" y="622.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (72 samples, 3.26%)</title><rect x="1022.7" y="595.0" width="38.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1025.7" y="606.0">__x..</text>
</g>
<g>
<title>do_futex (72 samples, 3.26%)</title><rect x="1022.7" y="579.0" width="38.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1025.7" y="590.0">do_..</text>
</g>
<g>
<title>futex_wake (71 samples, 3.22%)</title><rect x="1022.7" y="563.0" width="38.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1025.7" y="574.0">fut..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="1024.3" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1027.3" y="558.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="1024.9" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.9" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.09%)</title><rect x="1025.4" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1028.4" y="558.0"></text>
</g>
<g>
<title>wake_up_q (64 samples, 2.90%)</title><rect x="1026.5" y="547.0" width="34.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1029.5" y="558.0">wa..</text>
</g>
<g>
<title>try_to_wake_up (64 samples, 2.90%)</title><rect x="1026.5" y="531.0" width="34.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1029.5" y="542.0">tr..</text>
</g>
<g>
<title>__lock_text_start (64 samples, 2.90%)</title><rect x="1026.5" y="515.0" width="34.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1029.5" y="526.0">__..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="1060.7" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1063.7" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="1061.2" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1064.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1061.7" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1064.7" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="1061.7" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1064.7" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="1061.7" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.7" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="1061.7" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1064.7" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.18%)</title><rect x="1062.3" y="627.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1065.3" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.18%)</title><rect x="1062.3" y="611.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1065.3" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.18%)</title><rect x="1062.3" y="595.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1065.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1064.4" y="643.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1067.4" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1064.9" y="643.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1067.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1064.9" y="627.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1067.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1064.9" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1067.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.put (5 samples, 0.23%)</title><rect x="1065.5" y="771.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.23%)</title><rect x="1065.5" y="755.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.23%)</title><rect x="1065.5" y="739.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1068.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$71/256466147.get$Lambda (5 samples, 0.23%)</title><rect x="1065.5" y="723.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$71/256466147.&lt;init&gt; (5 samples, 0.23%)</title><rect x="1065.5" y="707.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.5" y="718.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1066.0" y="691.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1069.0" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.14%)</title><rect x="1066.5" y="691.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1069.5" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.14%)</title><rect x="1066.5" y="675.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1069.5" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="1066.5" y="659.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1069.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.strToByteBuffer (8 samples, 0.36%)</title><rect x="1068.2" y="771.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.36%)</title><rect x="1068.2" y="755.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1071.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.36%)</title><rect x="1068.2" y="739.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1071.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1068.2" y="723.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1071.2" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1068.2" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1071.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1068.2" y="691.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1071.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1068.2" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1071.2" y="686.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1068.2" y="659.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1071.2" y="670.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.05%)</title><rect x="1068.2" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1071.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1068.2" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1071.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1068.2" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1071.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1068.2" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1071.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.32%)</title><rect x="1068.7" y="723.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.7" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.32%)</title><rect x="1068.7" y="707.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1070.8" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.09%)</title><rect x="1070.8" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.09%)</title><rect x="1070.8" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1073.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1071.9" y="691.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1074.9" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1071.9" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1074.9" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1071.9" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1074.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.primaryFor (7 samples, 0.32%)</title><rect x="1072.4" y="771.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.09%)</title><rect x="1074.0" y="755.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="1074.0" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.0" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.05%)</title><rect x="1074.0" y="723.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1077.0" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1074.6" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1077.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1074.6" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1077.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1074.6" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1077.6" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1075.1" y="755.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1078.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1075.1" y="739.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1078.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1075.1" y="723.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1078.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.09%)</title><rect x="1076.2" y="803.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.09%)</title><rect x="1076.2" y="787.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.09%)</title><rect x="1076.2" y="771.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1079.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="1076.7" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1076.7" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1079.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1076.7" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1079.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1076.7" y="707.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.05%)</title><rect x="1077.2" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1077.2" y="787.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1077.2" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1080.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (1 samples, 0.05%)</title><rect x="1077.8" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1080.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.05%)</title><rect x="1077.8" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (24 samples, 1.09%)</title><rect x="1078.3" y="835.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.3" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1079.9" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1082.9" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1079.9" y="803.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1082.9" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1079.9" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.9" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1079.9" y="771.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1082.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.54%)</title><rect x="1080.4" y="819.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.50%)</title><rect x="1081.0" y="803.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1084.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.50%)</title><rect x="1081.0" y="787.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.14%)</title><rect x="1083.7" y="771.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.14%)</title><rect x="1085.3" y="771.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1088.3" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.14%)</title><rect x="1085.3" y="755.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1088.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="1085.3" y="739.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1088.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.36%)</title><rect x="1086.9" y="819.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.32%)</title><rect x="1087.4" y="803.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1090.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1090.6" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1093.6" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1090.6" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.6" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1090.6" y="755.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1093.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.09%)</title><rect x="1091.1" y="835.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1094.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="1091.1" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1094.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="1091.1" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="1091.1" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1091.1" y="771.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1094.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1091.1" y="755.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1094.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1091.1" y="739.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1094.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.05%)</title><rect x="1091.7" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.09%)</title><rect x="1092.2" y="835.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.72%)</title><rect x="1093.3" y="835.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.50%)</title><rect x="1094.3" y="819.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.3" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5 samples, 0.23%)</title><rect x="1094.3" y="803.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1095.9" y="787.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1098.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1095.9" y="771.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1098.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1095.9" y="755.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.9" y="766.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="1097.0" y="803.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1100.0" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1097.5" y="787.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1100.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1097.5" y="771.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1100.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1097.5" y="755.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1100.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="1098.1" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.14%)</title><rect x="1098.6" y="803.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.09%)</title><rect x="1098.6" y="787.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.09%)</title><rect x="1098.6" y="771.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.6" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.05%)</title><rect x="1098.6" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1101.6" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="1099.1" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.1" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1099.7" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1102.7" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1099.7" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1102.7" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1099.7" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1102.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.14%)</title><rect x="1100.2" y="819.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.2" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1100.8" y="803.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1103.8" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1100.8" y="787.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1103.8" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1100.8" y="771.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1103.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.14%)</title><rect x="1101.8" y="835.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1104.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.14%)</title><rect x="1101.8" y="819.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1103.4" y="835.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1106.4" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1103.4" y="819.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1106.4" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1103.4" y="803.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1106.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (145 samples, 6.57%)</title><rect x="1104.5" y="851.0" width="77.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.5" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (145 samples, 6.57%)</title><rect x="1104.5" y="835.0" width="77.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.5" y="846.0">one/nio/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="1107.2" y="819.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1110.2" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (17 samples, 0.77%)</title><rect x="1107.7" y="819.0" width="9.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1110.7" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="1107.7" y="803.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1110.7" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.23%)</title><rect x="1108.2" y="803.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1111.2" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="1110.9" y="803.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1113.9" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1111.4" y="803.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1114.4" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.36%)</title><rect x="1112.0" y="803.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1115.0" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="1112.0" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1115.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.09%)</title><rect x="1112.5" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1115.5" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.18%)</title><rect x="1113.6" y="787.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1116.6" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1114.6" y="771.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1117.6" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1114.6" y="755.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1117.6" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1114.6" y="739.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1115.7" y="787.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1118.7" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1115.7" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1118.7" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1115.7" y="755.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1118.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1116.2" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1119.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1116.2" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1119.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1116.2" y="771.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1119.2" y="782.0"></text>
</g>
<g>
<title>__recv (118 samples, 5.34%)</title><rect x="1116.8" y="819.0" width="63.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1119.8" y="830.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (110 samples, 4.98%)</title><rect x="1121.1" y="803.0" width="58.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.1" y="814.0">entry_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.18%)</title><rect x="1121.1" y="787.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1124.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (106 samples, 4.80%)</title><rect x="1123.2" y="787.0" width="56.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1126.2" y="798.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_recvfrom (94 samples, 4.26%)</title><rect x="1129.1" y="771.0" width="50.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.1" y="782.0">__x64..</text>
</g>
<g>
<title>__sys_recvfrom (92 samples, 4.17%)</title><rect x="1129.1" y="755.0" width="49.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.1" y="766.0">__sys..</text>
</g>
<g>
<title>sock_recvmsg (78 samples, 3.53%)</title><rect x="1129.1" y="739.0" width="41.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.1" y="750.0">soc..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.14%)</title><rect x="1129.1" y="723.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1132.1" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (65 samples, 2.94%)</title><rect x="1130.7" y="723.0" width="34.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1133.7" y="734.0">in..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="1130.7" y="707.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1133.7" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.09%)</title><rect x="1131.2" y="707.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1134.2" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (62 samples, 2.81%)</title><rect x="1132.3" y="707.0" width="33.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1135.3" y="718.0">tc..</text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.54%)</title><rect x="1138.7" y="691.0" width="6.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.54%)</title><rect x="1138.7" y="675.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1141.7" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="1138.7" y="659.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1141.7" y="670.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.09%)</title><rect x="1139.2" y="659.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.2" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.27%)</title><rect x="1140.3" y="659.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1143.3" y="670.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.18%)</title><rect x="1141.4" y="643.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1144.4" y="654.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.14%)</title><rect x="1143.5" y="659.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1146.5" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.05%)</title><rect x="1145.1" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1148.1" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.14%)</title><rect x="1145.6" y="691.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1148.6" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.09%)</title><rect x="1147.2" y="691.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1150.2" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="1148.3" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1151.3" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.09%)</title><rect x="1148.8" y="691.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1151.8" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="1149.4" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1152.4" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="1149.9" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1152.9" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.05%)</title><rect x="1149.9" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1152.9" y="686.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="1149.9" y="659.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1152.9" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (21 samples, 0.95%)</title><rect x="1150.5" y="691.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1153.5" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (20 samples, 0.91%)</title><rect x="1151.0" y="675.0" width="10.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1154.0" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.05%)</title><rect x="1154.2" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.2" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.59%)</title><rect x="1154.7" y="659.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.7" y="670.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.32%)</title><rect x="1154.7" y="643.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1157.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.27%)</title><rect x="1155.3" y="627.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.3" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="1158.5" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.5" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.23%)</title><rect x="1159.0" y="643.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.0" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.23%)</title><rect x="1159.0" y="627.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1162.0" y="638.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="1161.7" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="1162.2" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.2" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.18%)</title><rect x="1162.7" y="691.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1165.7" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="1162.7" y="675.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.7" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.14%)</title><rect x="1163.3" y="675.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1166.3" y="686.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.14%)</title><rect x="1163.3" y="659.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1166.3" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="1164.9" y="691.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1167.9" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.45%)</title><rect x="1165.4" y="723.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1168.4" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.09%)</title><rect x="1165.4" y="707.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.4" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (8 samples, 0.36%)</title><rect x="1166.5" y="707.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1169.5" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.36%)</title><rect x="1166.5" y="691.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.5" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.63%)</title><rect x="1170.8" y="739.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1173.8" y="750.0"></text>
</g>
<g>
<title>__fdget (11 samples, 0.50%)</title><rect x="1171.8" y="723.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1174.8" y="734.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.50%)</title><rect x="1171.8" y="707.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1174.8" y="718.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.50%)</title><rect x="1171.8" y="691.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1174.8" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1177.7" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.7" y="734.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.09%)</title><rect x="1178.2" y="755.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.2" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1179.3" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.3" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="1179.3" y="755.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.3" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="1179.3" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1182.3" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="1179.3" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1182.3" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.18%)</title><rect x="1179.8" y="819.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1182.8" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1180.9" y="803.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1180.9" y="787.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1180.9" y="771.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1183.9" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.23%)</title><rect x="1182.0" y="867.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.0" y="878.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.14%)</title><rect x="1182.5" y="851.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1185.5" y="862.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.14%)</title><rect x="1182.5" y="835.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1185.5" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1184.1" y="851.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1187.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1184.1" y="835.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1187.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1184.1" y="819.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1187.1" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.23%)</title><rect x="1184.7" y="867.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1187.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.23%)</title><rect x="1184.7" y="851.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.23%)</title><rect x="1184.7" y="835.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1187.7" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.09%)</title><rect x="1187.3" y="883.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.09%)</title><rect x="1187.3" y="867.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.09%)</title><rect x="1187.3" y="851.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.14%)</title><rect x="1188.4" y="899.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1191.4" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.14%)</title><rect x="1188.4" y="883.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.4" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.14%)</title><rect x="1188.4" y="867.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.4" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1188.4" y="851.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.09%)</title><rect x="1188.4" y="835.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.09%)</title><rect x="1188.4" y="819.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="1188.4" y="803.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.05%)</title><rect x="1188.9" y="803.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.05%)</title><rect x="1188.9" y="787.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.05%)</title><rect x="1189.5" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.05%)</title><rect x="1189.5" y="835.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="1189.5" y="819.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.05%)</title><rect x="1189.5" y="803.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.05%)</title><rect x="1189.5" y="787.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.05%)</title><rect x="1189.5" y="771.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::print() (1 samples, 0.05%)</title><rect x="1189.5" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
<g>
<title>G1GCPhaseTimes::print_post_evacuate_collection_set() const (1 samples, 0.05%)</title><rect x="1189.5" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.5" y="750.0"></text>
</g>
<g>
<title>ReferenceProcessorPhaseTimes::print_all_references(unsigned int, bool) const (1 samples, 0.05%)</title><rect x="1189.5" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.5" y="734.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.05%)</title><rect x="1189.5" y="707.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="718.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.05%)</title><rect x="1189.5" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="702.0"></text>
</g>
<g>
<title>LogStream::write(char const*, unsigned long) (1 samples, 0.05%)</title><rect x="1189.5" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="686.0"></text>
</g>
<g>
<title>LogTargetHandle::print(char const*, ...) (1 samples, 0.05%)</title><rect x="1189.5" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.5" y="670.0"></text>
</g>
<g>
<title>LogTagSet::vwrite(LogLevel::type, char const*, __va_list_tag*) (1 samples, 0.05%)</title><rect x="1189.5" y="643.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.5" y="654.0"></text>
</g>
<g>
<title>LogTagSet::label(char*, unsigned long, char const*) const (1 samples, 0.05%)</title><rect x="1189.5" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.5" y="638.0"></text>
</g>
<g>
<title>jio_snprintf (1 samples, 0.05%)</title><rect x="1189.5" y="611.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1192.5" y="622.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.05%)</title><rect x="1189.5" y="595.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1192.5" y="606.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
</g>
</svg>
