<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (1,449 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[no_Java_frame] (16 samples, 1.10%)</title><rect x="10.0" y="931.0" width="13.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.07%)</title><rect x="23.0" y="931.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="26.0" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="23.0" y="915.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.07%)</title><rect x="23.0" y="899.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.0" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.07%)</title><rect x="23.0" y="883.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.0" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.07%)</title><rect x="23.0" y="867.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="23.8" y="931.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="26.8" y="942.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="23.8" y="915.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="26.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="23.8" y="899.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="23.8" y="883.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.8" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="23.8" y="867.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="26.8" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.07%)</title><rect x="23.8" y="851.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="26.8" y="862.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.07%)</title><rect x="23.8" y="835.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="26.8" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.07%)</title><rect x="23.8" y="819.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.8" y="830.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="23.8" y="803.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.8" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="23.8" y="787.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.8" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="23.8" y="771.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.8" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.07%)</title><rect x="24.7" y="931.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="27.7" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.07%)</title><rect x="24.7" y="915.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="27.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (752 samples, 51.90%)</title><rect x="25.5" y="931.0" width="612.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.5" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (752 samples, 51.90%)</title><rect x="25.5" y="915.0" width="612.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.5" y="926.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (752 samples, 51.90%)</title><rect x="25.5" y="899.0" width="612.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.5" y="910.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (617 samples, 42.58%)</title><rect x="25.5" y="883.0" width="502.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.5" y="894.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.07%)</title><rect x="25.5" y="867.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.07%)</title><rect x="25.5" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (173 samples, 11.94%)</title><rect x="26.3" y="867.0" width="140.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.3" y="878.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (173 samples, 11.94%)</title><rect x="26.3" y="851.0" width="140.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.3" y="862.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (173 samples, 11.94%)</title><rect x="26.3" y="835.0" width="140.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.3" y="846.0">java/util/concurre..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (173 samples, 11.94%)</title><rect x="26.3" y="819.0" width="140.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.3" y="830.0">jdk/internal/misc/..</text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.48%)</title><rect x="71.9" y="803.0" width="5.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="74.9" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.07%)</title><rect x="71.9" y="787.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="74.9" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.14%)</title><rect x="72.7" y="787.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="75.7" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.14%)</title><rect x="74.3" y="787.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="77.3" y="798.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.07%)</title><rect x="76.0" y="787.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="79.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.07%)</title><rect x="76.8" y="787.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="79.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="76.8" y="771.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="79.8" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="76.8" y="755.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.8" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="76.8" y="739.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (109 samples, 7.52%)</title><rect x="77.6" y="803.0" width="88.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="80.6" y="814.0">__pthread_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 6.90%)</title><rect x="84.1" y="787.0" width="81.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.1" y="798.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 6.90%)</title><rect x="84.1" y="771.0" width="81.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="87.1" y="782.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_futex (72 samples, 4.97%)</title><rect x="88.2" y="755.0" width="58.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.2" y="766.0">__x64_..</text>
</g>
<g>
<title>do_futex (72 samples, 4.97%)</title><rect x="88.2" y="739.0" width="58.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.2" y="750.0">do_futex</text>
</g>
<g>
<title>futex_wake (72 samples, 4.97%)</title><rect x="88.2" y="723.0" width="58.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.2" y="734.0">futex_..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.07%)</title><rect x="92.2" y="707.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="95.2" y="718.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.07%)</title><rect x="92.2" y="691.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="95.2" y="702.0"></text>
</g>
<g>
<title>wake_up_q (66 samples, 4.55%)</title><rect x="93.1" y="707.0" width="53.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="96.1" y="718.0">wake_..</text>
</g>
<g>
<title>try_to_wake_up (66 samples, 4.55%)</title><rect x="93.1" y="691.0" width="53.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="96.1" y="702.0">try_t..</text>
</g>
<g>
<title>__lock_text_start (66 samples, 4.55%)</title><rect x="93.1" y="675.0" width="53.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="96.1" y="686.0">__loc..</text>
</g>
<g>
<title>exit_to_usermode_loop (23 samples, 1.59%)</title><rect x="146.8" y="755.0" width="18.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="149.8" y="766.0"></text>
</g>
<g>
<title>schedule (22 samples, 1.52%)</title><rect x="147.6" y="739.0" width="17.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="150.6" y="750.0"></text>
</g>
<g>
<title>__schedule (22 samples, 1.52%)</title><rect x="147.6" y="723.0" width="17.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="150.6" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (21 samples, 1.45%)</title><rect x="148.4" y="707.0" width="17.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.4" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="165.5" y="787.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="165.5" y="771.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="168.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="165.5" y="755.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.5" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="166.4" y="803.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="169.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$65/94013272.call (179 samples, 12.35%)</title><rect x="167.2" y="867.0" width="145.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.2" y="878.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$processRequest$1 (179 samples, 12.35%)</title><rect x="167.2" y="851.0" width="145.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.2" y="862.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.14%)</title><rect x="168.0" y="835.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="171.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.get (168 samples, 11.59%)</title><rect x="169.6" y="835.0" width="136.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.6" y="846.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (6 samples, 0.41%)</title><rect x="169.6" y="819.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.6" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.35%)</title><rect x="170.4" y="803.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.28%)</title><rect x="171.2" y="787.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.28%)</title><rect x="171.2" y="771.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.2" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.28%)</title><rect x="171.2" y="755.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.28%)</title><rect x="171.2" y="739.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="174.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.28%)</title><rect x="171.2" y="723.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (162 samples, 11.18%)</title><rect x="174.5" y="819.0" width="131.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.5" y="830.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (161 samples, 11.11%)</title><rect x="174.5" y="803.0" width="131.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.5" y="814.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (161 samples, 11.11%)</title><rect x="174.5" y="787.0" width="131.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.5" y="798.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (100 samples, 6.90%)</title><rect x="220.9" y="771.0" width="81.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="223.9" y="782.0">Java_org_..</text>
</g>
<g>
<title>/tmp/librocksdbjni14948981377646969113.so (2 samples, 0.14%)</title><rect x="222.5" y="755.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="225.5" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.14%)</title><rect x="224.2" y="755.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="227.2" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="225.8" y="755.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="228.8" y="766.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.14%)</title><rect x="226.6" y="755.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="229.6" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (90 samples, 6.21%)</title><rect x="228.2" y="755.0" width="73.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="231.2" y="766.0">rocksdb_..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="228.2" y="739.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="231.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="228.2" y="723.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="231.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="228.2" y="707.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="231.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="228.2" y="691.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="231.2" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.07%)</title><rect x="229.1" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="232.1" y="750.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned (1 samples, 0.07%)</title><rect x="229.9" y="739.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="232.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="229.9" y="723.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="229.9" y="707.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="229.9" y="691.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="232.9" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="230.7" y="739.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="233.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (70 samples, 4.83%)</title><rect x="231.5" y="739.0" width="57.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="234.5" y="750.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (70 samples, 4.83%)</title><rect x="231.5" y="723.0" width="57.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="234.5" y="734.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (68 samples, 4.69%)</title><rect x="233.1" y="707.0" width="55.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="236.1" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::string*) (67 samples, 4.62%)</title><rect x="233.1" y="691.0" width="54.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="236.1" y="702.0">rocks..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="233.1" y="675.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="236.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (59 samples, 4.07%)</title><rect x="234.8" y="675.0" width="48.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="237.8" y="686.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="238.0" y="659.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="241.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (8 samples, 0.55%)</title><rect x="238.8" y="659.0" width="6.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="241.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.07%)</title><rect x="241.3" y="643.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="244.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.21%)</title><rect x="242.1" y="643.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="245.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.14%)</title><rect x="242.9" y="627.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="245.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.07%)</title><rect x="244.5" y="643.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="247.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.07%)</title><rect x="244.5" y="627.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="247.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.21%)</title><rect x="245.3" y="659.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="248.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.21%)</title><rect x="247.8" y="659.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="250.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.14%)</title><rect x="247.8" y="643.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="250.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.14%)</title><rect x="247.8" y="627.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="250.8" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="247.8" y="611.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="250.8" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="248.6" y="611.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="251.6" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="248.6" y="595.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="251.6" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="248.6" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="251.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.07%)</title><rect x="249.4" y="643.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="252.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.07%)</title><rect x="250.2" y="659.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="253.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.07%)</title><rect x="251.0" y="659.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="254.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (36 samples, 2.48%)</title><rect x="251.9" y="659.0" width="29.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="254.9" y="670.0">ro..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="251.9" y="643.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="254.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (35 samples, 2.42%)</title><rect x="252.7" y="643.0" width="28.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="255.7" y="654.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni14948981377646969113.so (33 samples, 2.28%)</title><rect x="254.3" y="627.0" width="26.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="257.3" y="638.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni14948981377646969113.so (1 samples, 0.07%)</title><rect x="254.3" y="611.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="257.3" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="254.3" y="595.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="257.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="254.3" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="257.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="254.3" y="563.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="257.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (28 samples, 1.93%)</title><rect x="255.1" y="611.0" width="22.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="258.1" y="622.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni14948981377646969113.so (3 samples, 0.21%)</title><rect x="266.5" y="595.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="269.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.21%)</title><rect x="269.0" y="595.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="272.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.48%)</title><rect x="271.4" y="595.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="274.4" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="273.9" y="579.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="276.9" y="590.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="274.7" y="579.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="277.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="275.5" y="579.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="278.5" y="590.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.07%)</title><rect x="276.3" y="579.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="279.3" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="277.1" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="280.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="277.1" y="579.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="280.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="277.1" y="563.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="280.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="277.9" y="611.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="280.9" y="622.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.07%)</title><rect x="278.7" y="611.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="281.7" y="622.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.14%)</title><rect x="279.6" y="611.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="282.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::GetFromTable(rocksdb::LookupKey const&amp;, unsigned long, bool, rocksdb::ReadCallback*, bool*, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*) (1 samples, 0.07%)</title><rect x="281.2" y="659.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="284.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="282.0" y="659.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="285.0" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="282.0" y="643.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="285.0" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="282.0" y="627.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="285.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) [clone .plt] (1 samples, 0.07%)</title><rect x="282.8" y="675.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="285.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.07%)</title><rect x="283.6" y="675.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="286.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() [clone .plt] (1 samples, 0.07%)</title><rect x="284.4" y="675.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="287.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.21%)</title><rect x="285.3" y="675.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="288.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions&amp;) (1 samples, 0.07%)</title><rect x="287.7" y="691.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="290.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.07%)</title><rect x="288.5" y="739.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="291.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (15 samples, 1.04%)</title><rect x="289.3" y="739.0" width="12.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="292.3" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (14 samples, 0.97%)</title><rect x="289.3" y="723.0" width="11.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="292.3" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.21%)</title><rect x="291.0" y="707.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="294.0" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (2 samples, 0.14%)</title><rect x="293.4" y="707.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="296.4" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.48%)</title><rect x="295.0" y="707.0" width="5.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="298.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.28%)</title><rect x="295.8" y="691.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="298.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.14%)</title><rect x="295.8" y="675.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="298.8" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.07%)</title><rect x="295.8" y="659.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="298.8" y="670.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.07%)</title><rect x="296.7" y="659.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="299.7" y="670.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.14%)</title><rect x="297.5" y="675.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="300.5" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.14%)</title><rect x="299.1" y="691.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="302.1" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="300.7" y="723.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="303.7" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="300.7" y="707.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="303.7" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.07%)</title><rect x="301.5" y="755.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="304.5" y="766.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.07%)</title><rect x="302.4" y="771.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="305.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.14%)</title><rect x="303.2" y="771.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="306.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="304.0" y="755.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="304.0" y="739.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="304.0" y="723.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="307.0" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.07%)</title><rect x="304.8" y="771.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="307.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (1 samples, 0.07%)</title><rect x="305.6" y="803.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (1 samples, 0.07%)</title><rect x="305.6" y="787.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.put (8 samples, 0.55%)</title><rect x="306.4" y="835.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="309.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.14%)</title><rect x="306.4" y="819.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.4" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.14%)</title><rect x="306.4" y="803.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.4" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="306.4" y="787.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="309.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.14%)</title><rect x="306.4" y="771.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.4" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="306.4" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.4" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="306.4" y="739.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="309.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="306.4" y="723.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="309.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="306.4" y="707.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="309.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$66/30703227.call (1 samples, 0.07%)</title><rect x="307.2" y="755.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.07%)</title><rect x="308.1" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.upsert (5 samples, 0.35%)</title><rect x="308.9" y="819.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (5 samples, 0.35%)</title><rect x="308.9" y="803.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (5 samples, 0.35%)</title><rect x="308.9" y="787.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="311.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.14%)</title><rect x="310.5" y="771.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.14%)</title><rect x="310.5" y="755.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="312.1" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$66/30703227.call (264 samples, 18.22%)</title><rect x="312.9" y="867.0" width="215.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.9" y="878.0">ru/mail/polis/service/ivanov..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$forwardRequestFuture$0 (264 samples, 18.22%)</title><rect x="312.9" y="851.0" width="215.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="315.9" y="862.0">ru/mail/polis/service/ivanov..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.forwardRequest (264 samples, 18.22%)</title><rect x="312.9" y="835.0" width="215.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.9" y="846.0">ru/mail/polis/service/ivanov..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="313.8" y="819.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.07%)</title><rect x="313.8" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.07%)</title><rect x="313.8" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (259 samples, 17.87%)</title><rect x="314.6" y="819.0" width="210.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.6" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (259 samples, 17.87%)</title><rect x="314.6" y="803.0" width="210.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.6" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.21%)</title><rect x="314.6" y="787.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.21%)</title><rect x="314.6" y="771.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="316.2" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.07%)</title><rect x="316.2" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="316.2" y="723.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="316.2" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="316.2" y="691.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="319.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (45 samples, 3.11%)</title><rect x="317.0" y="787.0" width="36.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="320.0" y="798.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="317.0" y="771.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="320.0" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="317.0" y="755.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="320.0" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="317.0" y="739.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="320.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="317.0" y="723.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="320.0" y="734.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="317.0" y="707.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="320.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="317.0" y="691.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="320.0" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.07%)</title><rect x="317.0" y="675.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="320.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="317.0" y="659.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.0" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="317.0" y="643.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="320.0" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="317.0" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.0" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (44 samples, 3.04%)</title><rect x="317.8" y="771.0" width="35.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.8" y="782.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.28%)</title><rect x="322.7" y="755.0" width="3.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="325.7" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="322.7" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="325.7" y="750.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned (1 samples, 0.07%)</title><rect x="323.5" y="739.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="326.5" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.14%)</title><rect x="324.3" y="739.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="327.3" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.14%)</title><rect x="324.3" y="723.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="327.3" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.14%)</title><rect x="326.0" y="755.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="329.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="326.8" y="739.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="329.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="326.8" y="723.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="329.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="326.8" y="707.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="329.8" y="718.0"></text>
</g>
<g>
<title>__libc_recv (30 samples, 2.07%)</title><rect x="327.6" y="755.0" width="24.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="330.6" y="766.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 1.93%)</title><rect x="328.4" y="739.0" width="22.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="331.4" y="750.0">e..</text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.93%)</title><rect x="328.4" y="723.0" width="22.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="331.4" y="734.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (28 samples, 1.93%)</title><rect x="328.4" y="707.0" width="22.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="331.4" y="718.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (28 samples, 1.93%)</title><rect x="328.4" y="691.0" width="22.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="331.4" y="702.0">_..</text>
</g>
<g>
<title>sock_recvmsg (25 samples, 1.73%)</title><rect x="328.4" y="675.0" width="20.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="331.4" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (24 samples, 1.66%)</title><rect x="328.4" y="659.0" width="19.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="331.4" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.07%)</title><rect x="328.4" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="331.4" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (23 samples, 1.59%)</title><rect x="329.2" y="643.0" width="18.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.2" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.07%)</title><rect x="329.2" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.2" y="638.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.07%)</title><rect x="329.2" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.2" y="622.0"></text>
</g>
<g>
<title>sk_wait_data (18 samples, 1.24%)</title><rect x="330.0" y="627.0" width="14.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="333.0" y="638.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.07%)</title><rect x="330.0" y="611.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="333.0" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.07%)</title><rect x="330.0" y="595.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="333.0" y="606.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.07%)</title><rect x="330.9" y="611.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="333.9" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.07%)</title><rect x="330.9" y="595.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.9" y="606.0"></text>
</g>
<g>
<title>wait_woken (16 samples, 1.10%)</title><rect x="331.7" y="611.0" width="13.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="334.7" y="622.0"></text>
</g>
<g>
<title>schedule_timeout (16 samples, 1.10%)</title><rect x="331.7" y="595.0" width="13.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="334.7" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.07%)</title><rect x="332.5" y="579.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="335.5" y="590.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.97%)</title><rect x="333.3" y="579.0" width="11.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.3" y="590.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.90%)</title><rect x="334.1" y="563.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="337.1" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.90%)</title><rect x="334.1" y="547.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="337.1" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.07%)</title><rect x="344.7" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="347.7" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.07%)</title><rect x="344.7" y="611.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.7" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.21%)</title><rect x="345.5" y="627.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="348.5" y="638.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.21%)</title><rect x="345.5" y="611.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.5" y="622.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (3 samples, 0.21%)</title><rect x="345.5" y="595.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="348.5" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.21%)</title><rect x="345.5" y="579.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.5" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.21%)</title><rect x="345.5" y="563.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.5" y="574.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.21%)</title><rect x="345.5" y="547.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="348.5" y="558.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.21%)</title><rect x="345.5" y="531.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.5" y="542.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.21%)</title><rect x="345.5" y="515.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="348.5" y="526.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.21%)</title><rect x="345.5" y="499.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="348.5" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.21%)</title><rect x="345.5" y="483.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="348.5" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.14%)</title><rect x="346.3" y="467.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="349.3" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.14%)</title><rect x="346.3" y="451.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.3" y="462.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.14%)</title><rect x="346.3" y="435.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.3" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.14%)</title><rect x="346.3" y="419.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="349.3" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.14%)</title><rect x="346.3" y="403.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="349.3" y="414.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.14%)</title><rect x="346.3" y="387.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="349.3" y="398.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.14%)</title><rect x="346.3" y="371.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="349.3" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.14%)</title><rect x="346.3" y="355.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="349.3" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.14%)</title><rect x="346.3" y="339.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.3" y="350.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.14%)</title><rect x="346.3" y="323.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="349.3" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.14%)</title><rect x="346.3" y="307.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.3" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.14%)</title><rect x="346.3" y="291.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.3" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.14%)</title><rect x="346.3" y="275.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.3" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.14%)</title><rect x="346.3" y="259.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="349.3" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.14%)</title><rect x="346.3" y="243.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.3" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.07%)</title><rect x="346.3" y="227.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.07%)</title><rect x="347.1" y="227.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="350.1" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.07%)</title><rect x="347.1" y="211.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="350.1" y="222.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.07%)</title><rect x="347.1" y="195.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.1" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.07%)</title><rect x="347.1" y="179.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.1" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.07%)</title><rect x="347.1" y="163.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="350.1" y="174.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.07%)</title><rect x="347.1" y="147.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.1" y="158.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.07%)</title><rect x="347.1" y="131.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="350.1" y="142.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.07%)</title><rect x="348.0" y="659.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.0" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.21%)</title><rect x="348.8" y="675.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.8" y="686.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="349.6" y="659.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="352.6" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="349.6" y="643.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.6" y="654.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="349.6" y="627.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="350.4" y="659.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="351.2" y="739.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="354.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="351.2" y="723.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="354.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="351.2" y="707.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.2" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="352.0" y="755.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="355.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="352.8" y="755.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="355.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="352.8" y="739.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="352.8" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.41%)</title><rect x="353.7" y="787.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.21%)</title><rect x="353.7" y="771.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.21%)</title><rect x="353.7" y="755.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="356.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.21%)</title><rect x="353.7" y="739.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="354.5" y="723.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="357.5" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="354.5" y="707.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="357.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="354.5" y="691.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="357.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="354.5" y="675.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="357.5" y="686.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="354.5" y="659.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="357.5" y="670.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.07%)</title><rect x="354.5" y="643.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="357.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="354.5" y="627.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="357.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="354.5" y="611.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="357.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="354.5" y="595.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.5" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="355.3" y="723.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="358.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="355.3" y="707.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="358.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="355.3" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.07%)</title><rect x="356.1" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.07%)</title><rect x="356.9" y="771.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.07%)</title><rect x="357.7" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="357.7" y="755.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.35%)</title><rect x="358.5" y="787.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="358.5" y="771.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="358.5" y="755.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="358.5" y="739.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="358.5" y="723.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="361.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.21%)</title><rect x="359.4" y="771.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.21%)</title><rect x="359.4" y="755.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.21%)</title><rect x="359.4" y="739.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.21%)</title><rect x="359.4" y="723.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="359.4" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.07%)</title><rect x="359.4" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.07%)</title><rect x="359.4" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.07%)</title><rect x="359.4" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.14%)</title><rect x="360.2" y="707.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="361.0" y="691.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.0" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="361.0" y="675.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="364.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="361.0" y="659.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.0" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="361.8" y="771.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="364.8" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="361.8" y="755.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.8" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="361.8" y="739.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="364.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (30 samples, 2.07%)</title><rect x="362.6" y="787.0" width="24.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.6" y="798.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.07%)</title><rect x="365.1" y="771.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="368.1" y="782.0"></text>
</g>
<g>
<title>__GI___setsockopt (26 samples, 1.79%)</title><rect x="365.9" y="771.0" width="21.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="368.9" y="782.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 1.38%)</title><rect x="370.8" y="755.0" width="16.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="373.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (3 samples, 0.21%)</title><rect x="370.8" y="739.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="373.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 1.17%)</title><rect x="373.2" y="739.0" width="13.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="376.2" y="750.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (13 samples, 0.90%)</title><rect x="376.5" y="723.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.5" y="734.0"></text>
</g>
<g>
<title>__sys_setsockopt (13 samples, 0.90%)</title><rect x="376.5" y="707.0" width="10.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="379.5" y="718.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.07%)</title><rect x="376.5" y="691.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="379.5" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.07%)</title><rect x="377.3" y="691.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="380.3" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.14%)</title><rect x="378.1" y="691.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.1" y="702.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 0.35%)</title><rect x="379.7" y="691.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="382.7" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.07%)</title><rect x="379.7" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.7" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.07%)</title><rect x="380.5" y="675.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.07%)</title><rect x="380.5" y="659.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="383.5" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.14%)</title><rect x="381.3" y="675.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="384.3" y="686.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.07%)</title><rect x="382.2" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="385.2" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.07%)</title><rect x="383.0" y="675.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.0" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.28%)</title><rect x="383.8" y="691.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="386.8" y="702.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="383.8" y="675.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.8" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="383.8" y="659.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="386.8" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="383.8" y="643.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="386.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.21%)</title><rect x="384.6" y="675.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (167 samples, 11.53%)</title><rect x="387.0" y="787.0" width="136.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.0" y="798.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (4 samples, 0.28%)</title><rect x="408.2" y="771.0" width="3.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="411.2" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.07%)</title><rect x="408.2" y="755.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="411.2" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="408.2" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="411.2" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="408.2" y="723.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="411.2" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="408.2" y="707.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.2" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.21%)</title><rect x="409.0" y="755.0" width="2.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="412.0" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.14%)</title><rect x="409.8" y="739.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="412.8" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.07%)</title><rect x="411.5" y="771.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="414.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="411.5" y="755.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="414.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="411.5" y="739.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="414.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="411.5" y="723.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="414.5" y="734.0"></text>
</g>
<g>
<title>__send (136 samples, 9.39%)</title><rect x="412.3" y="771.0" width="110.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="415.3" y="782.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 9.18%)</title><rect x="413.9" y="755.0" width="108.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="416.9" y="766.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (133 samples, 9.18%)</title><rect x="413.9" y="739.0" width="108.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="416.9" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (112 samples, 7.73%)</title><rect x="416.4" y="723.0" width="91.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="419.4" y="734.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (111 samples, 7.66%)</title><rect x="416.4" y="707.0" width="90.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.4" y="718.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (111 samples, 7.66%)</title><rect x="416.4" y="691.0" width="90.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="419.4" y="702.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (109 samples, 7.52%)</title><rect x="418.0" y="675.0" width="88.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="421.0" y="686.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (108 samples, 7.45%)</title><rect x="418.8" y="659.0" width="88.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="421.8" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_push (2 samples, 0.14%)</title><rect x="418.8" y="643.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="421.8" y="654.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.14%)</title><rect x="420.4" y="643.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.4" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (104 samples, 7.18%)</title><rect x="422.1" y="643.0" width="84.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="425.1" y="654.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.07%)</title><rect x="423.7" y="627.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="426.7" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.07%)</title><rect x="424.5" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="427.5" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.07%)</title><rect x="424.5" y="611.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="427.5" y="622.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.07%)</title><rect x="425.3" y="627.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.3" y="638.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.07%)</title><rect x="425.3" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="428.3" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.69%)</title><rect x="426.1" y="627.0" width="8.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="429.1" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.69%)</title><rect x="426.1" y="611.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="429.1" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.07%)</title><rect x="426.1" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.1" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.21%)</title><rect x="426.9" y="595.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="429.9" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.14%)</title><rect x="426.9" y="579.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="429.9" y="590.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.07%)</title><rect x="428.6" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="431.6" y="590.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.07%)</title><rect x="429.4" y="595.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.4" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.21%)</title><rect x="430.2" y="595.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="433.2" y="606.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.07%)</title><rect x="432.7" y="595.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="435.7" y="606.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.07%)</title><rect x="432.7" y="579.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="435.7" y="590.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.07%)</title><rect x="433.5" y="595.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="436.5" y="606.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.07%)</title><rect x="434.3" y="627.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="437.3" y="638.0"></text>
</g>
<g>
<title>tcp_push (85 samples, 5.87%)</title><rect x="435.1" y="627.0" width="69.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.1" y="638.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (85 samples, 5.87%)</title><rect x="435.1" y="611.0" width="69.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="438.1" y="622.0">__tcp_p..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.07%)</title><rect x="435.1" y="595.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.1" y="606.0"></text>
</g>
<g>
<title>tcp_write_xmit (84 samples, 5.80%)</title><rect x="435.9" y="595.0" width="68.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.9" y="606.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (77 samples, 5.31%)</title><rect x="436.7" y="579.0" width="62.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.7" y="590.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (73 samples, 5.04%)</title><rect x="439.2" y="563.0" width="59.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="442.2" y="574.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (73 samples, 5.04%)</title><rect x="439.2" y="547.0" width="59.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.2" y="558.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.07%)</title><rect x="439.2" y="531.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.2" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.07%)</title><rect x="439.2" y="515.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.2" y="526.0"></text>
</g>
<g>
<title>ip_local_out (72 samples, 4.97%)</title><rect x="440.0" y="531.0" width="58.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="443.0" y="542.0">ip_loc..</text>
</g>
<g>
<title>ip_output (72 samples, 4.97%)</title><rect x="440.0" y="515.0" width="58.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="443.0" y="526.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (71 samples, 4.90%)</title><rect x="440.8" y="499.0" width="57.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.8" y="510.0">ip_fin..</text>
</g>
<g>
<title>__ip_finish_output (70 samples, 4.83%)</title><rect x="440.8" y="483.0" width="57.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="443.8" y="494.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (69 samples, 4.76%)</title><rect x="441.6" y="467.0" width="56.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="444.6" y="478.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (63 samples, 4.35%)</title><rect x="441.6" y="451.0" width="51.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.6" y="462.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (63 samples, 4.35%)</title><rect x="441.6" y="435.0" width="51.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.6" y="446.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (63 samples, 4.35%)</title><rect x="441.6" y="419.0" width="51.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.6" y="430.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (63 samples, 4.35%)</title><rect x="441.6" y="403.0" width="51.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.6" y="414.0">__sof..</text>
</g>
<g>
<title>net_rx_action (61 samples, 4.21%)</title><rect x="443.2" y="387.0" width="49.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="446.2" y="398.0">net_r..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.07%)</title><rect x="443.2" y="371.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="446.2" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.07%)</title><rect x="444.1" y="371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="447.1" y="382.0"></text>
</g>
<g>
<title>process_backlog (59 samples, 4.07%)</title><rect x="444.9" y="371.0" width="48.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="447.9" y="382.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (59 samples, 4.07%)</title><rect x="444.9" y="355.0" width="48.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="447.9" y="366.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (58 samples, 4.00%)</title><rect x="444.9" y="339.0" width="47.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.9" y="350.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.07%)</title><rect x="444.9" y="323.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="447.9" y="334.0"></text>
</g>
<g>
<title>ip_rcv (56 samples, 3.86%)</title><rect x="445.7" y="323.0" width="45.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.7" y="334.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (56 samples, 3.86%)</title><rect x="445.7" y="307.0" width="45.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="448.7" y="318.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (55 samples, 3.80%)</title><rect x="445.7" y="291.0" width="44.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.7" y="302.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (55 samples, 3.80%)</title><rect x="445.7" y="275.0" width="44.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.7" y="286.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (55 samples, 3.80%)</title><rect x="445.7" y="259.0" width="44.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.7" y="270.0">ip_p..</text>
</g>
<g>
<title>sock_put (1 samples, 0.07%)</title><rect x="445.7" y="243.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.7" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (54 samples, 3.73%)</title><rect x="446.5" y="243.0" width="44.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="449.5" y="254.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.07%)</title><rect x="446.5" y="227.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.5" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.07%)</title><rect x="447.3" y="227.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="450.3" y="238.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.07%)</title><rect x="447.3" y="211.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="450.3" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.21%)</title><rect x="448.1" y="227.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="451.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (49 samples, 3.38%)</title><rect x="450.6" y="227.0" width="39.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.6" y="238.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 3.38%)</title><rect x="450.6" y="211.0" width="39.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="453.6" y="222.0">tcp..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.07%)</title><rect x="451.4" y="195.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="454.4" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (40 samples, 2.76%)</title><rect x="452.2" y="195.0" width="32.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.2" y="206.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.07%)</title><rect x="452.2" y="179.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="455.2" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (39 samples, 2.69%)</title><rect x="453.0" y="179.0" width="31.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="456.0" y="190.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (39 samples, 2.69%)</title><rect x="453.0" y="163.0" width="31.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="456.0" y="174.0">__..</text>
</g>
<g>
<title>__lock_text_start (39 samples, 2.69%)</title><rect x="453.0" y="147.0" width="31.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.0" y="158.0">__..</text>
</g>
<g>
<title>tcp_ack (7 samples, 0.48%)</title><rect x="484.8" y="195.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="487.8" y="206.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.14%)</title><rect x="485.6" y="179.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="488.6" y="190.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.07%)</title><rect x="487.2" y="179.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="490.2" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.21%)</title><rect x="488.0" y="179.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.0" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.21%)</title><rect x="488.0" y="163.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="491.0" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.07%)</title><rect x="488.0" y="147.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="491.0" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="488.0" y="131.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.0" y="142.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.14%)</title><rect x="488.8" y="147.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="491.8" y="158.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.14%)</title><rect x="488.8" y="131.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="491.8" y="142.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.07%)</title><rect x="489.7" y="115.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.7" y="126.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="489.7" y="99.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="492.7" y="110.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.07%)</title><rect x="490.5" y="291.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.07%)</title><rect x="491.3" y="323.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="494.3" y="334.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.07%)</title><rect x="492.1" y="339.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="495.1" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.41%)</title><rect x="492.9" y="451.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="495.9" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.41%)</title><rect x="492.9" y="435.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="495.9" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.41%)</title><rect x="492.9" y="419.0" width="4.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.9" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.41%)</title><rect x="492.9" y="403.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.9" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.07%)</title><rect x="493.7" y="387.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.7" y="398.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.28%)</title><rect x="494.5" y="387.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.5" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.28%)</title><rect x="494.5" y="371.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.5" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.28%)</title><rect x="494.5" y="355.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="497.5" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.07%)</title><rect x="497.8" y="483.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="500.8" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.07%)</title><rect x="498.6" y="563.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="501.6" y="574.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.07%)</title><rect x="498.6" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.6" y="558.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.07%)</title><rect x="499.4" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="502.4" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.14%)</title><rect x="500.2" y="579.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="503.2" y="590.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.14%)</title><rect x="501.9" y="579.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="504.9" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.07%)</title><rect x="502.7" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="505.7" y="574.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.07%)</title><rect x="503.5" y="579.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="506.5" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.21%)</title><rect x="504.3" y="627.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="507.3" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.07%)</title><rect x="504.3" y="611.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="507.3" y="622.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.14%)</title><rect x="505.1" y="611.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="508.1" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.07%)</title><rect x="506.8" y="707.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="509.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (18 samples, 1.24%)</title><rect x="507.6" y="723.0" width="14.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="510.6" y="734.0"></text>
</g>
<g>
<title>schedule (18 samples, 1.24%)</title><rect x="507.6" y="707.0" width="14.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.6" y="718.0"></text>
</g>
<g>
<title>__schedule (18 samples, 1.24%)</title><rect x="507.6" y="691.0" width="14.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="510.6" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 1.24%)</title><rect x="507.6" y="675.0" width="14.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="510.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="522.2" y="755.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="522.2" y="739.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="522.2" y="723.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="525.2" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.14%)</title><rect x="523.0" y="787.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.0" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (2 samples, 0.14%)</title><rect x="523.0" y="771.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="526.0" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (2 samples, 0.14%)</title><rect x="523.0" y="755.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="523.9" y="739.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="526.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="523.9" y="723.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="523.9" y="707.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.9" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (1 samples, 0.07%)</title><rect x="524.7" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.07%)</title><rect x="524.7" y="771.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.getSpecialRequest (3 samples, 0.21%)</title><rect x="525.5" y="819.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.14%)</title><rect x="525.5" y="803.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (2 samples, 0.14%)</title><rect x="525.5" y="787.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.5" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.14%)</title><rect x="525.5" y="771.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.07%)</title><rect x="525.5" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.5" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="525.5" y="739.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="525.5" y="723.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="528.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="525.5" y="707.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="528.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.07%)</title><rect x="526.3" y="755.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="527.1" y="803.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="527.1" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.07%)</title><rect x="527.1" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (135 samples, 9.32%)</title><rect x="527.9" y="883.0" width="110.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.9" y="894.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (130 samples, 8.97%)</title><rect x="528.7" y="867.0" width="105.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.7" y="878.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (125 samples, 8.63%)</title><rect x="529.6" y="851.0" width="101.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.6" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.07%)</title><rect x="530.4" y="835.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.14%)</title><rect x="531.2" y="835.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.2" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="532.0" y="819.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="535.0" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="532.0" y="803.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="535.0" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="532.0" y="787.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="535.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.14%)</title><rect x="532.8" y="835.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.07%)</title><rect x="533.6" y="819.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (119 samples, 8.21%)</title><rect x="534.4" y="835.0" width="97.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.4" y="846.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (119 samples, 8.21%)</title><rect x="534.4" y="819.0" width="97.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.4" y="830.0">jdk/interna..</text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.48%)</title><rect x="578.4" y="803.0" width="5.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="581.4" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.28%)</title><rect x="578.4" y="787.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="581.4" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.07%)</title><rect x="579.2" y="771.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="582.2" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.14%)</title><rect x="580.0" y="771.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="583.0" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.21%)</title><rect x="581.7" y="787.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="584.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.14%)</title><rect x="582.5" y="771.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="585.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.14%)</title><rect x="582.5" y="755.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.14%)</title><rect x="582.5" y="739.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.5" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.14%)</title><rect x="582.5" y="723.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.07%)</title><rect x="582.5" y="707.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="585.5" y="718.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.07%)</title><rect x="582.5" y="691.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="585.5" y="702.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.07%)</title><rect x="583.3" y="707.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 3.93%)</title><rect x="584.1" y="803.0" width="46.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="587.1" y="814.0">[unk..</text>
</g>
<g>
<title>__pthread_cond_wait (54 samples, 3.73%)</title><rect x="584.1" y="787.0" width="44.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="587.1" y="798.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 3.52%)</title><rect x="586.6" y="771.0" width="41.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="589.6" y="782.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (51 samples, 3.52%)</title><rect x="586.6" y="755.0" width="41.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="589.6" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (49 samples, 3.38%)</title><rect x="588.2" y="739.0" width="39.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="591.2" y="750.0">__x..</text>
</g>
<g>
<title>do_futex (49 samples, 3.38%)</title><rect x="588.2" y="723.0" width="39.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.2" y="734.0">do_..</text>
</g>
<g>
<title>futex_wait (49 samples, 3.38%)</title><rect x="588.2" y="707.0" width="39.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="591.2" y="718.0">fut..</text>
</g>
<g>
<title>futex_wait_queue_me (44 samples, 3.04%)</title><rect x="588.2" y="691.0" width="35.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="591.2" y="702.0">fut..</text>
</g>
<g>
<title>schedule (44 samples, 3.04%)</title><rect x="588.2" y="675.0" width="35.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="591.2" y="686.0">sch..</text>
</g>
<g>
<title>__schedule (44 samples, 3.04%)</title><rect x="588.2" y="659.0" width="35.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="591.2" y="670.0">__s..</text>
</g>
<g>
<title>finish_task_switch (44 samples, 3.04%)</title><rect x="588.2" y="643.0" width="35.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="591.2" y="654.0">fin..</text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.28%)</title><rect x="624.0" y="691.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="627.0" y="702.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.14%)</title><rect x="625.7" y="675.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="628.7" y="686.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.07%)</title><rect x="627.3" y="691.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="630.3" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="628.1" y="787.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="631.1" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.07%)</title><rect x="628.9" y="787.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="631.9" y="798.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.07%)</title><rect x="629.7" y="787.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="632.7" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="630.5" y="803.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="633.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.28%)</title><rect x="631.4" y="851.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.28%)</title><rect x="631.4" y="835.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.28%)</title><rect x="631.4" y="819.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.28%)</title><rect x="631.4" y="803.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.28%)</title><rect x="631.4" y="787.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.4" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.14%)</title><rect x="633.0" y="771.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="636.0" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.14%)</title><rect x="633.0" y="755.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.0" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.14%)</title><rect x="633.0" y="739.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.0" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.14%)</title><rect x="633.0" y="723.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="636.0" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.14%)</title><rect x="633.0" y="707.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="636.0" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.14%)</title><rect x="633.0" y="691.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="636.0" y="702.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.14%)</title><rect x="633.0" y="675.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.0" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.14%)</title><rect x="633.0" y="659.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="636.0" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.14%)</title><rect x="633.0" y="643.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="636.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (3 samples, 0.21%)</title><rect x="634.6" y="867.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.07%)</title><rect x="637.1" y="867.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="640.1" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="637.1" y="851.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="640.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="637.1" y="835.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="640.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="637.1" y="819.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.1" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (678 samples, 46.79%)</title><rect x="637.9" y="931.0" width="552.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.9" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="638.7" y="915.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.14%)</title><rect x="638.7" y="899.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.07%)</title><rect x="639.5" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.5" y="894.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (1 samples, 0.07%)</title><rect x="639.5" y="867.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.07%)</title><rect x="639.5" y="851.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (102 samples, 7.04%)</title><rect x="640.3" y="915.0" width="83.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.3" y="926.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (100 samples, 6.90%)</title><rect x="641.9" y="899.0" width="81.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.9" y="910.0">one/nio/n..</text>
</g>
<g>
<title>__clock_gettime_2 (2 samples, 0.14%)</title><rect x="665.6" y="883.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="668.6" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="666.4" y="867.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="669.4" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="667.2" y="883.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="670.2" y="894.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.07%)</title><rect x="668.0" y="883.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="671.0" y="894.0"></text>
</g>
<g>
<title>epoll_wait (67 samples, 4.62%)</title><rect x="668.8" y="883.0" width="54.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="671.8" y="894.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 4.21%)</title><rect x="672.9" y="867.0" width="49.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="675.9" y="878.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (61 samples, 4.21%)</title><rect x="672.9" y="851.0" width="49.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="675.9" y="862.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 4.07%)</title><rect x="674.5" y="835.0" width="48.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="677.5" y="846.0">__x6..</text>
</g>
<g>
<title>do_epoll_wait (58 samples, 4.00%)</title><rect x="674.5" y="819.0" width="47.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="677.5" y="830.0">do_e..</text>
</g>
<g>
<title>__fdget (2 samples, 0.14%)</title><rect x="674.5" y="803.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="677.5" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.14%)</title><rect x="674.5" y="787.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="677.5" y="798.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.14%)</title><rect x="674.5" y="771.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="677.5" y="782.0"></text>
</g>
<g>
<title>ep_poll (55 samples, 3.80%)</title><rect x="676.1" y="803.0" width="44.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="679.1" y="814.0">ep_p..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.28%)</title><rect x="677.8" y="787.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="680.8" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.21%)</title><rect x="678.6" y="771.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="681.6" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.21%)</title><rect x="678.6" y="755.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="681.6" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.14%)</title><rect x="679.4" y="739.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.4" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.07%)</title><rect x="680.2" y="723.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="683.2" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (49 samples, 3.38%)</title><rect x="681.0" y="787.0" width="39.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.0" y="798.0">sch..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (49 samples, 3.38%)</title><rect x="681.0" y="771.0" width="39.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="684.0" y="782.0">sch..</text>
</g>
<g>
<title>schedule (49 samples, 3.38%)</title><rect x="681.0" y="755.0" width="39.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="684.0" y="766.0">sch..</text>
</g>
<g>
<title>__schedule (49 samples, 3.38%)</title><rect x="681.0" y="739.0" width="39.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.0" y="750.0">__s..</text>
</g>
<g>
<title>finish_task_switch (49 samples, 3.38%)</title><rect x="681.0" y="723.0" width="39.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.0" y="734.0">fin..</text>
</g>
<g>
<title>fput_many (1 samples, 0.07%)</title><rect x="720.9" y="803.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.9" y="814.0"></text>
</g>
<g>
<title>fput (1 samples, 0.07%)</title><rect x="721.7" y="819.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="724.7" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="722.6" y="867.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="725.6" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="722.6" y="851.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="725.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="722.6" y="835.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="725.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (573 samples, 39.54%)</title><rect x="723.4" y="915.0" width="466.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.4" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (573 samples, 39.54%)</title><rect x="723.4" y="899.0" width="466.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.4" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (530 samples, 36.58%)</title><rect x="724.2" y="883.0" width="431.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.2" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (508 samples, 35.06%)</title><rect x="726.6" y="867.0" width="413.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="729.6" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (508 samples, 35.06%)</title><rect x="726.6" y="851.0" width="413.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.6" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (507 samples, 34.99%)</title><rect x="726.6" y="835.0" width="412.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.6" y="846.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.35%)</title><rect x="726.6" y="819.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="728.3" y="803.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.14%)</title><rect x="728.3" y="787.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="729.9" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="729.9" y="787.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="729.9" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="729.9" y="755.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.62%)</title><rect x="730.7" y="819.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.62%)</title><rect x="730.7" y="803.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.14%)</title><rect x="733.1" y="787.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.14%)</title><rect x="733.1" y="771.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="734.0" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.14%)</title><rect x="734.8" y="787.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="736.4" y="787.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="736.4" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="736.4" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="736.4" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="737.2" y="787.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="740.2" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="737.2" y="771.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="740.2" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="737.2" y="755.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="740.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (493 samples, 34.02%)</title><rect x="738.0" y="819.0" width="401.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.0" y="830.0">ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.ent..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (52 samples, 3.59%)</title><rect x="738.8" y="803.0" width="42.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.8" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (52 samples, 3.59%)</title><rect x="738.8" y="787.0" width="42.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.8" y="798.0">java..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.14%)</title><rect x="739.7" y="771.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 3.38%)</title><rect x="741.3" y="771.0" width="39.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.3" y="782.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (48 samples, 3.31%)</title><rect x="742.1" y="755.0" width="39.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.1" y="766.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.48%)</title><rect x="747.8" y="739.0" width="5.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="750.8" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.14%)</title><rect x="749.4" y="723.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="752.4" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="751.1" y="723.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="754.1" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="752.7" y="723.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="755.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="752.7" y="707.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="752.7" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 2.28%)</title><rect x="753.5" y="739.0" width="26.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="756.5" y="750.0">[..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="753.5" y="723.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="756.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (32 samples, 2.21%)</title><rect x="754.3" y="723.0" width="26.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="757.3" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 1.93%)</title><rect x="757.6" y="707.0" width="22.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="760.6" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.93%)</title><rect x="757.6" y="691.0" width="22.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.6" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 1.86%)</title><rect x="758.4" y="675.0" width="22.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="761.4" y="686.0">_..</text>
</g>
<g>
<title>do_futex (27 samples, 1.86%)</title><rect x="758.4" y="659.0" width="22.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="761.4" y="670.0">d..</text>
</g>
<g>
<title>futex_wait (27 samples, 1.86%)</title><rect x="758.4" y="643.0" width="22.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="761.4" y="654.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (24 samples, 1.66%)</title><rect x="760.0" y="627.0" width="19.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="763.0" y="638.0"></text>
</g>
<g>
<title>schedule (23 samples, 1.59%)</title><rect x="760.8" y="611.0" width="18.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.8" y="622.0"></text>
</g>
<g>
<title>__schedule (23 samples, 1.59%)</title><rect x="760.8" y="595.0" width="18.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="763.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 1.59%)</title><rect x="760.8" y="579.0" width="18.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.8" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.07%)</title><rect x="779.6" y="627.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.6" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.07%)</title><rect x="780.4" y="739.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="783.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (61 samples, 4.21%)</title><rect x="781.2" y="803.0" width="49.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="784.2" y="814.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (56 samples, 3.86%)</title><rect x="781.2" y="787.0" width="45.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.2" y="798.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (54 samples, 3.73%)</title><rect x="782.8" y="771.0" width="44.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.8" y="782.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (54 samples, 3.73%)</title><rect x="782.8" y="755.0" width="44.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.8" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.14%)</title><rect x="782.8" y="739.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.14%)</title><rect x="782.8" y="723.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="785.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.14%)</title><rect x="782.8" y="707.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.14%)</title><rect x="782.8" y="691.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="785.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (52 samples, 3.59%)</title><rect x="784.5" y="739.0" width="42.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.5" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 3.59%)</title><rect x="784.5" y="723.0" width="42.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.5" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 3.59%)</title><rect x="784.5" y="707.0" width="42.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.5" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (52 samples, 3.59%)</title><rect x="784.5" y="691.0" width="42.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.5" y="702.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (52 samples, 3.59%)</title><rect x="784.5" y="675.0" width="42.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.5" y="686.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.48%)</title><rect x="793.4" y="659.0" width="5.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="796.4" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.14%)</title><rect x="794.2" y="643.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="797.2" y="654.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.28%)</title><rect x="795.9" y="643.0" width="3.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="798.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (34 samples, 2.35%)</title><rect x="799.1" y="659.0" width="27.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="802.1" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 2.00%)</title><rect x="803.2" y="643.0" width="23.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="806.2" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (29 samples, 2.00%)</title><rect x="803.2" y="627.0" width="23.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.2" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 1.86%)</title><rect x="803.2" y="611.0" width="22.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="806.2" y="622.0">_..</text>
</g>
<g>
<title>do_futex (26 samples, 1.79%)</title><rect x="803.2" y="595.0" width="21.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="806.2" y="606.0">d..</text>
</g>
<g>
<title>futex_wake (25 samples, 1.73%)</title><rect x="804.0" y="579.0" width="20.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="807.0" y="590.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.07%)</title><rect x="806.4" y="563.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="809.4" y="574.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.07%)</title><rect x="807.3" y="563.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="810.3" y="574.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 1.38%)</title><rect x="808.1" y="563.0" width="16.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="811.1" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 1.38%)</title><rect x="808.1" y="547.0" width="16.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="811.1" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 1.38%)</title><rect x="808.1" y="531.0" width="16.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="811.1" y="542.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.07%)</title><rect x="824.4" y="595.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="827.4" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.14%)</title><rect x="825.2" y="611.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="828.2" y="622.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.14%)</title><rect x="825.2" y="595.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="828.2" y="606.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.14%)</title><rect x="825.2" y="579.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="828.2" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.14%)</title><rect x="825.2" y="563.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="828.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.strToByteBuffer (5 samples, 0.35%)</title><rect x="826.8" y="787.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.35%)</title><rect x="826.8" y="771.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.35%)</title><rect x="826.8" y="755.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.35%)</title><rect x="826.8" y="739.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.8" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="829.2" y="723.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="832.2" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="830.1" y="723.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="833.1" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="830.1" y="707.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="833.1" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="830.1" y="691.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="833.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (225 samples, 15.53%)</title><rect x="830.9" y="803.0" width="183.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="833.9" y="814.0">ru/mail/polis/service/iv..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (92 samples, 6.35%)</title><rect x="833.3" y="787.0" width="74.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.3" y="798.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (92 samples, 6.35%)</title><rect x="833.3" y="771.0" width="74.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.3" y="782.0">java/uti..</text>
</g>
<g>
<title>java/lang/Thread.yield (2 samples, 0.14%)</title><rect x="834.9" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.9" y="766.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.07%)</title><rect x="835.8" y="739.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="838.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="835.8" y="723.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="835.8" y="707.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.07%)</title><rect x="835.8" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="838.8" y="702.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.07%)</title><rect x="835.8" y="675.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="838.8" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="835.8" y="659.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="838.8" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="835.8" y="643.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="838.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (88 samples, 6.07%)</title><rect x="836.6" y="755.0" width="71.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="839.6" y="766.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (87 samples, 6.00%)</title><rect x="837.4" y="739.0" width="70.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.4" y="750.0">jdk/inte..</text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.55%)</title><rect x="866.7" y="723.0" width="6.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="869.7" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.14%)</title><rect x="867.5" y="707.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="870.5" y="718.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.07%)</title><rect x="869.1" y="707.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="872.1" y="718.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.07%)</title><rect x="870.0" y="707.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="873.0" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.14%)</title><rect x="870.8" y="707.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="873.8" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.07%)</title><rect x="872.4" y="707.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="875.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 2.97%)</title><rect x="873.2" y="723.0" width="35.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="876.2" y="734.0">[un..</text>
</g>
<g>
<title>__pthread_cond_wait (42 samples, 2.90%)</title><rect x="873.2" y="707.0" width="34.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="876.2" y="718.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 2.69%)</title><rect x="875.7" y="691.0" width="31.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="878.7" y="702.0">en..</text>
</g>
<g>
<title>do_syscall_64 (39 samples, 2.69%)</title><rect x="875.7" y="675.0" width="31.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.7" y="686.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (38 samples, 2.62%)</title><rect x="876.5" y="659.0" width="30.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="879.5" y="670.0">__..</text>
</g>
<g>
<title>do_futex (38 samples, 2.62%)</title><rect x="876.5" y="643.0" width="30.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="879.5" y="654.0">do..</text>
</g>
<g>
<title>futex_wait (38 samples, 2.62%)</title><rect x="876.5" y="627.0" width="30.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="879.5" y="638.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (35 samples, 2.42%)</title><rect x="877.3" y="611.0" width="28.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="880.3" y="622.0">fu..</text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="877.3" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.3" y="606.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.07%)</title><rect x="878.1" y="595.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="881.1" y="606.0"></text>
</g>
<g>
<title>schedule (33 samples, 2.28%)</title><rect x="878.9" y="595.0" width="26.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="881.9" y="606.0">s..</text>
</g>
<g>
<title>__schedule (33 samples, 2.28%)</title><rect x="878.9" y="579.0" width="26.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="881.9" y="590.0">_..</text>
</g>
<g>
<title>finish_task_switch (32 samples, 2.21%)</title><rect x="879.7" y="563.0" width="26.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="882.7" y="574.0">f..</text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.14%)</title><rect x="905.8" y="611.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="908.8" y="622.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.07%)</title><rect x="905.8" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="908.8" y="606.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.07%)</title><rect x="906.6" y="595.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="909.6" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.07%)</title><rect x="907.4" y="707.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="910.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.forwardRequestFuture (7 samples, 0.48%)</title><rect x="908.2" y="787.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (7 samples, 0.48%)</title><rect x="908.2" y="771.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.21%)</title><rect x="911.5" y="755.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.21%)</title><rect x="911.5" y="739.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.14%)</title><rect x="911.5" y="723.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.14%)</title><rect x="911.5" y="707.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.14%)</title><rect x="911.5" y="691.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.14%)</title><rect x="911.5" y="675.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="913.1" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="913.1" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="913.1" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="913.1" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="913.1" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.1" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="913.1" y="643.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="916.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="913.1" y="627.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="916.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="913.1" y="611.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="916.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="913.1" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="916.1" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.07%)</title><rect x="913.1" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="916.1" y="590.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.07%)</title><rect x="913.1" y="563.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="916.1" y="574.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.07%)</title><rect x="913.1" y="547.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.1" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.07%)</title><rect x="913.1" y="531.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.1" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.07%)</title><rect x="913.1" y="515.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="916.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (3 samples, 0.21%)</title><rect x="913.9" y="787.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (2 samples, 0.14%)</title><rect x="913.9" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.14%)</title><rect x="913.9" y="755.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.14%)</title><rect x="913.9" y="739.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.07%)</title><rect x="913.9" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.07%)</title><rect x="913.9" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.07%)</title><rect x="913.9" y="691.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.07%)</title><rect x="913.9" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.07%)</title><rect x="914.7" y="723.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.07%)</title><rect x="914.7" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.07%)</title><rect x="914.7" y="691.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.07%)</title><rect x="914.7" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.07%)</title><rect x="914.7" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.7" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.07%)</title><rect x="914.7" y="643.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="917.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="914.7" y="627.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="917.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="914.7" y="611.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="917.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="914.7" y="595.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="917.7" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.07%)</title><rect x="914.7" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.7" y="590.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.07%)</title><rect x="914.7" y="563.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="917.7" y="574.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.07%)</title><rect x="914.7" y="547.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="917.7" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.07%)</title><rect x="914.7" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="917.7" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.07%)</title><rect x="914.7" y="515.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="917.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.strToByteBuffer (1 samples, 0.07%)</title><rect x="915.6" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.07%)</title><rect x="915.6" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.07%)</title><rect x="915.6" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.07%)</title><rect x="915.6" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.trySendResponse (118 samples, 8.14%)</title><rect x="916.4" y="787.0" width="96.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.4" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (118 samples, 8.14%)</title><rect x="916.4" y="771.0" width="96.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.4" y="782.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (117 samples, 8.07%)</title><rect x="917.2" y="755.0" width="95.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.2" y="766.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.28%)</title><rect x="917.2" y="739.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.28%)</title><rect x="917.2" y="723.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.28%)</title><rect x="917.2" y="707.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.28%)</title><rect x="917.2" y="691.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (4 samples, 0.28%)</title><rect x="917.2" y="675.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (4 samples, 0.28%)</title><rect x="917.2" y="659.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.2" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="919.6" y="643.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="922.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 7.80%)</title><rect x="920.4" y="739.0" width="92.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.4" y="750.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 7.80%)</title><rect x="920.4" y="723.0" width="92.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.4" y="734.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.07%)</title><rect x="921.3" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (111 samples, 7.66%)</title><rect x="922.1" y="707.0" width="90.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.1" y="718.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (111 samples, 7.66%)</title><rect x="922.1" y="691.0" width="90.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.1" y="702.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.07%)</title><rect x="963.6" y="675.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="966.6" y="686.0"></text>
</g>
<g>
<title>__send (59 samples, 4.07%)</title><rect x="964.4" y="675.0" width="48.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="967.4" y="686.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 3.86%)</title><rect x="966.9" y="659.0" width="45.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.9" y="670.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (56 samples, 3.86%)</title><rect x="966.9" y="643.0" width="45.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="969.9" y="654.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (53 samples, 3.66%)</title><rect x="969.3" y="627.0" width="43.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="972.3" y="638.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (52 samples, 3.59%)</title><rect x="969.3" y="611.0" width="42.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="972.3" y="622.0">__sy..</text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="970.1" y="595.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="973.1" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (49 samples, 3.38%)</title><rect x="970.9" y="595.0" width="39.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.9" y="606.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (48 samples, 3.31%)</title><rect x="970.9" y="579.0" width="39.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="973.9" y="590.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (48 samples, 3.31%)</title><rect x="970.9" y="563.0" width="39.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.9" y="574.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.07%)</title><rect x="970.9" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="973.9" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.07%)</title><rect x="971.8" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="974.8" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (46 samples, 3.17%)</title><rect x="972.6" y="547.0" width="37.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="975.6" y="558.0">tcp..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.07%)</title><rect x="972.6" y="531.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.6" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.07%)</title><rect x="972.6" y="515.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="975.6" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.41%)</title><rect x="973.4" y="531.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="976.4" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.41%)</title><rect x="973.4" y="515.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.07%)</title><rect x="974.2" y="499.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.2" y="510.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.28%)</title><rect x="975.0" y="499.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.0" y="510.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.28%)</title><rect x="975.0" y="483.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="978.0" y="494.0"></text>
</g>
<g>
<title>tcp_push (38 samples, 2.62%)</title><rect x="978.3" y="531.0" width="30.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="981.3" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (37 samples, 2.55%)</title><rect x="978.3" y="515.0" width="30.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="981.3" y="526.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (37 samples, 2.55%)</title><rect x="978.3" y="499.0" width="30.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="981.3" y="510.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 2.35%)</title><rect x="978.3" y="483.0" width="27.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="981.3" y="494.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (34 samples, 2.35%)</title><rect x="978.3" y="467.0" width="27.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="981.3" y="478.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 2.35%)</title><rect x="978.3" y="451.0" width="27.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="981.3" y="462.0">_..</text>
</g>
<g>
<title>ip_local_out (34 samples, 2.35%)</title><rect x="978.3" y="435.0" width="27.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="981.3" y="446.0">i..</text>
</g>
<g>
<title>ip_output (34 samples, 2.35%)</title><rect x="978.3" y="419.0" width="27.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="981.3" y="430.0">i..</text>
</g>
<g>
<title>ip_finish_output (33 samples, 2.28%)</title><rect x="979.1" y="403.0" width="26.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.1" y="414.0">i..</text>
</g>
<g>
<title>__ip_finish_output (33 samples, 2.28%)</title><rect x="979.1" y="387.0" width="26.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.1" y="398.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (33 samples, 2.28%)</title><rect x="979.1" y="371.0" width="26.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.1" y="382.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 2.14%)</title><rect x="979.1" y="355.0" width="25.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="982.1" y="366.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (31 samples, 2.14%)</title><rect x="979.1" y="339.0" width="25.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="982.1" y="350.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 2.14%)</title><rect x="979.1" y="323.0" width="25.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="982.1" y="334.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 2.14%)</title><rect x="979.1" y="307.0" width="25.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.1" y="318.0">_..</text>
</g>
<g>
<title>net_rx_action (30 samples, 2.07%)</title><rect x="979.9" y="291.0" width="24.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.9" y="302.0">n..</text>
</g>
<g>
<title>process_backlog (30 samples, 2.07%)</title><rect x="979.9" y="275.0" width="24.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="982.9" y="286.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (29 samples, 2.00%)</title><rect x="980.7" y="259.0" width="23.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="983.7" y="270.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (29 samples, 2.00%)</title><rect x="980.7" y="243.0" width="23.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="983.7" y="254.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.07%)</title><rect x="980.7" y="227.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (28 samples, 1.93%)</title><rect x="981.5" y="227.0" width="22.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="984.5" y="238.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (28 samples, 1.93%)</title><rect x="981.5" y="211.0" width="22.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="984.5" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver (28 samples, 1.93%)</title><rect x="981.5" y="195.0" width="22.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.5" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 1.93%)</title><rect x="981.5" y="179.0" width="22.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.5" y="190.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 1.93%)</title><rect x="981.5" y="163.0" width="22.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="984.5" y="174.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 1.93%)</title><rect x="981.5" y="147.0" width="22.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.5" y="158.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.07%)</title><rect x="981.5" y="131.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.5" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.07%)</title><rect x="982.3" y="131.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="985.3" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.07%)</title><rect x="982.3" y="115.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="985.3" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (26 samples, 1.79%)</title><rect x="983.2" y="131.0" width="21.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="986.2" y="142.0">t..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.07%)</title><rect x="983.2" y="115.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="986.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 1.73%)</title><rect x="984.0" y="115.0" width="20.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.0" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.14%)</title><rect x="984.0" y="99.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="987.0" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.14%)</title><rect x="984.0" y="83.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="987.0" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.14%)</title><rect x="984.0" y="67.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="987.0" y="78.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.14%)</title><rect x="984.0" y="51.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="987.0" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.14%)</title><rect x="984.0" y="35.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="987.0" y="46.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.07%)</title><rect x="985.6" y="99.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="988.6" y="110.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.07%)</title><rect x="986.4" y="99.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="989.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 1.10%)</title><rect x="987.2" y="99.0" width="13.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="990.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 1.04%)</title><rect x="988.0" y="83.0" width="12.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="991.0" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 1.04%)</title><rect x="988.0" y="67.0" width="12.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="991.0" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 1.04%)</title><rect x="988.0" y="51.0" width="12.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="991.0" y="62.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.28%)</title><rect x="1000.3" y="99.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.3" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.07%)</title><rect x="1001.1" y="83.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.1" y="94.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.07%)</title><rect x="1001.9" y="83.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.9" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.07%)</title><rect x="1002.7" y="83.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1005.7" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.07%)</title><rect x="1002.7" y="67.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1005.7" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.07%)</title><rect x="1002.7" y="51.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1005.7" y="62.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.07%)</title><rect x="1002.7" y="35.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1005.7" y="46.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.07%)</title><rect x="1003.5" y="99.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1006.5" y="110.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="1003.5" y="83.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1006.5" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.14%)</title><rect x="1004.3" y="355.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.3" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.14%)</title><rect x="1004.3" y="339.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1007.3" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.14%)</title><rect x="1004.3" y="323.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1007.3" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.14%)</title><rect x="1004.3" y="307.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1007.3" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.07%)</title><rect x="1005.1" y="291.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1008.1" y="302.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.07%)</title><rect x="1006.0" y="483.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.0" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="1006.8" y="483.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1009.8" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.07%)</title><rect x="1007.6" y="483.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1010.6" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.07%)</title><rect x="1007.6" y="467.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1010.6" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.07%)</title><rect x="1007.6" y="451.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.6" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.07%)</title><rect x="1007.6" y="435.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1010.6" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.07%)</title><rect x="1007.6" y="419.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1010.6" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.07%)</title><rect x="1008.4" y="515.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1011.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.07%)</title><rect x="1009.2" y="531.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1012.2" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.07%)</title><rect x="1009.2" y="515.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1012.2" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.07%)</title><rect x="1009.2" y="499.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1012.2" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.07%)</title><rect x="1010.0" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1013.0" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.07%)</title><rect x="1010.8" y="595.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1013.8" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="1010.8" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1013.8" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="1010.8" y="563.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1013.8" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="1010.8" y="547.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.8" y="558.0"></text>
</g>
<g>
<title>fput (1 samples, 0.07%)</title><rect x="1011.7" y="611.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.responsibleNodes (2 samples, 0.14%)</title><rect x="1012.5" y="787.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="1013.3" y="771.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1016.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="1013.3" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.trySendResponse (154 samples, 10.63%)</title><rect x="1014.1" y="803.0" width="125.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1017.1" y="814.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (154 samples, 10.63%)</title><rect x="1014.1" y="787.0" width="125.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.1" y="798.0">one/nio/http/Ht..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (1 samples, 0.07%)</title><rect x="1015.7" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (150 samples, 10.35%)</title><rect x="1016.5" y="771.0" width="122.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.5" y="782.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.35%)</title><rect x="1017.4" y="755.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1020.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.07%)</title><rect x="1020.6" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1023.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.07%)</title><rect x="1020.6" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1023.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="1020.6" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.07%)</title><rect x="1020.6" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.07%)</title><rect x="1020.6" y="675.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1023.6" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="1020.6" y="659.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1023.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (144 samples, 9.94%)</title><rect x="1021.4" y="755.0" width="117.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.4" y="766.0">one/nio/net/Se..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.14%)</title><rect x="1021.4" y="739.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1024.4" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.14%)</title><rect x="1021.4" y="723.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1024.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.14%)</title><rect x="1021.4" y="707.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1024.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.14%)</title><rect x="1021.4" y="691.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1024.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.14%)</title><rect x="1021.4" y="675.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1024.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="1021.4" y="659.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.4" y="670.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.07%)</title><rect x="1021.4" y="643.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1024.4" y="654.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.07%)</title><rect x="1022.2" y="659.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1025.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1022.2" y="643.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1025.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1022.2" y="627.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1025.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1022.2" y="611.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1025.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (142 samples, 9.80%)</title><rect x="1023.1" y="739.0" width="115.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.1" y="750.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (141 samples, 9.73%)</title><rect x="1023.9" y="723.0" width="114.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.9" y="734.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (141 samples, 9.73%)</title><rect x="1023.9" y="707.0" width="114.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1026.9" y="718.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.21%)</title><rect x="1047.5" y="691.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1050.5" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.07%)</title><rect x="1049.1" y="675.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1052.1" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.07%)</title><rect x="1049.1" y="659.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1052.1" y="670.0"></text>
</g>
<g>
<title>__send (107 samples, 7.38%)</title><rect x="1049.9" y="691.0" width="87.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1052.9" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 6.97%)</title><rect x="1054.8" y="675.0" width="82.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1057.8" y="686.0">entry_SYS..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.07%)</title><rect x="1054.8" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1057.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (100 samples, 6.90%)</title><rect x="1055.6" y="659.0" width="81.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1058.6" y="670.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (100 samples, 6.90%)</title><rect x="1055.6" y="643.0" width="81.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1058.6" y="654.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (100 samples, 6.90%)</title><rect x="1055.6" y="627.0" width="81.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1058.6" y="638.0">__sys_sen..</text>
</g>
<g>
<title>fput_many (1 samples, 0.07%)</title><rect x="1055.6" y="611.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1058.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (97 samples, 6.69%)</title><rect x="1056.4" y="611.0" width="79.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1059.4" y="622.0">sock_send..</text>
</g>
<g>
<title>inet6_sendmsg (94 samples, 6.49%)</title><rect x="1056.4" y="595.0" width="76.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1059.4" y="606.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (94 samples, 6.49%)</title><rect x="1056.4" y="579.0" width="76.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1059.4" y="590.0">tcp_send..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.07%)</title><rect x="1056.4" y="563.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1059.4" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (93 samples, 6.42%)</title><rect x="1057.3" y="563.0" width="75.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1060.3" y="574.0">tcp_send..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.21%)</title><rect x="1057.3" y="547.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1060.3" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.21%)</title><rect x="1057.3" y="531.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1060.3" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.07%)</title><rect x="1059.7" y="547.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1062.7" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.07%)</title><rect x="1059.7" y="531.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1062.7" y="542.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.07%)</title><rect x="1060.5" y="547.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1063.5" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.07%)</title><rect x="1060.5" y="531.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1063.5" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.28%)</title><rect x="1061.3" y="547.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.21%)</title><rect x="1061.3" y="531.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1064.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.14%)</title><rect x="1061.3" y="515.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1064.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.14%)</title><rect x="1061.3" y="499.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1064.3" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.14%)</title><rect x="1061.3" y="483.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1064.3" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.07%)</title><rect x="1063.0" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1066.0" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.07%)</title><rect x="1063.8" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1066.8" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.07%)</title><rect x="1064.6" y="547.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1067.6" y="558.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.07%)</title><rect x="1065.4" y="547.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1068.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (78 samples, 5.38%)</title><rect x="1066.2" y="547.0" width="63.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.2" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (78 samples, 5.38%)</title><rect x="1066.2" y="531.0" width="63.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1069.2" y="542.0">__tcp_p..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.07%)</title><rect x="1067.0" y="515.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.0" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (76 samples, 5.24%)</title><rect x="1067.8" y="515.0" width="61.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.8" y="526.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (70 samples, 4.83%)</title><rect x="1068.7" y="499.0" width="57.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1071.7" y="510.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (68 samples, 4.69%)</title><rect x="1070.3" y="483.0" width="55.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1073.3" y="494.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (67 samples, 4.62%)</title><rect x="1071.1" y="467.0" width="54.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1074.1" y="478.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (63 samples, 4.35%)</title><rect x="1072.7" y="451.0" width="51.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1075.7" y="462.0">ip_lo..</text>
</g>
<g>
<title>ip_output (63 samples, 4.35%)</title><rect x="1072.7" y="435.0" width="51.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1075.7" y="446.0">ip_ou..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.14%)</title><rect x="1072.7" y="419.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1075.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (61 samples, 4.21%)</title><rect x="1074.4" y="419.0" width="49.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1077.4" y="430.0">ip_fi..</text>
</g>
<g>
<title>__ip_finish_output (60 samples, 4.14%)</title><rect x="1075.2" y="403.0" width="48.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1078.2" y="414.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (60 samples, 4.14%)</title><rect x="1075.2" y="387.0" width="48.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1078.2" y="398.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (58 samples, 4.00%)</title><rect x="1075.2" y="371.0" width="47.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1078.2" y="382.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (58 samples, 4.00%)</title><rect x="1075.2" y="355.0" width="47.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1078.2" y="366.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 3.93%)</title><rect x="1076.0" y="339.0" width="46.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1079.0" y="350.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 3.93%)</title><rect x="1076.0" y="323.0" width="46.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1079.0" y="334.0">__so..</text>
</g>
<g>
<title>net_rx_action (56 samples, 3.86%)</title><rect x="1076.8" y="307.0" width="45.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.8" y="318.0">net_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.07%)</title><rect x="1076.8" y="291.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1079.8" y="302.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.07%)</title><rect x="1077.6" y="291.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1080.6" y="302.0"></text>
</g>
<g>
<title>process_backlog (54 samples, 3.73%)</title><rect x="1078.4" y="291.0" width="44.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.4" y="302.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (53 samples, 3.66%)</title><rect x="1079.2" y="275.0" width="43.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1082.2" y="286.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (52 samples, 3.59%)</title><rect x="1079.2" y="259.0" width="42.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1082.2" y="270.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.14%)</title><rect x="1079.2" y="243.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1082.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (48 samples, 3.31%)</title><rect x="1080.9" y="243.0" width="39.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1083.9" y="254.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.14%)</title><rect x="1080.9" y="227.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1083.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (46 samples, 3.17%)</title><rect x="1082.5" y="227.0" width="37.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1085.5" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (46 samples, 3.17%)</title><rect x="1082.5" y="211.0" width="37.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.5" y="222.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (46 samples, 3.17%)</title><rect x="1082.5" y="195.0" width="37.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1085.5" y="206.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 3.11%)</title><rect x="1083.3" y="179.0" width="36.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1086.3" y="190.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (45 samples, 3.11%)</title><rect x="1083.3" y="163.0" width="36.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1086.3" y="174.0">tcp..</text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.07%)</title><rect x="1084.9" y="147.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1087.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 2.90%)</title><rect x="1085.8" y="147.0" width="34.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1088.8" y="158.0">tc..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.07%)</title><rect x="1085.8" y="131.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1088.8" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.07%)</title><rect x="1086.6" y="131.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1089.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (40 samples, 2.76%)</title><rect x="1087.4" y="131.0" width="32.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1090.4" y="142.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.07%)</title><rect x="1087.4" y="115.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1090.4" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.07%)</title><rect x="1087.4" y="99.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1090.4" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.07%)</title><rect x="1087.4" y="83.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1090.4" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.07%)</title><rect x="1087.4" y="67.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.4" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.07%)</title><rect x="1087.4" y="51.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.4" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (33 samples, 2.28%)</title><rect x="1088.2" y="115.0" width="26.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.2" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (33 samples, 2.28%)</title><rect x="1088.2" y="99.0" width="26.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1091.2" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (33 samples, 2.28%)</title><rect x="1088.2" y="83.0" width="26.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1091.2" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (33 samples, 2.28%)</title><rect x="1088.2" y="67.0" width="26.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.2" y="78.0">_..</text>
</g>
<g>
<title>tcp_ack (6 samples, 0.41%)</title><rect x="1115.1" y="115.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1118.1" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.07%)</title><rect x="1115.9" y="99.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1118.9" y="110.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.07%)</title><rect x="1116.7" y="99.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.7" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.14%)</title><rect x="1117.5" y="99.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1120.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.07%)</title><rect x="1117.5" y="83.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.5" y="94.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.07%)</title><rect x="1118.3" y="83.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.3" y="94.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.07%)</title><rect x="1119.2" y="99.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1122.2" y="110.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.14%)</title><rect x="1120.0" y="243.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1123.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.07%)</title><rect x="1121.6" y="259.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.6" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.14%)</title><rect x="1122.4" y="371.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1125.4" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.14%)</title><rect x="1122.4" y="355.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.4" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.07%)</title><rect x="1123.2" y="339.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1126.2" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.14%)</title><rect x="1124.0" y="451.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.0" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.07%)</title><rect x="1125.7" y="499.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1128.7" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.07%)</title><rect x="1126.5" y="499.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.5" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.07%)</title><rect x="1126.5" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1129.5" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.07%)</title><rect x="1127.3" y="499.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.14%)</title><rect x="1128.1" y="499.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1131.1" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.28%)</title><rect x="1129.7" y="547.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.7" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.28%)</title><rect x="1129.7" y="531.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1132.7" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.14%)</title><rect x="1131.4" y="515.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1134.4" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.21%)</title><rect x="1133.0" y="595.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1136.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.14%)</title><rect x="1133.8" y="579.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1136.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.14%)</title><rect x="1133.8" y="563.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1136.8" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.14%)</title><rect x="1135.4" y="611.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1138.4" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.14%)</title><rect x="1135.4" y="595.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1138.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="1136.3" y="579.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.3" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="1136.3" y="563.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1139.3" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.14%)</title><rect x="1137.1" y="691.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1140.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="1138.7" y="771.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.07%)</title><rect x="1139.5" y="835.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.5" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.07%)</title><rect x="1139.5" y="819.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.07%)</title><rect x="1139.5" y="803.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1142.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.07%)</title><rect x="1139.5" y="787.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1142.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.07%)</title><rect x="1139.5" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.90%)</title><rect x="1140.3" y="867.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.55%)</title><rect x="1142.0" y="851.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1145.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.35%)</title><rect x="1142.8" y="835.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.35%)</title><rect x="1142.8" y="819.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.35%)</title><rect x="1142.8" y="803.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.8" y="814.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.14%)</title><rect x="1144.4" y="787.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="1146.0" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.07%)</title><rect x="1146.8" y="835.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="1147.7" y="835.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.21%)</title><rect x="1148.5" y="851.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.14%)</title><rect x="1149.3" y="835.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1150.1" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1153.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1150.1" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.07%)</title><rect x="1150.1" y="787.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.1" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="1150.1" y="771.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.1" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1150.1" y="755.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.1" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="1150.1" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.1" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="1150.1" y="723.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.1" y="734.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.07%)</title><rect x="1150.1" y="707.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.07%)</title><rect x="1150.9" y="867.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="1150.9" y="851.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1153.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="1150.9" y="835.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="1150.9" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.07%)</title><rect x="1150.9" y="803.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1153.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.07%)</title><rect x="1151.7" y="867.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1154.7" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="1151.7" y="851.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1154.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.14%)</title><rect x="1152.5" y="867.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.14%)</title><rect x="1154.2" y="867.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.2" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.14%)</title><rect x="1154.2" y="851.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.2" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="1155.0" y="835.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1158.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (42 samples, 2.90%)</title><rect x="1155.8" y="883.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1158.8" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 2.90%)</title><rect x="1155.8" y="867.0" width="34.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.8" y="878.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.62%)</title><rect x="1163.1" y="851.0" width="7.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1166.1" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.21%)</title><rect x="1163.1" y="835.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.1" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="1165.6" y="835.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.6" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.07%)</title><rect x="1166.4" y="835.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.4" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1166.4" y="819.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1169.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1166.4" y="803.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1169.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1166.4" y="787.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1169.4" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.14%)</title><rect x="1167.2" y="835.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1170.2" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.14%)</title><rect x="1167.2" y="819.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1170.2" y="830.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.07%)</title><rect x="1168.8" y="835.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1171.8" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.07%)</title><rect x="1169.6" y="835.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.6" y="846.0"></text>
</g>
<g>
<title>__libc_recv (21 samples, 1.45%)</title><rect x="1170.5" y="851.0" width="17.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1173.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 1.38%)</title><rect x="1171.3" y="835.0" width="16.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 1.38%)</title><rect x="1171.3" y="819.0" width="16.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1174.3" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.07%)</title><rect x="1171.3" y="803.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 1.31%)</title><rect x="1172.1" y="803.0" width="15.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1175.1" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 1.31%)</title><rect x="1172.1" y="787.0" width="15.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1175.1" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.07%)</title><rect x="1172.9" y="771.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1175.9" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (11 samples, 0.76%)</title><rect x="1173.7" y="771.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1176.7" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (10 samples, 0.69%)</title><rect x="1173.7" y="755.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1176.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.69%)</title><rect x="1173.7" y="739.0" width="8.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1176.7" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.14%)</title><rect x="1175.3" y="723.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1178.3" y="734.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.14%)</title><rect x="1175.3" y="707.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1178.3" y="718.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.07%)</title><rect x="1175.3" y="691.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1178.3" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.07%)</title><rect x="1175.3" y="675.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.3" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.07%)</title><rect x="1176.2" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1179.2" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.07%)</title><rect x="1177.0" y="723.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.0" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.07%)</title><rect x="1177.0" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.0" y="718.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.07%)</title><rect x="1177.8" y="723.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1180.8" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.14%)</title><rect x="1178.6" y="723.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.14%)</title><rect x="1178.6" y="707.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1181.6" y="718.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.14%)</title><rect x="1178.6" y="691.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1181.6" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.07%)</title><rect x="1178.6" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.6" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.07%)</title><rect x="1178.6" y="659.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.6" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.07%)</title><rect x="1179.4" y="675.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1182.4" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.07%)</title><rect x="1179.4" y="659.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1182.4" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.07%)</title><rect x="1180.2" y="723.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1183.2" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.07%)</title><rect x="1181.0" y="723.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1184.0" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.07%)</title><rect x="1181.9" y="755.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1184.9" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.07%)</title><rect x="1181.9" y="739.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1184.9" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.07%)</title><rect x="1181.9" y="723.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.9" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.41%)</title><rect x="1182.7" y="771.0" width="4.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.28%)</title><rect x="1182.7" y="755.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.28%)</title><rect x="1182.7" y="739.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.28%)</title><rect x="1182.7" y="723.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.14%)</title><rect x="1185.9" y="755.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.21%)</title><rect x="1187.6" y="851.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.6" y="862.0"></text>
</g>
</g>
</svg>
