<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="341"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="341"> </text>
<g id="frames">
<g>
<title>all (5,675 samples, 100.00%)</title><rect x="10.0" y="307.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="318.0">all</text>
</g>
<g>
<title>[no_Java_frame] (9 samples, 0.16%)</title><rect x="10.0" y="291.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,140 samples, 55.33%)</title><rect x="11.9" y="291.0" width="652.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.9" y="302.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,140 samples, 55.33%)</title><rect x="11.9" y="275.0" width="652.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.9" y="286.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,140 samples, 55.33%)</title><rect x="11.9" y="259.0" width="652.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.9" y="270.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (2,982 samples, 52.55%)</title><rect x="11.9" y="243.0" width="620.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.9" y="254.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (12 samples, 0.21%)</title><rect x="11.9" y="227.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (12 samples, 0.21%)</title><rect x="11.9" y="211.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.21%)</title><rect x="11.9" y="195.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.21%)</title><rect x="11.9" y="179.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$65/94013272.call (1,642 samples, 28.93%)</title><rect x="14.4" y="227.0" width="341.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.4" y="238.0">ru/mail/polis/service/ivanovandrey/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$processRequest$1 (1,642 samples, 28.93%)</title><rect x="14.4" y="211.0" width="341.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.4" y="222.0">ru/mail/polis/service/ivanovandrey/AsyncServic..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.get (1,641 samples, 28.92%)</title><rect x="14.4" y="195.0" width="341.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.4" y="206.0">ru/mail/polis/service/ivanovandrey/AsyncServic..</text>
</g>
<g>
<title>one/nio/http/Response.ok (557 samples, 9.81%)</title><rect x="14.4" y="179.0" width="115.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.4" y="190.0">one/nio/http/R..</text>
</g>
<g>
<title>one.nio.http.Response (99 samples, 1.74%)</title><rect x="14.4" y="163.0" width="20.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="17.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (458 samples, 8.07%)</title><rect x="35.0" y="163.0" width="95.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.0" y="174.0">one/nio/htt..</text>
</g>
<g>
<title>byte[] (231 samples, 4.07%)</title><rect x="35.4" y="147.0" width="48.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="38.4" y="158.0">byte[]</text>
</g>
<g>
<title>java.lang.String[] (143 samples, 2.52%)</title><rect x="83.4" y="147.0" width="29.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="86.4" y="158.0">ja..</text>
</g>
<g>
<title>java.lang.String (82 samples, 1.44%)</title><rect x="113.1" y="147.0" width="17.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="116.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (360 samples, 6.34%)</title><rect x="130.2" y="179.0" width="74.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.2" y="190.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (123 samples, 2.17%)</title><rect x="130.2" y="163.0" width="25.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="133.2" y="174.0">b..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (237 samples, 4.18%)</title><rect x="155.8" y="163.0" width="49.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.8" y="174.0">java/..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (237 samples, 4.18%)</title><rect x="155.8" y="147.0" width="49.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="158.8" y="158.0">java...</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDBImpl.get (724 samples, 12.76%)</title><rect x="205.0" y="179.0" width="150.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.0" y="190.0">ru/mail/polis/dao/R..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (194 samples, 3.42%)</title><rect x="205.0" y="163.0" width="40.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.0" y="174.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (194 samples, 3.42%)</title><rect x="205.0" y="147.0" width="40.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.0" y="158.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (194 samples, 3.42%)</title><rect x="205.0" y="131.0" width="40.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="208.0" y="142.0">jav..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (124 samples, 2.19%)</title><rect x="245.4" y="163.0" width="25.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.4" y="174.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (124 samples, 2.19%)</title><rect x="245.4" y="147.0" width="25.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.4" y="158.0">o..</text>
</g>
<g>
<title>byte[] (89 samples, 1.57%)</title><rect x="252.7" y="131.0" width="18.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="255.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.toArrayShifted (406 samples, 7.15%)</title><rect x="271.2" y="163.0" width="84.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.2" y="174.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.fromByteBufferToByteArray (406 samples, 7.15%)</title><rect x="271.2" y="147.0" width="84.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.2" y="158.0">ru/mail/po..</text>
</g>
<g>
<title>byte[] (172 samples, 3.03%)</title><rect x="271.2" y="131.0" width="35.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="274.2" y="142.0">byt..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (234 samples, 4.12%)</title><rect x="306.9" y="131.0" width="48.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="309.9" y="142.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (233 samples, 4.11%)</title><rect x="306.9" y="115.0" width="48.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="309.9" y="126.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$66/30703227.call (1,328 samples, 23.40%)</title><rect x="355.8" y="227.0" width="276.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.8" y="238.0">ru/mail/polis/service/ivanovandrey/As..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.lambda$forwardRequestFuture$0 (1,328 samples, 23.40%)</title><rect x="355.8" y="211.0" width="276.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.8" y="222.0">ru/mail/polis/service/ivanovandrey/As..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.forwardRequest (1,328 samples, 23.40%)</title><rect x="355.8" y="195.0" width="276.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.8" y="206.0">ru/mail/polis/service/ivanovandrey/As..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,300 samples, 22.91%)</title><rect x="355.8" y="179.0" width="270.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.8" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,300 samples, 22.91%)</title><rect x="355.8" y="163.0" width="270.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.8" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (8 samples, 0.14%)</title><rect x="355.8" y="147.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="358.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1,154 samples, 20.33%)</title><rect x="357.5" y="147.0" width="239.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.5" y="158.0">one/nio/http/HttpClient$Response..</text>
</g>
<g>
<title>byte[] (783 samples, 13.80%)</title><rect x="357.5" y="131.0" width="162.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="360.5" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (371 samples, 6.54%)</title><rect x="520.3" y="131.0" width="77.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="523.3" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (122 samples, 2.15%)</title><rect x="597.4" y="147.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.4" y="158.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.11%)</title><rect x="597.4" y="131.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.11%)</title><rect x="597.4" y="115.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="597.4" y="99.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="600.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.07%)</title><rect x="597.8" y="99.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.8" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.07%)</title><rect x="597.8" y="83.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="600.8" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.05%)</title><rect x="598.6" y="131.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="601.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (104 samples, 1.83%)</title><rect x="599.3" y="131.0" width="21.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.3" y="142.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.83%)</title><rect x="599.3" y="115.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.3" y="126.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (104 samples, 1.83%)</title><rect x="599.3" y="99.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.3" y="110.0">o..</text>
</g>
<g>
<title>char[] (88 samples, 1.55%)</title><rect x="599.3" y="83.0" width="18.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="602.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.16%)</title><rect x="617.6" y="83.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="620.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.12%)</title><rect x="619.4" y="83.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.4" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.12%)</title><rect x="619.4" y="67.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.4" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.12%)</title><rect x="619.4" y="51.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.4" y="62.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.12%)</title><rect x="619.4" y="35.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="622.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="620.9" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.04%)</title><rect x="620.9" y="115.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="623.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.12%)</title><rect x="621.3" y="131.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.12%)</title><rect x="621.3" y="115.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.12%)</title><rect x="621.3" y="99.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.07%)</title><rect x="621.3" y="83.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="624.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.05%)</title><rect x="622.1" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.1" y="94.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.05%)</title><rect x="622.1" y="67.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="625.1" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.12%)</title><rect x="622.8" y="147.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.12%)</title><rect x="622.8" y="131.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.8" y="142.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.12%)</title><rect x="622.8" y="115.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="625.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.11%)</title><rect x="624.2" y="147.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.11%)</title><rect x="624.2" y="131.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.11%)</title><rect x="624.2" y="115.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.2" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.09%)</title><rect x="624.4" y="99.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.4" y="110.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.09%)</title><rect x="624.4" y="83.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="627.4" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.05%)</title><rect x="625.5" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.5" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (3 samples, 0.05%)</title><rect x="625.5" y="131.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.5" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (3 samples, 0.05%)</title><rect x="625.5" y="115.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.5" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (3 samples, 0.05%)</title><rect x="625.5" y="99.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="628.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.getSpecialRequest (28 samples, 0.49%)</title><rect x="626.1" y="179.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.16%)</title><rect x="626.1" y="163.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1630521067.invoke (9 samples, 0.16%)</title><rect x="626.1" y="147.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.16%)</title><rect x="626.1" y="131.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.04%)</title><rect x="626.1" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.04%)</title><rect x="626.1" y="99.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="629.1" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.12%)</title><rect x="626.5" y="115.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.12%)</title><rect x="626.5" y="99.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.5" y="110.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.12%)</title><rect x="626.5" y="83.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="629.5" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.09%)</title><rect x="628.0" y="163.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="631.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (14 samples, 0.25%)</title><rect x="629.0" y="163.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (14 samples, 0.25%)</title><rect x="629.0" y="147.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="632.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (158 samples, 2.78%)</title><rect x="631.9" y="243.0" width="32.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="634.9" y="254.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (158 samples, 2.78%)</title><rect x="631.9" y="227.0" width="32.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.9" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (158 samples, 2.78%)</title><rect x="631.9" y="211.0" width="32.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.9" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (122 samples, 2.15%)</title><rect x="632.1" y="195.0" width="25.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="635.1" y="206.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (122 samples, 2.15%)</title><rect x="632.1" y="179.0" width="25.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="635.1" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 0.62%)</title><rect x="657.5" y="195.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 0.62%)</title><rect x="657.5" y="179.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.5" y="190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,526 samples, 44.51%)</title><rect x="664.8" y="291.0" width="525.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.8" y="302.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (103 samples, 1.81%)</title><rect x="665.0" y="275.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.0" y="286.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (99 samples, 1.74%)</title><rect x="665.0" y="259.0" width="20.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="668.0" y="270.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.07%)</title><rect x="685.6" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,422 samples, 42.68%)</title><rect x="686.4" y="275.0" width="503.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.4" y="286.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,422 samples, 42.68%)</title><rect x="686.4" y="259.0" width="503.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="689.4" y="270.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,419 samples, 42.63%)</title><rect x="686.4" y="243.0" width="503.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.4" y="254.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,496 samples, 26.36%)</title><rect x="686.4" y="227.0" width="311.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.4" y="238.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,496 samples, 26.36%)</title><rect x="686.4" y="211.0" width="311.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.4" y="222.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,308 samples, 23.05%)</title><rect x="686.4" y="195.0" width="272.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.4" y="206.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (63 samples, 1.11%)</title><rect x="686.4" y="179.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (63 samples, 1.11%)</title><rect x="686.4" y="163.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 1.11%)</title><rect x="686.4" y="147.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="689.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.58%)</title><rect x="686.4" y="131.0" width="6.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="689.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.53%)</title><rect x="693.3" y="131.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.3" y="142.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.53%)</title><rect x="693.3" y="115.0" width="6.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="696.3" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (104 samples, 1.83%)</title><rect x="699.5" y="179.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.5" y="190.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (104 samples, 1.83%)</title><rect x="699.5" y="163.0" width="21.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.5" y="174.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (103 samples, 1.81%)</title><rect x="699.7" y="147.0" width="21.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.7" y="158.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (103 samples, 1.81%)</title><rect x="699.7" y="131.0" width="21.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.7" y="142.0">j..</text>
</g>
<g>
<title>java.lang.String (58 samples, 1.02%)</title><rect x="699.7" y="115.0" width="12.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="702.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.79%)</title><rect x="711.8" y="115.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.8" y="126.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.79%)</title><rect x="711.8" y="99.0" width="9.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="714.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.entity (1,141 samples, 20.11%)</title><rect x="721.1" y="179.0" width="237.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.1" y="190.0">ru/mail/polis/service/ivanovand..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (33 samples, 0.58%)</title><rect x="721.1" y="163.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (33 samples, 0.58%)</title><rect x="721.1" y="147.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask$WaitNode (33 samples, 0.58%)</title><rect x="721.1" y="131.0" width="6.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="724.1" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.Replica (11 samples, 0.19%)</title><rect x="728.0" y="163.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="731.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (234 samples, 4.12%)</title><rect x="730.3" y="163.0" width="48.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.3" y="174.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.81%)</title><rect x="730.3" y="147.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.3" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.81%)</title><rect x="730.3" y="131.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$65/94013272.get$Lambda (46 samples, 0.81%)</title><rect x="730.3" y="115.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.AsyncServiceImpl$$Lambda$65 (46 samples, 0.81%)</title><rect x="730.3" y="99.0" width="9.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="733.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (43 samples, 0.76%)</title><rect x="739.8" y="147.0" width="9.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (42 samples, 0.74%)</title><rect x="739.8" y="131.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (42 samples, 0.74%)</title><rect x="739.8" y="115.0" width="8.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="742.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.strToByteBuffer (145 samples, 2.56%)</title><rect x="748.8" y="147.0" width="30.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.8" y="158.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (62 samples, 1.09%)</title><rect x="748.8" y="131.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (62 samples, 1.09%)</title><rect x="748.8" y="115.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (62 samples, 1.09%)</title><rect x="748.8" y="99.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 1.09%)</title><rect x="748.8" y="83.0" width="12.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.8" y="94.0"></text>
</g>
<g>
<title>byte[] (62 samples, 1.09%)</title><rect x="748.8" y="67.0" width="12.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="751.8" y="78.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 1.46%)</title><rect x="761.7" y="131.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (83 samples, 1.46%)</title><rect x="761.7" y="115.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 1.46%)</title><rect x="761.7" y="99.0" width="17.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="764.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.sendToReplicas (522 samples, 9.20%)</title><rect x="778.9" y="163.0" width="108.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.9" y="174.0">ru/mail/polis..</text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.25%)</title><rect x="778.9" y="147.0" width="2.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="781.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (12 samples, 0.21%)</title><rect x="781.8" y="147.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="784.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.21%)</title><rect x="781.8" y="131.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="784.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.get (69 samples, 1.22%)</title><rect x="784.3" y="147.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.awaitDone (69 samples, 1.22%)</title><rect x="784.3" y="131.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask$WaitNode (31 samples, 0.55%)</title><rect x="784.3" y="115.0" width="6.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="787.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 0.65%)</title><rect x="791.0" y="115.0" width="7.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (36 samples, 0.63%)</title><rect x="791.2" y="99.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.forwardRequestFuture (86 samples, 1.52%)</title><rect x="798.7" y="147.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.7" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.70%)</title><rect x="798.7" y="131.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.70%)</title><rect x="798.7" y="115.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="801.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$66/30703227.get$Lambda (40 samples, 0.70%)</title><rect x="798.7" y="99.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.7" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.AsyncServiceImpl$$Lambda$66 (40 samples, 0.70%)</title><rect x="798.7" y="83.0" width="8.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="801.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (46 samples, 0.81%)</title><rect x="807.0" y="131.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (45 samples, 0.79%)</title><rect x="807.2" y="115.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.2" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (45 samples, 0.79%)</title><rect x="807.2" y="99.0" width="9.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="810.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.processRequest (92 samples, 1.62%)</title><rect x="816.6" y="147.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.6" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.39%)</title><rect x="816.6" y="131.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.39%)</title><rect x="816.6" y="115.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl$$Lambda$65/94013272.get$Lambda (22 samples, 0.39%)</title><rect x="816.6" y="99.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="819.6" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.service.ivanovandrey.AsyncServiceImpl$$Lambda$65 (22 samples, 0.39%)</title><rect x="816.6" y="83.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="819.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (25 samples, 0.44%)</title><rect x="821.1" y="131.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (25 samples, 0.44%)</title><rect x="821.1" y="115.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (25 samples, 0.44%)</title><rect x="821.1" y="99.0" width="5.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="824.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Converter.strToByteBuffer (45 samples, 0.79%)</title><rect x="826.3" y="131.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.28%)</title><rect x="826.3" y="115.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.28%)</title><rect x="826.3" y="99.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.28%)</title><rect x="826.3" y="83.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.28%)</title><rect x="826.3" y="67.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.3" y="78.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.28%)</title><rect x="826.3" y="51.0" width="3.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="829.3" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.51%)</title><rect x="829.7" y="115.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="832.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 0.51%)</title><rect x="829.7" y="99.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 0.51%)</title><rect x="829.7" y="83.0" width="6.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="832.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.trySendResponse (136 samples, 2.40%)</title><rect x="835.7" y="147.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.7" y="158.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (136 samples, 2.40%)</title><rect x="835.7" y="131.0" width="28.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.7" y="142.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (134 samples, 2.36%)</title><rect x="836.1" y="115.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="839.1" y="126.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (82 samples, 1.44%)</title><rect x="836.1" y="99.0" width="17.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.1" y="110.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (82 samples, 1.44%)</title><rect x="836.1" y="83.0" width="17.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.1" y="94.0"></text>
</g>
<g>
<title>byte[] (82 samples, 1.44%)</title><rect x="836.1" y="67.0" width="17.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="839.1" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (52 samples, 0.92%)</title><rect x="853.2" y="99.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.2" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (29 samples, 0.51%)</title><rect x="853.2" y="83.0" width="6.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="856.2" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (23 samples, 0.41%)</title><rect x="859.2" y="83.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.2" y="94.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (23 samples, 0.41%)</title><rect x="859.2" y="67.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.2" y="78.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (23 samples, 0.41%)</title><rect x="859.2" y="51.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/ResponseComposer.addResponse (57 samples, 1.00%)</title><rect x="864.0" y="147.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (57 samples, 1.00%)</title><rect x="864.0" y="131.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (57 samples, 1.00%)</title><rect x="864.0" y="115.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (57 samples, 1.00%)</title><rect x="864.0" y="99.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (57 samples, 1.00%)</title><rect x="864.0" y="83.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.0" y="94.0"></text>
</g>
<g>
<title>byte[] (57 samples, 1.00%)</title><rect x="864.0" y="67.0" width="11.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="867.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.responsibleNodes (56 samples, 0.99%)</title><rect x="875.8" y="147.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.8" y="158.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.32%)</title><rect x="875.8" y="131.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="878.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="879.6" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="879.6" y="115.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.63%)</title><rect x="880.0" y="131.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.63%)</title><rect x="880.0" y="115.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.63%)</title><rect x="880.0" y="99.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.0" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.63%)</title><rect x="880.0" y="83.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.63%)</title><rect x="880.0" y="67.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.0" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.63%)</title><rect x="880.0" y="51.0" width="7.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="883.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/AsyncServiceImpl.trySendResponse (316 samples, 5.57%)</title><rect x="887.5" y="163.0" width="65.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.5" y="174.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (316 samples, 5.57%)</title><rect x="887.5" y="147.0" width="65.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.5" y="158.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (316 samples, 5.57%)</title><rect x="887.5" y="131.0" width="65.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.5" y="142.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (214 samples, 3.77%)</title><rect x="887.5" y="115.0" width="44.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.5" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (214 samples, 3.77%)</title><rect x="887.5" y="99.0" width="44.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.5" y="110.0">one/..</text>
</g>
<g>
<title>byte[] (214 samples, 3.77%)</title><rect x="887.5" y="83.0" width="44.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="890.5" y="94.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 1.80%)</title><rect x="932.0" y="115.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.0" y="126.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (102 samples, 1.80%)</title><rect x="932.0" y="99.0" width="21.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="935.0" y="110.0">o..</text>
</g>
<g>
<title>ru/mail/polis/service/ivanovandrey/SimpleTopology.getNodes (25 samples, 0.44%)</title><rect x="953.2" y="163.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.44%)</title><rect x="953.2" y="147.0" width="5.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="956.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (188 samples, 3.31%)</title><rect x="958.4" y="195.0" width="39.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="961.4" y="206.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (188 samples, 3.31%)</title><rect x="958.4" y="179.0" width="39.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.4" y="190.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (188 samples, 3.31%)</title><rect x="958.4" y="163.0" width="39.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="961.4" y="174.0">jav..</text>
</g>
<g>
<title>java.lang.String (98 samples, 1.73%)</title><rect x="958.4" y="147.0" width="20.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="961.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (90 samples, 1.59%)</title><rect x="978.7" y="147.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.7" y="158.0"></text>
</g>
<g>
<title>byte[] (90 samples, 1.59%)</title><rect x="978.7" y="131.0" width="18.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="981.7" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (656 samples, 11.56%)</title><rect x="997.5" y="227.0" width="136.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1000.5" y="238.0">one/nio/http/Http..</text>
</g>
<g>
<title>one.nio.http.Request (101 samples, 1.78%)</title><rect x="997.5" y="211.0" width="21.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1000.5" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (235 samples, 4.14%)</title><rect x="1018.5" y="211.0" width="48.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1021.5" y="222.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (233 samples, 4.11%)</title><rect x="1018.7" y="195.0" width="48.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1021.7" y="206.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (320 samples, 5.64%)</title><rect x="1067.3" y="211.0" width="66.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.3" y="222.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (320 samples, 5.64%)</title><rect x="1067.3" y="195.0" width="66.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1070.3" y="206.0">one/nio..</text>
</g>
<g>
<title>char[] (178 samples, 3.14%)</title><rect x="1067.3" y="179.0" width="37.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1070.3" y="190.0">cha..</text>
</g>
<g>
<title>java.lang.String (55 samples, 0.97%)</title><rect x="1104.3" y="179.0" width="11.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1107.3" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (87 samples, 1.53%)</title><rect x="1115.8" y="179.0" width="18.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1118.8" y="190.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (87 samples, 1.53%)</title><rect x="1115.8" y="163.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.8" y="174.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (87 samples, 1.53%)</title><rect x="1115.8" y="147.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.8" y="158.0"></text>
</g>
<g>
<title>byte[] (87 samples, 1.53%)</title><rect x="1115.8" y="131.0" width="18.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1118.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (266 samples, 4.69%)</title><rect x="1134.1" y="227.0" width="55.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.1" y="238.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (266 samples, 4.69%)</title><rect x="1134.1" y="211.0" width="55.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1137.1" y="222.0">one/n..</text>
</g>
<g>
<title>char[] (130 samples, 2.29%)</title><rect x="1134.1" y="195.0" width="27.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1137.1" y="206.0">c..</text>
</g>
<g>
<title>java.lang.String (65 samples, 1.15%)</title><rect x="1161.1" y="195.0" width="13.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1164.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (71 samples, 1.25%)</title><rect x="1174.6" y="195.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (71 samples, 1.25%)</title><rect x="1174.6" y="179.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (71 samples, 1.25%)</title><rect x="1174.6" y="163.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.6" y="174.0"></text>
</g>
<g>
<title>byte[] (71 samples, 1.25%)</title><rect x="1174.6" y="147.0" width="14.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1177.6" y="158.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.05%)</title><rect x="1189.4" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="254.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.05%)</title><rect x="1189.4" y="227.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.4" y="238.0"></text>
</g>
</g>
</svg>
